"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5457],{65457:(Je,v,o)=>{o.r(v),o.d(v,{PlatformVhdDocsModule:()=>Ne});var p=o(10210),_=o(7912),S=o(58027),k=o(69979),M=o(67949),D=o(46393),E=o(89748),$=o(13154),U=o(94054),A=o(21514),O=o(58856),d=o(8806),e=o(70074),K=o(86950),Y=o(41767),y=o(38276),W=o(8317),G=o(80528),X=o(86667),f=o(96919),c=o(29928),g=o(5781),b=o(64777),s=o(90326),m=o(3263);function ee(a,l){if(1&a&&(e.TgZ(0,"fd-token",7),e._uU(1),e.qZA()),2&a){const n=l.$implicit;e.Q6J("readOnly",!0),e.xp6(1),e.Oqu(n)}}function ne(a,l){if(1&a&&(e.TgZ(0,"div")(1,"fd-tokenizer",5),e.YNc(2,ee,2,2,"fd-token",6),e.qZA()()),2&a){const n=e.oxw();e.xp6(2),e.Q6J("ngForOf",n.actualItems)}}function ae(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",8),2&a){const n=l.$implicit,t=l.index;e.Q6J("main",t<2)("key",n.key)("label",n.label)("advanced",0!==t)}}const V=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();let te=(()=>{class a{constructor(){this.filters=V.filters,this.dataSource=new d.Ht(new le(V.dataSource)),this.actualValue={},this.actualItems=[],this.formatTokenFn=n=>{this.actualItems=[...(n.selected||[]).map(t=>t.name),...(n.conditions||[]).map(t=>this.conditionDisplayFn(t))].filter(t=>!!t)},this.conditionDisplayFn=n=>{let t=(()=>{switch(n.strategy){case d.hj.empty:case d.Sq.not_empty:return null;case d.hj.between:return`${n.value}...${n.valueTo}`;case d.hj.contains:return`*${n.value}*`;case d.hj.equalTo:return`=${n.value}`;case d.hj.startsWith:return`${n.value}*`;case d.hj.endsWith:return`*${n.value}`;case d.hj.greaterThan:return`>${n.value}`;case d.hj.greaterThanEqual:return`>=${n.value}`;case d.hj.lessThan:return`<${n.value}`;case d.hj.lessThanEqual:return`<=${n.value}`;case d.Sq.not_equalTo:return`!(=${n.value})`}})();return t&&"exclude"===n.type&&(t=`!(${t})`),t}}valueChange(n){this.actualValue=Object.assign({},n)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-basic-example"]],decls:6,vars:4,consts:[["fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],[4,"ngIf"],["fdCompact","","dialogTitle","Simple value help dialog","uniqueKey","id","tokenViewField","name","headerId","fdp-vhd-header-1",3,"formatToken","dataSource","valueChange"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fdCompact",""],[3,"readOnly",4,"ngFor","ngForOf"],[3,"readOnly"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(4);return e.KtG(i.open())}),e.qZA(),e._UZ(1,"br"),e.YNc(2,ne,3,1,"div",1),e.TgZ(3,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(i){return t.valueChange(i)}),e.YNc(5,ae,1,4,"fdp-value-help-dialog-filter",4),e.qZA()}2&n&&(e.xp6(2),e.Q6J("ngIf",t.actualItems.length),e.xp6(1),e.Q6J("formatToken",t.formatTokenFn)("dataSource",t.dataSource),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,p.O5,f.$,c.r,g.q,b.O,s._,m.E],encapsulation:2}),a})();class le extends d.mB{fetch(l){return super.fetch(l).pipe((0,X.g)(300))}}function oe(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",4),2&a){const n=l.$implicit,t=l.index,u=e.oxw();e.Q6J("main",t<2)("key",n.key)("label",n.label)("advanced",n.advanced||u.hasAdvanced)}}let ie=(()=>{class a{constructor(){this.hasAdvanced=!1,this.selectedValue=[],this.currentValue={},this.tokenizerFn=n=>`${n.name} (Id: ${n.id})`}ngOnInit(){const n=(()=>{const a=Array(100).fill(null).map((l,n)=>({id:n+1,name:`Name ${n}`,code:Math.floor(99999*Math.random()),city:`City ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,label:`Product ${l}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.currentValue=n,this.selectedValue=[...n.selected||[]]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-token-example"]],decls:4,vars:3,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Custom token function","uniqueKey","id","tokenViewField","name","headerId","fdp-vhd-header-3",3,"dataSource","tokenizerFn","valueChange"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(2);return e.KtG(i.open())}),e.qZA(),e.TgZ(1,"fdp-value-help-dialog",1,2),e.NdJ("valueChange",function(i){return t.valueChange(i)}),e.YNc(3,oe,1,4,"fdp-value-help-dialog-filter",3),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dataSource",t.dataSource)("tokenizerFn",t.tokenizerFn),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,c.r,s._,m.E],encapsulation:2}),a})();function re(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",4),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}const T=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();let ue=(()=>{class a{constructor(){this.filters=T.filters,this.dataSource=new d.Ht(new d.mB(T.dataSource)),this.value={},this.loading=!1}valueChange(n){this.value=Object.assign({},n)}onDataRequested(){this.loading=!0}onDataReceived(){setTimeout(()=>{this.loading=!1},300)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-loading-example"]],decls:4,vars:3,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Custom token function","uniqueKey","id","tokenViewField","name","headerId","fdp-vhd-header-3",3,"dataSource","loading","valueChange","onDataRequested","onDataReceived"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(2);return e.KtG(i.open())}),e.qZA(),e.TgZ(1,"fdp-value-help-dialog",1,2),e.NdJ("valueChange",function(i){return t.valueChange(i)})("onDataRequested",function(){return t.onDataRequested()})("onDataReceived",function(){return t.onDataReceived()}),e.YNc(3,re,1,4,"fdp-value-help-dialog-filter",3),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dataSource",t.dataSource)("loading",t.loading),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,c.r,s._,m.E],encapsulation:2}),a})();var x=o(85756),pe=o(23502);function ce(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",5),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let me=(()=>{class a{constructor(n){this._changeDetectorRef=n,this.currentValue={},this.selected=[]}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();this.filters=n.filters,this.originalData=n.dataSource,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.selected=[...n.selected],this._changeDetectorRef.detectChanges()}displayFunc(n){return n.name.toLocaleUpperCase()}multiSelectChange(){this.currentValue.selected=this.selected,this._changeDetectorRef.detectChanges()}parseFunc(n){return n&&n.length?{name:n,id:Date.now()}:null}}return a.\u0275fac=function(n){return new(n||a)(e.Y36(e.sBO))},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-multi-input-example"]],decls:7,vars:8,consts:[["placeholder","Search here",3,"dropdownValues","displayFn","allowNewTokens","newTokenParseFn","ngModel","ngModelChange","selectedChange"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Multiple selection","uniqueKey","id","tokenViewField","name","headerId","fdp-vhd-header-7",3,"dataSource","value","valueChange"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"div")(1,"fd-multi-input",0),e.NdJ("ngModelChange",function(i){return t.selected=i})("selectedChange",function(){return t.multiSelectChange()}),e.qZA(),e._UZ(2,"br"),e.TgZ(3,"button",1),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(5);return e.KtG(i.open())}),e.qZA()(),e.TgZ(4,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(i){return t.valueChange(i)}),e.YNc(6,ce,1,4,"fdp-value-help-dialog-filter",4),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dropdownValues",t.originalData)("displayFn",t.displayFunc)("allowNewTokens",!0)("newTokenParseFn",t.parseFunc)("ngModel",t.selected),e.xp6(3),e.Q6J("dataSource",t.dataSource)("value",t.currentValue),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,x.JJ,x.On,c.r,pe.L,s._,m.E],encapsulation:2}),a})();var he=o(19207),Z=o(69065),h=o(21539),fe=o(89251);function ge(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",17),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}function ve(a,l){if(1&a&&(e.TgZ(0,"fd-token",18),e._uU(1),e.qZA()),2&a){const n=l.$implicit;e.Q6J("readOnly",!0),e.xp6(1),e.hij(" ",n.name," ")}}function _e(a,l){1&a&&e._UZ(0,"br")}function ye(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",17),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}function be(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",17),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let Te=(()=>{class a{constructor(){this.valuesSingle=null,this.valuesMulti=null,this.valuesOnce=null}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}vhd1ValueChange(n){this.valuesSingle=n.selected[0]}vhd2ValueChange(n){this.valuesMulti=n.selected[0]}vhd3ValueChange(n){this.valuesOnce=n.selected[0]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-input-example"]],decls:31,vars:12,consts:[["fd-form-item",""],["fd-form-label","","for","test-selection-type-single"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-single",3,"value"],["fd-input-group-addon","",3,"button"],["fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdCompact","","fdType","transparent",3,"click"],["dialogTitle","Single select value help dialog","uniqueKey","id","tokenViewField","name","searchSelection","single","tabs","select","headerId","fdp-vhd-header-4",3,"dataSource","valueChange"],["vhd1",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-toolbar-item","","fdCompact","",3,"readOnly",4,"ngFor","ngForOf"],[4,"ngIf"],["fd-button","","fdCompact","","aria-label","Open value help dialog","label","Open and select",3,"click"],["dialogTitle","Multi select value help dialog","uniqueKey","id","tokenViewField","name","searchSelection","multi","tabs","select","headerId","fdp-vhd-header-5",3,"dataSource","valueChange"],["vhd2",""],["fd-form-label","","for","test-selection-type-once"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-once",3,"value"],["dialogTitle","Once select value help dialog","uniqueKey","id","tokenViewField","name","searchSelection","once","tabs","select","headerId","fdp-vhd-header-6",3,"dataSource","valueChange"],["vhd3",""],[3,"main","key","label","advanced"],["fd-toolbar-item","","fdCompact","",3,"readOnly"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"div",0)(1,"label",1),e._uU(2,"Selection type: single"),e.qZA(),e.TgZ(3,"fd-input-group"),e._UZ(4,"input",2),e.TgZ(5,"span",3)(6,"button",4),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(8);return e.KtG(i.open())}),e.qZA()()()(),e.TgZ(7,"fdp-value-help-dialog",5,6),e.NdJ("valueChange",function(i){return t.vhd1ValueChange(i)}),e.YNc(9,ge,1,4,"fdp-value-help-dialog-filter",7),e.qZA(),e._UZ(10,"br"),e.TgZ(11,"div",0)(12,"label",1),e._uU(13,"Selection type: multi"),e.qZA(),e.YNc(14,ve,2,2,"fd-token",8),e.YNc(15,_e,1,0,"br",9),e.TgZ(16,"button",10),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(18);return e.KtG(i.open())}),e.qZA()(),e.TgZ(17,"fdp-value-help-dialog",11,12),e.NdJ("valueChange",function(i){return t.vhd2ValueChange(i)}),e.YNc(19,ye,1,4,"fdp-value-help-dialog-filter",7),e.qZA(),e._UZ(20,"br"),e.TgZ(21,"div",0)(22,"label",13),e._uU(23,"Selection type: once"),e.qZA(),e.TgZ(24,"fd-input-group"),e._UZ(25,"input",14),e.TgZ(26,"span",3)(27,"button",4),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(29);return e.KtG(i.open())}),e.qZA()()()(),e.TgZ(28,"fdp-value-help-dialog",15,16),e.NdJ("valueChange",function(i){return t.vhd3ValueChange(i)}),e.YNc(30,be,1,4,"fdp-value-help-dialog-filter",7),e.qZA()}2&n&&(e.xp6(4),e.Q6J("value",null==t.valuesSingle?null:t.valuesSingle.name),e.xp6(1),e.Q6J("button",!0),e.xp6(2),e.Q6J("dataSource",t.dataSource),e.xp6(2),e.Q6J("ngForOf",t.filters),e.xp6(5),e.Q6J("ngForOf",t.valuesMulti),e.xp6(1),e.Q6J("ngIf",t.valuesMulti&&(null==t.valuesMulti?null:t.valuesMulti.length)),e.xp6(2),e.Q6J("dataSource",t.dataSource),e.xp6(2),e.Q6J("ngForOf",t.filters),e.xp6(6),e.Q6J("value",null==t.valuesOnce?null:t.valuesOnce.name),e.xp6(1),e.Q6J("button",!0),e.xp6(2),e.Q6J("dataSource",t.dataSource),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,p.O5,f.$,c.r,he.h,Z.g,h.cS,h.Bv,g.q,fe.Q,s._,m.E],encapsulation:2}),a})();function xe(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",6),2&a){const n=l.$implicit;e.Q6J("main",l.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let Ce=(()=>{class a{constructor(){this.currentValue={}}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.currentValue=n,this.selectedValue=n.selected[0]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-mobile-example"]],decls:8,vars:6,consts:[["fd-input-group-input","","fd-form-control","",3,"value"],["fd-input-group-addon","",3,"button"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"click"],["dialogTitle","Mobile value help dialog","uniqueKey","id","tokenViewField","name","headerId","fdp-vhd-header-8",3,"mobile","dataSource","value","valueChange"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"div")(1,"fd-input-group"),e._UZ(2,"input",0),e.TgZ(3,"span",1)(4,"button",2),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(6);return e.KtG(i.open())}),e.qZA()()()(),e.TgZ(5,"fdp-value-help-dialog",3,4),e.NdJ("valueChange",function(i){return t.valueChange(i)}),e.YNc(7,xe,1,4,"fdp-value-help-dialog-filter",5),e.qZA()}2&n&&(e.xp6(2),e.Q6J("value",(null==t.selectedValue?null:t.selectedValue.name)||""),e.xp6(1),e.Q6J("button",!0),e.xp6(2),e.Q6J("mobile",!0)("dataSource",t.dataSource)("value",t.currentValue),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,c.r,Z.g,h.cS,h.Bv,s._,m.E],encapsulation:2}),a})();var Se=o(91714);function ke(a,l){if(1&a&&(e.TgZ(0,"fd-token",8),e._uU(1),e.qZA()),2&a){const n=l.$implicit;e.Q6J("readOnly",!0),e.xp6(1),e.Oqu(n)}}function Me(a,l){if(1&a&&(e.TgZ(0,"div",5)(1,"fd-tokenizer",6),e.YNc(2,ke,2,2,"fd-token",7),e.qZA()()),2&a){const n=e.oxw();e.xp6(2),e.Q6J("ngForOf",n.actualItems)}}function De(a,l){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",9),2&a){const n=l.$implicit,t=l.index;e.Q6J("main",t<2)("key",n.key)("label",n.label)("advanced",0!==t)}}let $e=(()=>{class a{constructor(){this.actualValue={},this.actualItems=[],this.formatTokenFn=n=>{this.actualItems=[...(n.selected||[]).map(t=>t.name),...(n.conditions||[]).map(t=>this.conditionDisplayFn(t))].filter(t=>!!t)},this.conditionDisplayFn=n=>(()=>{switch(n.strategy){case d.hj.empty:case d.Sq.not_empty:return null;case d.hj.between:return`${n.value}...${n.valueTo}`;case d.hj.contains:return`*${n.value}*`;case d.hj.equalTo:return`=${n.value}`;case d.hj.startsWith:return`${n.value}*`;case d.hj.endsWith:return`*${n.value}`;case d.hj.greaterThan:return`>${n.value}`;case d.hj.greaterThanEqual:return`>=${n.value}`;case d.hj.lessThan:return`<${n.value}`;case d.hj.lessThanEqual:return`<=${n.value}`;case d.Sq.not_equalTo:return`!(=${n.value})`}})()}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((l,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((l,n)=>({key:l,name:`${l}`,label:`Product ${l}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.actualValue=Object.assign({},n)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-strategy-labels-example"]],features:[e._Bn([(0,Se.Lt)({platformVHD:{defineConditionConditionStrategyLabelEqualTo:"ilingana ne-",defineConditionConditionStrategyLabelBetween:"FROM...TO"}})])],decls:6,vars:3,consts:[["fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["fd-form-item","",4,"ngIf"],["dialogTitle","Custom strategy labels","tabs","define","headerId","fdp-vhd-header-2",3,"formatToken","valueChange"],["vhd",""],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-form-item",""],["fdCompact",""],[3,"readOnly",4,"ngFor","ngForOf"],[3,"readOnly"],[3,"main","key","label","advanced"]],template:function(n,t){if(1&n){const u=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){e.CHM(u);const i=e.MAs(4);return e.KtG(i.open())}),e.qZA(),e._UZ(1,"br"),e.YNc(2,Me,3,1,"div",1),e.TgZ(3,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(i){return t.valueChange(i)}),e.YNc(5,De,1,4,"fdp-value-help-dialog-filter",4),e.qZA()}2&n&&(e.xp6(2),e.Q6J("ngIf",t.actualItems.length),e.xp6(1),e.Q6J("formatToken",t.formatTokenFn),e.xp6(2),e.Q6J("ngForOf",t.filters))},dependencies:[p.sg,p.O5,f.$,c.r,g.q,b.O,s._,m.E],encapsulation:2}),a})(),Ue=(()=>{class a{constructor(){this.basicValueHelpDialog=[{language:"html",code:'<button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n<br />\n<div *ngIf="actualItems.length">\n    <fd-tokenizer fdCompact>\n        <fd-token *ngFor="let token of actualItems" [readOnly]="true">{{ token }}</fd-token>\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    fdCompact\n    dialogTitle="Simple value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    [formatToken]="formatTokenFn"\n    [dataSource]="dataSource"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-1"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-basic-example"},{language:"typescript",component:"PlatformVhdBasicExampleComponent",code:"import { Component } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource,\n    VhdIncludedEntity,\n    VhdExcludedEntity,\n    VhdDefineIncludeStrategy,\n    VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform/value-help-dialog';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\nconst data = exampleDataSource();\n\n@Component({\n    selector: 'fdp-platform-vhd-basic-example',\n    templateUrl: './platform-vhd-basic-example.component.html'\n})\nexport class PlatformVhdBasicExampleComponent {\n    filters = data.filters;\n    dataSource = new ValueHelpDialogDataSource(new DelayedVhdDataProvider(data.dataSource));\n\n    actualValue: Partial<VhdValue<ExampleTestModel>> = {};\n\n    actualItems: string[] = [];\n    formatTokenFn = (value: VhdValueChangeEvent<ExampleTestModel>): void => {\n        this.actualItems = [\n            ...(value.selected || []).map((item) => item.name),\n            ...(value.conditions || []).map((item) => this.conditionDisplayFn(item))\n        ].filter((v): v is string => !!v);\n    };\n    conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity): string | null => {\n        let value = (() => {\n            switch (item.strategy) {\n                case VhdDefineIncludeStrategy.empty:\n                case VhdDefineExcludeStrategy.not_empty:\n                    return null;\n                case VhdDefineIncludeStrategy.between:\n                    return `${item.value}...${item.valueTo}`;\n                case VhdDefineIncludeStrategy.contains:\n                    return `*${item.value}*`;\n                case VhdDefineIncludeStrategy.equalTo:\n                    return `=${item.value}`;\n                case VhdDefineIncludeStrategy.startsWith:\n                    return `${item.value}*`;\n                case VhdDefineIncludeStrategy.endsWith:\n                    return `*${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThan:\n                    return `>${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThanEqual:\n                    return `>=${item.value}`;\n                case VhdDefineIncludeStrategy.lessThan:\n                    return `<${item.value}`;\n                case VhdDefineIncludeStrategy.lessThanEqual:\n                    return `<=${item.value}`;\n                case VhdDefineExcludeStrategy.not_equalTo:\n                    return `!(=${item.value})`;\n            }\n        })();\n        if (value && item.type === 'exclude') {\n            value = `!(${value})`;\n        }\n\n        return value;\n    };\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.actualValue = { ...$event };\n    }\n}\n\n// Simulating real http request by adding 300ms delay to the DataProvider's \"fetch\" method\nclass DelayedVhdDataProvider<T> extends VhdDataProvider<T> {\n    fetch(params: Map<string, string>): Observable<T[]> {\n        return super.fetch(params).pipe(delay(300));\n    }\n}\n",fileName:"platform-vhd-basic-example"}],this.strategyLabelValueHelpDialog=[{language:"html",code:'<button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n<br />\n<div fd-form-item *ngIf="actualItems.length">\n    <fd-tokenizer fdCompact>\n        <fd-token *ngFor="let token of actualItems" [readOnly]="true">{{ token }}</fd-token>\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom strategy labels"\n    tabs="define"\n    [formatToken]="formatTokenFn"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-2"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-strategy-labels-example"},{language:"typescript",component:"PlatformVhdStrategyLabelExampleComponent",code:"import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource,\n    VhdIncludedEntity,\n    VhdExcludedEntity,\n    VhdDefineIncludeStrategy,\n    VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform/value-help-dialog';\nimport { patchLanguage } from '@fundamental-ngx/i18n';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-strategy-labels-example',\n    templateUrl: './platform-vhd-strategy-labels-example.component.html',\n    providers: [\n        patchLanguage({\n            platformVHD: {\n                defineConditionConditionStrategyLabelEqualTo: 'ilingana ne-',\n                defineConditionConditionStrategyLabelBetween: 'FROM...TO'\n            }\n        })\n    ]\n})\nexport class PlatformVhdStrategyLabelExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n    actualValue: Partial<VhdValue<ExampleTestModel>> = {};\n    actualItems: string[] = [];\n\n    formatTokenFn = (value: Partial<VhdValue<ExampleTestModel>>): void => {\n        this.actualItems = [\n            ...(value.selected || []).map((item) => item.name),\n            ...(value.conditions || []).map((item) => this.conditionDisplayFn(item))\n        ].filter((v): v is string => !!v);\n    };\n\n    conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity): string | null => {\n        const value = (() => {\n            switch (item.strategy) {\n                case VhdDefineIncludeStrategy.empty:\n                case VhdDefineExcludeStrategy.not_empty:\n                    return null;\n                case VhdDefineIncludeStrategy.between:\n                    return `${item.value}...${item.valueTo}`;\n                case VhdDefineIncludeStrategy.contains:\n                    return `*${item.value}*`;\n                case VhdDefineIncludeStrategy.equalTo:\n                    return `=${item.value}`;\n                case VhdDefineIncludeStrategy.startsWith:\n                    return `${item.value}*`;\n                case VhdDefineIncludeStrategy.endsWith:\n                    return `*${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThan:\n                    return `>${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThanEqual:\n                    return `>=${item.value}`;\n                case VhdDefineIncludeStrategy.lessThan:\n                    return `<${item.value}`;\n                case VhdDefineIncludeStrategy.lessThanEqual:\n                    return `<=${item.value}`;\n                case VhdDefineExcludeStrategy.not_equalTo:\n                    return `!(=${item.value})`;\n            }\n        })();\n\n        return value;\n    };\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.actualValue = { ...$event };\n    }\n}\n",fileName:"platform-vhd-strategy-labels-example"}],this.tokenValueHelpDialog=[{language:"html",code:'<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom token function"\n    uniqueKey="id"\n    tokenViewField="name"\n    [dataSource]="dataSource"\n    [tokenizerFn]="tokenizerFn"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-3"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced || hasAdvanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-token-example"},{language:"typescript",component:"PlatformVhdTokenExampleComponent",code:"import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: number;\n    city: string;\n}\n\ninterface FilterData {\n    key: string;\n    // name: string,\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(100)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index}`,\n            code: Math.floor(Math.random() * 99999),\n            city: `City ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-token-example',\n    templateUrl: './platform-vhd-token-example.component.html'\n})\nexport class PlatformVhdTokenExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    hasAdvanced = false;\n    selectedValue: ExampleTestModel[] = [];\n    currentValue: Partial<VhdValue> = {};\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    tokenizerFn = (row: ExampleTestModel): string => `${row.name} (Id: ${row.id})`;\n\n    valueChange(event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.currentValue = event;\n        this.selectedValue = [...(event.selected || [])];\n    }\n}\n",fileName:"platform-vhd-token-example"}],this.inputValueHelpDialog=[{language:"html",code:'<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: single</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-single" [value]="valuesSingle?.name" />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                fdCompact\n                fdType="transparent"\n                (click)="vhd1.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog\n    #vhd1\n    dialogTitle="Single select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    searchSelection="single"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="vhd1ValueChange($event)"\n    headerId="fdp-vhd-header-4"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: multi</label>\n    <fd-token fd-toolbar-item *ngFor="let item of valuesMulti" fdCompact [readOnly]="true">\n        {{ item.name }}\n    </fd-token>\n    <br *ngIf="valuesMulti && valuesMulti?.length" />\n    <button\n        fd-button\n        fdCompact\n        (click)="vhd2.open()"\n        aria-label="Open value help dialog"\n        label="Open and select"\n    ></button>\n</div>\n<fdp-value-help-dialog\n    #vhd2\n    dialogTitle="Multi select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    searchSelection="multi"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="vhd2ValueChange($event)"\n    headerId="fdp-vhd-header-5"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-once">Selection type: once</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-once" [value]="valuesOnce?.name" />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                fdCompact\n                fdType="transparent"\n                (click)="vhd3.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog\n    #vhd3\n    dialogTitle="Once select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    searchSelection="once"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="vhd3ValueChange($event)"\n    headerId="fdp-vhd-header-6"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-input-example"},{language:"typescript",component:"PlatformVhdInputExampleComponent",code:"import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-input-example',\n    templateUrl: './platform-vhd-input-example.component.html'\n})\nexport class PlatformVhdInputExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n    valuesSingle: ExampleTestModel | null = null;\n    valuesMulti: ExampleTestModel[] | null = null;\n    valuesOnce: ExampleTestModel | null = null;\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    vhd1ValueChange(event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.valuesSingle = event.selected[0];\n    }\n\n    vhd2ValueChange(event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.valuesMulti = event.selected[0];\n    }\n\n    vhd3ValueChange(event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.valuesOnce = event.selected[0];\n    }\n}\n",fileName:"platform-vhd-input-example"}],this.multiInputValueHelpDialog=[{language:"html",code:'<div>\n    <fd-multi-input\n        [dropdownValues]="originalData"\n        placeholder="Search here"\n        [displayFn]="displayFunc"\n        [allowNewTokens]="true"\n        [newTokenParseFn]="parseFunc"\n        [(ngModel)]="selected"\n        (selectedChange)="multiSelectChange()"\n    >\n    </fd-multi-input>\n    <br />\n    <button\n        fd-button\n        fd-button\n        aria-label="Open value help dialog"\n        title="Open value help dialog"\n        glyph="value-help"\n        (click)="vhd.open()"\n        label="Open value help dialog"\n    ></button>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Multiple selection"\n    uniqueKey="id"\n    tokenViewField="name"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-7"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-multi-input-example"},{language:"typescript",component:"PlatformVhdMultiInputExampleComponent",code:"import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-multi-input-example',\n    templateUrl: './platform-vhd-multi-input-example.component.html'\n})\nexport class PlatformVhdMultiInputExampleComponent implements OnInit {\n    filters: FilterData[];\n    originalData: ExampleTestModel[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    currentValue: Partial<VhdValue> = {};\n    selected: ExampleTestModel[] = [];\n\n    constructor(private readonly _changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.originalData = data.dataSource;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.selected = [...$event.selected];\n        this._changeDetectorRef.detectChanges();\n    }\n\n    displayFunc(obj: any): string {\n        return obj.name.toLocaleUpperCase();\n    }\n\n    multiSelectChange(): void {\n        this.currentValue.selected = this.selected;\n        this._changeDetectorRef.detectChanges();\n    }\n\n    parseFunc(value: string): Record<string, any> | null {\n        if (value && value.length) {\n            return { name: value, id: Date.now() };\n        }\n        return null;\n    }\n}\n",fileName:"platform-vhd-multi-input-example"}],this.mobileValueHelpDialog=[{language:"html",code:'<div>\n    <fd-input-group>\n        <input [value]="selectedValue?.name || \'\'" fd-input-group-input fd-form-control />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                fdType="transparent"\n                (click)="vhd.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Mobile value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    [mobile]="true"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-8"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-mobile-example"},{language:"typescript",component:"PlatformVhdMobileExampleComponent",code:"import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-mobile-example',\n    templateUrl: './platform-vhd-mobile-example.component.html'\n})\nexport class PlatformVhdMobileExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    selectedValue: ExampleTestModel;\n    currentValue: Partial<VhdValue> = {};\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel>): void {\n        this.currentValue = $event;\n        this.selectedValue = $event.selected[0];\n    }\n}\n",fileName:"platform-vhd-mobile-example"}],this.loadingValueHelpDialog=[{language:"html",code:'<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom token function"\n    uniqueKey="id"\n    tokenViewField="name"\n    [dataSource]="dataSource"\n    [loading]="loading"\n    (valueChange)="valueChange($event)"\n    (onDataRequested)="onDataRequested()"\n    (onDataReceived)="onDataReceived()"\n    headerId="fdp-vhd-header-3"\n>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',fileName:"platform-vhd-loading-example"},{language:"typescript",component:"PlatformVhdLoadingExampleComponent",code:"import { Component } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\nconst data = exampleDataSource();\n\n@Component({\n    selector: 'fdp-platform-vhd-loading-example',\n    templateUrl: './platform-vhd-loading-example.component.html'\n})\nexport class PlatformVhdLoadingExampleComponent {\n    filters = data.filters;\n    dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n\n    value: Partial<VhdValue<ExampleTestModel[]>> = {};\n    loading = false;\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.value = { ...$event };\n    }\n\n    onDataRequested(): void {\n        // apply some custom logic here if needed\n        this.loading = true;\n    }\n\n    onDataReceived(): void {\n        // since working with syncronous data, \"onDataReceived\" is invoked instantly\n        // just for demo purpose increasing the time before loading overlay is dismissed\n        setTimeout(() => {\n            this.loading = false;\n        }, 300);\n    }\n}\n",fileName:"platform-vhd-loading-example"}]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["app-platform-vhd"]],decls:260,vars:7,consts:[["id","basic","componentName","value-help-dialog"],[3,"exampleFiles"],["id","strategy-label","componentName","value-help-dialog"],["id","token-display","componentName","value-help-dialog"],["id","selection","componentName","value-help-dialog"],["id","multi-input","componentName","value-help-dialog"],["id","mobile","componentName","value-help-dialog"],["id","loading","componentName","value-help-dialog"]],template:function(n,t){1&n&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Basic Value Help Dialog. "),e.qZA(),e.TgZ(2,"description")(3,"p"),e._uU(4,"Example to demonstrate the basic call Value Help Dialog."),e.qZA(),e.TgZ(5,"p"),e._uU(6,"Basic setup"),e.qZA(),e.TgZ(7,"strong"),e._uU(8,"fdp-value-help-dialog"),e.qZA(),e.TgZ(9,"ul")(10,"li"),e._uU(11," Set "),e.TgZ(12,"code"),e._uU(13,"[dialogTitle]"),e.qZA(),e._uU(14,", it should be string. It will show as header's title of the dialog window. "),e.qZA(),e.TgZ(15,"li"),e._uU(16," Set "),e.TgZ(17,"code"),e._uU(18,"[uniqueKey]"),e.qZA(),e._uU(19," it should be uniq field from data source. "),e.TgZ(20,"em"),e._uU(21,"Required field for `selected from list` tab"),e.qZA()(),e.TgZ(22,"li"),e._uU(23," Set "),e.TgZ(24,"code"),e._uU(25,"[tokenViewField]"),e.qZA(),e._uU(26," or "),e.TgZ(27,"code"),e._uU(28,"[tokenizerFn]"),e.qZA(),e._uU(29," property to render selected item token. "),e.TgZ(30,"em"),e._uU(31,"Required field for `selected from list` tab"),e.qZA(),e.TgZ(32,"code"),e._uU(33,"[tokenViewField]"),e.qZA(),e._uU(34," should be a string equal key from data source. Need to render selected token. "),e._UZ(35,"br"),e.TgZ(36,"code"),e._uU(37,"[tokenizerFn]"),e.qZA(),e._uU(38," should be a function. "),e.TgZ(39,"em"),e._uU(40,"It has higher prio that `tokenViewField`"),e.qZA()(),e.TgZ(41,"li"),e._uU(42," Set "),e.TgZ(43,"code"),e._uU(44,"[dataSource]"),e.qZA(),e._uU(45," property to your data source. "),e.TgZ(46,"em"),e._uU(47,"Required field for `selected from list` tab"),e.qZA()()(),e.TgZ(48,"strong"),e._uU(49,"fdp-value-help-dialog-filter"),e.qZA(),e.TgZ(50,"ul")(51,"li"),e._uU(52," Set "),e.TgZ(53,"code"),e._uU(54,"[key]"),e.qZA(),e._uU(55," property to string, should be equal to field from data source. "),e.TgZ(56,"em"),e._uU(57,"Required field."),e.qZA()(),e.TgZ(58,"li"),e._uU(59," Set "),e.TgZ(60,"code"),e._uU(61,"[label]"),e.qZA(),e._uU(62," property to string, it will show as header in search table. If you skip this field, key will appear instead label. "),e.qZA()()(),e.TgZ(63,"component-example"),e._UZ(64,"fdp-platform-vhd-basic-example"),e.qZA(),e._UZ(65,"code-example",1)(66,"separator"),e.TgZ(67,"fd-docs-section-title",2),e._uU(68," Custom strategy labels.\n"),e.qZA(),e.TgZ(69,"description")(70,"p"),e._uU(71,"Example to demonstrate custom strategy labels for Define Conditions tab"),e.qZA(),e.TgZ(72,"p"),e._uU(73,"By default we're using strategy labels:"),e.qZA(),e.TgZ(74,"ul")(75,"li")(76,"code"),e._uU(77,"contains = 'contains'"),e.qZA()(),e.TgZ(78,"li")(79,"code"),e._uU(80,"equalTo = 'equal to'"),e.qZA()(),e.TgZ(81,"li")(82,"code"),e._uU(83,"between = 'between'"),e.qZA()(),e.TgZ(84,"li")(85,"code"),e._uU(86,"startsWith = 'starts with'"),e.qZA()(),e.TgZ(87,"li")(88,"code"),e._uU(89,"endsWith = 'ends with'"),e.qZA()(),e.TgZ(90,"li")(91,"code"),e._uU(92,"lessThan = 'less than'"),e.qZA()(),e.TgZ(93,"li")(94,"code"),e._uU(95,"lessThanEqual = 'less than or equal to'"),e.qZA()(),e.TgZ(96,"li")(97,"code"),e._uU(98,"greaterThan = 'greater than'"),e.qZA()(),e.TgZ(99,"li")(100,"code"),e._uU(101,"greaterThanEqual = 'greater than or equal to'"),e.qZA()(),e.TgZ(102,"li")(103,"code"),e._uU(104," empty = 'empty'"),e.qZA()()(),e.TgZ(105,"p"),e._uU(106,"Set "),e.TgZ(107,"code"),e._uU(108,"[defineStrategyLabels]"),e.qZA(),e._uU(109," for you custom strategy label. All keys are optional"),e.qZA(),e.TgZ(110,"ul")(111,"li"),e._uU(112," Allowed keys: "),e.TgZ(113,"code"),e._uU(114,"contains"),e.qZA(),e._uU(115,", "),e.TgZ(116,"code"),e._uU(117,"equalTo"),e.qZA(),e._uU(118,", "),e.TgZ(119,"code"),e._uU(120,"between"),e.qZA(),e._uU(121,", "),e.TgZ(122,"code"),e._uU(123,"startsWith"),e.qZA(),e._uU(124,", "),e.TgZ(125,"code"),e._uU(126,"endsWith"),e.qZA(),e._uU(127,", "),e.TgZ(128,"code"),e._uU(129,"lessThan"),e.qZA(),e._uU(130,", "),e.TgZ(131,"code"),e._uU(132,"lessThanEqual"),e.qZA(),e._uU(133,", "),e.TgZ(134,"code"),e._uU(135,"greaterThan"),e.qZA(),e._uU(136,", "),e.TgZ(137,"code"),e._uU(138,"greaterThanEqual"),e.qZA(),e._uU(139,", "),e.TgZ(140,"code"),e._uU(141,"empty"),e.qZA()()()(),e.TgZ(142,"component-example"),e._UZ(143,"fdp-platform-vhd-strategy-labels-example"),e.qZA(),e._UZ(144,"code-example",1)(145,"separator"),e.TgZ(146,"fd-docs-section-title",3),e._uU(147," Token display function for the Value Help Dialog.\n"),e.qZA(),e.TgZ(148,"description")(149,"ul")(150,"li"),e._uU(151," Set "),e.TgZ(152,"code"),e._uU(153,"[tokenViewField]"),e.qZA(),e._uU(154," property to name from data source fields. It'll use for render custom token in selection panel. "),e.qZA(),e.TgZ(155,"li"),e._uU(156," Set "),e.TgZ(157,"code"),e._uU(158,"[tokenizerFn]"),e.qZA(),e._uU(159," property to your function. It'll use for render custom token in selection panel. "),e.qZA()(),e.TgZ(160,"p")(161,"code"),e._uU(162,"[tokenizerFn]"),e.qZA(),e._uU(163," has higher priority than "),e.TgZ(164,"code"),e._uU(165,"[tokenViewField]"),e.qZA()(),e.TgZ(166,"p"),e._uU(167," Example to demonstrate the token display function for selected items panel in the footer of the Value Help Dialog. "),e.qZA()(),e.TgZ(168,"component-example"),e._UZ(169,"fdp-platform-vhd-token-example"),e.qZA(),e._UZ(170,"code-example",1)(171,"separator"),e.TgZ(172,"fd-docs-section-title",4),e._uU(173," Selection in Value Help Dialog.\n"),e.qZA(),e.TgZ(174,"description")(175,"ul")(176,"li"),e._uU(177," Set "),e.TgZ(178,"code"),e._uU(179,"[searchSelection]"),e.qZA(),e._uU(180," property to "),e.TgZ(181,"strong"),e._uU(182,"multi"),e.qZA(),e._uU(183,", if you want to select multiple rows from search table "),e.qZA(),e.TgZ(184,"li"),e._uU(185," Set "),e.TgZ(186,"code"),e._uU(187,"[searchSelection]"),e.qZA(),e._uU(188," property to "),e.TgZ(189,"strong"),e._uU(190,"single"),e.qZA(),e._uU(191,", if you want to select single row from search table without close dialog "),e.qZA(),e.TgZ(192,"li"),e._uU(193," Set "),e.TgZ(194,"code"),e._uU(195,"[searchSelection]"),e.qZA(),e._uU(196," property to "),e.TgZ(197,"strong"),e._uU(198,"once"),e.qZA(),e._uU(199,", if you want to select single row from search table and success dialog with this value "),e.qZA()(),e.TgZ(200,"p"),e._uU(201,"Example to demonstrate using Value Help Dialog with input field and single selection."),e.qZA()(),e.TgZ(202,"component-example"),e._UZ(203,"fdp-platform-vhd-input-example"),e.qZA(),e._UZ(204,"code-example",1)(205,"separator"),e.TgZ(206,"fd-docs-section-title",5),e._uU(207," Multi Input field with Value Help Dialog.\n"),e.qZA(),e.TgZ(208,"description")(209,"p"),e._uU(210,"Example to demonstrate using Value Help Dialog with multi input field."),e.qZA()(),e.TgZ(211,"component-example"),e._UZ(212,"fdp-platform-vhd-multi-input-example"),e.qZA(),e._UZ(213,"code-example",1)(214,"separator"),e.TgZ(215,"fd-docs-section-title",6),e._uU(216," Mobile version "),e.qZA(),e.TgZ(217,"description")(218,"p"),e._uU(219,"Example to demonstrate mobile view for Value Help Dialog."),e.qZA(),e.TgZ(220,"ul")(221,"li"),e._uU(222,"Set "),e.TgZ(223,"code"),e._uU(224,"[mobile]"),e.qZA(),e._uU(225," property to "),e.TgZ(226,"strong"),e._uU(227,"true"),e.qZA(),e._uU(228," on "),e.TgZ(229,"strong"),e._uU(230,"fdp-value-help-dialog"),e.qZA()()()(),e.TgZ(231,"component-example"),e._UZ(232,"fdp-platform-vhd-mobile-example"),e.qZA(),e._UZ(233,"code-example",1)(234,"separator"),e.TgZ(235,"fd-docs-section-title",7),e._uU(236," Loading "),e.qZA(),e.TgZ(237,"description")(238,"p"),e._uU(239," Value Help Dialog exposes "),e.TgZ(240,"code"),e._uU(241,"onDataRequested"),e.qZA(),e._uU(242," and "),e.TgZ(243,"code"),e._uU(244,"onDataReceived"),e.qZA(),e._uU(245," outputs, that can be used to implement external loading logic. These events are tied to the querying process through dataSource. "),e.qZA(),e.TgZ(246,"p"),e._uU(247," By default, Value Help Dialog tracks these loading events and apply loading state to the table internally. However, you can modify this logic by using "),e.TgZ(248,"code"),e._uU(249,"onDataRequested"),e.qZA(),e._uU(250," and "),e.TgZ(251,"code"),e._uU(252,"onDataReceived"),e.qZA(),e._uU(253," methods and "),e.TgZ(254,"code"),e._uU(255,"loading"),e.qZA(),e._uU(256," input on the component "),e.qZA()(),e.TgZ(257,"component-example"),e._UZ(258,"fdp-platform-vhd-loading-example"),e.qZA(),e._UZ(259,"code-example",1)),2&n&&(e.xp6(65),e.Q6J("exampleFiles",t.basicValueHelpDialog),e.xp6(79),e.Q6J("exampleFiles",t.strategyLabelValueHelpDialog),e.xp6(26),e.Q6J("exampleFiles",t.basicValueHelpDialog),e.xp6(34),e.Q6J("exampleFiles",t.inputValueHelpDialog),e.xp6(9),e.Q6J("exampleFiles",t.multiInputValueHelpDialog),e.xp6(20),e.Q6J("exampleFiles",t.multiInputValueHelpDialog),e.xp6(26),e.Q6J("exampleFiles",t.loadingValueHelpDialog))},dependencies:[K.N,Y.E,y.w,W.k,G.O,te,ie,ue,me,Te,Ce,$e],encapsulation:2}),a})();var Ae=o(11825),Oe=o(92178),Fe=o(80320),qe=o(10990);let Pe=(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["app-vhd-header"]],decls:10,vars:1,consts:[["module","PlatformValueHelpDialogModule","subPackage","value-help-dialog"],[3,"hasI18n"]],template:function(n,t){1&n&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Value Help Dialog"),e.qZA(),e.TgZ(3,"description"),e._uU(4," The value help dialog is a UI pattern that helps the user find and select single and multiple values. "),e._UZ(5,"br"),e._uU(6," The user can also define and select multiple ranges. The value help dialog is generally called from an input field or a multi-input field by clicking the selection icon (value help icon) of the input field. "),e.qZA(),e._UZ(7,"br")(8,"import",0)(9,"fd-header-tabs",1),e.qZA()),2&n&&(e.xp6(9),e.Q6J("hasI18n",!0))},dependencies:[Ae.k,Oe.G,Fe.c,y.w,qe.i],encapsulation:2}),a})();var C=o(61830),Ie=o(99916);const we=[{path:"",component:Pe,children:[{path:"",component:Ue},{path:"api",component:k.h,data:{content:S.X.valueHelpDialog}},{path:"i18n",component:C.P,data:(0,C.G)("platformVHD")}]}];let Ne=(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275mod=e.oAB({type:a}),a.\u0275inj=e.cJS({providers:[(0,Ie.PP)("fdp-value-help-dialog")],imports:[_.Bz.forChild(we),p.ez,M.g,D.hJ,E.ne,$.Qj,U.Wh,O.V_,d.T2,A.nD,_.Bz]}),a})()}}]);