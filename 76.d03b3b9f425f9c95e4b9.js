(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{"+NtN":function(e,t,n){"use strict";n.r(t),n.d(t,"ThemeSwitcherDocsModule",(function(){return A}));var r={};n.r(r),n.d(r,"default",(function(){return g}));var s={};n.r(s),n.d(s,"default",(function(){return v}));var o={};n.r(o),n.d(o,"default",(function(){return T}));var i={};n.r(i),n.d(i,"default",(function(){return S}));var c=n("sEIs"),m=n("eCHz"),a=n("uYCi"),h=n("EM62"),l=n("P+xO"),u=n("Zn6N"),p=n("FiLx"),d=n("7o9V"),f=n("h8DJ"),b=function(){function e(){this.file={code:{default:'{\n    "glob": "**/css_variables.css",\n    "input": "./node_modules/@sap-theming/theming-base-content/content/Base/baseLib/",\n    "output": "./assets/theming-base/"\n},\n{\n    "glob": "**/*",\n    "input": "./node_modules/fundamental-styles/dist/theming/",\n    "output": "./assets/fundamental-styles-theming/"\n}'},language:"json"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=h.Gb({type:e,selectors:[["fd-theme-switcher-header"]],decls:24,vars:1,consts:[[3,"file"],["module","ThemeService"]],template:function(e,t){1&e&&(h.Sb(0,"header"),h.Tc(1,"Theme Switcher API"),h.Rb(),h.Sb(2,"description"),h.Tc(3," Theme switcher API allows user to set specific theme programmatically. There is no longer need for each application to implement its own theme switcher code."),h.Nb(4,"br"),h.Tc(5," At the moment this won't work for Internet Explorer 11. We will enhance this feature in the near future."),h.Nb(6,"br"),h.Tc(7," The API requires additional assets from the npm packages: "),h.Sb(8,"code"),h.Tc(9,"@sap-theming/theming-base-content"),h.Rb(),h.Tc(10," and "),h.Sb(11,"code"),h.Tc(12,"fundamental-styles"),h.Rb(),h.Tc(13,"."),h.Nb(14,"br"),h.Tc(15," Prerequisites - add those objects to assets array in "),h.Sb(16,"code"),h.Tc(17,"angular.json"),h.Rb(),h.Tc(18,":"),h.Nb(19,"br"),h.Nb(20,"fd-code-snippet",0),h.Rb(),h.Nb(21,"import",1),h.Nb(22,"fd-header-tabs"),h.Nb(23,"router-outlet")),2&e&&(h.Ab(20),h.sc("file",t.file))},directives:[l.a,u.a,p.a,d.a,f.a,c.g],encapsulation:2}),e}(),g='<div *ngFor="let theme of themes">\n    <button fd-button (click)="selectTheme(theme.id)" [label]="theme.name"></button>\n</div>\n\n\x3c!--Uncomment if used standalone--\x3e\n\x3c!--<link rel="stylesheet" *ngIf="cssUrl" [href]="cssUrl"/>--\x3e\n\x3c!--<link rel="stylesheet" *ngIf="cssCustomUrl" [href]="cssCustomUrl"/>--\x3e\n\n',v='<div *ngFor="let theme of themes">\n    <button fd-button (click)="changeQueryUrl(theme.id)" [label]="theme.name"></button>\n</div>\n\n\x3c!--Uncomment if used standalone--\x3e\n\x3c!--<link rel="stylesheet" *ngIf="cssUrl" [href]="cssUrl"/>--\x3e\n\x3c!--<link rel="stylesheet" *ngIf="cssCustomUrl" [href]="cssCustomUrl"/>--\x3e\n',T="import { Component, EventEmitter, Output } from '@angular/core';\nimport { ThemeServiceOutput, ThemesService } from '@fundamental-ngx/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n    selector: 'fd-theme-switcher-example',\n    templateUrl: './theme-switcher-example.component.html'\n})\nexport class ThemeSwitcherExampleComponent {\n    /** This is for internal usage, can be removed, when used in standalone application */\n    @Output()\n    themeChanged = new EventEmitter<ThemeServiceOutput>();\n\n    themes = this._themesService.themes;\n    cssUrl: SafeResourceUrl;\n    cssCustomUrl: SafeResourceUrl;\n\n    constructor (\n        private _themesService: ThemesService\n    ) {}\n\n    selectTheme(selectedTheme: string): void {\n        this.cssUrl = this._themesService.setTheme(selectedTheme);\n        this.cssCustomUrl = this._themesService.setCustomTheme(selectedTheme);\n\n        this.themeChanged.emit({\n            themeUrl: this.cssCustomUrl,\n            customThemeUrl: this.cssUrl\n        })\n    }\n}\n",S="import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { ThemeServiceOutput, ThemesService } from '@fundamental-ngx/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'fd-theme-url-example',\n    templateUrl: './theme-url-example.component.html'\n})\nexport class ThemeUrlExampleComponent implements OnDestroy {\n    /** This is for internal usage, can be removed, when used in standalone application */\n    @Output()\n    themeChanged = new EventEmitter<ThemeServiceOutput>();\n\n    themes = this._themesService.themes;\n    cssUrl: SafeResourceUrl;\n    cssCustomUrl: SafeResourceUrl;\n\n    readonly themeQueryParamName = 'customQueryParam'\n\n    /** An RxJS Subject that will kill the data stream upon destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _themesService: ThemesService,\n        private _router: Router\n    ) {\n        _themesService.setThemeByRoute(this.themeQueryParamName);\n\n        _themesService.onThemeQueryParamChange.pipe(\n            takeUntil(this._onDestroy$)\n        ).subscribe(theme => {\n            this.cssCustomUrl = theme.customThemeUrl;\n            this.cssUrl = theme.themeUrl;\n\n            this.themeChanged.emit({\n                themeUrl: this.cssCustomUrl,\n                customThemeUrl: this.cssUrl\n            })\n        })\n   }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    changeQueryUrl(param: string): void {\n        this._router.navigate( [], { queryParams: { customQueryParam: param } });\n    }\n\n}\n",U=n("lJWA"),y=n("9Cr2"),x=n("dB5E"),C=n("LTOS"),w=n("2kYt"),R=n("0b/r");function _(e,t){if(1&e){var n=h.Tb();h.Sb(0,"div"),h.Sb(1,"button",1),h.gc("click",(function(){h.Gc(n);var e=t.$implicit;return h.kc().selectTheme(e.id)})),h.Rb(),h.Rb()}if(2&e){var r=t.$implicit;h.Ab(1),h.sc("label",r.name)}}var k=function(){function e(e){this._themesService=e,this.themeChanged=new h.o,this.themes=this._themesService.themes}return e.prototype.selectTheme=function(e){this.cssUrl=this._themesService.setTheme(e),this.cssCustomUrl=this._themesService.setCustomTheme(e),this.themeChanged.emit({themeUrl:this.cssCustomUrl,customThemeUrl:this.cssUrl})},e.\u0275fac=function(t){return new(t||e)(h.Mb(C.ThemesService))},e.\u0275cmp=h.Gb({type:e,selectors:[["fd-theme-switcher-example"]],outputs:{themeChanged:"themeChanged"},decls:1,vars:1,consts:[[4,"ngFor","ngForOf"],["fd-button","",3,"label","click"]],template:function(e,t){1&e&&h.Rc(0,_,2,1,"div",0),2&e&&h.sc("ngForOf",t.themes)},directives:[w.s,R.a],encapsulation:2}),e}(),N=n("gJWE"),E=n("ekBi"),O=n("ZTXN"),P=n("kuMc");function Q(e,t){if(1&e){var n=h.Tb();h.Sb(0,"div"),h.Sb(1,"button",1),h.gc("click",(function(){h.Gc(n);var e=t.$implicit;return h.kc().changeQueryUrl(e.id)})),h.Rb(),h.Rb()}if(2&e){var r=t.$implicit;h.Ab(1),h.sc("label",r.name)}}var D=function(){function e(e,t){var n=this;this._themesService=e,this._router=t,this.themeChanged=new h.o,this.themes=this._themesService.themes,this.themeQueryParamName="customQueryParam",this._onDestroy$=new O.a,e.setThemeByRoute(this.themeQueryParamName),e.onThemeQueryParamChange.pipe(Object(P.a)(this._onDestroy$)).subscribe((function(e){n.cssCustomUrl=e.customThemeUrl,n.cssUrl=e.themeUrl,n.themeChanged.emit({themeUrl:n.cssCustomUrl,customThemeUrl:n.cssUrl})}))}return e.prototype.ngOnDestroy=function(){this._onDestroy$.next(),this._onDestroy$.complete()},e.prototype.changeQueryUrl=function(e){this._router.navigate([],{queryParams:{customQueryParam:e}})},e.\u0275fac=function(t){return new(t||e)(h.Mb(C.ThemesService),h.Mb(c.c))},e.\u0275cmp=h.Gb({type:e,selectors:[["fd-theme-url-example"]],outputs:{themeChanged:"themeChanged"},decls:1,vars:1,consts:[[4,"ngFor","ngForOf"],["fd-button","",3,"label","click"]],template:function(e,t){1&e&&h.Rc(0,Q,2,1,"div",0),2&e&&h.sc("ngForOf",t.themes)},directives:[w.s,R.a],encapsulation:2}),e}(),j=function(){function e(e){this._docsThemeService=e,this.themeSwitcherExample=[{language:"html",code:r,fileName:"theme-switcher-example"},{language:"typescript",code:o,fileName:"theme-switcher-example",component:"ThemeSwitcherExampleComponent"}],this.themeUrlExample=[{language:"html",code:s,fileName:"theme-url-example"},{language:"typescript",code:i,fileName:"theme-url-example",component:"ThemeUrlExampleComponent"}]}return e.prototype.handleThemeChanged=function(e){this._docsThemeService.onThemeChange.next(e)},e.\u0275fac=function(t){return new(t||e)(h.Mb(U.a))},e.\u0275cmp=h.Gb({type:e,selectors:[["app-theme-switcher-docs"]],decls:24,vars:2,consts:[[3,"themeChanged"],[3,"exampleFiles"]],template:function(e,t){1&e&&(h.Sb(0,"fd-docs-section-title"),h.Tc(1," Theme switcher\n"),h.Rb(),h.Sb(2,"description"),h.Tc(3," Css files are switched via choosing option.\n"),h.Rb(),h.Sb(4,"component-example"),h.Sb(5,"fd-theme-switcher-example",0),h.gc("themeChanged",(function(e){return t.handleThemeChanged(e)})),h.Rb(),h.Rb(),h.Nb(6,"code-example",1),h.Nb(7,"separator"),h.Sb(8,"fd-docs-section-title"),h.Tc(9," Setting theme via url\n"),h.Rb(),h.Sb(10,"description"),h.Tc(11," Theme can be set by adding property in URL providing name of the theme like in the following example. Parameter is configurable, it can be set by calling "),h.Sb(12,"code"),h.Tc(13,"setThemeByRoute"),h.Rb(),h.Tc(14,". See example by adding "),h.Sb(15,"code"),h.Tc(16,"?customQueryParam=sap_fiori_3_dark"),h.Rb(),h.Tc(17," to URL. To make it work properly, you need to have imported "),h.Sb(18,"code"),h.Tc(19,"RouterModule"),h.Rb(),h.Tc(20," into the project.\n"),h.Rb(),h.Sb(21,"component-example"),h.Sb(22,"fd-theme-url-example",0),h.gc("themeChanged",(function(e){return t.handleThemeChanged(e)})),h.Rb(),h.Rb(),h.Nb(23,"code-example",1)),2&e&&(h.Ab(6),h.sc("exampleFiles",t.themeSwitcherExample),h.Ab(17),h.sc("exampleFiles",t.themeUrlExample))},directives:[y.a,u.a,x.a,k,N.a,E.a,D],encapsulation:2}),e}(),F=n("MOJJ"),$=[{path:"",component:b,children:[{path:"",component:j},{path:"api",component:m.a,data:{content:a.a.globalConfig}}]}],A=function(){function e(){}return e.\u0275mod=h.Kb({type:e}),e.\u0275inj=h.Jb({factory:function(t){return new(t||e)},imports:[[c.f.forChild($),F.a,C.ObjectStatusModule],c.f]}),e}()}}]);