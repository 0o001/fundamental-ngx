!function(){function e(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{Alzg:function(o,n,r){"use strict";r.r(n),r.d(n,"PlatformCheckboxGroupDocsModule",function(){return ke});var a={};r.r(a),r.d(a,"default",function(){return v});var l={};r.r(l),r.d(l,"default",function(){return V});var c={};r.r(c),r.d(c,"default",function(){return C});var i={};r.r(i),r.d(i,"default",function(){return y});var t={};r.r(t),r.d(t,"default",function(){return W});var s={};r.r(s),r.d(s,"default",function(){return D});var b={};r.r(b),r.d(b,"default",function(){return w});var p={};r.r(p),r.d(p,"default",function(){return I});var f,d,u,m=r("tyNb"),g=r("XaOr"),h=r("jzzn"),k=r("IywY"),x=r("t9W5"),v='<h3>Reactive Form Examples:</h3>\n<h3>Checkboxes created from given list of values</h3>\n<p>Inline checkboxes</p>\n<fdp-form-group [formGroup]="form1">\n    <fdp-form-field #fl1 id="seasons" label="My favorite Seasons: " rank="1">\n        <fdp-checkbox-group [list]="seasons" name="fav-seasons" [isInline]="true" ariaLabel="My favorite Seasons"\n            [formControl]="fl1.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Seasons: {{ form1.controls.seasons?.value }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on value passed</p>\n<fdp-form-group [formGroup]="form2" [object]="selectedPhones">\n    <fdp-form-field #fl2 id="phones" label="Phones interested in:" rank="1">\n        <fdp-checkbox-group [list]="phonesList" name="brands" ariaLabel="Phones interested"\n            [formControl]="fl2.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Available brands: {{ form2.controls.phones?.value }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on value passed from formGroup</p>\n<fdp-form-group [formGroup]="form3">\n    <fdp-form-field #fl4 id="sports1" label="Sports I Play:" rank="1">\n        <fdp-checkbox-group [list]="sports" name="sports" ariaLabel="Sports I Play" formControlName="sports">\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Sports: {{ form3.controls.sports1?.value }}</span>\n<br />\n<br />\n\n<p>Disabled checkbox group</p>\n<fdp-form-group [formGroup]="form3">\n    <fdp-form-field #fl3 id="sportsDisabled" label="Disabled checkbox Group: " [disabled]="true" rank="1">\n        <fdp-checkbox-group [list]="sports" name="sports" ariaLabel="Disabled checkbox" [formControl]="fl3.formControl">\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<br />\n\n<hr />\n\n<h3>Template Driven Form</h3>\n<h3>Checkboxes created from given list of values</h3>\n<p>Inline checkboxes</p>\n<fdp-form-group>\n    <fdp-form-field id="weather" label="My favorite Weather:" rank="1">\n        <fdp-checkbox-group [list]="seasons" name="seasons-fav" [isInline]="true" ariaLabel="My favorite Weather"\n            [(ngModel)]="countrySeason"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Weather: {{ countrySeason }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on value passed</p>\n<fdp-form-group>\n    <fdp-form-field id="sports" label="Sports interested in:" rank="1">\n        <fdp-checkbox-group [list]="sports" name="sports" ariaLabel="Sports interested in" [(ngModel)]="selectedSports">\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Sports: {{ selectedSports }}</span>\n<br />\n<br />\n\n<p>Disabled checkbox group</p>\n<fdp-form-group>\n    <fdp-form-field id="sportsDisabled" label="Disabled checkbox Group:" rank="1">\n        <fdp-checkbox-group [list]="sports" name="sports" [disabled]="true" ariaLabel="Disabled checkbox">\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>Checkbox group outside form</h3>\n<fdp-checkbox-group [list]="dishes" name="fav-dishes" [isInline]="true" ariaLabel="My favorite dishes"\n    [(checked)]="selectedDishes"></fdp-checkbox-group>\n\n<span style="margin-left: 2rem;">Selected dishes: {{ selectedDishes }}</span>\n',V="import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-checkbox-group-list',\n    templateUrl: './platform-checkbox-group-list.component.html'\n})\nexport class PlatformCheckboxGroupListComponent {\n    seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n    dishes: string[] = ['Italian', 'Chinese', 'Indian', 'Japanese'];\n    sports: string[] = ['cycling', 'running', 'visit gym', 'swimming'];\n    phonesList: string[] = ['Samsung', 'Apple', 'OnePlus', 'Redmi'];\n\n    // data passing to form\n    selectedPhones = { phones: ['Samsung', 'OnePlus'] };\n\n    form1 = new FormGroup({});\n    form2 = new FormGroup({});\n    form3 = new FormGroup({\n        sports: new FormControl(['cycling', 'running'])\n    });\n\n    // template driven\n    countrySeason = '';\n    selectedSports = ['running', 'swimming'];\n\n    // outside form\n    selectedDishes = ['Chinese', 'Italian'];\n}\n",C='<h3>Reactive Form Examples:</h3>\n<h3>Checkboxes created from from list of selectItem Objects</h3>\n<p>Inline checkboxes</p>\n<fdp-form-group [formGroup]="form4">\n    <fdp-form-field #fl1 id="languages" label="Programming Languages Known: " rank="1">\n        <fdp-checkbox-group [list]="languages" [isInline]="true" name="languages" contentDensity="compact"\n            ariaLabel="Programming Languages Known" [formControl]="fl1.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Languages: {{ form4.controls.languages?.value }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on control value passed</p>\n<fdp-form-group [formGroup]="form5" [object]="visited">\n    <fdp-form-field #fl2 id="visited" label="Country visited: " rank="1">\n        <fdp-checkbox-group [list]="countryVisited" name="visited" ariaLabel="Country visited"\n            [formControl]="fl2.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Visited Country: {{ form5.controls.visited?.value }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on control value passed from formGroup</p>\n<fdp-form-group [formGroup]="form6" [object]="visited">\n    <fdp-form-field #fl4 id="currencies" label="Currencies Exchanging: " rank="1">\n        <fdp-checkbox-group [list]="countryCurrency" name="currency" ariaLabel="Currencies Exchanging"\n            formControlName="currencies"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Currencies: {{ form6.controls.currencies?.value }}</span>\n\n<br />\n<br />\n<p>Lookup key and Display key usages.</p>\n<fdp-form-group [formGroup]="form7">\n    <fdp-form-field #fl5 id="items" label="Purchased Items: " rank="1">\n        <fdp-checkbox-group [list]="invoiceItems" name="invoices" lookupKey="item" displayKey="itemType"\n            ariaLabel="Purchased Items" [formControl]="fl5.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Purchased Items: {{ form7.controls.items?.value }}</span>\n\n<br />\n<br />\n<p>Disabled checkbox group</p>\n<fdp-form-group [formGroup]="form6">\n    <fdp-form-field #fl3 id="disabled currencies" label="Disabled checkbox Group: " [disabled]="true"\n        rank="1">\n        <fdp-checkbox-group [list]="countryCurrency" name="currencies" ariaLabel="Currencies"\n            [formControl]="fl3.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n\n<hr />\n\n<h3>Template Driven Form</h3>\n<h3>Checkboxes created from from list of selectItem Objects</h3>\n<p>Inline checkboxes</p>\n<fdp-form-group>\n    <fdp-form-field id="languages known" label="Programming Languages Known: " rank="1">\n        <fdp-checkbox-group [list]="languages" [isInline]="true" name="languages"\n            ariaLabel="Programming Languages Known" [(ngModel)]="languagesKnown"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Languages: {{ languagesKnown }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on value passed</p>\n<fdp-form-group>\n    <fdp-form-field id="currency" label="Currencies in country: " rank="1">\n        <fdp-checkbox-group [list]="countryCurrency" name="currencies" contentDensity="compact"\n            ariaLabel="Currencies in country" [(ngModel)]="currencies"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Currencies: {{ currencies }}</span>\n\n<br />\n<br />\n<p>Lookup key and Display key usages.</p>\n<fdp-form-group >\n    <fdp-form-field id="items1" label="Purchased Items: " rank="1">\n        <fdp-checkbox-group [list]="invoiceItems" name="items" lookupKey="item" displayKey="itemType"\n            ariaLabel="Purchased Items" [(ngModel)]="itemsData"></fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Purchased Items: {{ itemsData }}</span>\n<br />\n<br />\n<p>Disabled checkbox group</p>\n<fdp-form-group>\n    <fdp-form-field id="disabled currency" label="Disabled checkbox Group: " rank="1">\n        <fdp-checkbox-group [list]="countryCurrency" [disabled]="true" name="currencies" ariaLabel="Disabled checkbox">\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>Checkbox group outside form</h3>\n<fdp-checkbox-group [list]="languages" name="languages" [isInline]="true" ariaLabel="My known languages"\n    [(checked)]="selectedDishes">\n</fdp-checkbox-group>\n\n<span style="margin-left: 2rem;">Selected dishes: {{ selectedDishes }}</span>\n\n<h3>Checkbox group outside form using displayKey and lookupKey:</h3>\n<fdp-checkbox-group [list]="invoiceItems" name="invoices" lookupKey="item" displayKey="itemType"\n    ariaLabel="Purchased Items" [(checked)]="selectedInvoices">\n</fdp-checkbox-group>\n\n<span style="margin-left: 2rem;">Selected invoices: {{ selectedInvoices }}</span>\n',y="import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SelectItem } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-checkbox-group-list-object',\n    templateUrl: './platform-checkbox-group-list-object.component.html'\n})\nexport class PlatformCheckboxGroupListObjectComponent {\n    countryCurrency = [new Country('Australia', 'AUD'), new Country('India', 'INR'), new Country('USA', 'USD')];\n    currency = ['AUD', 'USD'];\n\n    languages = [\n        new LanguageKnown('Java', 'java', false),\n        new LanguageKnown('Javascript', 'javascript', true),\n        new LanguageKnown('Python', 'python', false),\n        new LanguageKnown('GoLang', 'go', true)\n    ];\n\n    countryVisited = [new Country('Australia', 'Australia'), new Country('India', 'India'), new Country('USA', 'USA')];\n    visited = { visited: ['India', 'USA'] };\n\n    form4 = new FormGroup({});\n    form5 = new FormGroup({});\n    form6 = new FormGroup({\n        currencies: new FormControl(['INR'])\n    });\n    form7 = new FormGroup({});\n\n    invoiceItems = [\n        new Item('1', 'coffee', 'Coffee', 100, 12),\n        new Item('2', 'pen', 'Pen', 200, 5),\n        new Item('3', 'chair', 'Office chair', 50, 5530)\n    ];\n\n    // template driven\n    languagesKnown = '';\n    currencies = ['INR', 'USD'];\n    itemsData = ['pen'];\n\n    // outside form\n    selectedDishes = ['java', 'javascript'];\n    selectedInvoices = ['pen'];\n}\n\nclass Country implements SelectItem {\n    constructor(public label: string, public value: string) {}\n}\n\nclass LanguageKnown implements SelectItem {\n    constructor(public label: string, public value: string, public disabled: boolean) {}\n}\n\nclass Item {\n    constructor(\n        public itemId: string,\n        public item: string,\n        public itemType: string,\n        public quantity: number,\n        public rate: number\n    ) {}\n}\n",W='<h3>Reactive Form Examples:</h3>\n<h3>Checkbox group created from projected checkboxes</h3>\n<fdp-form-group [formGroup]="form1">\n    <fdp-form-field #fl1 id="fruits" label="My favorite fruits:" rank="1">\n        <fdp-checkbox-group name="fruits" ariaLabel="My favorite fruits" [formControl]="fl1.formControl">\n            <fdp-checkbox value="apple" label="Apple" [disabled]="true"></fdp-checkbox>\n            <fdp-checkbox value="banana" label="Banana"></fdp-checkbox>\n            <fdp-checkbox value="guava" label="Guava" [disabled]="true"></fdp-checkbox>\n            <fdp-checkbox value="papaya" label="Papaya"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Favorites: {{ form1.controls.fruits?.value }}</span>\n\n<p>Pre-selection based on value passed</p>\n<fdp-form-group [formGroup]="form2" [object]="hobbies">\n    <fdp-form-field #fl2 id="hobbies" label="My Hobbies:" rank="1">\n        <fdp-checkbox-group name="hobby" ariaLabel="My Hobbies" [formControl]="fl2.formControl">\n            <fdp-checkbox value="cooking" label="Cooking"></fdp-checkbox>\n            <fdp-checkbox value="painting" label="Painting"></fdp-checkbox>\n            <fdp-checkbox value="coding" label="Coding"></fdp-checkbox>\n            <fdp-checkbox value="gardening" label="Gardening"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Hobbies: {{ form2.controls.hobbies?.value }}</span>\n<br />\n<br />\n\n<p>Pre-selection based on value passed from FormGroup</p>\n<fdp-form-group [formGroup]="form3">\n    <fdp-form-field #fl4 id="visited1" label="visited countries" rank="1">\n        <fdp-checkbox-group name="countries" ariaLabel="visited countries" formControlName="visited">\n            <fdp-checkbox value="Italy" label="Italy"></fdp-checkbox>\n            <fdp-checkbox value="France" label="France"></fdp-checkbox>\n            <fdp-checkbox value="Switzerland" label="Switzerland"></fdp-checkbox>\n            <fdp-checkbox value="Austria" label="Austria"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Visited Countries: {{ form3.controls.visited1?.value }}</span>\n<br />\n<br />\n<p>Disabled checkbox group</p>\n<fdp-form-group [formGroup]="form3">\n    <fdp-form-field #fl3 id="visited countries" label="Disabled checkbox Group: " [disabled]="true"\n        rank="1">\n        <fdp-checkbox-group name="countries" ariaLabel="Disabled checkbox Group" [formControl]="fl3.formControl">\n            <fdp-checkbox value="Italy" label="Italy"></fdp-checkbox>\n            <fdp-checkbox value="France" label="France"></fdp-checkbox>\n            <fdp-checkbox value="Switzerland" label="Switzerland"></fdp-checkbox>\n            <fdp-checkbox value="Austria" label="Austria"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n\n<hr/>\n<h3>Template Driven Form Examples:</h3>\n<h3>Checkbox group created from projected checkboxes</h3>\n<fdp-form-group>\n    <fdp-form-field id="subjects" label="Subjects selected:" rank="1">\n        <fdp-checkbox-group name="semester1" ariaLabel="Subjects selected" [(ngModel)]="subjects">\n            <fdp-checkbox value="Math" label="Math" [disabled]="true"></fdp-checkbox>\n            <fdp-checkbox value="Chemistry" label="Chemistry"></fdp-checkbox>\n            <fdp-checkbox value="Physics" label="Physics"></fdp-checkbox>\n            <fdp-checkbox value="Biology" label="Biology" [disabled]="true"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Selected Subjects: {{ subjects }}</span>\n\n<p>Pre-selection based on value passed</p>\n<fdp-form-group>\n    <fdp-form-field id="reptiles" label="All reptiles:" rank="1">\n        <fdp-checkbox-group name="reptiles" ariaLabel="All reptiles" [(ngModel)]="reptiles">\n            <fdp-checkbox value="Snakes" label="Snakes"></fdp-checkbox>\n            <fdp-checkbox value="Crocodiles" label="Crocodiles"></fdp-checkbox>\n            <fdp-checkbox value="Lizards" label="Lizards"></fdp-checkbox>\n            <fdp-checkbox value="Elephants" label="Elephants"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n<span style="margin-left: 2rem;">All Reptiles: {{ reptiles }}</span>\n\n<p>Disabled checkbox group</p>\n<fdp-form-group>\n    <fdp-form-field id="countries" label="Disabled checkbox Group: " rank="1">\n        <fdp-checkbox-group name="visited countries" ariaLabel="Disabled checkbox Group" [disabled]="true">\n            <fdp-checkbox value="Italy" label="Italy"></fdp-checkbox>\n            <fdp-checkbox value="France" label="France"></fdp-checkbox>\n            <fdp-checkbox value="Switzerland" label="Switzerland"></fdp-checkbox>\n            <fdp-checkbox value="Austria" label="Austria"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n</fdp-form-group>\n',D="import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-checkbox-group-content-checkbox',\n    templateUrl: './platform-checkbox-group-content-checkbox.component.html'\n})\nexport class PlatformCheckboxGroupContentCheckboxComponent {\n    hobbies = { hobbies: ['coding', 'gardening'] };\n\n    form1 = new FormGroup({});\n    form2 = new FormGroup({});\n    form3 = new FormGroup({\n        visited: new FormControl(['Italy', 'France'])\n    });\n\n    // Template driven\n    subjects = '';\n    reptiles = ['Lizards', 'Snakes'];\n}\n",w='<h3>Checkbox group created from passed checkboxes and value is required</h3>\n<fdp-form-group [formGroup]="form1" [object]="favorites">\n    <fdp-form-field #fl1 id="fruitsEx" label="My favorite fruits:" [required]="true" rank="1">\n        <fdp-checkbox-group [isInline]="true" name="fruits" ariaLabel="My favorite fruits"\n            [formControl]="fl1.formControl">\n            <fdp-checkbox value="apple" label="Apple"></fdp-checkbox>\n            <fdp-checkbox value="banana" label="Banana"></fdp-checkbox>\n            <fdp-checkbox value="grapes" label="Grapes"></fdp-checkbox>\n        </fdp-checkbox-group>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <ng-container *ngIf="errors.required">\n            <span role="alert" aria-atomic="true">Value is required.</span>\n        </ng-container>\n    </ng-template>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Favorites: {{ form1.controls.fruitsEx?.value }}</span>\n\n<h3>Checkbox group created from list of values and value is required</h3>\n<fdp-form-group [formGroup]="form2">\n    <fdp-form-field #fl2 id="fruits1" label="My favorite fruits:" [required]="true" rank="1">\n        <fdp-checkbox-group [isInline]="false" name="fruits" [list]="fruits" ariaLabel="My favorite fruits"\n            [formControl]="fl2.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <ng-container *ngIf="errors.required">\n            <span role="alert" aria-atomic="true">Value is required.</span>\n        </ng-container>\n    </ng-template>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Favorites: {{ form2.controls.fruits1?.value }}</span>\n\n<h3>Checkboxes with different context</h3>\n<div>Qualification form</div>\n<fdp-form-group #fg hintPlacement="left" [formGroup]="form1">\n    <fdp-form-field #ffr1 id="education" [validators]="validators" hintPlacement="left" [rank]="1"\n        [i18Strings]="graduation">\n        <fdp-checkbox name="education" [isBinary]="true" title="minimum education level"\n            [formControl]="ffr1.formControl">Graduated</fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 id="engineering" [validators]="validators" hintPlacement="left" [rank]="2"\n        [i18Strings]="engineering">\n        <fdp-checkbox name="engineering" [isBinary]="true" title="have engineering degree"\n            [formControl]="ffr2.formControl">\n            Engineering completed\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr3 id="work" [validators]="validators" hintPlacement="left" [rank]="3"\n        [i18Strings]="work">\n        <fdp-checkbox name="work" [isBinary]="true" title="Work experience" [formControl]="ffr3.formControl">\n            5 year of work experience\n        </fdp-checkbox>\n    </fdp-form-field>\n\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid" role="alert" aria-atomic="true">\n            Value is invalid\n        </span>\n    </ng-template>\n\n    <ng-template #graduation let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Graduation is mandatory\n        </span>\n    </ng-template>\n\n    <ng-template #engineering let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Engineering is mandatory\n        </span>\n    </ng-template>\n\n    <ng-template #work let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Minimum 5 years of work experience required\n        </span>\n\n    </ng-template>\n</fdp-form-group>\n\n<h3>Checkbox group created from list of SelectItem Objects and value is required</h3>\n<fdp-form-group [formGroup]="form3">\n    <fdp-form-field #fl3 id="language" label="Languages Known:" [required]="true" rank="1">\n        <fdp-checkbox-group [isInline]="true" name="language" [list]="languages" ariaLabel="Languages Known"\n            [formControl]="fl3.formControl"></fdp-checkbox-group>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <ng-container *ngIf="errors.required">\n            <span role="alert" aria-atomic="true">Value is required.</span>\n        </ng-container>\n    </ng-template>\n</fdp-form-group>\n<span style="margin-left: 2rem;">Languages Known: {{ form3.controls.language?.value }}</span>\n',I="import { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { SelectItem } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-checkbox-group-examples',\n    templateUrl: './platform-checkbox-group-example.component.html'\n})\nexport class PlatformCheckboxGroupExampleComponent {\n    fruits: string[] = ['Apple', 'Banana', 'Grapes'];\n    favorites = { fruitsEx: ['banana'] };\n    favorites1 = { fruits1: ['Apple'] };\n    languages = [\n        new LanguageKnown('Java', 'java', false),\n        new LanguageKnown('Javascript', 'javascript', true),\n        new LanguageKnown('Python', 'python', false),\n        new LanguageKnown('GoLang', 'go', true)\n    ];\n\n    validators = [Validators.requiredTrue];\n    form1 = new FormGroup({});\n    form2 = new FormGroup({});\n    form3 = new FormGroup({});\n}\n\nclass LanguageKnown implements SelectItem {\n    constructor(public label: string, public value: string, public disabled: boolean) {}\n}\n",G=r("fXoL"),L=r("ddaM"),R=r("kt86"),S=r("X1JU"),P=r("3Pt+"),j=r("I7mx"),M=r("npbV"),F=r("OJIC"),K=((f=function o(){e(this,o),this.seasons=["Winter","Spring","Summer","Autumn"],this.dishes=["Italian","Chinese","Indian","Japanese"],this.sports=["cycling","running","visit gym","swimming"],this.phonesList=["Samsung","Apple","OnePlus","Redmi"],this.selectedPhones={phones:["Samsung","OnePlus"]},this.form1=new P.i({}),this.form2=new P.i({}),this.form3=new P.i({sports:new P.f(["cycling","running"])}),this.countrySeason="",this.selectedSports=["running","swimming"],this.selectedDishes=["Chinese","Italian"]}).\u0275fac=function(e){return new(e||f)},f.\u0275cmp=G.Kb({type:f,selectors:[["fdp-platform-checkbox-group-list"]],decls:74,vars:30,consts:[[3,"formGroup"],["id","seasons","label","My favorite Seasons: ","rank","1"],["fl1",""],["name","fav-seasons","ariaLabel","My favorite Seasons",3,"list","isInline","formControl"],[2,"margin-left","2rem"],[3,"formGroup","object"],["id","phones","label","Phones interested in:","rank","1"],["fl2",""],["name","brands","ariaLabel","Phones interested",3,"list","formControl"],["id","sports1","label","Sports I Play:","rank","1"],["fl4",""],["name","sports","ariaLabel","Sports I Play","formControlName","sports",3,"list"],["id","sportsDisabled","label","Disabled checkbox Group: ","rank","1",3,"disabled"],["fl3",""],["name","sports","ariaLabel","Disabled checkbox",3,"list","formControl"],["id","weather","label","My favorite Weather:","rank","1"],["name","seasons-fav","ariaLabel","My favorite Weather",3,"list","isInline","ngModel","ngModelChange"],["id","sports","label","Sports interested in:","rank","1"],["name","sports","ariaLabel","Sports interested in",3,"list","ngModel","ngModelChange"],["id","sportsDisabled","label","Disabled checkbox Group:","rank","1"],["name","sports","ariaLabel","Disabled checkbox",3,"list","disabled"],["name","fav-dishes","ariaLabel","My favorite dishes",3,"list","isInline","checked","checkedChange"]],template:function(e,o){if(1&e&&(G.Wb(0,"h3"),G.Vc(1,"Reactive Form Examples:"),G.Vb(),G.Wb(2,"h3"),G.Vc(3,"Checkboxes created from given list of values"),G.Vb(),G.Wb(4,"p"),G.Vc(5,"Inline checkboxes"),G.Vb(),G.Wb(6,"fdp-form-group",0),G.Wb(7,"fdp-form-field",1,2),G.Rb(9,"fdp-checkbox-group",3),G.Vb(),G.Vb(),G.Wb(10,"span",4),G.Vc(11),G.Vb(),G.Rb(12,"br"),G.Rb(13,"br"),G.Wb(14,"p"),G.Vc(15,"Pre-selection based on value passed"),G.Vb(),G.Wb(16,"fdp-form-group",5),G.Wb(17,"fdp-form-field",6,7),G.Rb(19,"fdp-checkbox-group",8),G.Vb(),G.Vb(),G.Wb(20,"span",4),G.Vc(21),G.Vb(),G.Rb(22,"br"),G.Rb(23,"br"),G.Wb(24,"p"),G.Vc(25,"Pre-selection based on value passed from formGroup"),G.Vb(),G.Wb(26,"fdp-form-group",0),G.Wb(27,"fdp-form-field",9,10),G.Rb(29,"fdp-checkbox-group",11),G.Vb(),G.Vb(),G.Wb(30,"span",4),G.Vc(31),G.Vb(),G.Rb(32,"br"),G.Rb(33,"br"),G.Wb(34,"p"),G.Vc(35,"Disabled checkbox group"),G.Vb(),G.Wb(36,"fdp-form-group",0),G.Wb(37,"fdp-form-field",12,13),G.Rb(39,"fdp-checkbox-group",14),G.Vb(),G.Vb(),G.Rb(40,"br"),G.Rb(41,"hr"),G.Wb(42,"h3"),G.Vc(43,"Template Driven Form"),G.Vb(),G.Wb(44,"h3"),G.Vc(45,"Checkboxes created from given list of values"),G.Vb(),G.Wb(46,"p"),G.Vc(47,"Inline checkboxes"),G.Vb(),G.Wb(48,"fdp-form-group"),G.Wb(49,"fdp-form-field",15),G.Wb(50,"fdp-checkbox-group",16),G.jc("ngModelChange",function(e){return o.countrySeason=e}),G.Vb(),G.Vb(),G.Vb(),G.Wb(51,"span",4),G.Vc(52),G.Vb(),G.Rb(53,"br"),G.Rb(54,"br"),G.Wb(55,"p"),G.Vc(56,"Pre-selection based on value passed"),G.Vb(),G.Wb(57,"fdp-form-group"),G.Wb(58,"fdp-form-field",17),G.Wb(59,"fdp-checkbox-group",18),G.jc("ngModelChange",function(e){return o.selectedSports=e}),G.Vb(),G.Vb(),G.Vb(),G.Wb(60,"span",4),G.Vc(61),G.Vb(),G.Rb(62,"br"),G.Rb(63,"br"),G.Wb(64,"p"),G.Vc(65,"Disabled checkbox group"),G.Vb(),G.Wb(66,"fdp-form-group"),G.Wb(67,"fdp-form-field",19),G.Rb(68,"fdp-checkbox-group",20),G.Vb(),G.Vb(),G.Wb(69,"h3"),G.Vc(70,"Checkbox group outside form"),G.Vb(),G.Wb(71,"fdp-checkbox-group",21),G.jc("checkedChange",function(e){return o.selectedDishes=e}),G.Vb(),G.Wb(72,"span",4),G.Vc(73),G.Vb()),2&e){var n=G.Hc(8),r=G.Hc(18),a=G.Hc(38);G.Db(6),G.vc("formGroup",o.form1),G.Db(3),G.vc("list",o.seasons)("isInline",!0)("formControl",n.formControl),G.Db(2),G.Xc("Seasons: ",null==o.form1.controls.seasons?null:o.form1.controls.seasons.value,""),G.Db(5),G.vc("formGroup",o.form2)("object",o.selectedPhones),G.Db(3),G.vc("list",o.phonesList)("formControl",r.formControl),G.Db(2),G.Xc("Available brands: ",null==o.form2.controls.phones?null:o.form2.controls.phones.value,""),G.Db(5),G.vc("formGroup",o.form3),G.Db(3),G.vc("list",o.sports),G.Db(2),G.Xc("Sports: ",null==o.form3.controls.sports1?null:o.form3.controls.sports1.value,""),G.Db(5),G.vc("formGroup",o.form3),G.Db(1),G.vc("disabled",!0),G.Db(2),G.vc("list",o.sports)("formControl",a.formControl),G.Db(11),G.vc("list",o.seasons)("isInline",!0)("ngModel",o.countrySeason),G.Db(2),G.Xc("Weather: ",o.countrySeason,""),G.Db(7),G.vc("list",o.sports)("ngModel",o.selectedSports),G.Db(2),G.Xc("Sports: ",o.selectedSports,""),G.Db(7),G.vc("list",o.sports)("disabled",!0),G.Db(3),G.vc("list",o.dishes)("isInline",!0)("checked",o.selectedDishes),G.Db(2),G.Xc("Selected dishes: ",o.selectedDishes,"")}},directives:[j.a,P.r,P.j,M.a,F.a,P.q,P.g,P.h,P.t],encapsulation:2}),f),q=r("5HkS"),A=r("Hxo2"),T=((d=function o(){e(this,o),this.countryCurrency=[new E("Australia","AUD"),new E("India","INR"),new E("USA","USD")],this.currency=["AUD","USD"],this.languages=[new U("Java","java",!1),new U("Javascript","javascript",!0),new U("Python","python",!1),new U("GoLang","go",!0)],this.countryVisited=[new E("Australia","Australia"),new E("India","India"),new E("USA","USA")],this.visited={visited:["India","USA"]},this.form4=new P.i({}),this.form5=new P.i({}),this.form6=new P.i({currencies:new P.f(["INR"])}),this.form7=new P.i({}),this.invoiceItems=[new H("1","coffee","Coffee",100,12),new H("2","pen","Pen",200,5),new H("3","chair","Office chair",50,5530)],this.languagesKnown="",this.currencies=["INR","USD"],this.itemsData=["pen"],this.selectedDishes=["java","javascript"],this.selectedInvoices=["pen"]}).\u0275fac=function(e){return new(e||d)},d.\u0275cmp=G.Kb({type:d,selectors:[["fdp-platform-checkbox-group-list-object"]],decls:97,vars:41,consts:[[3,"formGroup"],["id","languages","label","Programming Languages Known: ","rank","1"],["fl1",""],["name","languages","contentDensity","compact","ariaLabel","Programming Languages Known",3,"list","isInline","formControl"],[2,"margin-left","2rem"],[3,"formGroup","object"],["id","visited","label","Country visited: ","rank","1"],["fl2",""],["name","visited","ariaLabel","Country visited",3,"list","formControl"],["id","currencies","label","Currencies Exchanging: ","rank","1"],["fl4",""],["name","currency","ariaLabel","Currencies Exchanging","formControlName","currencies",3,"list"],["id","items","label","Purchased Items: ","rank","1"],["fl5",""],["name","invoices","lookupKey","item","displayKey","itemType","ariaLabel","Purchased Items",3,"list","formControl"],["id","disabled currencies","label","Disabled checkbox Group: ","rank","1",3,"disabled"],["fl3",""],["name","currencies","ariaLabel","Currencies",3,"list","formControl"],["id","languages known","label","Programming Languages Known: ","rank","1"],["name","languages","ariaLabel","Programming Languages Known",3,"list","isInline","ngModel","ngModelChange"],["id","currency","label","Currencies in country: ","rank","1"],["name","currencies","contentDensity","compact","ariaLabel","Currencies in country",3,"list","ngModel","ngModelChange"],["id","items1","label","Purchased Items: ","rank","1"],["name","items","lookupKey","item","displayKey","itemType","ariaLabel","Purchased Items",3,"list","ngModel","ngModelChange"],["id","disabled currency","label","Disabled checkbox Group: ","rank","1"],["name","currencies","ariaLabel","Disabled checkbox",3,"list","disabled"],["name","languages","ariaLabel","My known languages",3,"list","isInline","checked","checkedChange"],["name","invoices","lookupKey","item","displayKey","itemType","ariaLabel","Purchased Items",3,"list","checked","checkedChange"]],template:function(e,o){if(1&e&&(G.Wb(0,"h3"),G.Vc(1,"Reactive Form Examples:"),G.Vb(),G.Wb(2,"h3"),G.Vc(3,"Checkboxes created from from list of selectItem Objects"),G.Vb(),G.Wb(4,"p"),G.Vc(5,"Inline checkboxes"),G.Vb(),G.Wb(6,"fdp-form-group",0),G.Wb(7,"fdp-form-field",1,2),G.Rb(9,"fdp-checkbox-group",3),G.Vb(),G.Vb(),G.Wb(10,"span",4),G.Vc(11),G.Vb(),G.Rb(12,"br"),G.Rb(13,"br"),G.Wb(14,"p"),G.Vc(15,"Pre-selection based on control value passed"),G.Vb(),G.Wb(16,"fdp-form-group",5),G.Wb(17,"fdp-form-field",6,7),G.Rb(19,"fdp-checkbox-group",8),G.Vb(),G.Vb(),G.Wb(20,"span",4),G.Vc(21),G.Vb(),G.Rb(22,"br"),G.Rb(23,"br"),G.Wb(24,"p"),G.Vc(25,"Pre-selection based on control value passed from formGroup"),G.Vb(),G.Wb(26,"fdp-form-group",5),G.Wb(27,"fdp-form-field",9,10),G.Rb(29,"fdp-checkbox-group",11),G.Vb(),G.Vb(),G.Wb(30,"span",4),G.Vc(31),G.Vb(),G.Rb(32,"br"),G.Rb(33,"br"),G.Wb(34,"p"),G.Vc(35,"Lookup key and Display key usages."),G.Vb(),G.Wb(36,"fdp-form-group",0),G.Wb(37,"fdp-form-field",12,13),G.Rb(39,"fdp-checkbox-group",14),G.Vb(),G.Vb(),G.Wb(40,"span",4),G.Vc(41),G.Vb(),G.Rb(42,"br"),G.Rb(43,"br"),G.Wb(44,"p"),G.Vc(45,"Disabled checkbox group"),G.Vb(),G.Wb(46,"fdp-form-group",0),G.Wb(47,"fdp-form-field",15,16),G.Rb(49,"fdp-checkbox-group",17),G.Vb(),G.Vb(),G.Rb(50,"hr"),G.Wb(51,"h3"),G.Vc(52,"Template Driven Form"),G.Vb(),G.Wb(53,"h3"),G.Vc(54,"Checkboxes created from from list of selectItem Objects"),G.Vb(),G.Wb(55,"p"),G.Vc(56,"Inline checkboxes"),G.Vb(),G.Wb(57,"fdp-form-group"),G.Wb(58,"fdp-form-field",18),G.Wb(59,"fdp-checkbox-group",19),G.jc("ngModelChange",function(e){return o.languagesKnown=e}),G.Vb(),G.Vb(),G.Vb(),G.Wb(60,"span",4),G.Vc(61),G.Vb(),G.Rb(62,"br"),G.Rb(63,"br"),G.Wb(64,"p"),G.Vc(65,"Pre-selection based on value passed"),G.Vb(),G.Wb(66,"fdp-form-group"),G.Wb(67,"fdp-form-field",20),G.Wb(68,"fdp-checkbox-group",21),G.jc("ngModelChange",function(e){return o.currencies=e}),G.Vb(),G.Vb(),G.Vb(),G.Wb(69,"span",4),G.Vc(70),G.Vb(),G.Rb(71,"br"),G.Rb(72,"br"),G.Wb(73,"p"),G.Vc(74,"Lookup key and Display key usages."),G.Vb(),G.Wb(75,"fdp-form-group"),G.Wb(76,"fdp-form-field",22),G.Wb(77,"fdp-checkbox-group",23),G.jc("ngModelChange",function(e){return o.itemsData=e}),G.Vb(),G.Vb(),G.Vb(),G.Wb(78,"span",4),G.Vc(79),G.Vb(),G.Rb(80,"br"),G.Rb(81,"br"),G.Wb(82,"p"),G.Vc(83,"Disabled checkbox group"),G.Vb(),G.Wb(84,"fdp-form-group"),G.Wb(85,"fdp-form-field",24),G.Rb(86,"fdp-checkbox-group",25),G.Vb(),G.Vb(),G.Wb(87,"h3"),G.Vc(88,"Checkbox group outside form"),G.Vb(),G.Wb(89,"fdp-checkbox-group",26),G.jc("checkedChange",function(e){return o.selectedDishes=e}),G.Vb(),G.Wb(90,"span",4),G.Vc(91),G.Vb(),G.Wb(92,"h3"),G.Vc(93,"Checkbox group outside form using displayKey and lookupKey:"),G.Vb(),G.Wb(94,"fdp-checkbox-group",27),G.jc("checkedChange",function(e){return o.selectedInvoices=e}),G.Vb(),G.Wb(95,"span",4),G.Vc(96),G.Vb()),2&e){var n=G.Hc(8),r=G.Hc(18),a=G.Hc(38),l=G.Hc(48);G.Db(6),G.vc("formGroup",o.form4),G.Db(3),G.vc("list",o.languages)("isInline",!0)("formControl",n.formControl),G.Db(2),G.Xc("Languages: ",null==o.form4.controls.languages?null:o.form4.controls.languages.value,""),G.Db(5),G.vc("formGroup",o.form5)("object",o.visited),G.Db(3),G.vc("list",o.countryVisited)("formControl",r.formControl),G.Db(2),G.Xc("Visited Country: ",null==o.form5.controls.visited?null:o.form5.controls.visited.value,""),G.Db(5),G.vc("formGroup",o.form6)("object",o.visited),G.Db(3),G.vc("list",o.countryCurrency),G.Db(2),G.Xc("Currencies: ",null==o.form6.controls.currencies?null:o.form6.controls.currencies.value,""),G.Db(5),G.vc("formGroup",o.form7),G.Db(3),G.vc("list",o.invoiceItems)("formControl",a.formControl),G.Db(2),G.Xc("Purchased Items: ",null==o.form7.controls.items?null:o.form7.controls.items.value,""),G.Db(5),G.vc("formGroup",o.form6),G.Db(1),G.vc("disabled",!0),G.Db(2),G.vc("list",o.countryCurrency)("formControl",l.formControl),G.Db(10),G.vc("list",o.languages)("isInline",!0)("ngModel",o.languagesKnown),G.Db(2),G.Xc("Languages: ",o.languagesKnown,""),G.Db(7),G.vc("list",o.countryCurrency)("ngModel",o.currencies),G.Db(2),G.Xc("Currencies: ",o.currencies,""),G.Db(7),G.vc("list",o.invoiceItems)("ngModel",o.itemsData),G.Db(2),G.Xc("Purchased Items: ",o.itemsData,""),G.Db(7),G.vc("list",o.countryCurrency)("disabled",!0),G.Db(3),G.vc("list",o.languages)("isInline",!0)("checked",o.selectedDishes),G.Db(2),G.Xc("Selected dishes: ",o.selectedDishes,""),G.Db(3),G.vc("list",o.invoiceItems)("checked",o.selectedInvoices),G.Db(2),G.Xc("Selected invoices: ",o.selectedInvoices,"")}},directives:[j.a,P.r,P.j,M.a,F.a,P.q,P.g,P.h,P.t],encapsulation:2}),d),E=function o(n,r){e(this,o),this.label=n,this.value=r},U=function o(n,r,a){e(this,o),this.label=n,this.value=r,this.disabled=a},H=function o(n,r,a,l,c){e(this,o),this.itemId=n,this.item=r,this.itemType=a,this.quantity=l,this.rate=c},X=r("bcZn"),N=((u=function o(){e(this,o),this.hobbies={hobbies:["coding","gardening"]},this.form1=new P.i({}),this.form2=new P.i({}),this.form3=new P.i({visited:new P.f(["Italy","France"])}),this.subjects="",this.reptiles=["Lizards","Snakes"]}).\u0275fac=function(e){return new(e||u)},u.\u0275cmp=G.Kb({type:u,selectors:[["fdp-platform-checkbox-group-content-checkbox"]],decls:86,vars:21,consts:[[3,"formGroup"],["id","fruits","label","My favorite fruits:","rank","1"],["fl1",""],["name","fruits","ariaLabel","My favorite fruits",3,"formControl"],["value","apple","label","Apple",3,"disabled"],["value","banana","label","Banana"],["value","guava","label","Guava",3,"disabled"],["value","papaya","label","Papaya"],[2,"margin-left","2rem"],[3,"formGroup","object"],["id","hobbies","label","My Hobbies:","rank","1"],["fl2",""],["name","hobby","ariaLabel","My Hobbies",3,"formControl"],["value","cooking","label","Cooking"],["value","painting","label","Painting"],["value","coding","label","Coding"],["value","gardening","label","Gardening"],["id","visited1","label","visited countries","rank","1"],["fl4",""],["name","countries","ariaLabel","visited countries","formControlName","visited"],["value","Italy","label","Italy"],["value","France","label","France"],["value","Switzerland","label","Switzerland"],["value","Austria","label","Austria"],["id","visited countries","label","Disabled checkbox Group: ","rank","1",3,"disabled"],["fl3",""],["name","countries","ariaLabel","Disabled checkbox Group",3,"formControl"],["id","subjects","label","Subjects selected:","rank","1"],["name","semester1","ariaLabel","Subjects selected",3,"ngModel","ngModelChange"],["value","Math","label","Math",3,"disabled"],["value","Chemistry","label","Chemistry"],["value","Physics","label","Physics"],["value","Biology","label","Biology",3,"disabled"],["id","reptiles","label","All reptiles:","rank","1"],["name","reptiles","ariaLabel","All reptiles",3,"ngModel","ngModelChange"],["value","Snakes","label","Snakes"],["value","Crocodiles","label","Crocodiles"],["value","Lizards","label","Lizards"],["value","Elephants","label","Elephants"],["id","countries","label","Disabled checkbox Group: ","rank","1"],["name","visited countries","ariaLabel","Disabled checkbox Group",3,"disabled"]],template:function(e,o){if(1&e&&(G.Wb(0,"h3"),G.Vc(1,"Reactive Form Examples:"),G.Vb(),G.Wb(2,"h3"),G.Vc(3,"Checkbox group created from projected checkboxes"),G.Vb(),G.Wb(4,"fdp-form-group",0),G.Wb(5,"fdp-form-field",1,2),G.Wb(7,"fdp-checkbox-group",3),G.Rb(8,"fdp-checkbox",4),G.Rb(9,"fdp-checkbox",5),G.Rb(10,"fdp-checkbox",6),G.Rb(11,"fdp-checkbox",7),G.Vb(),G.Vb(),G.Vb(),G.Wb(12,"span",8),G.Vc(13),G.Vb(),G.Wb(14,"p"),G.Vc(15,"Pre-selection based on value passed"),G.Vb(),G.Wb(16,"fdp-form-group",9),G.Wb(17,"fdp-form-field",10,11),G.Wb(19,"fdp-checkbox-group",12),G.Rb(20,"fdp-checkbox",13),G.Rb(21,"fdp-checkbox",14),G.Rb(22,"fdp-checkbox",15),G.Rb(23,"fdp-checkbox",16),G.Vb(),G.Vb(),G.Vb(),G.Wb(24,"span",8),G.Vc(25),G.Vb(),G.Rb(26,"br"),G.Rb(27,"br"),G.Wb(28,"p"),G.Vc(29,"Pre-selection based on value passed from FormGroup"),G.Vb(),G.Wb(30,"fdp-form-group",0),G.Wb(31,"fdp-form-field",17,18),G.Wb(33,"fdp-checkbox-group",19),G.Rb(34,"fdp-checkbox",20),G.Rb(35,"fdp-checkbox",21),G.Rb(36,"fdp-checkbox",22),G.Rb(37,"fdp-checkbox",23),G.Vb(),G.Vb(),G.Vb(),G.Wb(38,"span",8),G.Vc(39),G.Vb(),G.Rb(40,"br"),G.Rb(41,"br"),G.Wb(42,"p"),G.Vc(43,"Disabled checkbox group"),G.Vb(),G.Wb(44,"fdp-form-group",0),G.Wb(45,"fdp-form-field",24,25),G.Wb(47,"fdp-checkbox-group",26),G.Rb(48,"fdp-checkbox",20),G.Rb(49,"fdp-checkbox",21),G.Rb(50,"fdp-checkbox",22),G.Rb(51,"fdp-checkbox",23),G.Vb(),G.Vb(),G.Vb(),G.Rb(52,"hr"),G.Wb(53,"h3"),G.Vc(54,"Template Driven Form Examples:"),G.Vb(),G.Wb(55,"h3"),G.Vc(56,"Checkbox group created from projected checkboxes"),G.Vb(),G.Wb(57,"fdp-form-group"),G.Wb(58,"fdp-form-field",27),G.Wb(59,"fdp-checkbox-group",28),G.jc("ngModelChange",function(e){return o.subjects=e}),G.Rb(60,"fdp-checkbox",29),G.Rb(61,"fdp-checkbox",30),G.Rb(62,"fdp-checkbox",31),G.Rb(63,"fdp-checkbox",32),G.Vb(),G.Vb(),G.Vb(),G.Wb(64,"span",8),G.Vc(65),G.Vb(),G.Wb(66,"p"),G.Vc(67,"Pre-selection based on value passed"),G.Vb(),G.Wb(68,"fdp-form-group"),G.Wb(69,"fdp-form-field",33),G.Wb(70,"fdp-checkbox-group",34),G.jc("ngModelChange",function(e){return o.reptiles=e}),G.Rb(71,"fdp-checkbox",35),G.Rb(72,"fdp-checkbox",36),G.Rb(73,"fdp-checkbox",37),G.Rb(74,"fdp-checkbox",38),G.Vb(),G.Vb(),G.Vb(),G.Wb(75,"span",8),G.Vc(76),G.Vb(),G.Wb(77,"p"),G.Vc(78,"Disabled checkbox group"),G.Vb(),G.Wb(79,"fdp-form-group"),G.Wb(80,"fdp-form-field",39),G.Wb(81,"fdp-checkbox-group",40),G.Rb(82,"fdp-checkbox",20),G.Rb(83,"fdp-checkbox",21),G.Rb(84,"fdp-checkbox",22),G.Rb(85,"fdp-checkbox",23),G.Vb(),G.Vb(),G.Vb()),2&e){var n=G.Hc(6),r=G.Hc(18),a=G.Hc(46);G.Db(4),G.vc("formGroup",o.form1),G.Db(3),G.vc("formControl",n.formControl),G.Db(1),G.vc("disabled",!0),G.Db(2),G.vc("disabled",!0),G.Db(3),G.Xc("Favorites: ",null==o.form1.controls.fruits?null:o.form1.controls.fruits.value,""),G.Db(3),G.vc("formGroup",o.form2)("object",o.hobbies),G.Db(3),G.vc("formControl",r.formControl),G.Db(6),G.Xc("Hobbies: ",null==o.form2.controls.hobbies?null:o.form2.controls.hobbies.value,""),G.Db(5),G.vc("formGroup",o.form3),G.Db(9),G.Xc("Visited Countries: ",null==o.form3.controls.visited1?null:o.form3.controls.visited1.value,""),G.Db(5),G.vc("formGroup",o.form3),G.Db(1),G.vc("disabled",!0),G.Db(2),G.vc("formControl",a.formControl),G.Db(12),G.vc("ngModel",o.subjects),G.Db(1),G.vc("disabled",!0),G.Db(3),G.vc("disabled",!0),G.Db(2),G.Xc("Selected Subjects: ",o.subjects,""),G.Db(5),G.vc("ngModel",o.reptiles),G.Db(6),G.Xc("All Reptiles: ",o.reptiles,""),G.Db(5),G.vc("disabled",!0)}},directives:[j.a,P.r,P.j,M.a,F.a,P.q,P.g,X.a,P.h,P.t],encapsulation:2}),u),O=r("ofXK");function B(e,o){1&e&&(G.Ub(0),G.Wb(1,"span",31),G.Vc(2,"Value is required."),G.Vb(),G.Tb())}function z(e,o){1&e&&G.Tc(0,B,3,0,"ng-container",30),2&e&&G.vc("ngIf",o.$implicit.required)}function J(e,o){1&e&&(G.Ub(0),G.Wb(1,"span",31),G.Vc(2,"Value is required."),G.Vb(),G.Tb())}function $(e,o){1&e&&G.Tc(0,J,3,0,"ng-container",30),2&e&&G.vc("ngIf",o.$implicit.required)}function Q(e,o){1&e&&(G.Wb(0,"span",31),G.Vc(1," Value is required "),G.Vb())}function Z(e,o){1&e&&(G.Wb(0,"span",31),G.Vc(1," Value is invalid "),G.Vb())}function Y(e,o){if(1&e&&(G.Tc(0,Q,2,0,"span",32),G.Tc(1,Z,2,0,"span",32)),2&e){var n=o.$implicit;G.vc("ngIf",n.required),G.Db(1),G.vc("ngIf",n.invalid)}}function _(e,o){1&e&&(G.Wb(0,"span",31),G.Vc(1," Graduation is mandatory "),G.Vb())}function ee(e,o){1&e&&G.Tc(0,_,2,0,"span",32),2&e&&G.vc("ngIf",o.$implicit.required)}function oe(e,o){1&e&&(G.Wb(0,"span",31),G.Vc(1," Engineering is mandatory "),G.Vb())}function ne(e,o){1&e&&G.Tc(0,oe,2,0,"span",32),2&e&&G.vc("ngIf",o.$implicit.required)}function re(e,o){1&e&&(G.Wb(0,"span",31),G.Vc(1," Minimum 5 years of work experience required "),G.Vb())}function ae(e,o){1&e&&G.Tc(0,re,2,0,"span",32),2&e&&G.vc("ngIf",o.$implicit.required)}function le(e,o){1&e&&(G.Ub(0),G.Wb(1,"span",31),G.Vc(2,"Value is required."),G.Vb(),G.Tb())}function ce(e,o){1&e&&G.Tc(0,le,3,0,"ng-container",30),2&e&&G.vc("ngIf",o.$implicit.required)}var ie,te,se,be,pe=((ie=function o(){e(this,o),this.fruits=["Apple","Banana","Grapes"],this.favorites={fruitsEx:["banana"]},this.favorites1={fruits1:["Apple"]},this.languages=[new fe("Java","java",!1),new fe("Javascript","javascript",!0),new fe("Python","python",!1),new fe("GoLang","go",!0)],this.validators=[P.A.requiredTrue],this.form1=new P.i({}),this.form2=new P.i({}),this.form3=new P.i({})}).\u0275fac=function(e){return new(e||ie)},ie.\u0275cmp=G.Kb({type:ie,selectors:[["fdp-platform-checkbox-group-examples"]],decls:59,vars:34,consts:[[3,"formGroup","object"],["id","fruitsEx","label","My favorite fruits:","rank","1",3,"required"],["fl1",""],["name","fruits","ariaLabel","My favorite fruits",3,"isInline","formControl"],["value","apple","label","Apple"],["value","banana","label","Banana"],["value","grapes","label","Grapes"],["i18n",""],[2,"margin-left","2rem"],[3,"formGroup"],["id","fruits1","label","My favorite fruits:","rank","1",3,"required"],["fl2",""],["name","fruits","ariaLabel","My favorite fruits",3,"isInline","list","formControl"],["hintPlacement","left",3,"formGroup"],["fg",""],["id","education","hintPlacement","left",3,"validators","rank","i18Strings"],["ffr1",""],["name","education","title","minimum education level",3,"isBinary","formControl"],["id","engineering","hintPlacement","left",3,"validators","rank","i18Strings"],["ffr2",""],["name","engineering","title","have engineering degree",3,"isBinary","formControl"],["id","work","hintPlacement","left",3,"validators","rank","i18Strings"],["ffr3",""],["name","work","title","Work experience",3,"isBinary","formControl"],["graduation",""],["engineering",""],["work",""],["id","language","label","Languages Known:","rank","1",3,"required"],["fl3",""],["name","language","ariaLabel","Languages Known",3,"isInline","list","formControl"],[4,"ngIf"],["role","alert","aria-atomic","true"],["role","alert","aria-atomic","true",4,"ngIf"]],template:function(e,o){if(1&e&&(G.Wb(0,"h3"),G.Vc(1,"Checkbox group created from passed checkboxes and value is required"),G.Vb(),G.Wb(2,"fdp-form-group",0),G.Wb(3,"fdp-form-field",1,2),G.Wb(5,"fdp-checkbox-group",3),G.Rb(6,"fdp-checkbox",4),G.Rb(7,"fdp-checkbox",5),G.Rb(8,"fdp-checkbox",6),G.Vb(),G.Vb(),G.Tc(9,z,1,1,"ng-template",null,7,G.Uc),G.Vb(),G.Wb(11,"span",8),G.Vc(12),G.Vb(),G.Wb(13,"h3"),G.Vc(14,"Checkbox group created from list of values and value is required"),G.Vb(),G.Wb(15,"fdp-form-group",9),G.Wb(16,"fdp-form-field",10,11),G.Rb(18,"fdp-checkbox-group",12),G.Vb(),G.Tc(19,$,1,1,"ng-template",null,7,G.Uc),G.Vb(),G.Wb(21,"span",8),G.Vc(22),G.Vb(),G.Wb(23,"h3"),G.Vc(24,"Checkboxes with different context"),G.Vb(),G.Wb(25,"div"),G.Vc(26,"Qualification form"),G.Vb(),G.Wb(27,"fdp-form-group",13,14),G.Wb(29,"fdp-form-field",15,16),G.Wb(31,"fdp-checkbox",17),G.Vc(32,"Graduated"),G.Vb(),G.Vb(),G.Wb(33,"fdp-form-field",18,19),G.Wb(35,"fdp-checkbox",20),G.Vc(36," Engineering completed "),G.Vb(),G.Vb(),G.Wb(37,"fdp-form-field",21,22),G.Wb(39,"fdp-checkbox",23),G.Vc(40," 5 year of work experience "),G.Vb(),G.Vb(),G.Tc(41,Y,2,2,"ng-template",null,7,G.Uc),G.Tc(43,ee,1,1,"ng-template",null,24,G.Uc),G.Tc(45,ne,1,1,"ng-template",null,25,G.Uc),G.Tc(47,ae,1,1,"ng-template",null,26,G.Uc),G.Vb(),G.Wb(49,"h3"),G.Vc(50,"Checkbox group created from list of SelectItem Objects and value is required"),G.Vb(),G.Wb(51,"fdp-form-group",9),G.Wb(52,"fdp-form-field",27,28),G.Rb(54,"fdp-checkbox-group",29),G.Vb(),G.Tc(55,ce,1,1,"ng-template",null,7,G.Uc),G.Vb(),G.Wb(57,"span",8),G.Vc(58),G.Vb()),2&e){var n=G.Hc(4),r=G.Hc(17),a=G.Hc(30),l=G.Hc(34),c=G.Hc(38),i=G.Hc(44),t=G.Hc(46),s=G.Hc(48),b=G.Hc(53);G.Db(2),G.vc("formGroup",o.form1)("object",o.favorites),G.Db(1),G.vc("required",!0),G.Db(2),G.vc("isInline",!0)("formControl",n.formControl),G.Db(7),G.Xc("Favorites: ",null==o.form1.controls.fruitsEx?null:o.form1.controls.fruitsEx.value,""),G.Db(3),G.vc("formGroup",o.form2),G.Db(1),G.vc("required",!0),G.Db(2),G.vc("isInline",!1)("list",o.fruits)("formControl",r.formControl),G.Db(4),G.Xc("Favorites: ",null==o.form2.controls.fruits1?null:o.form2.controls.fruits1.value,""),G.Db(5),G.vc("formGroup",o.form1),G.Db(2),G.vc("validators",o.validators)("rank",1)("i18Strings",i),G.Db(2),G.vc("isBinary",!0)("formControl",a.formControl),G.Db(2),G.vc("validators",o.validators)("rank",2)("i18Strings",t),G.Db(2),G.vc("isBinary",!0)("formControl",l.formControl),G.Db(2),G.vc("validators",o.validators)("rank",3)("i18Strings",s),G.Db(2),G.vc("isBinary",!0)("formControl",c.formControl),G.Db(12),G.vc("formGroup",o.form3),G.Db(1),G.vc("required",!0),G.Db(2),G.vc("isInline",!0)("list",o.languages)("formControl",b.formControl),G.Db(4),G.Xc("Languages Known: ",null==o.form3.controls.language?null:o.form3.controls.language.value,"")}},directives:[j.a,P.r,P.j,M.a,F.a,P.q,P.g,X.a,O.o],encapsulation:2}),ie),fe=function o(n,r,a){e(this,o),this.label=n,this.value=r,this.disabled=a},de=((te=function o(){e(this,o),this.listCheckboxGroup=[{language:"html",code:a,fileName:"platform-checkbox-group-list"},{language:"typescript",code:l,fileName:"platform-checkbox-group-list",component:"PlatformCheckboxGroupListComponent"}],this.listObjectCheckboxGroup=[{language:"html",code:c,fileName:"platform-checkbox-group-list-object"},{language:"typescript",code:i,fileName:"platform-checkbox-group-list-object",component:"PlatformCheckboxGroupListObjectComponent"}],this.contentCheckboxGroup=[{language:"html",code:t,fileName:"platform-checkbox-group-content-checkbox"},{language:"typescript",code:s,fileName:"platform-checkbox-group-content-checkbox",component:"PlatformCheckboxGroupContentCheckboxComponent"}],this.checkboxGroupExample=[{language:"html",code:b,fileName:"platform-checkbox-group-example"},{language:"typescript",code:p,fileName:"platform-checkbox-group-examples",component:"PlatformCheckboxGroupExampleComponent"}]}).\u0275fac=function(e){return new(e||te)},te.\u0275cmp=G.Kb({type:te,selectors:[["app-checkbox-group"]],decls:31,vars:4,consts:[["id","list","componentName","checkbox-group"],[3,"exampleFiles"],["id","object","componentName","checkbox-group"],["id","projection","componentName","checkbox-group"],["id","error","componentName","checkbox-group"]],template:function(e,o){1&e&&(G.Wb(0,"fd-docs-section-title",0),G.Vc(1," Checkbox Group created with List of Values.\n"),G.Vb(),G.Wb(2,"description"),G.Vc(3,"Checkbox Group Created From List of String Values."),G.Vb(),G.Wb(4,"component-example"),G.Rb(5,"fdp-platform-checkbox-group-list"),G.Vb(),G.Rb(6,"code-example",1),G.Rb(7,"separator"),G.Wb(8,"fd-docs-section-title",2),G.Vc(9," Checkbox Group created From List of Objects.\n"),G.Vb(),G.Wb(10,"description"),G.Vc(11," Checkbox Group Created From List of Objects. Here it is possible to create some checkboxes as disabled and others enabled.\n"),G.Vb(),G.Wb(12,"component-example"),G.Rb(13,"fdp-platform-checkbox-group-list-object"),G.Vb(),G.Rb(14,"code-example",1),G.Rb(15,"separator"),G.Wb(16,"fd-docs-section-title",3),G.Vc(17," Checkbox Group created From content projected Checkboxes.\n"),G.Vb(),G.Wb(18,"description"),G.Vc(19,"Checkbox Group Created from projected Checkboxes. This helps in localization of checkbox labels.\n"),G.Vb(),G.Wb(20,"component-example"),G.Rb(21,"fdp-platform-checkbox-group-content-checkbox"),G.Vb(),G.Rb(22,"code-example",1),G.Rb(23,"separator"),G.Wb(24,"fd-docs-section-title",4),G.Vc(25," Checkbox Group handling of Form Validation and Error Message Display.\n"),G.Vb(),G.Wb(26,"description"),G.Vc(27,"Checkbox Group Examples for Error Handling."),G.Vb(),G.Wb(28,"component-example"),G.Rb(29,"fdp-platform-checkbox-group-examples"),G.Vb(),G.Rb(30,"code-example",1)),2&e&&(G.Db(6),G.vc("exampleFiles",o.listCheckboxGroup),G.Db(8),G.vc("exampleFiles",o.listObjectCheckboxGroup),G.Db(8),G.vc("exampleFiles",o.contentCheckboxGroup),G.Db(8),G.vc("exampleFiles",o.checkboxGroupExample))},directives:[L.a,R.a,S.a,K,q.a,A.a,T,N,pe],encapsulation:2}),te),ue=r("dor/"),me=r("RJTZ"),ge=r("Kpas"),he=[{path:"",component:(se=function o(){e(this,o)},se.\u0275fac=function(e){return new(e||se)},se.\u0275cmp=G.Kb({type:se,selectors:[["app-checkbox-group-header"]],decls:35,vars:0,consts:[["routerLink","/core/checkbox"],["routerLink","/platform/form-container"],["module","PlatformCheckboxGroupModule, SelectItem"],["routerLink","/platform/checkbox"]],template:function(e,o){1&e&&(G.Wb(0,"header"),G.Vc(1,"Checkbox Group"),G.Vb(),G.Wb(2,"description"),G.Vc(3," Platform Checkbox Group creates multiple checkboxes by using list of values or by passing individual checkboxes. "),G.Wb(4,"a",0),G.Vc(5,"@fundamental-ngx/Core"),G.Vb(),G.Vc(6," does not have an implementation of checkbox group, instead requires user to build group using individual Checkbox components. Platform Checkbox Group handles all these checkboxes together and selection of one or more checkboxes is possible as a form field. It is implemented to work with "),G.Wb(7,"a",1),G.Vc(8,"Platform Form"),G.Vb(),G.Vc(9,". "),G.Rb(10,"br"),G.Rb(11,"br"),G.Rb(12,"import",2),G.Rb(13,"br"),G.Wb(14,"h3"),G.Vc(15,"Platform specific enhancements:"),G.Vb(),G.Wb(16,"ul"),G.Wb(17,"li"),G.Vc(18,"Checkbox group can create multiple checkboxes by using list of string values."),G.Vb(),G.Wb(19,"li"),G.Vc(20,"Multiple checkboxes can be created using list of SelectItem Objects."),G.Vb(),G.Wb(21,"li"),G.Vc(22,"Checkbox group can be created by passing checkboxes under checkbox group."),G.Vb(),G.Wb(23,"li"),G.Vc(24,"It is implemented to work with "),G.Wb(25,"a",1),G.Vc(26,"Platform Form"),G.Vb(),G.Vc(27,"."),G.Vb(),G.Wb(28,"li"),G.Vc(29,"Checkbox group creates "),G.Wb(30,"a",3),G.Vc(31," Platform Checkboxes"),G.Vb(),G.Vc(32,"."),G.Vb(),G.Vb(),G.Vb(),G.Rb(33,"fd-header-tabs"),G.Rb(34,"router-outlet"))},directives:[ue.a,R.a,m.f,me.a,ge.a,m.h],encapsulation:2}),se),children:[{path:"",component:de},{path:"api",component:h.a,data:{content:k.a.checkboxGroup}}]}],ke=((be=function o(){e(this,o)}).\u0275fac=function(e){return new(e||be)},be.\u0275mod=G.Ob({type:be}),be.\u0275inj=G.Nb({imports:[[m.g.forChild(he),x.a,g.t,g.s,g.h],m.g]}),be)}}])}();