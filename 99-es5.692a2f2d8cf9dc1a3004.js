!function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function n(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}function t(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{"B+eS":function(e,a,o){"use strict";o.r(a),o.d(a,"PlatformApprovalFlowDocsModule",function(){return X});var i={};o.r(i),o.d(i,"default",function(){return y});var r={};o.r(r),o.d(r,"default",function(){return M});var s,d=o("tyNb"),p=o("GKNN"),l=o("1YHc"),c=o("t33z"),m=o("SfIh"),u=o("jzzn"),g=o("IywY"),b=o("t9W5"),h=o("fXoL"),f=o("dor/"),v=o("trhy"),D=o("kt86"),A=o("RJTZ"),w=o("Kpas"),S=((s=function e(){t(this,e)}).\u0275fac=function(e){return new(e||s)},s.\u0275cmp=h.Kb({type:s,selectors:[["fd-approval-flow-header"]],decls:17,vars:0,consts:[["label","SAP Ariba Component","title","SAP Ariba Component","color","8"],["module","PlatformApprovalFlowModule","subPackage","approval-flow"]],template:function(e,n){1&e&&(h.Wb(0,"header"),h.Vc(1,"Approval Flow"),h.Vb(),h.Rb(2,"fd-info-label",0),h.Wb(3,"description"),h.Vc(4," The Approval Flow component is a complex component which tracks and manages the approval process for a business object. From the Approval Flow component a user is able to: "),h.Wb(5,"ul"),h.Wb(6,"li"),h.Vc(7,"See the progress of the approval process"),h.Vb(),h.Wb(8,"li"),h.Vc(9,"Add, edit, move (drag and drop) and delete approvers"),h.Vb(),h.Wb(10,"li"),h.Vc(11,"Add and remove watchers"),h.Vb(),h.Wb(12,"li"),h.Vc(13,"Send reminder notifications to approvers"),h.Vb(),h.Vb(),h.Vb(),h.Rb(14,"import",1),h.Rb(15,"fd-header-tabs"),h.Rb(16,"router-outlet"))},directives:[f.a,v.a,D.a,A.a,w.a,d.h],styles:[""]}),s),y='<fdp-approval-flow\n    title="Basic Approval Flow Demo"\n    [dataSource]="dataSource"\n    [userDetailsTemplate]="userDetailsTemplate"\n    [checkDueDate]="checkDueDate"\n    [allowSendRemindersForStatuses]="sendReminderStatuses"\n    [isEditAvailable]="editModeEnabled"\n    (nodeClick)="nodeClick($event)"\n>\n</fdp-approval-flow>\n\n<ng-template #userDetailsTemplate let-data="data">\n    <h4 style="margin-bottom: 1rem;">Contact info</h4>\n\n    <p style="display: flex; flex-direction: column;">\n        <span>Mobile</span>\n        <a href="javascript:void(0)">{{ data?.phone }}</a>\n    </p>\n\n    <p style="display: flex; flex-direction: column;">\n        <span>Phone</span>\n        <a href="javascript:void(0)">{{ data?.phone }}</a>\n    </p>\n\n    <p style="display: flex; flex-direction: column;">\n        <span>E-mail</span>\n        <a href="javascript:void(0)">{{ data?.email }}</a>\n    </p>\n\n    <h4 style="margin-top: 1.5rem; margin-bottom: 1rem;">Company</h4>\n\n    <p style="display: flex; flex-direction: column;">\n        <span>Name</span>\n        <a href="javascript:void(0)">Company A{{ data?.email }}</a>\n    </p>\n\n    <p style="display: flex; flex-direction: column;">\n        <span>Address</span>\n        <a href="javascript:void(0)">481 West Street, Anytown OH, 83749, USA</a>\n    </p>\n</ng-template>\n\n\x3c!-- Playground code below, not related to the component itself --\x3e\n\n<p>\n    Selected example:\n    <select [(ngModel)]="selectedExample" (ngModelChange)="dataSource.selectGraph(selectedExample)">\n        <option *ngFor="let example of examples" [value]="example">{{ example | titlecase }}</option>\n    </select>\n</p>\n<p>Enable "Edit mode": <input type="checkbox" [(ngModel)]="editModeEnabled"></p>\n<p>Enable due date warnings: <input type="checkbox" [(ngModel)]="checkDueDate"></p>\n<p>Set all statuses to "Not Started": <input type="checkbox" [(ngModel)]="setNotStartedStatuses" (ngModelChange)="setNotStarted()">\n</p>\n<p>\n    Disable all node actions:\n    <input type="checkbox" [(ngModel)]="nodeActionsDisabled" (ngModelChange)="toggleNodeActions($event)">\n</p>\n<p>Disable certain node actions: </p>\n<div>\n    <p>\n        <input\n            id="disableAddingNodeBefore"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddBefore"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddBefore\', $event)"\n        >\n        <label for="disableAddingNodeBefore">Disable adding before</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeAfter"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddAfter"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddAfter\', $event)"\n        >\n        <label for="disableAddingNodeAfter">Disable adding after</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeParallel"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddParallel"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddParallel\', $event)"\n        >\n        <label for="disableAddingNodeParallel">Disable adding parallel</label>\n    </p>\n\n    <p>\n        <input\n            id="disableEditingNode"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableEdit"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableEdit\', $event)"\n        >\n        <label for="disableEditingNode">Disable editing</label>\n    </p>\n\n    <p>\n        <input\n            id="disableRemovingNode"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableRemove"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableRemove\', $event)"\n        >\n        <label for="disableRemovingNode">Disable removing</label>\n    </p>\n</div>\n<p style="display: flex;align-items: center;">Allow sending reminders to approvers with statuses:\n    <fd-multi-input\n        style="margin-left: .5rem;"\n        [compact]="true"\n        [dropdownValues]="allStatuses"\n        [(ngModel)]="sendReminderStatuses"\n    ></fd-multi-input>\n</p>\n',M="import { Component, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport {\n    ApprovalDataSource,\n    ApprovalNode,\n    ApprovalNodeActionsConfig,\n    ApprovalProcess,\n    ApprovalStatus,\n    ApprovalTeam,\n    ApprovalUser\n} from '@fundamental-ngx/platform/approval-flow';\n\n@Component({\n    selector: 'fdp-platform-approval-flow-example',\n    templateUrl: './platform-approval-flow-example.component.html'\n})\nexport class PlatformApprovalFlowExampleComponent implements OnDestroy {\n    dataSource = new ApprovalFlowExampleDataSource('complex');\n    examples = [\n        'empty',\n        'simple',\n        'medium',\n        'complex'\n    ];\n    selectedExample = 'complex';\n    checkDueDate = false;\n    setNotStartedStatuses = false;\n    editModeEnabled = true;\n    nodeActionsDisabled = false;\n    nodeActionsConfig: ApprovalNodeActionsConfig = {\n        disableAddBefore: false,\n        disableAddAfter: false,\n        disableAddParallel: false,\n        disableEdit: false,\n        disableRemove: false\n    }\n    allStatuses = [\n        'in progress',\n        'not started',\n        'approved',\n        'rejected'\n    ];\n    sendReminderStatuses: ApprovalStatus[] = [\n        'in progress',\n        'not started'\n    ];\n\n    private _subscriptions = new Subscription();\n\n    ngOnDestroy(): void {\n        this._subscriptions.unsubscribe();\n    }\n\n    toggleNodeActions(state: boolean): void {\n        this._subscriptions.add(undefined);\n\n\n        this._subscriptions.add(\n            this.dataSource.fetch()\n                .pipe(take(1))\n                .subscribe(approvalGraph => {\n                    approvalGraph.nodes.forEach(node => {\n                        node.disableActions = state;\n                    });\n\n                    this.dataSource.updateApprovals(approvalGraph.nodes);\n                })\n        );\n    }\n\n    toggleSpecificNodeAction(field: keyof ApprovalNodeActionsConfig, state: boolean): void {\n        this._subscriptions.add(\n            this.dataSource.fetch()\n                .pipe(take(1))\n                .subscribe(approvalGraph => {\n                    approvalGraph.nodes.forEach(node => {\n                        node.actionsConfig = {\n                            ...node.actionsConfig,\n                            [field]: state\n                        };\n                    });\n\n                    this.dataSource.updateApprovals(approvalGraph.nodes);\n                })\n        );\n    }\n\n    nodeClick(node: ApprovalNode): void {\n        console.log('Node click handler', node);\n    }\n\n    setNotStarted(): void {\n        this.dataSource.setDefaultStatus(this.setNotStartedStatuses ? 'not started' : null);\n    }\n}\n\n/** For all code below\n * TODO #5351: Split into separate file after \"pure\" files will be allowed by the StackBlitz service\n */\n\nconst DAY_IN_MILLISECONDS = 1000 * 60 * 60 * 24;\n\nconst users: ApprovalUser[] = [\n    {\n        id: 'uid28141',\n        name: 'Luis Franklin',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/91.jpg'\n    },\n    {\n        id: 'uid08141',\n        name: 'Renee Miles',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/11.jpg'\n    },\n    {\n        id: 'uid99641',\n        name: 'Elaine Myers',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/75.jpg'\n    },\n    {\n        id: 'uid38141',\n        name: 'Emma Cole',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/91.jpg'\n    },\n    {\n        id: 'uid37866',\n        name: 'Daniel Sullivan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/9.jpg'\n    },\n    {\n        id: 'uid09141',\n        name: 'Salvador Duncan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/14.jpg'\n    },\n    {\n        id: 'uid09641',\n        name: 'Caleb Taylor',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/17.jpg'\n    },\n    {\n        id: 'uid99651',\n        name: 'Julie Peters',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/77.jpg'\n    },\n    {\n        id: 'uid99655',\n        name: 'Fred Gibson',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/45.jpg'\n    },\n    {\n        id: 'uid81355',\n        name: 'George Carter',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/85.jpg'\n    },\n    {\n        id: 'uid81353',\n        name: 'Lillian Walker',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/25.jpg'\n    },\n    {\n        id: 'uid81955',\n        name: 'Josephine Carlson',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/88.jpg'\n    },\n    {\n        id: 'uid77135',\n        name: 'Tristan Sutton',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/5.jpg'\n    },\n    {\n        id: 'uid77115',\n        name: 'Alvin Stephens',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/78.jpg'\n    },\n    {\n        id: 'uid77111',\n        name: 'Logan Herrera',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/53.jpg'\n    },\n    {\n        id: 'uid66141',\n        name: 'Melissa Martin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/87.jpg'\n    },\n    {\n        id: 'uid66151',\n        name: 'Sofia Hanson',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/24.jpg'\n    },\n    {\n        id: 'uid66161',\n        name: 'Jill Fuller',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/64.jpg'\n    },\n    {\n        id: 'uid66171',\n        name: 'Ella Franklin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/55.jpg'\n    }\n];\nconst usersMap = {};\nusers.forEach(u => usersMap[u.id] = u);\n\nconst teams: ApprovalTeam[] = [\n    {\n        id: 'teamId1',\n        name: 'Accounting team',\n        description: '',\n        members: ['uid66171', 'uid66161', 'uid66151', 'uid66141']\n    },\n    {\n        id: 'teamId2',\n        name: 'Sales team',\n        description: '',\n        members: ['uid77111', 'uid77115', 'uid77135', 'uid81955']\n    },\n    {\n        id: 'teamId3',\n        name: 'Legal team',\n        description: '',\n        members: ['uid28141', 'uid08141', 'uid99641']\n    },\n    {\n        id: 'teamId4',\n        name: 'Marketing team',\n        description: '',\n        members: ['uid38141', 'uid37866', 'uid09141', 'uid81353', 'uid81355', 'uid99655', 'uid09641', 'uid99651']\n    }\n];\n\nconst emptyGraph: ApprovalProcess = {\n    watchers: [getUser('uid66161')],\n    nodes: []\n};\n\nconst simpleGraph: ApprovalProcess = {\n    watchers: [getUser('uid66161')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst mediumGraph: ApprovalProcess = {\n    watchers: [getUser('uid66151'), getUser('uid77115')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid77135')],\n            status: 'approved',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [getUser('uid77111'), getUser('uid09641'), getUser('uid09141'), getUser('uid37866'), getUser('uid99641'), getUser('uid38141')],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(5),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst complexGraph: ApprovalProcess = {\n    watchers: [getUser('uid66151'), getUser('uid66141'), getUser('uid99651'), getUser('uid99655')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid28141')],\n            status: 'approved',\n            targets: ['ID220'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [getUser('uid77111'), getUser('uid09641')],\n            status: 'in progress',\n            targets: ['ID2220'],\n            dueDate: daysFromNow(3),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID220',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid08141')],\n            status: 'rejected',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2220',\n            name: 'node name',\n            description: 'Marketing',\n            approvers: [getUser('uid81353')],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst graphs = {\n    empty: emptyGraph,\n    simple: simpleGraph,\n    medium: mediumGraph,\n    complex: complexGraph\n};\n\nfunction getUser(id: string): ApprovalUser {\n    return usersMap[id];\n}\n\nfunction daysFromNow(days: number): Date {\n    return new Date(Date.now() + DAY_IN_MILLISECONDS * days);\n}\n\ntype GraphTypes = 'empty' | 'simple' | 'medium' | 'complex';\n\nexport class ApprovalFlowExampleDataSource implements ApprovalDataSource {\n    selectedGraph: GraphTypes;\n    defaultStatus: ApprovalStatus | null = null;\n\n    readonly state: BehaviorSubject<ApprovalProcess>;\n\n    constructor(selectedGraph: string = 'complex') {\n        this.selectedGraph = selectedGraph as GraphTypes;\n        this.state = new BehaviorSubject<ApprovalProcess>(graphs[this.selectedGraph]);\n    }\n\n    setDefaultStatus(status: ApprovalStatus | null): void {\n        this.defaultStatus = status;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    selectGraph(selectedGraph: string = 'complex'): void {\n        this.selectedGraph = selectedGraph as GraphTypes;\n        const graph = { ...graphs[this.selectedGraph] };\n\n        graph.nodes = graph.nodes.map(n => {\n            const nodeCopy = { ...n };\n\n            if (this.defaultStatus) {\n                nodeCopy.status = this.defaultStatus;\n            }\n\n            return nodeCopy;\n        });\n\n        this.state.next(graph);\n    }\n\n    fetch(): Observable<ApprovalProcess> {\n        return this.state;\n    }\n\n    fetchUser(id: string): Observable<any> {\n        const user = users.find(u => u.id === id);\n\n        return of({\n            phone: Math.random().toFixed(13).toString().replace('0.', ''),\n            email: `${user.name.toLowerCase().split(' ').join('.')}@company.com`\n        });\n    }\n\n    fetchApprovers(): Observable<ApprovalUser[]> {\n        return of(users);\n    }\n\n    fetchWatchers(): Observable<ApprovalUser[]> {\n        return of(users);\n    }\n\n    fetchTeams(): Observable<ApprovalTeam[]> {\n        return of(teams);\n    }\n\n    updateWatchers(watchers: ApprovalUser[]): void {\n        console.log('call \"updateWatchers\" method from ApprovalDataSource implementation class');\n        const currentGraph = graphs[this.selectedGraph];\n        currentGraph.watchers = watchers;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    updateApproval(approval: ApprovalNode): void {\n        console.log('call \"updateApproval\" method from ApprovalDataSource implementation class');\n    }\n\n    updateApprovals(approvals: ApprovalNode[]): void {\n        console.log('call \"updateApprovals\" method from ApprovalDataSource implementation class');\n        const currentGraph = graphs[this.selectedGraph];\n        currentGraph.nodes = approvals;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    sendReminders(members: ApprovalUser[], approval: ApprovalNode): Observable<any> {\n        console.log('call \"sendReminders\" method from ApprovalDataSource implementation class');\n        return of(null);\n    }\n}\n",N=o("ddaM"),C=o("X1JU"),k=o("quSY"),V=o("2Vo4"),x=o("LRne"),I=o("IzEk"),j=o("ljLw"),U=o("3Pt+"),W=o("ofXK"),F=o("9FxG");function G(e,n){if(1&e&&(h.Wb(0,"h4",17),h.Vc(1,"Contact info"),h.Vb(),h.Wb(2,"p",18),h.Wb(3,"span"),h.Vc(4,"Mobile"),h.Vb(),h.Wb(5,"a",19),h.Vc(6),h.Vb(),h.Vb(),h.Wb(7,"p",18),h.Wb(8,"span"),h.Vc(9,"Phone"),h.Vb(),h.Wb(10,"a",19),h.Vc(11),h.Vb(),h.Vb(),h.Wb(12,"p",18),h.Wb(13,"span"),h.Vc(14,"E-mail"),h.Vb(),h.Wb(15,"a",19),h.Vc(16),h.Vb(),h.Vb(),h.Wb(17,"h4",20),h.Vc(18,"Company"),h.Vb(),h.Wb(19,"p",18),h.Wb(20,"span"),h.Vc(21,"Name"),h.Vb(),h.Wb(22,"a",19),h.Vc(23),h.Vb(),h.Vb(),h.Wb(24,"p",18),h.Wb(25,"span"),h.Vc(26,"Address"),h.Vb(),h.Wb(27,"a",19),h.Vc(28,"481 West Street, Anytown OH, 83749, USA"),h.Vb(),h.Vb()),2&e){var t=n.data;h.Db(6),h.Wc(null==t?null:t.phone),h.Db(5),h.Wc(null==t?null:t.phone),h.Db(5),h.Wc(null==t?null:t.email),h.Db(7),h.Xc("Company A",null==t?null:t.email,"")}}function E(e,n){if(1&e&&(h.Wb(0,"option",21),h.Vc(1),h.oc(2,"titlecase"),h.Vb()),2&e){var t=n.$implicit;h.vc("value",t),h.Db(1),h.Wc(h.pc(2,2,t))}}var R,P=((R=function(){function e(){t(this,e),this.dataSource=new z("complex"),this.examples=["empty","simple","medium","complex"],this.selectedExample="complex",this.checkDueDate=!1,this.setNotStartedStatuses=!1,this.editModeEnabled=!0,this.nodeActionsDisabled=!1,this.nodeActionsConfig={disableAddBefore:!1,disableAddAfter:!1,disableAddParallel:!1,disableEdit:!1,disableRemove:!1},this.allStatuses=["in progress","not started","approved","rejected"],this.sendReminderStatuses=["in progress","not started"],this._subscriptions=new k.a}return n(e,[{key:"ngOnDestroy",value:function(){this._subscriptions.unsubscribe()}},{key:"toggleNodeActions",value:function(e){var n=this;this._subscriptions.add(void 0),this._subscriptions.add(this.dataSource.fetch().pipe(Object(I.a)(1)).subscribe(function(t){t.nodes.forEach(function(n){n.disableActions=e}),n.dataSource.updateApprovals(t.nodes)}))}},{key:"toggleSpecificNodeAction",value:function(e,n){var t=this;this._subscriptions.add(this.dataSource.fetch().pipe(Object(I.a)(1)).subscribe(function(a){a.nodes.forEach(function(t){var a,o,i;t.actionsConfig=Object.assign(Object.assign({},t.actionsConfig),(i=n,(o=e)in(a={})?Object.defineProperty(a,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):a[o]=i,a))}),t.dataSource.updateApprovals(a.nodes)}))}},{key:"nodeClick",value:function(e){console.log("Node click handler",e)}},{key:"setNotStarted",value:function(){this.dataSource.setDefaultStatus(this.setNotStartedStatuses?"not started":null)}}]),e}()).\u0275fac=function(e){return new(e||R)},R.\u0275cmp=h.Kb({type:R,selectors:[["fdp-platform-approval-flow-example"]],decls:45,vars:24,consts:[["title","Basic Approval Flow Demo",3,"dataSource","userDetailsTemplate","checkDueDate","allowSendRemindersForStatuses","isEditAvailable","nodeClick"],["userDetailsTemplate",""],[3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["type","checkbox",3,"ngModel","ngModelChange"],["id","disableAddingNodeBefore","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeBefore"],["id","disableAddingNodeAfter","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeAfter"],["id","disableAddingNodeParallel","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeParallel"],["id","disableEditingNode","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableEditingNode"],["id","disableRemovingNode","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableRemovingNode"],[2,"display","flex","align-items","center"],[2,"margin-left",".5rem",3,"compact","dropdownValues","ngModel","ngModelChange"],[2,"margin-bottom","1rem"],[2,"display","flex","flex-direction","column"],["href","javascript:void(0)"],[2,"margin-top","1.5rem","margin-bottom","1rem"],[3,"value"]],template:function(e,n){if(1&e&&(h.Wb(0,"fdp-approval-flow",0),h.jc("nodeClick",function(e){return n.nodeClick(e)}),h.Vb(),h.Tc(1,G,29,4,"ng-template",null,1,h.Uc),h.Wb(3,"p"),h.Vc(4," Selected example: "),h.Wb(5,"select",2),h.jc("ngModelChange",function(e){return n.selectedExample=e})("ngModelChange",function(){return n.dataSource.selectGraph(n.selectedExample)}),h.Tc(6,E,3,4,"option",3),h.Vb(),h.Vb(),h.Wb(7,"p"),h.Vc(8,'Enable "Edit mode": '),h.Wb(9,"input",4),h.jc("ngModelChange",function(e){return n.editModeEnabled=e}),h.Vb(),h.Vb(),h.Wb(10,"p"),h.Vc(11,"Enable due date warnings: "),h.Wb(12,"input",4),h.jc("ngModelChange",function(e){return n.checkDueDate=e}),h.Vb(),h.Vb(),h.Wb(13,"p"),h.Vc(14,'Set all statuses to "Not Started": '),h.Wb(15,"input",4),h.jc("ngModelChange",function(e){return n.setNotStartedStatuses=e})("ngModelChange",function(){return n.setNotStarted()}),h.Vb(),h.Vb(),h.Wb(16,"p"),h.Vc(17," Disable all node actions: "),h.Wb(18,"input",4),h.jc("ngModelChange",function(e){return n.nodeActionsDisabled=e})("ngModelChange",function(e){return n.toggleNodeActions(e)}),h.Vb(),h.Vb(),h.Wb(19,"p"),h.Vc(20,"Disable certain node actions: "),h.Vb(),h.Wb(21,"div"),h.Wb(22,"p"),h.Wb(23,"input",5),h.jc("ngModelChange",function(e){return n.nodeActionsConfig.disableAddBefore=e})("ngModelChange",function(e){return n.toggleSpecificNodeAction("disableAddBefore",e)}),h.Vb(),h.Wb(24,"label",6),h.Vc(25,"Disable adding before"),h.Vb(),h.Vb(),h.Wb(26,"p"),h.Wb(27,"input",7),h.jc("ngModelChange",function(e){return n.nodeActionsConfig.disableAddAfter=e})("ngModelChange",function(e){return n.toggleSpecificNodeAction("disableAddAfter",e)}),h.Vb(),h.Wb(28,"label",8),h.Vc(29,"Disable adding after"),h.Vb(),h.Vb(),h.Wb(30,"p"),h.Wb(31,"input",9),h.jc("ngModelChange",function(e){return n.nodeActionsConfig.disableAddParallel=e})("ngModelChange",function(e){return n.toggleSpecificNodeAction("disableAddParallel",e)}),h.Vb(),h.Wb(32,"label",10),h.Vc(33,"Disable adding parallel"),h.Vb(),h.Vb(),h.Wb(34,"p"),h.Wb(35,"input",11),h.jc("ngModelChange",function(e){return n.nodeActionsConfig.disableEdit=e})("ngModelChange",function(e){return n.toggleSpecificNodeAction("disableEdit",e)}),h.Vb(),h.Wb(36,"label",12),h.Vc(37,"Disable editing"),h.Vb(),h.Vb(),h.Wb(38,"p"),h.Wb(39,"input",13),h.jc("ngModelChange",function(e){return n.nodeActionsConfig.disableRemove=e})("ngModelChange",function(e){return n.toggleSpecificNodeAction("disableRemove",e)}),h.Vb(),h.Wb(40,"label",14),h.Vc(41,"Disable removing"),h.Vb(),h.Vb(),h.Vb(),h.Wb(42,"p",15),h.Vc(43,"Allow sending reminders to approvers with statuses: "),h.Wb(44,"fd-multi-input",16),h.jc("ngModelChange",function(e){return n.sendReminderStatuses=e}),h.Vb(),h.Vb()),2&e){var t=h.Hc(2);h.vc("dataSource",n.dataSource)("userDetailsTemplate",t)("checkDueDate",n.checkDueDate)("allowSendRemindersForStatuses",n.sendReminderStatuses)("isEditAvailable",n.editModeEnabled),h.Db(5),h.vc("ngModel",n.selectedExample),h.Db(1),h.vc("ngForOf",n.examples),h.Db(3),h.vc("ngModel",n.editModeEnabled),h.Db(3),h.vc("ngModel",n.checkDueDate),h.Db(3),h.vc("ngModel",n.setNotStartedStatuses),h.Db(3),h.vc("ngModel",n.nodeActionsDisabled),h.Db(5),h.vc("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddBefore),h.Db(4),h.vc("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddAfter),h.Db(4),h.vc("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddParallel),h.Db(4),h.vc("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableEdit),h.Db(4),h.vc("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableRemove),h.Db(5),h.vc("compact",!0)("dropdownValues",n.allStatuses)("ngModel",n.sendReminderStatuses)}},directives:[j.a,U.z,U.q,U.t,W.n,U.a,F.a,U.u,U.C],pipes:[W.x],encapsulation:2}),R),O=[{id:"uid28141",name:"Luis Franklin",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/men/91.jpg"},{id:"uid08141",name:"Renee Miles",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/11.jpg"},{id:"uid99641",name:"Elaine Myers",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/75.jpg"},{id:"uid38141",name:"Emma Cole",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/91.jpg"},{id:"uid37866",name:"Daniel Sullivan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/9.jpg"},{id:"uid09141",name:"Salvador Duncan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/14.jpg"},{id:"uid09641",name:"Caleb Taylor",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/17.jpg"},{id:"uid99651",name:"Julie Peters",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/77.jpg"},{id:"uid99655",name:"Fred Gibson",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/45.jpg"},{id:"uid81355",name:"George Carter",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/85.jpg"},{id:"uid81353",name:"Lillian Walker",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/25.jpg"},{id:"uid81955",name:"Josephine Carlson",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/women/88.jpg"},{id:"uid77135",name:"Tristan Sutton",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/5.jpg"},{id:"uid77115",name:"Alvin Stephens",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/78.jpg"},{id:"uid77111",name:"Logan Herrera",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/53.jpg"},{id:"uid66141",name:"Melissa Martin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/87.jpg"},{id:"uid66151",name:"Sofia Hanson",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/24.jpg"},{id:"uid66161",name:"Jill Fuller",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/64.jpg"},{id:"uid66171",name:"Ella Franklin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/55.jpg"}],T={};O.forEach(function(e){return T[e.id]=e});var L=[{id:"teamId1",name:"Accounting team",description:"",members:["uid66171","uid66161","uid66151","uid66141"]},{id:"teamId2",name:"Sales team",description:"",members:["uid77111","uid77115","uid77135","uid81955"]},{id:"teamId3",name:"Legal team",description:"",members:["uid28141","uid08141","uid99641"]},{id:"teamId4",name:"Marketing team",description:"",members:["uid38141","uid37866","uid09141","uid81353","uid81355","uid99655","uid09641","uid99651"]}],B={empty:{watchers:[_("uid66161")],nodes:[]},simple:{watchers:[_("uid66161")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[_("uid81955")],status:"approved",targets:["ID2"],dueDate:J(30),createDate:J(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[_("uid66171")],status:"in progress",targets:["ID3"],dueDate:J(10),createDate:J(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[_("uid81355")],status:"not started",targets:[],dueDate:J(10),createDate:J(-30)}]},medium:{watchers:[_("uid66151"),_("uid77115")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[_("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:J(30),createDate:J(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[_("uid66171")],status:"in progress",targets:["ID3"],dueDate:J(30),createDate:J(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[_("uid77135")],status:"approved",targets:["ID3"],dueDate:J(30),createDate:J(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[_("uid77111"),_("uid09641"),_("uid09141"),_("uid37866"),_("uid99641"),_("uid38141")],status:"not started",targets:["ID3"],dueDate:J(5),createDate:J(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[_("uid81355")],status:"not started",targets:["ID4"],dueDate:J(30),createDate:J(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[_("uid99651")],status:"not started",targets:[],dueDate:J(30),createDate:J(-30)}]},complex:{watchers:[_("uid66151"),_("uid66141"),_("uid99651"),_("uid99655")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[_("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:J(30),createDate:J(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[_("uid66171")],status:"in progress",targets:["ID3"],dueDate:J(30),createDate:J(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[_("uid28141")],status:"approved",targets:["ID220"],dueDate:J(30),createDate:J(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[_("uid77111"),_("uid09641")],status:"in progress",targets:["ID2220"],dueDate:J(3),createDate:J(-30)},{id:"ID220",name:"node name",description:"node description",approvers:[_("uid08141")],status:"rejected",targets:["ID3"],dueDate:J(30),createDate:J(-30)},{id:"ID2220",name:"node name",description:"Marketing",approvers:[_("uid81353")],status:"not started",targets:["ID3"],dueDate:J(30),createDate:J(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[_("uid81355")],status:"not started",targets:["ID4"],dueDate:J(30),createDate:J(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[_("uid99651")],status:"not started",targets:[],dueDate:J(30),createDate:J(-30)}]}};function _(e){return T[e]}function J(e){return new Date(Date.now()+864e5*e)}var H,$,z=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"complex";t(this,e),this.defaultStatus=null,this.selectedGraph=n,this.state=new V.a(B[this.selectedGraph])}return n(e,[{key:"setDefaultStatus",value:function(e){this.defaultStatus=e,this.selectGraph(this.selectedGraph)}},{key:"selectGraph",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"complex";this.selectedGraph=n;var t=Object.assign({},B[this.selectedGraph]);t.nodes=t.nodes.map(function(n){var t=Object.assign({},n);return e.defaultStatus&&(t.status=e.defaultStatus),t}),this.state.next(t)}},{key:"fetch",value:function(){return this.state}},{key:"fetchUser",value:function(e){var n=O.find(function(n){return n.id===e});return Object(x.a)({phone:Math.random().toFixed(13).toString().replace("0.",""),email:"".concat(n.name.toLowerCase().split(" ").join("."),"@company.com")})}},{key:"fetchApprovers",value:function(){return Object(x.a)(O)}},{key:"fetchWatchers",value:function(){return Object(x.a)(O)}},{key:"fetchTeams",value:function(){return Object(x.a)(L)}},{key:"updateWatchers",value:function(e){console.log('call "updateWatchers" method from ApprovalDataSource implementation class'),B[this.selectedGraph].watchers=e,this.selectGraph(this.selectedGraph)}},{key:"updateApproval",value:function(e){console.log('call "updateApproval" method from ApprovalDataSource implementation class')}},{key:"updateApprovals",value:function(e){console.log('call "updateApprovals" method from ApprovalDataSource implementation class'),B[this.selectedGraph].nodes=e,this.selectGraph(this.selectedGraph)}},{key:"sendReminders",value:function(e,n){return console.log('call "sendReminders" method from ApprovalDataSource implementation class'),Object(x.a)(null)}}]),e}(),K=o("5HkS"),Y=[{path:"",component:S,children:[{path:"",component:(H=function e(){t(this,e),this.basic=[{language:"html",code:i,fileName:"platform-approval-flow-example",name:"approval-flow-example.component.html"},{language:"typescript",code:r,fileName:"platform-approval-flow-example",component:"PlatformApprovalFlowExampleComponent",name:"approval-flow-example.component.ts"}]},H.\u0275fac=function(e){return new(e||H)},H.\u0275cmp=h.Kb({type:H,selectors:[["app-approval-flow"]],decls:5,vars:1,consts:[["id","approval-flow","componentName","approval-flow"],[3,"exampleFiles"]],template:function(e,n){1&e&&(h.Wb(0,"fd-docs-section-title",0),h.Vc(1," Approval flow\n"),h.Vb(),h.Wb(2,"component-example"),h.Rb(3,"fdp-platform-approval-flow-example"),h.Vb(),h.Rb(4,"code-example",1)),2&e&&(h.Db(4),h.vc("exampleFiles",n.basic))},directives:[N.a,C.a,P,K.a],encapsulation:2}),H)},{path:"api",component:u.a,data:{content:g.a.approvalFlow}}]}],X=(($=function e(){t(this,e)}).\u0275fac=function(e){return new(e||$)},$.\u0275mod=h.Ob({type:$}),$.\u0275inj=h.Nb({providers:[c.x],imports:[[d.g.forChild(Y),b.a,m.a,p.f,l.b],d.g]}),$)}}])}();