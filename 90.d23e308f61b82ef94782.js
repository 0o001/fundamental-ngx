(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{sUgf:function(e,n,t){"use strict";t.r(n),t.d(n,"CheckboxDocsModule",(function(){return ue}));var o={};t.r(o),t.d(o,"default",(function(){return C}));var a={};t.r(a),t.d(a,"default",(function(){return v}));var r={};t.r(r),t.d(r,"default",(function(){return y}));var i={};t.r(i),t.d(i,"default",(function(){return x}));var c={};t.r(c),t.d(c,"default",(function(){return R}));var l={};t.r(l),t.d(l,"default",(function(){return A}));var b={};t.r(b),t.d(b,"default",(function(){return F}));var d={};t.r(d),t.d(d,"default",(function(){return Q}));var f={};t.r(f),t.d(f,"default",(function(){return M}));var m={};t.r(m),t.d(m,"default",(function(){return w}));var u={};t.r(u),t.d(u,"default",(function(){return z}));var s={};t.r(s),t.d(s,"default",(function(){return L}));var p=t("sEIs"),h=t("eCHz"),g=t("qOWU"),k=t("MOJJ"),C='<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'sirius\'" [label]="\'Sirius\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'sirius-cb\'" [value]="\'sirius\'" title="sirius" [(ngModel)]="field1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'vega\'" [label]="\'Vega\'" zone="zRight" rank="1">\n        <fdp-checkbox [name]="\'vega-cb\'" [value]="\'vega\'" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem;">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [multiLayout]="true" [formGroup]="form1" [object]="form1Data">\n    <fdp-form-field #rfield1 [id]="\'einstein\'" [label]="\'Einstein\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'einstein-cb\'" [value]="\'einstein\'" [contentDensity]="\'compact\'" title="Albert Einstein"\n            [formControl]="rfield1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 [id]="\'newton\'" [label]="\'Newton\'" zone="zRight" rank="1">\n        <fdp-checkbox [name]="\'newton-cb\'" [value]="\'newton\'" [contentDensity]="\'compact\'" title="Issac Newton"\n            [formControl]="rfield2.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">form value: {{ form1.getRawValue() | json }}</div>\n',v="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n    field3: string[] = [];\n    field4: string[] = ['altair', 'deneb'];\n\n    form1 = new FormGroup({});\n    form1Data = new Form1data([], ['newton']);\n\n    form2 = new FormGroup({});\n\n    form3 = new FormGroup({});\n    form3data = new Form3data(['faraday', 'edison']);\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n\nclass Form3data {\n    constructor(public scientists: string[]) {}\n}\n",y='<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [multiLayout]="true" [noLabelLayout]="false">\n    <fdp-form-field [id]="\'yellow\'" [label]="\'Yellow\'" [noLabelLayout]="true" zone="zLeft" rank="4" [editable]="true">\n        <fdp-checkbox [name]="\'yellow-cb\'" [isBinary]="true" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'white\'" zone="zLeft" rank="4" [label]="\'White\'">\n        <fdp-checkbox [name]="\'white-cb\'" [isBinary]="true" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'violet\'" [label]="\'Violet\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'violet-cb\'" [isBinary]="true" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [multiLayout]="true" [formGroup]="customForm" [object]="data">\n    <fdp-form-field #red [id]="\'red\'" [label]="\'Red\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'red-cb\'" [isBinary]="true" title="Red" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [contentDensity]="\'compact\'" [formControl]="red.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue [id]="\'blue\'" [label]="\'Blue\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'blue-cb\'" [isBinary]="true" title="Blue" [contentDensity]="\'compact\'"\n            [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green [id]="\'green\'" [label]="\'Green\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'green-cb\'" [isBinary]="true" title="Green" [contentDensity]="\'compact\'"\n            [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem;">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field #disabled [id]="\'disabled\'" [label]="\'Red\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'disabled-cb\'" [isBinary]="true" title="Red"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [contentDensity]="\'compact\'" [disabled]="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',x="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, Optional } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({});\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, @Optional() public green?: boolean) {}\n}\n",R='<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg [hintPlacement]="\'left\'" [multiLayout]="true" [formGroup]="customForm" [object]="data">\n    <fdp-form-field #ffr1 [id]="\'presence\'" [validators]="validators" [label]="\'Your presence is necessary\'"\n        [hint]="\'presence is necessary\'" [hintPlacement]="\'left\'" [rank]="10" zone="zLeft">\n        <fdp-checkbox [name]="\'presence-cb\'" [isBinary]="true" title="Your presence is necessary" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 [id]="\'aggrement\'" [validators]="validators" [hint]="\'this selection is mandatory\'"\n        [hintPlacement]="\'left\'" [rank]="15" zone="zRight">\n        <fdp-checkbox [name]="\'aggrement-cb\'" [isBinary]="true" title="Agree with terms" [formControl]="ffr2.formControl">\n            Do you Agree with <a href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="button-1" [rank]="20" zone="zRight">\n        <fdp-button buttonType="emphasized" (click)="onSubmit()" label="Submit"></fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid">\n            Value is invalid\n        </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',A="import { FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm: FormGroup;\n    data: SomeObject;\n    validators: ValidatorFn[];\n\n    constructor() {\n        this.customForm = new FormGroup({});\n        this.validators = [Validators.requiredTrue];\n\n        this.data = new SomeObject(true, true);\n    }\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",F='<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" [value]="\'orion\'" title="Orion" [(checked)]="orion"\n    (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n    (change)="changeFunction($event)">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox [name]="\'cygnus\'" [isBinary]="true" [label]="\'Cygnus\'" title="Cygnus" [value]="\'cygnus\'"\n    [(checked)]="cygnus">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox [name]="\'lyra\'" [isBinary]="true" [label]="\'Lyra\'" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox [name]="\'gemini\'" [isBinary]="true" [label]="\'Gemini\'" title="Gemini" [(checked)]="gemini">\n</fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" title="Orion" [(checked)]="orion" [disabled]="true">\n</fdp-checkbox>\n',Q="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n",M='<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [multiLayout]="true" [formGroup]="cities" [object]="citiesData">\n    <fdp-form-field #paris [id]="\'paris\'" [label]="\'Paris\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'paris-cb\'" [value]="\'Yes\'" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [formControl]="paris.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha [id]="\'doha\'" [label]="\'Doha\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'doha-cb\'" [value]="\'Yes\'" [tristate]="true" [formControl]="doha.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam [id]="\'amsterdam\'" [label]="\'Amsterdam\'" zone="zLeft" rank="5">\n        <fdp-checkbox [name]="\'amsterdam-cb\'" [value]="\'Yes\'" [tristate]="true" [formControl]="amsterdam.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice [id]="\'venice\'" [label]="\'Venice\'" zone="zRight" rank="2">\n        <fdp-checkbox [name]="\'venice-cb\'" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [tristate]="true" [formControl]="venice.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto [id]="\'kyoto\'" [label]="\'Kyoto\'" zone="zRight" rank="4">\n        <fdp-checkbox [name]="\'kyoto-cb\'" [tristate]="true" [formControl]="kyoto.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona [id]="\'barcelona\'" [label]="\'Barcelona\'" zone="zRight" rank="6">\n        <fdp-checkbox [name]="\'barcelona-cb\'" [tristate]="true" [formControl]="barcelona.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens [id]="\'athens\'" [label]="\'athens: tristateSelectable false\'" zone="zLeft" rank="7">\n        <fdp-checkbox [name]="\'athens-cb\'" [value]="\'Yes\'" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="athens.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney [id]="\'sydney\'" [label]="\'Sydney: tristateSelectable false\'" zone="zRight" rank="8">\n        <fdp-checkbox [name]="\'sydney-cb\'" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="sydney.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'havana\'" [label]="\'Havana\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'havana-cb\'" [value]="\'Yes\'" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [(ngModel)]="havana"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'beirut\'" [label]="\'Beirut\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'beirut-cb\'" [value]="\'Yes\'" [tristate]="true" [(ngModel)]="beirut"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'budapest\'" [label]="\'Budapest\'" zone="zLeft" rank="5">\n        <fdp-checkbox [name]="\'budapest-cb\'" [value]="\'Yes\'" [tristate]="true" [(ngModel)]="budapest"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'lisbon\'" [label]="\'Lisbon\'" zone="zRight" rank="2">\n        <fdp-checkbox [name]="\'lisbon-cb\'" [tristate]="true" [(ngModel)]="lisbon"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'istanbul\'" [label]="\'Istanbul\'" zone="zRight" rank="4">\n        <fdp-checkbox [name]="\'istanbul-cb\'" [tristate]="true" [(ngModel)]="istanbul"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'busan\'" [label]="\'Busan\'" zone="zRight" rank="6">\n        <fdp-checkbox [name]="\'busan-cb\'" [tristate]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'dubrovnik\'" [label]="\'Dubrovnik: tristateSelectable false\'" zone="zLeft" rank="7">\n        <fdp-checkbox [name]="\'dubrovnik-cb\'" [value]="\'Yes\'" [tristate]="true" [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'jaipur\'" [label]="\'Jaipur: tristateSelectable false\'" zone="zRight" rank="7">\n        <fdp-checkbox [name]="\'jaipur-cb\'" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field zone="zLeft">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field zone="zRight">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [multiLayout]="true" [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 [id]="\'acceptAll\'" [label]="\'Accept All\'" zone="zLeft" rank="1">\n            <fdp-checkbox [name]="\'all\'" [tristate]="true" [tristateSelectable]="false" [value]="false"\n                [formControl]="ffr1.formControl"></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid;">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="registrationForm.get(\'agreements\')"\n            [object]="choices">\n            <fdp-form-field #ffr2 [id]="\'termsAndConditions\'" [label]="\'I accept Terms and Conditions\'" zone="zLeft"\n                rank="3">\n                <fdp-checkbox [name]="\'termsAndConditions-cb\'" [isBinary]="true" [formControl]="ffr2.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 [id]="\'marketing\'" [label]="\'I want to receive Marketing Materials\'" zone="zLeft"\n                rank="3">\n                <fdp-checkbox [name]="\'marketing-cb\'" [isBinary]="true" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 [id]="\'newsletter\'" [label]="\'I want want to sign for a Newsletter\'" zone="zLeft"\n                rank="4">\n                <fdp-checkbox [name]="\'newsletter-cb\'" [isBinary]="true" [formControl]="ffr4.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required">\n                    value is required\n                </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>',w="import { Component, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean = null;\n    public busan = true;\n    public dubrovnik: boolean = null;\n    public jaipur: boolean = null;\n\n    public cities = new FormGroup({});\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public registrationForm = new FormGroup({\n        agreements: new FormGroup({})\n    });\n\n    public choices: Object = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements').patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean,\n        public athens: string | boolean,\n        public sydney: string | boolean\n    ) {}\n}\n",z='<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'a11y1\'" [noLabelLayout]="true" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'checkboxA11y1\'" [isBinary]="true" ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'a11y2\'" zone="zLeft" rank="2">\n        <fdp-checkbox [name]="\'checkboxA11y2\'" [isBinary]="true" ariaLabelledBy="checkboxLable"\n            [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'a11y3\'" [label]="\'Disabled checkbox using aria-disabled\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'checkboxA11y3\'" [isBinary]="true" title="It is a disabled checkbox" disabled="true"\n            [(ngModel)]="checkboxA11y3"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',L="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",B=t("EM62"),j=t("9Cr2"),V=t("Zn6N"),D=t("dB5E"),T=t("nIj0"),S=t("+lTP"),G=t("twBq"),O=t("j6Nu"),P=t("2kYt"),Y=function(){function e(){this.customForm=new T.k({}),this.data=new I(!1,!0),this.yellow=!1,this.white=!0}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:53,consts:[[3,"multiLayout","noLabelLayout"],["zone","zLeft","rank","4",3,"id","label","noLabelLayout","editable"],[3,"name","isBinary","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["zone","zLeft","rank","4",3,"id","label"],["title","White",3,"name","isBinary","ngModel","ngModelChange"],["title","Violet",3,"name","isBinary","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"multiLayout","formGroup","object"],["red",""],["title","Red",3,"name","isBinary","contentDensity","formControl","checkedChange","indeterminateChange","change"],["blue",""],["title","Blue",3,"name","isBinary","contentDensity","formControl"],["green",""],["title","Green",3,"name","isBinary","contentDensity","formControl"],[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","label"],["disabled",""],["title","Red",3,"name","isBinary","contentDensity","disabled","checkedChange","indeterminateChange","change"]],template:function(e,n){if(1&e&&(B.Rb(0,"h3"),B.Rc(1,"Binary Checkbox in Template Driven Form"),B.Qb(),B.Rb(2,"fdp-form-group",0),B.Rb(3,"fdp-form-field",1),B.Rb(4,"fdp-checkbox",2),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)}))("ngModelChange",(function(e){return n.yellow=e})),B.Qb(),B.Qb(),B.Rb(5,"fdp-form-field",3),B.Rb(6,"fdp-checkbox",4),B.dc("ngModelChange",(function(e){return n.white=e})),B.Qb(),B.Qb(),B.Rb(7,"fdp-form-field",3),B.Rb(8,"fdp-checkbox",5),B.dc("ngModelChange",(function(e){return n.violet=e})),B.Qb(),B.Qb(),B.Qb(),B.Rb(9,"div",6),B.Rb(10,"div"),B.Rc(11),B.Qb(),B.Rb(12,"div"),B.Rc(13),B.Qb(),B.Rb(14,"div"),B.Rc(15),B.Qb(),B.Qb(),B.Mb(16,"br"),B.Mb(17,"br"),B.Rb(18,"h3"),B.Rc(19,"Binary Checkbox in Reactive/Model Driven Form"),B.Qb(),B.Rb(20,"fdp-form-group",7),B.Rb(21,"fdp-form-field",3,8),B.Rb(23,"fdp-checkbox",9),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Qb(),B.Rb(24,"fdp-form-field",3,10),B.Mb(26,"fdp-checkbox",11),B.Qb(),B.Rb(27,"fdp-form-field",3,12),B.Mb(29,"fdp-checkbox",13),B.Qb(),B.Qb(),B.Rb(30,"div",6),B.Rc(31),B.ic(32,"json"),B.Qb(),B.Rb(33,"h3"),B.Rc(34,"Disabled Checkbox"),B.Qb(),B.Rb(35,"fdp-form-group",14),B.Rb(36,"fdp-form-field",15,16),B.Rb(38,"fdp-checkbox",17),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Qb(),B.Qb()),2&e){var t=B.Cc(22),o=B.Cc(25),a=B.Cc(28);B.Ab(2),B.pc("multiLayout",!0)("noLabelLayout",!1),B.Ab(1),B.pc("id","yellow")("label","Yellow")("noLabelLayout",!0)("editable",!0),B.Ab(1),B.pc("name","yellow-cb")("isBinary",!0)("ngModel",n.yellow),B.Ab(1),B.pc("id","white")("label","White"),B.Ab(1),B.pc("name","white-cb")("isBinary",!0)("ngModel",n.white),B.Ab(1),B.pc("id","violet")("label","Violet"),B.Ab(1),B.pc("name","violet-cb")("isBinary",!0)("ngModel",n.violet),B.Ab(3),B.Tc("Yellow: ",n.yellow,""),B.Ab(2),B.Tc("White: ",n.white,""),B.Ab(2),B.Tc("Violet: ",n.violet,""),B.Ab(5),B.pc("multiLayout",!0)("formGroup",n.customForm)("object",n.data),B.Ab(1),B.pc("id","red")("label","Red"),B.Ab(2),B.pc("name","red-cb")("isBinary",!0)("contentDensity","compact")("formControl",t.formControl),B.Ab(1),B.pc("id","blue")("label","Blue"),B.Ab(2),B.pc("name","blue-cb")("isBinary",!0)("contentDensity","compact")("formControl",o.formControl),B.Ab(1),B.pc("id","green")("label","Green"),B.Ab(2),B.pc("name","green-cb")("isBinary",!0)("contentDensity","compact")("formControl",a.formControl),B.Ab(2),B.Tc("form value: ",B.jc(32,51,n.customForm.getRawValue()),""),B.Ab(4),B.pc("multiLayout",!0),B.Ab(1),B.pc("id","disabled")("label","Red"),B.Ab(2),B.pc("name","disabled-cb")("isBinary",!0)("contentDensity","compact")("disabled",!0)}},directives:[S.a,G.a,O.a,T.t,T.w,T.u,T.l,T.i],pipes:[P.k],encapsulation:2}),e}(),I=function(){return function(e,n,t){this.red=e,this.blue=n,this.green=t}}(),N=t("gJWE"),W=t("ekBi"),E=function(){function e(){this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:27,consts:[["title","Orion",3,"name","isBinary","label","value","checked","checkedChange","indeterminateChange","change"],["title","Cygnus",3,"name","isBinary","label","value","checked","checkedChange"],["title","Lyra",3,"name","isBinary","label","checked","checkedChange"],["title","Gemini",3,"name","isBinary","label","checked","checkedChange"],["title","Orion",3,"name","isBinary","label","checked","disabled","checkedChange"]],template:function(e,n){1&e&&(B.Rb(0,"h3"),B.Rc(1,"Binary Checkbox With Value"),B.Qb(),B.Rb(2,"fdp-checkbox",0),B.dc("checkedChange",(function(e){return n.orion=e}))("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Rb(3,"div"),B.Rc(4),B.Qb(),B.Rb(5,"fdp-checkbox",1),B.dc("checkedChange",(function(e){return n.cygnus=e})),B.Qb(),B.Rb(6,"div"),B.Rc(7),B.Qb(),B.Mb(8,"br"),B.Mb(9,"br"),B.Rb(10,"h3"),B.Rc(11,"Binary Checkbox Without Value"),B.Qb(),B.Rb(12,"fdp-checkbox",2),B.dc("checkedChange",(function(e){return n.lyra=e})),B.Qb(),B.Rb(13,"div"),B.Rc(14),B.Qb(),B.Rb(15,"fdp-checkbox",3),B.dc("checkedChange",(function(e){return n.gemini=e})),B.Qb(),B.Rb(16,"div"),B.Rc(17),B.Qb(),B.Rb(18,"h3"),B.Rc(19,"Disabled Checkbox"),B.Qb(),B.Rb(20,"fdp-checkbox",4),B.dc("checkedChange",(function(e){return n.orion=e})),B.Qb()),2&e&&(B.Ab(2),B.pc("name","orion")("isBinary",!0)("label","Orion")("value","orion")("checked",n.orion),B.Ab(2),B.Tc("value: ",n.orion,""),B.Ab(1),B.pc("name","cygnus")("isBinary",!0)("label","Cygnus")("value","cygnus")("checked",n.cygnus),B.Ab(2),B.Tc("value: ",n.cygnus,""),B.Ab(5),B.pc("name","lyra")("isBinary",!0)("label","Lyra")("checked",n.lyra),B.Ab(2),B.Tc("value: ",n.lyra,""),B.Ab(1),B.pc("name","gemini")("isBinary",!0)("label","Gemini")("checked",n.gemini),B.Ab(2),B.Tc("value: ",n.gemini,""),B.Ab(3),B.pc("name","orion")("isBinary",!0)("label","Orion")("checked",n.orion)("disabled",!0))},directives:[O.a],encapsulation:2}),e}(),$=function(){function e(){this.field1=[],this.field2=["vega"],this.field3=[],this.field4=["altair","deneb"],this.form1=new T.k({}),this.form1Data=new q([],["newton"]),this.form2=new T.k({}),this.form3=new T.k({}),this.form3data=new J(["faraday","edison"])}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:31,consts:[[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","label"],["title","sirius",3,"name","value","ngModel","ngModelChange"],["zone","zRight","rank","1",3,"id","label"],["title","Vega",3,"name","value","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"multiLayout","formGroup","object"],["rmsfg",""],["rfield1",""],["title","Albert Einstein",3,"name","value","contentDensity","formControl"],["rfield2",""],["title","Issac Newton",3,"name","value","contentDensity","formControl"]],template:function(e,n){if(1&e&&(B.Rb(0,"h3"),B.Rc(1,"Template Driven Form"),B.Qb(),B.Rb(2,"p"),B.Rc(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),B.Qb(),B.Rb(4,"fdp-form-group",0),B.Rb(5,"fdp-form-field",1),B.Rb(6,"fdp-checkbox",2),B.dc("ngModelChange",(function(e){return n.field1=e})),B.Qb(),B.Qb(),B.Rb(7,"fdp-form-field",3),B.Rb(8,"fdp-checkbox",4),B.dc("ngModelChange",(function(e){return n.field2=e})),B.Qb(),B.Qb(),B.Qb(),B.Rb(9,"div",5),B.Rc(10),B.Qb(),B.Rb(11,"div",5),B.Rc(12),B.Qb(),B.Mb(13,"br"),B.Mb(14,"br"),B.Rb(15,"h3"),B.Rc(16,"Reactive/Model Driven Form"),B.Qb(),B.Rb(17,"p"),B.Rc(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),B.Qb(),B.Rb(19,"fdp-form-group",6,7),B.Rb(21,"fdp-form-field",1,8),B.Mb(23,"fdp-checkbox",9),B.Qb(),B.Rb(24,"fdp-form-field",3,10),B.Mb(26,"fdp-checkbox",11),B.Qb(),B.Qb(),B.Rb(27,"div",5),B.Rc(28),B.ic(29,"json"),B.Qb()),2&e){var t=B.Cc(22),o=B.Cc(25);B.Ab(4),B.pc("multiLayout",!0),B.Ab(1),B.pc("id","sirius")("label","Sirius"),B.Ab(1),B.pc("name","sirius-cb")("value","sirius")("ngModel",n.field1),B.Ab(1),B.pc("id","vega")("label","Vega"),B.Ab(1),B.pc("name","vega-cb")("value","vega")("ngModel",n.field2),B.Ab(2),B.Tc("field1: ",n.field1,""),B.Ab(2),B.Tc("field2: ",n.field2,""),B.Ab(7),B.pc("multiLayout",!0)("formGroup",n.form1)("object",n.form1Data),B.Ab(2),B.pc("id","einstein")("label","Einstein"),B.Ab(2),B.pc("name","einstein-cb")("value","einstein")("contentDensity","compact")("formControl",t.formControl),B.Ab(1),B.pc("id","newton")("label","Newton"),B.Ab(2),B.pc("name","newton-cb")("value","newton")("contentDensity","compact")("formControl",o.formControl),B.Ab(2),B.Tc("form value: ",B.jc(29,29,n.form1.getRawValue()),"")}},directives:[S.a,G.a,O.a,T.t,T.w,T.u,T.l,T.i],pipes:[P.k],encapsulation:2}),e}(),q=function(){return function(e,n){this.einstein=e,this.newton=n}}(),J=function(){return function(e){this.scientists=e}}(),U=t("YtkY");function H(e,n){1&e&&(B.Pb(0),B.Rc(1," value is required "),B.Ob())}function K(e,n){1&e&&B.Pc(0,H,2,0,"ng-container",48),2&e&&B.pc("ngIf",n.$implicit.required)}var Z=function(){function e(){this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new T.k({}),this.citiesData=new X(!1,"Yes",null,!1,!0,null,null,!1),this.registrationForm=new T.k({agreements:new T.k({})}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}return e.prototype.ngAfterViewInit=function(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()},e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.prototype.setAgreementsOnAcceptAllChange=function(){var e=this;this.registrationForm.get("acceptAll").valueChanges.subscribe((function(n){return e.acceptAll(n)}))},e.prototype.setControlOnAgreementsChange=function(){var e=this;this.registrationForm.get("agreements").valueChanges.pipe(Object(U.a)((function(n){return e.getValuesFromObject(n)})),Object(U.a)((function(e){var n=e.reduce((function(e,n){return n&&e}),!0),t=e.reduce((function(e,n){return!n&&e}),!0);return!!n||!t&&null}))).subscribe((function(n){return e.setAcceptAll(n)}))},e.prototype.acceptAll=function(e){null!==e&&this.registrationForm.get("agreements").patchValue({marketing:e,newsletter:e,termsAndConditions:e},{emitEvent:!1})},e.prototype.setAcceptAll=function(e){var n;(null===(n=this.registrationForm.get("acceptAll"))||void 0===n?void 0:n.value)!==e&&this.registrationForm.patchValue({acceptAll:e},{emitEvent:!1})},e.prototype.getValuesFromObject=function(e){return Object.keys(e).map((function(n){return e[n]}))},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:134,consts:[[3,"multiLayout","formGroup","object"],["zone","zLeft","rank","1",3,"id","label"],["paris",""],[3,"name","value","tristate","formControl","checkedChange","indeterminateChange","change"],["zone","zLeft","rank","3",3,"id","label"],["doha",""],[3,"name","value","tristate","formControl"],["zone","zLeft","rank","5",3,"id","label"],["amsterdam",""],["zone","zRight","rank","2",3,"id","label"],["venice",""],[3,"name","tristate","formControl","checkedChange","indeterminateChange","change"],["zone","zRight","rank","4",3,"id","label"],["kyoto",""],[3,"name","tristate","formControl"],["zone","zRight","rank","6",3,"id","label"],["barcelona",""],["zone","zLeft","rank","7",3,"id","label"],["athens",""],[3,"name","value","tristate","tristateSelectable","formControl"],["zone","zRight","rank","8",3,"id","label"],["sydney",""],[3,"name","tristate","tristateSelectable","formControl"],[3,"multiLayout"],[3,"name","value","tristate","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],[3,"name","value","tristate","ngModel","ngModelChange"],[3,"name","tristate","ngModel","ngModelChange","checkedChange","indeterminateChange","change"],[3,"name","tristate","ngModel","ngModelChange"],[3,"name","value","tristate","tristateSelectable","ngModel","ngModelChange"],["zone","zRight","rank","7",3,"id","label"],[3,"name","tristate","tristateSelectable","ngModel","ngModelChange"],["zone","zLeft"],["zone","zRight"],[3,"formGroup"],["form","ngForm"],[3,"multiLayout","formGroup"],["fgtristate",""],["ffr1",""],[3,"name","tristate","tristateSelectable","value","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["ffr2",""],[3,"name","isBinary","formControl"],["ffr3",""],["zone","zLeft","rank","4",3,"id","label"],["ffr4",""],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(B.Rb(0,"h3"),B.Rc(1,"Reactive Form: TriState Checkbox With Value and Without Value"),B.Qb(),B.Rb(2,"fdp-form-group",0),B.Rb(3,"fdp-form-field",1,2),B.Rb(5,"fdp-checkbox",3),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Qb(),B.Rb(6,"fdp-form-field",4,5),B.Mb(8,"fdp-checkbox",6),B.Qb(),B.Rb(9,"fdp-form-field",7,8),B.Mb(11,"fdp-checkbox",6),B.Qb(),B.Rb(12,"fdp-form-field",9,10),B.Rb(14,"fdp-checkbox",11),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Qb(),B.Rb(15,"fdp-form-field",12,13),B.Mb(17,"fdp-checkbox",14),B.Qb(),B.Rb(18,"fdp-form-field",15,16),B.Mb(20,"fdp-checkbox",14),B.Qb(),B.Rb(21,"fdp-form-field",17,18),B.Mb(23,"fdp-checkbox",19),B.Qb(),B.Rb(24,"fdp-form-field",20,21),B.Mb(26,"fdp-checkbox",22),B.Qb(),B.Qb(),B.Rb(27,"div"),B.Rc(28),B.ic(29,"json"),B.Qb(),B.Mb(30,"br"),B.Mb(31,"br"),B.Rb(32,"h3"),B.Rc(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),B.Qb(),B.Rb(34,"fdp-form-group",23),B.Rb(35,"fdp-form-field",1),B.Rb(36,"fdp-checkbox",24),B.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)}))("ngModelChange",(function(e){return n.havana=e})),B.Qb(),B.Qb(),B.Rb(37,"fdp-form-field",4),B.Rb(38,"fdp-checkbox",25),B.dc("ngModelChange",(function(e){return n.beirut=e})),B.Qb(),B.Qb(),B.Rb(39,"fdp-form-field",7),B.Rb(40,"fdp-checkbox",25),B.dc("ngModelChange",(function(e){return n.budapest=e})),B.Qb(),B.Qb(),B.Rb(41,"fdp-form-field",9),B.Rb(42,"fdp-checkbox",26),B.dc("ngModelChange",(function(e){return n.lisbon=e}))("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),B.Qb(),B.Qb(),B.Rb(43,"fdp-form-field",12),B.Rb(44,"fdp-checkbox",27),B.dc("ngModelChange",(function(e){return n.istanbul=e})),B.Qb(),B.Qb(),B.Rb(45,"fdp-form-field",15),B.Rb(46,"fdp-checkbox",27),B.dc("ngModelChange",(function(e){return n.busan=e})),B.Qb(),B.Qb(),B.Rb(47,"fdp-form-field",17),B.Rb(48,"fdp-checkbox",28),B.dc("ngModelChange",(function(e){return n.dubrovnik=e})),B.Qb(),B.Qb(),B.Rb(49,"fdp-form-field",29),B.Rb(50,"fdp-checkbox",30),B.dc("ngModelChange",(function(e){return n.jaipur=e})),B.Qb(),B.Qb(),B.Rb(51,"fdp-form-field",31),B.Rb(52,"div"),B.Rc(53),B.Qb(),B.Rb(54,"div"),B.Rc(55),B.Qb(),B.Rb(56,"div"),B.Rc(57),B.Qb(),B.Rb(58,"div"),B.Rc(59),B.Qb(),B.Qb(),B.Rb(60,"fdp-form-field",32),B.Rb(61,"div"),B.Rc(62),B.Qb(),B.Rb(63,"div"),B.Rc(64),B.Qb(),B.Rb(65,"div"),B.Rc(66),B.Qb(),B.Rb(67,"div"),B.Rc(68),B.Qb(),B.Qb(),B.Qb(),B.Rb(69,"h3"),B.Rc(70,"TriState Checkbox Used with Multiple checkboxes"),B.Qb(),B.Rb(71,"form",33,34),B.Rb(73,"fdp-form-group",35,36),B.Rb(75,"fdp-form-field",1,37),B.Mb(77,"fdp-checkbox",38),B.Qb(),B.Qb(),B.Rb(78,"div",39),B.Rb(79,"fdp-form-group",40,41),B.Rb(81,"fdp-form-field",4,42),B.Mb(83,"fdp-checkbox",43),B.Qb(),B.Rb(84,"fdp-form-field",4,44),B.Mb(86,"fdp-checkbox",43),B.Qb(),B.Rb(87,"fdp-form-field",45,46),B.Mb(89,"fdp-checkbox",43),B.Qb(),B.Pc(90,K,1,1,"ng-template",null,47,B.Qc),B.Qb(),B.Qb(),B.Qb()),2&e){var t=B.Cc(4),o=B.Cc(7),a=B.Cc(10),r=B.Cc(13),i=B.Cc(16),c=B.Cc(19),l=B.Cc(22),b=B.Cc(25),d=B.Cc(76),f=B.Cc(82),m=B.Cc(85),u=B.Cc(88);B.Ab(2),B.pc("multiLayout",!0)("formGroup",n.cities)("object",n.citiesData),B.Ab(1),B.pc("id","paris")("label","Paris"),B.Ab(2),B.pc("name","paris-cb")("value","Yes")("tristate",!0)("formControl",t.formControl),B.Ab(1),B.pc("id","doha")("label","Doha"),B.Ab(2),B.pc("name","doha-cb")("value","Yes")("tristate",!0)("formControl",o.formControl),B.Ab(1),B.pc("id","amsterdam")("label","Amsterdam"),B.Ab(2),B.pc("name","amsterdam-cb")("value","Yes")("tristate",!0)("formControl",a.formControl),B.Ab(1),B.pc("id","venice")("label","Venice"),B.Ab(2),B.pc("name","venice-cb")("tristate",!0)("formControl",r.formControl),B.Ab(1),B.pc("id","kyoto")("label","Kyoto"),B.Ab(2),B.pc("name","kyoto-cb")("tristate",!0)("formControl",i.formControl),B.Ab(1),B.pc("id","barcelona")("label","Barcelona"),B.Ab(2),B.pc("name","barcelona-cb")("tristate",!0)("formControl",c.formControl),B.Ab(1),B.pc("id","athens")("label","athens: tristateSelectable false"),B.Ab(2),B.pc("name","athens-cb")("value","Yes")("tristate",!0)("tristateSelectable",!1)("formControl",l.formControl),B.Ab(1),B.pc("id","sydney")("label","Sydney: tristateSelectable false"),B.Ab(2),B.pc("name","sydney-cb")("tristate",!0)("tristateSelectable",!1)("formControl",b.formControl),B.Ab(2),B.Tc("form value: ",B.jc(29,132,n.cities.getRawValue()),""),B.Ab(6),B.pc("multiLayout",!0),B.Ab(1),B.pc("id","havana")("label","Havana"),B.Ab(1),B.pc("name","havana-cb")("value","Yes")("tristate",!0)("ngModel",n.havana),B.Ab(1),B.pc("id","beirut")("label","Beirut"),B.Ab(1),B.pc("name","beirut-cb")("value","Yes")("tristate",!0)("ngModel",n.beirut),B.Ab(1),B.pc("id","budapest")("label","Budapest"),B.Ab(1),B.pc("name","budapest-cb")("value","Yes")("tristate",!0)("ngModel",n.budapest),B.Ab(1),B.pc("id","lisbon")("label","Lisbon"),B.Ab(1),B.pc("name","lisbon-cb")("tristate",!0)("ngModel",n.lisbon),B.Ab(1),B.pc("id","istanbul")("label","Istanbul"),B.Ab(1),B.pc("name","istanbul-cb")("tristate",!0)("ngModel",n.istanbul),B.Ab(1),B.pc("id","busan")("label","Busan"),B.Ab(1),B.pc("name","busan-cb")("tristate",!0)("ngModel",n.busan),B.Ab(1),B.pc("id","dubrovnik")("label","Dubrovnik: tristateSelectable false"),B.Ab(1),B.pc("name","dubrovnik-cb")("value","Yes")("tristate",!0)("tristateSelectable",!1)("ngModel",n.dubrovnik),B.Ab(1),B.pc("id","jaipur")("label","Jaipur: tristateSelectable false"),B.Ab(1),B.pc("name","jaipur-cb")("tristate",!0)("tristateSelectable",!1)("ngModel",n.jaipur),B.Ab(3),B.Tc("Havana: ",n.havana,""),B.Ab(2),B.Tc("Beirut: ",n.beirut,""),B.Ab(2),B.Tc("Budapest: ",n.budapest,""),B.Ab(2),B.Tc("Dubrovnik: ",n.dubrovnik,""),B.Ab(3),B.Tc("Lisbon: ",n.lisbon,""),B.Ab(2),B.Tc("Istanbul: ",n.istanbul,""),B.Ab(2),B.Tc("Busan: ",n.busan,""),B.Ab(2),B.Tc("Jaipur: ",n.jaipur,""),B.Ab(3),B.pc("formGroup",n.registrationForm),B.Ab(2),B.pc("multiLayout",!0)("formGroup",n.registrationForm),B.Ab(2),B.pc("id","acceptAll")("label","Accept All"),B.Ab(2),B.pc("name","all")("tristate",!0)("tristateSelectable",!1)("value",!1)("formControl",d.formControl),B.Ab(2),B.pc("formGroup",n.registrationForm.get("agreements"))("object",n.choices),B.Ab(2),B.pc("id","termsAndConditions")("label","I accept Terms and Conditions"),B.Ab(2),B.pc("name","termsAndConditions-cb")("isBinary",!0)("formControl",f.formControl),B.Ab(1),B.pc("id","marketing")("label","I want to receive Marketing Materials"),B.Ab(2),B.pc("name","marketing-cb")("isBinary",!0)("formControl",m.formControl),B.Ab(1),B.pc("id","newsletter")("label","I want want to sign for a Newsletter"),B.Ab(2),B.pc("name","newsletter-cb")("isBinary",!0)("formControl",u.formControl)}},directives:[S.a,T.u,T.l,G.a,O.a,T.t,T.i,T.w,T.J,P.t],pipes:[P.k],encapsulation:2}),e}(),X=function(){return function(e,n,t,o,a,r,i,c){this.paris=e,this.doha=n,this.amsterdam=t,this.venice=o,this.kyoto=a,this.barcelona=r,this.athens=i,this.sydney=c}}(),_=t("GY/j");function ee(e,n){1&e&&(B.Rb(0,"span"),B.Rc(1," Value is required "),B.Qb())}function ne(e,n){1&e&&(B.Rb(0,"span"),B.Rc(1," Value is invalid "),B.Qb())}function te(e,n){if(1&e&&(B.Pc(0,ee,2,0,"span",12),B.Pc(1,ne,2,0,"span",12)),2&e){var t=n.$implicit;B.pc("ngIf",t.required),B.Ab(1),B.pc("ngIf",t.invalid)}}var oe=function(){function e(){this.customForm=new T.k({}),this.validators=[T.H.requiredTrue],this.data=new ae(!0,!0)}return e.prototype.onSubmit=function(){alert("Status: "+this.customForm.status)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-checkbox-error-handling"]],decls:24,vars:28,consts:[[3,"hintPlacement","multiLayout","formGroup","object"],["fg",""],["zone","zLeft",3,"id","validators","label","hint","hintPlacement","rank"],["ffr1",""],["title","Your presence is necessary",3,"name","isBinary","formControl"],["zone","zRight",3,"id","validators","hint","hintPlacement","rank"],["ffr2",""],["title","Agree with terms",3,"name","isBinary","formControl"],["href","#"],["id","button-1","zone","zRight",3,"rank"],["buttonType","emphasized","label","Submit",3,"click"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(B.Rb(0,"h3"),B.Rc(1,"Checkbox Error Handling"),B.Qb(),B.Rb(2,"fdp-form-group",0,1),B.Rb(4,"fdp-form-field",2,3),B.Mb(6,"fdp-checkbox",4),B.Qb(),B.Rb(7,"fdp-form-field",5,6),B.Rb(9,"fdp-checkbox",7),B.Rc(10," Do you Agree with "),B.Rb(11,"a",8),B.Rc(12," Terms and Conditions"),B.Qb(),B.Rc(13,"? "),B.Qb(),B.Qb(),B.Rb(14,"fdp-form-field",9),B.Rb(15,"fdp-button",10),B.dc("click",(function(){return n.onSubmit()})),B.Qb(),B.Qb(),B.Pc(16,te,2,2,"ng-template",null,11,B.Qc),B.Qb(),B.Rb(18,"p"),B.Rc(19),B.ic(20,"json"),B.Qb(),B.Rb(21,"p"),B.Rc(22),B.ic(23,"json"),B.Qb()),2&e){var t=B.Cc(5),o=B.Cc(8);B.Ab(2),B.pc("hintPlacement","left")("multiLayout",!0)("formGroup",n.customForm)("object",n.data),B.Ab(2),B.pc("id","presence")("validators",n.validators)("label","Your presence is necessary")("hint","presence is necessary")("hintPlacement","left")("rank",10),B.Ab(2),B.pc("name","presence-cb")("isBinary",!0)("formControl",t.formControl),B.Ab(1),B.pc("id","aggrement")("validators",n.validators)("hint","this selection is mandatory")("hintPlacement","left")("rank",15),B.Ab(2),B.pc("name","aggrement-cb")("isBinary",!0)("formControl",o.formControl),B.Ab(5),B.pc("rank",20),B.Ab(5),B.Tc("Form value: ",B.jc(20,24,n.customForm.getRawValue()),""),B.Ab(3),B.Tc("Form Status: ",B.jc(23,26,n.customForm.status),"")}},directives:[S.a,T.u,T.l,G.a,O.a,T.t,T.i,_.a,P.t],pipes:[P.k],encapsulation:2}),e}(),ae=function(){return function(e,n){this.presence=e,this.aggrement=n}}(),re=function(){function e(){this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:15,consts:[["id","checkboxLable"],[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","noLabelLayout"],["ariaLabel","checkbox using aria-label",3,"name","isBinary","ngModel","ngModelChange"],["zone","zLeft","rank","2",3,"id"],["ariaLabelledBy","checkboxLable",3,"name","isBinary","ngModel","ngModelChange"],["zone","zLeft","rank","3",3,"id","label"],["title","It is a disabled checkbox","disabled","true",3,"name","isBinary","ngModel","ngModelChange"]],template:function(e,n){1&e&&(B.Rb(0,"h3"),B.Rc(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),B.Qb(),B.Rb(2,"p",0),B.Rc(3,"checkbox using aria-labelledby"),B.Qb(),B.Rb(4,"fdp-form-group",1),B.Rb(5,"fdp-form-field",2),B.Rb(6,"fdp-checkbox",3),B.dc("ngModelChange",(function(e){return n.checkboxA11y1=e})),B.Qb(),B.Qb(),B.Rb(7,"fdp-form-field",4),B.Rb(8,"fdp-checkbox",5),B.dc("ngModelChange",(function(e){return n.checkboxA11y2=e})),B.Qb(),B.Qb(),B.Rb(9,"fdp-form-field",6),B.Rb(10,"fdp-checkbox",7),B.dc("ngModelChange",(function(e){return n.checkboxA11y3=e})),B.Qb(),B.Qb(),B.Qb()),2&e&&(B.Ab(4),B.pc("multiLayout",!0),B.Ab(1),B.pc("id","a11y1")("noLabelLayout",!0),B.Ab(1),B.pc("name","checkboxA11y1")("isBinary",!0)("ngModel",n.checkboxA11y1),B.Ab(1),B.pc("id","a11y2"),B.Ab(1),B.pc("name","checkboxA11y2")("isBinary",!0)("ngModel",n.checkboxA11y2),B.Ab(1),B.pc("id","a11y3")("label","Disabled checkbox using aria-disabled"),B.Ab(1),B.pc("name","checkboxA11y3")("isBinary",!0)("ngModel",n.checkboxA11y3))},directives:[S.a,G.a,O.a,T.t,T.w],encapsulation:2}),e}(),ie=function(){function e(){this.multiselectCheckbox=[{language:"html",code:o,fileName:"platform-multiselect-checkbox"},{language:"typescript",code:a,fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:r,fileName:"platform-binary-checkbox"},{language:"typescript",code:i,fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:c,fileName:"platform-checkbox-error-handling"},{language:"typescript",code:l,fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:b,fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:d,fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:f,fileName:"platform-tristate-checkbox"},{language:"typescript",code:m,fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:u,fileName:"platform-checkbox-a11y"},{language:"typescript",code:s,fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["app-checkbox"]],decls:57,vars:18,consts:[[3,"id","componentName"],[3,"exampleFiles"],[2,"list-style-type","circle"]],template:function(e,n){1&e&&(B.Rb(0,"fd-docs-section-title",0),B.Rc(1," Binary Checkbox Used With Form\n"),B.Qb(),B.Rb(2,"description"),B.Rc(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),B.Qb(),B.Rb(4,"component-example"),B.Mb(5,"fdp-platform-binary-checkbox"),B.Qb(),B.Mb(6,"code-example",1),B.Mb(7,"separator"),B.Rb(8,"fd-docs-section-title",0),B.Rc(9," Checkbox Used Without Form\n"),B.Qb(),B.Rb(10,"description"),B.Rc(11," This example shows Binary Checkbox without form "),B.Rb(12,"ul",2),B.Rb(13,"li"),B.Rc(14,"checkbox with value property"),B.Qb(),B.Rb(15,"li"),B.Rc(16,"checkbox without value property"),B.Qb(),B.Qb(),B.Qb(),B.Rb(17,"component-example"),B.Mb(18,"fdp-platform-binary-checkbox-no-form"),B.Qb(),B.Mb(19,"code-example",1),B.Mb(20,"separator"),B.Rb(21,"fd-docs-section-title",0),B.Rc(22," Checkboxes With Value Property\n"),B.Qb(),B.Rb(23,"description"),B.Rc(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),B.Qb(),B.Rb(25,"component-example"),B.Mb(26,"fdp-platform-multiselect-checkbox"),B.Qb(),B.Mb(27,"code-example",1),B.Mb(28,"separator"),B.Rb(29,"fd-docs-section-title",0),B.Rc(30," Tistate Checkbox With Value Property and Without Value Property\n"),B.Qb(),B.Rb(31,"description"),B.Rc(32," This example shows tristate checkbox in Reactive form and Template driven form "),B.Rb(33,"ul",2),B.Rb(34,"li"),B.Rc(35,"Tristate checkbox with value property"),B.Qb(),B.Rb(36,"li"),B.Rc(37,"Tristate checkbox without value property"),B.Qb(),B.Qb(),B.Qb(),B.Rb(38,"component-example"),B.Mb(39,"fdp-platform-tristate-checkbox"),B.Qb(),B.Mb(40,"code-example",1),B.Mb(41,"separator"),B.Rb(42,"fd-docs-section-title",0),B.Rc(43," Checkbox With Form and State Change on Error\n"),B.Qb(),B.Rb(44,"description"),B.Rc(45,"This example shows Checkbox Error state, when form has error "),B.Qb(),B.Rb(46,"component-example"),B.Mb(47,"fdp-platform-checkbox-error-handling"),B.Qb(),B.Mb(48,"code-example",1),B.Mb(49,"separator"),B.Rb(50,"fd-docs-section-title",0),B.Rc(51," Accessibility on checkbox\n"),B.Qb(),B.Rb(52,"description"),B.Rc(53,"This example shows Checkbox accessibility"),B.Qb(),B.Rb(54,"component-example"),B.Mb(55,"fdp-platform-checkbox-a11y"),B.Qb(),B.Mb(56,"code-example",1)),2&e&&(B.pc("id","def1")("componentName","CheckboxComponent"),B.Ab(6),B.pc("exampleFiles",n.binaryCheckbox),B.Ab(2),B.pc("id","def5")("componentName","CheckboxComponent"),B.Ab(11),B.pc("exampleFiles",n.noFormCheckbox),B.Ab(2),B.pc("id","def2")("componentName","CheckboxComponent"),B.Ab(6),B.pc("exampleFiles",n.multiselectCheckbox),B.Ab(2),B.pc("id","def3")("componentName","CheckboxComponent"),B.Ab(11),B.pc("exampleFiles",n.triCheckbox),B.Ab(2),B.pc("id","def4")("componentName","CheckboxComponent"),B.Ab(6),B.pc("exampleFiles",n.errorCheckbox),B.Ab(2),B.pc("id","a1yExample")("componentName","PlatformCheckboxA11yComponent"),B.Ab(6),B.pc("exampleFiles",n.a11yCheckbox))},directives:[j.a,V.a,D.a,Y,N.a,W.a,E,$,Z,oe,re],encapsulation:2}),e}(),ce=t("P+xO"),le=t("7o9V"),be=t("h8DJ"),de=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Fb({type:e,selectors:[["app-checkbox-header"]],decls:22,vars:2,consts:[[3,"routerLink"],["module","PlatformCheckboxModule"]],template:function(e,n){1&e&&(B.Rb(0,"header"),B.Rc(1,"Checkbox"),B.Qb(),B.Rb(2,"description"),B.Rc(3," This is an extension of the Checkbox component present in "),B.Rb(4,"a",0),B.Rc(5,"ngx-core"),B.Qb(),B.Rc(6,". "),B.Mb(7,"br"),B.Rc(8," For usecase of Multiple checkboxes selection, please see "),B.Rb(9,"a",0),B.Rc(10,"Checkbox Group"),B.Qb(),B.Rc(11,". "),B.Rb(12,"h3"),B.Rc(13,"Platform specific enhancements:"),B.Qb(),B.Rb(14,"ul"),B.Rb(15,"li"),B.Rc(16," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),B.Qb(),B.Rb(17,"li"),B.Rc(18,'Platform checkbox can be used outside form using "checked" property two way binding.'),B.Qb(),B.Qb(),B.Qb(),B.Mb(19,"import",1),B.Mb(20,"fd-header-tabs"),B.Mb(21,"router-outlet")),2&e&&(B.Ab(4),B.pc("routerLink","/core/checkbox"),B.Ab(5),B.pc("routerLink","/platform/checkbox"))},directives:[ce.a,V.a,p.e,le.a,be.a,p.g],encapsulation:2}),e}(),fe=t("63W6"),me=[{path:"",component:de,children:[{path:"",component:ie},{path:"api",component:h.a,data:{content:g.a.checkbox}}]}],ue=function(){function e(){}return e.\u0275mod=B.Jb({type:e}),e.\u0275inj=B.Ib({factory:function(n){return new(n||e)},imports:[[p.f.forChild(me),k.a,fe.PlatformCheckboxModule,fe.FdpFormGroupModule,fe.PlatformButtonModule],p.f]}),e}()}}]);