"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6220],{26220:(m,x,a)=>{a.r(x),a.d(x,{CheckboxDocsModule:()=>Y});var u=a(8674),g=a(36854),C=a(31768),e=a(5e3),k=a(24882),d=a(44969),v=a(98791),Z=a(63710);let A=(()=>{class o{}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["app-select-header"]],decls:12,vars:0,consts:[["module","CheckboxModule","subPackage","checkbox"]],template:function(n,t){1&n&&(e.TgZ(0,"header"),e._uU(1,"Checkbox"),e.qZA(),e.TgZ(2,"description")(3,"p"),e._uU(4," A checkbox lets the user set a binary value (such as \u201ctrue/false\u201d). When the user clicks the checkbox, it toggles between checked and unchecked. Checked means that the state described by the checkbox text applies, or that the item has been chosen. The checkbox component can be disabled and also displayed in a row. "),e.qZA(),e.TgZ(5,"p")(6,"b"),e._uU(7,"Keyboard navigation"),e.qZA(),e._uU(8,": use the tab key to navigate the checkboxes and the space bar to toggle them."),e.qZA()(),e._UZ(9,"import",0)(10,"fd-header-tabs")(11,"router-outlet"))},directives:[k.G,d.w,v.k,Z.c,u.lC],encapsulation:2}),o})();var V=a(70365),T=a(62444),F=a(39676),U=a(67698),y=a(93943),w=a(28595),i=a(44510),l=a(52382);let M=(()=>{class o{constructor(){this.checkboxValue=!1}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["fd-checkbox-default-example"]],decls:5,vars:3,consts:[["label","Option 1","inputId","defaultCheckbox",3,"ngModel","required","ngModelChange"]],template:function(n,t){1&n&&(e.TgZ(0,"div")(1,"fn-checkbox",0),e.NdJ("ngModelChange",function(r){return t.checkboxValue=r}),e.qZA()(),e.TgZ(2,"p")(3,"i"),e._uU(4),e.qZA()()),2&n&&(e.xp6(1),e.Q6J("ngModel",t.checkboxValue)("required",!0),e.xp6(3),e.hij("Value: ",t.checkboxValue,""))},directives:[i.b,l.JJ,l.On,l.Q7],encapsulation:2}),o})();var E=a(29871),N=a(33089);const b=function(){return{trueValue:"Yes",falseValue:"No"}};let J=(()=>{class o{constructor(){this.checkboxValue1="Yes",this.checkboxValue2="Yes"}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["fd-checkbox-custom-values-example"]],decls:10,vars:8,consts:[["label","I accept the new Terms of Service",3,"values","ngModel","ngModelChange"],["label","Banana is the best fruit",3,"values","ngModel","ngModelChange"]],template:function(n,t){1&n&&(e.TgZ(0,"div")(1,"fn-checkbox",0),e.NdJ("ngModelChange",function(r){return t.checkboxValue1=r}),e.qZA()(),e.TgZ(2,"p")(3,"i"),e._uU(4),e.qZA()(),e.TgZ(5,"div")(6,"fn-checkbox",1),e.NdJ("ngModelChange",function(r){return t.checkboxValue2=r}),e.qZA()(),e.TgZ(7,"p")(8,"i"),e._uU(9),e.qZA()()),2&n&&(e.xp6(1),e.Q6J("values",e.DdM(6,b))("ngModel",t.checkboxValue1),e.xp6(3),e.hij("Value: ",t.checkboxValue1,""),e.xp6(2),e.Q6J("values",e.DdM(7,b))("ngModel",t.checkboxValue2),e.xp6(3),e.hij("Value: ",t.checkboxValue2,""))},directives:[i.b,l.JJ,l.On],encapsulation:2}),o})();var f=a(54004),O=a(69808);let D=(()=>{class o{constructor(){this.registrationForm=new l.cw({acceptAll:new l.NI(!1),agreements:new l.cw({marketing:new l.NI(void 0),newsletter:new l.NI(!1),termsAndConditions:new l.NI(!1)})})}ngOnInit(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()}acceptAll(n){var t;null===(t=this.registrationForm.get("agreements"))||void 0===t||t.setValue({marketing:n,newsletter:n,termsAndConditions:n})}setAgreementsOnAcceptAllChange(){var n;null===(n=this.registrationForm.get("acceptAll"))||void 0===n||n.valueChanges.subscribe(t=>this.acceptAll(t))}setControlOnAgreementsChange(){var n;null===(n=this.registrationForm.get("agreements"))||void 0===n||n.valueChanges.pipe((0,f.U)(t=>this.getValuesFromObject(t)),(0,f.U)(t=>{const s=t.reduce((p,h)=>h&&p,!0),r=t.reduce((p,h)=>!h&&p,!0);return!!s||!r&&null})).subscribe(t=>{var s;return null===(s=this.registrationForm.get("acceptAll"))||void 0===s?void 0:s.setValue(t,{emitEvent:!1})})}getValuesFromObject(n){return Object.keys(n).map(t=>n[t])}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["fd-checkbox-reactive-forms-example"]],decls:11,vars:7,consts:[[3,"formGroup"],["formControlName","acceptAll","label","Accept all"],["formGroupName","agreements",2,"display","flex","flex-direction","column","width","400px"],["formControlName","termsAndConditions","label","I accept Terms and Conditions",3,"isGroup"],["formControlName","marketing","label","I want to receive Marketing Materials",3,"isGroup"],["formControlName","newsletter","label","I want want to sign for a Newsletter",3,"isGroup"]],template:function(n,t){1&n&&(e.TgZ(0,"form",0)(1,"div"),e._UZ(2,"fn-checkbox",1),e.qZA(),e.TgZ(3,"fieldset",2),e._UZ(4,"fn-checkbox",3)(5,"fn-checkbox",4)(6,"fn-checkbox",5),e.qZA()(),e.TgZ(7,"p")(8,"i"),e._uU(9),e.ALo(10,"json"),e.qZA()()),2&n&&(e.Q6J("formGroup",t.registrationForm),e.xp6(4),e.Q6J("isGroup",!0),e.xp6(1),e.Q6J("isGroup",!0),e.xp6(1),e.Q6J("isGroup",!0),e.xp6(3),e.hij("Form value: ",e.lcZ(10,5,t.registrationForm.getRawValue()),""))},directives:[l._Y,l.JL,l.sg,i.b,l.JJ,l.u,l.x0],pipes:[O.Ts],encapsulation:2}),o})();var I=a(44536);function j(o,c){1&o&&(e._uU(0," I accept\xa0"),e.TgZ(1,"a",2),e._uU(2,"Terms and conditions"),e.qZA())}let G=(()=>{class o{constructor(){this.checkboxValue=!1}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["fd-checkbox-custom-label-example"]],decls:6,vars:2,consts:[[3,"ngModel","ngModelChange"],["fnCheckboxLabel",""],["href","#"]],template:function(n,t){1&n&&(e.TgZ(0,"div")(1,"fn-checkbox",0),e.NdJ("ngModelChange",function(r){return t.checkboxValue=r}),e.YNc(2,j,3,0,"ng-template",1),e.qZA()(),e.TgZ(3,"p")(4,"i"),e._uU(5),e.qZA()()),2&n&&(e.xp6(1),e.Q6J("ngModel",t.checkboxValue),e.xp6(4),e.hij("Value: ",t.checkboxValue,""))},directives:[i.b,l.JJ,l.On,I.x],encapsulation:2}),o})(),Q=(()=>{class o{constructor(){this.checkboxDefault=[{language:"typescript",fileName:"checkbox-default-example",component:"CheckboxDefaultExampleComponent",code:V}],this.checkboxCustomValues=[{language:"typescript",fileName:"checkbox-custom-values-example",component:"CheckboxCustomValuesExampleComponent",code:T}],this.checkboxReactiveForms=[{language:"typescript",fileName:"checkbox-reactive-forms-example",component:"CheckboxReactiveFormsExampleComponent",code:F}],this.checkboxCustomLabel=[{language:"typescript",fileName:"checkbox-custom-label-example",component:"CheckboxCustomLabelExampleComponent",code:U}]}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["app-input"]],decls:62,vars:10,consts:[["id","default","componentName","checkbox"],[3,"hasBackground"],[3,"exampleFiles"],["id","custom-values","componentName","checkbox"],[2,"margin-bottom","0.5rem"],["id","reactive-forms","componentName","checkbox"],["id","custom-label","componentName","checkbox"]],template:function(n,t){1&n&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Standard Checkbox "),e.qZA(),e.TgZ(2,"description"),e._uU(3," By default fn-checkbox component is binary, returning "),e.TgZ(4,"code"),e._uU(5,"true"),e.qZA(),e._uU(6," and "),e.TgZ(7,"code"),e._uU(8,"false"),e.qZA(),e._uU(9," values.\n"),e.qZA(),e.TgZ(10,"component-example",1),e._UZ(11,"fd-checkbox-default-example"),e.qZA(),e._UZ(12,"code-example",2)(13,"separator"),e.TgZ(14,"fd-docs-section-title",3),e._uU(15," Checkbox custom values "),e.qZA(),e.TgZ(16,"description"),e._uU(17," Values returned by checkbox can be customized using "),e.TgZ(18,"code"),e._uU(19,"[values]"),e.qZA(),e._uU(20," property. "),e._UZ(21,"br"),e.TgZ(22,"ul")(23,"li",4),e._uU(24," Type: "),e.TgZ(25,"code"),e._uU(26),e.qZA()(),e.TgZ(27,"li"),e._uU(28," Default value: "),e.TgZ(29,"code"),e._uU(30),e.qZA()()()(),e.TgZ(31,"component-example",1),e._UZ(32,"fd-checkbox-custom-values-example"),e.qZA(),e._UZ(33,"code-example",2)(34,"separator"),e.TgZ(35,"fd-docs-section-title",5),e._uU(36," Checkbox with Reactive Forms\n"),e.qZA(),e.TgZ(37,"description"),e._uU(38," Checkbox can be used with Reactive Forms by binding it as standard form control with "),e.TgZ(39,"code"),e._uU(40,"[formControlName]"),e.qZA(),e._uU(41,' input. Example below shows usage of checkbox component with Reactive Form. "Accept all" behaves as main control representing overall state of agreements controls. '),e._UZ(42,"br")(43,"br"),e._uU(44," You can set "),e.TgZ(45,"code"),e._uU(46,'[isGroup]="true"'),e.qZA(),e._uU(47,' to make the checkbox take the whole width of the parent container. This way all checkboxes in a group will have the same width. By default, the width of the checkbox is set to "fit-content".\n'),e.qZA(),e.TgZ(48,"component-example",1),e._UZ(49,"fd-checkbox-reactive-forms-example"),e.qZA(),e._UZ(50,"code-example",2)(51,"separator"),e.TgZ(52,"fd-docs-section-title",6),e._uU(53," Checkbox with custom label "),e.qZA(),e.TgZ(54,"description"),e._uU(55," Checkbox label can by passed to component as external content using content projection mechanism. If external content is provided value passed using "),e.TgZ(56,"code"),e._uU(57,"[label]"),e.qZA(),e._uU(58," property is ignored.\n"),e.qZA(),e.TgZ(59,"component-example",1),e._UZ(60,"fd-checkbox-custom-label-example"),e.qZA(),e._UZ(61,"code-example",2)),2&n&&(e.xp6(10),e.Q6J("hasBackground",!1),e.xp6(2),e.Q6J("exampleFiles",t.checkboxDefault),e.xp6(14),e.Oqu("{ trueValue?: any, falseValue?: any }"),e.xp6(4),e.Oqu("{ trueValue: true, falseValue: false }"),e.xp6(1),e.Q6J("hasBackground",!1),e.xp6(2),e.Q6J("exampleFiles",t.checkboxCustomValues),e.xp6(15),e.Q6J("hasBackground",!1),e.xp6(2),e.Q6J("exampleFiles",t.checkboxReactiveForms),e.xp6(9),e.Q6J("hasBackground",!1),e.xp6(2),e.Q6J("exampleFiles",t.checkboxCustomLabel))},directives:[y.k,d.w,w.O,M,E.E,N.N,J,D,G],encapsulation:2}),o})();var q=a(28674),L=a(15971),R=a(38076);const B=[{path:"",component:A,children:[{path:"",component:Q},{path:"api",component:g.h,data:{content:C.X.checkbox}}]}];let Y=(()=>{class o{}return o.\u0275fac=function(n){return new(n||o)},o.\u0275mod=e.oAB({type:o}),o.\u0275inj=e.cJS({imports:[[L.ej,R.nD,u.Bz.forChild(B),q.g],u.Bz]}),o})()},67698:m=>{m.exports="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-checkbox-custom-label-example',\n    template: `\n        <div>\n            <fn-checkbox [(ngModel)]=\"checkboxValue\">\n                <ng-template fnCheckboxLabel> I accept&nbsp;<a href=\"#\">Terms and conditions</a> </ng-template>\n            </fn-checkbox>\n        </div>\n        <p>\n            <i>Value: {{ checkboxValue }}</i>\n        </p>\n    `\n})\nexport class CheckboxCustomLabelExampleComponent {\n    checkboxValue = false;\n}\n"},62444:m=>{m.exports="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-checkbox-custom-values-example',\n    template: `\n        <div>\n            <fn-checkbox\n                label=\"I accept the new Terms of Service\"\n                [values]=\"{ trueValue: 'Yes', falseValue: 'No' }\"\n                [(ngModel)]=\"checkboxValue1\"\n            >\n            </fn-checkbox>\n        </div>\n        <p>\n            <i>Value: {{ checkboxValue1 }}</i>\n        </p>\n\n        <div>\n            <fn-checkbox\n                label=\"Banana is the best fruit\"\n                [values]=\"{ trueValue: 'Yes', falseValue: 'No' }\"\n                [(ngModel)]=\"checkboxValue2\"\n            >\n            </fn-checkbox>\n        </div>\n        <p>\n            <i>Value: {{ checkboxValue2 }}</i>\n        </p>\n    `\n})\nexport class CheckboxCustomValuesExampleComponent {\n    checkboxValue1 = 'Yes';\n    checkboxValue2 = 'Yes';\n}\n"},70365:m=>{m.exports='import { Component } from \'@angular/core\';\n\n@Component({\n    selector: \'fd-checkbox-default-example\',\n    template: `\n        <div>\n            <fn-checkbox\n                label="Option 1"\n                [(ngModel)]="checkboxValue"\n                [required]="true"\n                inputId="defaultCheckbox"\n            ></fn-checkbox>\n        </div>\n        <p>\n            <i>Value: {{ checkboxValue }}</i>\n        </p>\n    `\n})\nexport class CheckboxDefaultExampleComponent {\n    checkboxValue = false;\n}\n'},39676:m=>{m.exports='import { Component, OnInit } from \'@angular/core\';\nimport { FormControl, FormGroup } from \'@angular/forms\';\nimport { map } from \'rxjs/operators\';\n\n@Component({\n    selector: \'fd-checkbox-reactive-forms-example\',\n    template: `\n        <form [formGroup]="registrationForm">\n            <div>\n                <fn-checkbox formControlName="acceptAll" label="Accept all"></fn-checkbox>\n            </div>\n            <fieldset formGroupName="agreements" style="display:flex;flex-direction:column;width:400px;">\n                <fn-checkbox\n                    [isGroup]="true"\n                    formControlName="termsAndConditions"\n                    label="I accept Terms and Conditions"\n                ></fn-checkbox>\n\n                <fn-checkbox\n                    [isGroup]="true"\n                    formControlName="marketing"\n                    label="I want to receive Marketing Materials"\n                ></fn-checkbox>\n\n                <fn-checkbox\n                    [isGroup]="true"\n                    formControlName="newsletter"\n                    label="I want want to sign for a Newsletter"\n                ></fn-checkbox>\n            </fieldset>\n        </form>\n\n        <p>\n            <i>Form value: {{ registrationForm.getRawValue() | json }}</i>\n        </p>\n    `\n})\nexport class CheckboxReactiveFormsExampleComponent implements OnInit {\n    public registrationForm = new FormGroup({\n        acceptAll: new FormControl(false),\n        agreements: new FormGroup({\n            marketing: new FormControl(undefined),\n            newsletter: new FormControl(false),\n            termsAndConditions: new FormControl(false)\n        })\n    });\n\n    ngOnInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    private acceptAll(accept: boolean): void {\n        this.registrationForm.get(\'agreements\')?.setValue({\n            marketing: accept,\n            newsletter: accept,\n            termsAndConditions: accept\n        });\n    }\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get(\'acceptAll\')?.valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get(\'agreements\')\n            ?.valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) =>\n                this.registrationForm.get(\'acceptAll\')?.setValue(acceptAllValue, { emitEvent: false })\n            );\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Record<string, any>): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n'}}]);