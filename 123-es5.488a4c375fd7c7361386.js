!function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{"F/hh":function(e,n,a){"use strict";a.r(n),a.d(n,"PlatformMultiComboboxDocsModule",function(){return ie});var l={};a.r(l),a.d(l,"default",function(){return A});var c={};a.r(c),a.d(c,"default",function(){return K});var m={};a.r(m),a.d(m,"default",function(){return j});var s={};a.r(s),a.d(s,"default",function(){return B});var i={};a.r(i),a.d(i,"default",function(){return P});var r={};a.r(r),a.d(r,"default",function(){return k});var p={};a.r(p),a.d(p,"default",function(){return O});var u={};a.r(u),a.d(u,"default",function(){return N});var d={};a.r(d),a.d(d,"default",function(){return z});var b={};a.r(b),a.d(b,"default",function(){return G});var f,y,h,g,S,x,V,C,I=a("tyNb"),v=a("A+vx"),D=a("XaOr"),M=a("jzzn"),w=a("IywY"),W=a("fXoL"),F=a("dor/"),R=a("kt86"),T=a("RJTZ"),E=a("Kpas"),L=((f=function e(){o(this,e)}).\u0275fac=function(e){return new(e||f)},f.\u0275cmp=W.Kb({type:f,selectors:[["fd-platform-multi-combobox-header"]],decls:7,vars:0,consts:[["module","PlatformMultiComboboxModule"]],template:function(e,t){1&e&&(W.Wb(0,"header"),W.Vc(1,"Multi-Combobox"),W.Vb(),W.Wb(2,"description"),W.Vc(3," The multi-combo box control is commonly used to enable users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to open the list of available options. The select options in the list have checkboxes that permit multi-selection.\n"),W.Vb(),W.Rb(4,"import",0),W.Rb(5,"fd-header-tabs"),W.Rb(6,"router-outlet"))},directives:[F.a,R.a,T.a,E.a,I.h],encapsulation:2}),f),A='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="array-of-strings" label="Array of Strings">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-strings"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            [selectedItems]="selectedItems1"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="array-of-objects" label="Array of Objects">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-objects"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            lookupKey="name"\n            [selectedItems]="selectedItems2"\n            (selectionChange)="onSelect2($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems2 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="observable" label="Observable">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="observable"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceOf"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect3($event)"\n            [selectedItems]="selectedItems3"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems3 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="ds" label="Data Source">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="ds"\n            placeholder="Type some text..."\n            [dataSource]="ds"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect4($event)"\n            [selectedItems]="selectedItems4"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems4 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n\n<fdp-form-group [noLabelLayout]="false" columnLayout="XL3-L2-M1-S1">\n    <fdp-form-field id="standard" label="Example with \'N more\' label" column="1">\n        <fdp-multi-combobox\n            name="standard"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            (selectionChange)="onSelect5($event)"\n            [selectedItems]="selectedItems5"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems5  }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',K="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { ArrayComboBoxDataSource, DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-datasource-example',\n    templateUrl: './multi-combobox-datasource-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxDatasourceExampleComponent {\n    dataSourceStrings = [\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    dataSourceOf = of(this.dataSource);\n    ds = new ArrayComboBoxDataSource(this.dataSource);\n\n    selectedItems1 = [this.dataSourceStrings[1]];\n    selectedItems2 = [this.dataSource[1]];\n    selectedItems3 = null;\n    selectedItems4 = null;\n    selectedItems5 = [this.dataSourceStrings[1], this.dataSourceStrings[2], this.dataSourceStrings[3], this.dataSourceStrings[4]];\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n\n    onSelect2(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems2 = item.selectedItems;\n    }\n\n    onSelect3(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems3 = item.selectedItems;\n    }\n\n    onSelect4(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems4 = item.selectedItems;\n    }\n\n    onSelect5(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems5 = item.selectedItems;\n    }\n}\n",j='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="mobile" label="Mobile Mode Combobox">\n        <fdp-multi-combobox\n            name="mobile"\n            placeholder="Type some text..."\n            displayKey="name"\n            [dataSource]="dataSource"\n            [mobile]="true"\n            [mobileConfig]="mobileConfig"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',B="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { MobileModeConfig } from '@fundamental-ngx/core/mobile-mode';\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-mobile-example',\n    templateUrl: './multi-combobox-mobile-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxMobileExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = null;\n\n    mobileConfig: MobileModeConfig = {\n        title: 'Title',\n        approveButtonText: 'Save',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true\n    };\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",P='<fdp-form-group [noLabelLayout]="false" [formGroup]="customForm">\n    <fdp-form-field id="field" label="Array of Strings">\n        <fdp-multi-combobox\n            name="field"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect($event)"\n            formControlName="field"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n        <p>Form Selected Item: {{ customForm.getRawValue() | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',k="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-forms-example',\n    templateUrl: './multi-combobox-forms-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxFormsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    customForm = new FormGroup({\n        field: new FormControl(this.dataSource[3])\n    });\n\n    selectedItems = [this.dataSource[3]];\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",O='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="group" label="Group with Key">\n        <fdp-multi-combobox\n            name="group"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            groupKey="type"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="group-without-key" label="Group without Key">\n        <fdp-multi-combobox\n            name="group-without-key"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            (selectionChange)="onSelect1($event)"\n            [selectedItems]="selectedItems1"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',N="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-group-example',\n    templateUrl: './multi-combobox-group-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxGroupExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = [this.dataSource[1]];\n    selectedItems1 = null;\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n}\n",z='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="columns" label="Two Columns" required="true">\n        <fdp-multi-combobox\n            name="columns"\n            placeholder="Type some text..."\n            [autoResize]="true"\n            [dataSource]="dataSource"\n            displayKey="name"\n            secondaryKey="type"\n            showSecondaryText="true"\n            secondaryTextAlignment="right"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',G="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-columns-example',\n    templateUrl: './multi-combobox-columns-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxColumnsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Florida Evergreen Blueberry', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = null;\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",X=a("ddaM"),J=a("X1JU"),_=a("LRne"),$=a("I7mx"),U=a("npbV"),q=a("ulPk"),H=a("ofXK"),Y=((y=function(){function e(){o(this,e),this.dataSourceStrings=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.dataSourceOf=Object(_.a)(this.dataSource),this.ds=new D.b(this.dataSource),this.selectedItems1=[this.dataSourceStrings[1]],this.selectedItems2=[this.dataSource[1]],this.selectedItems3=null,this.selectedItems4=null,this.selectedItems5=[this.dataSourceStrings[1],this.dataSourceStrings[2],this.dataSourceStrings[3],this.dataSourceStrings[4]]}return t(e,[{key:"onSelect1",value:function(e){this.selectedItems1=e.selectedItems}},{key:"onSelect2",value:function(e){this.selectedItems2=e.selectedItems}},{key:"onSelect3",value:function(e){this.selectedItems3=e.selectedItems}},{key:"onSelect4",value:function(e){this.selectedItems4=e.selectedItems}},{key:"onSelect5",value:function(e){this.selectedItems5=e.selectedItems}}]),e}()).\u0275fac=function(e){return new(e||y)},y.\u0275cmp=W.Kb({type:y,selectors:[["fdp-multi-combobox-datasource-example"]],features:[W.Cb([{provide:D.d,useValue:new Map}])],decls:25,vars:27,consts:[[3,"noLabelLayout"],["id","array-of-strings","label","Array of Strings"],["name","array-of-strings","placeholder","Type some text...",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","array-of-objects","label","Array of Objects"],["name","array-of-objects","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","observable","label","Observable"],["name","observable","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","ds","label","Data Source"],["name","ds","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["columnLayout","XL3-L2-M1-S1",3,"noLabelLayout"],["id","standard","label","Example with 'N more' label","column","1"],["name","standard","placeholder","Type some text...",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(W.Wb(0,"fdp-form-group",0),W.Wb(1,"fdp-form-field",1),W.Wb(2,"fdp-multi-combobox",2),W.jc("selectionChange",function(e){return t.onSelect1(e)}),W.Vb(),W.Wb(3,"p"),W.Vc(4),W.Vb(),W.Vb(),W.Wb(5,"fdp-form-field",3),W.Wb(6,"fdp-multi-combobox",4),W.jc("selectionChange",function(e){return t.onSelect2(e)}),W.Vb(),W.Wb(7,"p"),W.Vc(8),W.oc(9,"json"),W.Vb(),W.Vb(),W.Wb(10,"fdp-form-field",5),W.Wb(11,"fdp-multi-combobox",6),W.jc("selectionChange",function(e){return t.onSelect3(e)}),W.Vb(),W.Wb(12,"p"),W.Vc(13),W.oc(14,"json"),W.Vb(),W.Vb(),W.Wb(15,"fdp-form-field",7),W.Wb(16,"fdp-multi-combobox",8),W.jc("selectionChange",function(e){return t.onSelect4(e)}),W.Vb(),W.Wb(17,"p"),W.Vc(18),W.oc(19,"json"),W.Vb(),W.Vb(),W.Vb(),W.Wb(20,"fdp-form-group",9),W.Wb(21,"fdp-form-field",10),W.Wb(22,"fdp-multi-combobox",11),W.jc("selectionChange",function(e){return t.onSelect5(e)}),W.Vb(),W.Wb(23,"p"),W.Vc(24),W.Vb(),W.Vb(),W.Vb()),2&e&&(W.vc("noLabelLayout",!1),W.Db(2),W.vc("autoResize",!0)("dataSource",t.dataSourceStrings)("selectedItems",t.selectedItems1),W.Db(2),W.Xc("Selected: ",t.selectedItems1,""),W.Db(2),W.vc("autoResize",!0)("dataSource",t.dataSource)("selectedItems",t.selectedItems2),W.Db(2),W.Xc("Selected: ",W.pc(9,21,t.selectedItems2),""),W.Db(3),W.vc("autoResize",!0)("dataSource",t.dataSourceOf)("selectedItems",t.selectedItems3),W.Db(2),W.Xc("Selected: ",W.pc(14,23,t.selectedItems3),""),W.Db(3),W.vc("autoResize",!0)("dataSource",t.ds)("selectedItems",t.selectedItems4),W.Db(2),W.Xc("Selected: ",W.pc(19,25,t.selectedItems4),""),W.Db(2),W.vc("noLabelLayout",!1),W.Db(2),W.vc("dataSource",t.dataSourceStrings)("selectedItems",t.selectedItems5),W.Db(2),W.Xc("Selected: ",t.selectedItems5,""))},directives:[$.a,U.a,q.a],pipes:[H.h],encapsulation:2,changeDetection:0}),y),Z=a("5HkS"),Q=a("Hxo2"),ee=((S=function(){function e(){o(this,e),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=null,this.mobileConfig={title:"Title",approveButtonText:"Save",cancelButtonText:"Cancel",hasCloseButton:!0}}return t(e,[{key:"onSelect",value:function(e){this.selectedItems=e.selectedItems}}]),e}()).\u0275fac=function(e){return new(e||S)},S.\u0275cmp=W.Kb({type:S,selectors:[["fdp-multi-combobox-mobile-example"]],features:[W.Cb([{provide:D.d,useValue:new Map}])],decls:6,vars:8,consts:[[3,"noLabelLayout"],["id","mobile","label","Mobile Mode Combobox"],["name","mobile","placeholder","Type some text...","displayKey","name",3,"dataSource","mobile","mobileConfig","selectedItems","selectionChange"]],template:function(e,t){1&e&&(W.Wb(0,"fdp-form-group",0),W.Wb(1,"fdp-form-field",1),W.Wb(2,"fdp-multi-combobox",2),W.jc("selectionChange",function(e){return t.onSelect(e)}),W.Vb(),W.Wb(3,"p"),W.Vc(4),W.oc(5,"json"),W.Vb(),W.Vb(),W.Vb()),2&e&&(W.vc("noLabelLayout",!1),W.Db(2),W.vc("dataSource",t.dataSource)("mobile",!0)("mobileConfig",t.mobileConfig)("selectedItems",t.selectedItems),W.Db(2),W.Xc("Selected: ",W.pc(5,6,t.selectedItems),""))},directives:[$.a,U.a,q.a],pipes:[H.h],encapsulation:2,changeDetection:0}),S),te=((g=function(){function e(){o(this,e),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=[this.dataSource[1]],this.selectedItems1=null}return t(e,[{key:"onSelect",value:function(e){this.selectedItems=e.selectedItems}},{key:"onSelect1",value:function(e){this.selectedItems1=e.selectedItems}}]),e}()).\u0275fac=function(e){return new(e||g)},g.\u0275cmp=W.Kb({type:g,selectors:[["fdp-multi-combobox-group-example"]],features:[W.Cb([{provide:D.d,useValue:new Map}])],decls:11,vars:11,consts:[[3,"noLabelLayout"],["id","group","label","Group with Key"],["name","group","placeholder","Type some text...","displayKey","name","group","true","groupKey","type",3,"dataSource","selectedItems","selectionChange"],["id","group-without-key","label","Group without Key"],["name","group-without-key","placeholder","Type some text...","displayKey","name","group","true",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(W.Wb(0,"fdp-form-group",0),W.Wb(1,"fdp-form-field",1),W.Wb(2,"fdp-multi-combobox",2),W.jc("selectionChange",function(e){return t.onSelect(e)}),W.Vb(),W.Wb(3,"p"),W.Vc(4),W.oc(5,"json"),W.Vb(),W.Vb(),W.Wb(6,"fdp-form-field",3),W.Wb(7,"fdp-multi-combobox",4),W.jc("selectionChange",function(e){return t.onSelect1(e)}),W.Vb(),W.Wb(8,"p"),W.Vc(9),W.oc(10,"json"),W.Vb(),W.Vb(),W.Vb()),2&e&&(W.vc("noLabelLayout",!1),W.Db(2),W.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems),W.Db(2),W.Xc("Selected: ",W.pc(5,7,t.selectedItems),""),W.Db(3),W.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems1),W.Db(2),W.Xc("Selected: ",W.pc(10,9,t.selectedItems1),""))},directives:[$.a,U.a,q.a],pipes:[H.h],encapsulation:2,changeDetection:0}),g),oe=((h=function(){function e(){o(this,e),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Florida Evergreen Blueberry",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=null}return t(e,[{key:"onSelect",value:function(e){this.selectedItems=e.selectedItems}}]),e}()).\u0275fac=function(e){return new(e||h)},h.\u0275cmp=W.Kb({type:h,selectors:[["fdp-multi-combobox-columns-example"]],features:[W.Cb([{provide:D.d,useValue:new Map}])],decls:6,vars:7,consts:[[3,"noLabelLayout"],["id","columns","label","Two Columns","required","true"],["name","columns","placeholder","Type some text...","displayKey","name","secondaryKey","type","showSecondaryText","true","secondaryTextAlignment","right",3,"autoResize","dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(W.Wb(0,"fdp-form-group",0),W.Wb(1,"fdp-form-field",1),W.Wb(2,"fdp-multi-combobox",2),W.jc("selectionChange",function(e){return t.onSelect(e)}),W.Vb(),W.Wb(3,"p"),W.Vc(4),W.oc(5,"json"),W.Vb(),W.Vb(),W.Vb()),2&e&&(W.vc("noLabelLayout",!1),W.Db(2),W.vc("autoResize",!0)("dataSource",t.dataSource)("selectedItems",t.selectedItems),W.Db(2),W.Xc("Selected Item: ",W.pc(5,5,t.selectedItems),""))},directives:[$.a,U.a,q.a],pipes:[H.h],encapsulation:2,changeDetection:0}),h),ne=a("3Pt+"),ae=((V=function(){function e(){o(this,e),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.customForm=new ne.i({field:new ne.f(this.dataSource[3])}),this.selectedItems=[this.dataSource[3]]}return t(e,[{key:"onSelect",value:function(e){this.selectedItems=e.selectedItems}}]),e}()).\u0275fac=function(e){return new(e||V)},V.\u0275cmp=W.Kb({type:V,selectors:[["fdp-multi-combobox-forms-example"]],features:[W.Cb([{provide:D.d,useValue:new Map}])],decls:9,vars:10,consts:[[3,"noLabelLayout","formGroup"],["id","field","label","Array of Strings"],["name","field","placeholder","Type some text...","displayKey","name","formControlName","field",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(W.Wb(0,"fdp-form-group",0),W.Wb(1,"fdp-form-field",1),W.Wb(2,"fdp-multi-combobox",2),W.jc("selectionChange",function(e){return t.onSelect(e)}),W.Vb(),W.Wb(3,"p"),W.Vc(4),W.oc(5,"json"),W.Vb(),W.Wb(6,"p"),W.Vc(7),W.oc(8,"json"),W.Vb(),W.Vb(),W.Vb()),2&e&&(W.vc("noLabelLayout",!1)("formGroup",t.customForm),W.Db(2),W.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems),W.Db(2),W.Xc("Selected Item: ",W.pc(5,6,t.selectedItems),""),W.Db(3),W.Xc("Form Selected Item: ",W.pc(8,8,t.customForm.getRawValue()),""))},directives:[$.a,ne.r,ne.j,U.a,q.a,ne.q,ne.h],pipes:[H.h],encapsulation:2,changeDetection:0}),V),le=((x=function e(){o(this,e),this.multiComboboxDatasourceExample=[{language:"html",fileName:"multi-combobox-datasource-example",code:l},{language:"typescript",fileName:"multi-combobox-datasource-example",code:c,component:"MultiComboboxDatasourceExampleComponent"}],this.multiComboboxMobileExample=[{language:"html",fileName:"multi-combobox-mobile-example",code:m},{language:"typescript",fileName:"multi-combobox-mobile-example",code:s,component:"MultiComboboxMobileExampleComponent"}],this.multiComboboxGroupExample=[{language:"html",fileName:"multi-combobox-group-example",code:p},{language:"typescript",fileName:"multi-combobox-group-example",code:u,component:"MultiComboboxGroupExampleComponent"}],this.multiComboboxColumnsExample=[{language:"html",fileName:"multi-combobox-columns-example",code:d},{language:"typescript",fileName:"multi-combobox-columns-example",code:b,component:"MultiComboboxColumnsExampleComponent"}],this.multiComboboxFormExample=[{language:"html",fileName:"multi-combobox-forms-example",code:i},{language:"typescript",fileName:"multi-combobox-forms-example",code:r,component:"MultiComboboxFormsExampleComponent"}]}).\u0275fac=function(e){return new(e||x)},x.\u0275cmp=W.Kb({type:x,selectors:[["platform-multi-combobox-docs"]],decls:84,vars:5,consts:[["id","data-source","componentName","multi-combobox"],[3,"exampleFiles"],["id","mobile","componentName","multi-combobox"],["routerLink","/core/global-config","fragment","mobile-mode-config"],["id","group","componentName","multi-combobox"],["id","columns","componentName","multi-combobox"],["id","reactive-form","componentName","multi-combobox"]],template:function(e,t){1&e&&(W.Wb(0,"fd-docs-section-title",0),W.Vc(1,"DataSource"),W.Vb(),W.Wb(2,"description"),W.Vc(3," Input "),W.Wb(4,"code"),W.Vc(5,"[dataSource]"),W.Vb(),W.Vc(6," has this type "),W.Wb(7,"code"),W.Vc(8,"type FdpMultiComboboxDataSource<T> = MultiComboBoxDataSource<T> | Observable<T[]> | T[]"),W.Vb(),W.Vb(),W.Wb(9,"component-example"),W.Rb(10,"fdp-multi-combobox-datasource-example"),W.Vb(),W.Rb(11,"code-example",1),W.Rb(12,"separator"),W.Wb(13,"fd-docs-section-title",2),W.Vc(14,"Multi-Combobox Mobile Mode"),W.Vb(),W.Wb(15,"description"),W.Vc(16," To use Multi-Combobox in mobile mode: "),W.Wb(17,"ul"),W.Wb(18,"li"),W.Vc(19,"import "),W.Wb(20,"code"),W.Vc(21,"MultiComboboxMobileModule"),W.Vb(),W.Vb(),W.Wb(22,"li"),W.Vc(23,"Set "),W.Wb(24,"code"),W.Vc(25,"[mobile]"),W.Vb(),W.Vc(26," property to true"),W.Vb(),W.Wb(27,"li"),W.Vc(28,"Set "),W.Wb(29,"code"),W.Vc(30,"[mobileConfig]"),W.Vb(),W.Vc(31," with "),W.Wb(32,"code"),W.Vc(33,"MobileModeConfig"),W.Vb(),W.Vc(34," configuration object to customize the look of the control "),W.Vb(),W.Vb(),W.Vc(35," Multi-Combobox Mobile Mode can be configured "),W.Wb(36,"strong"),W.Vc(37,"globally"),W.Vb(),W.Vc(38," by providing "),W.Wb(39,"code"),W.Vc(40,"MOBILE_MODE_CONFIG"),W.Vb(),W.Vc(41," token. Check "),W.Wb(42,"a",3),W.Vc(43,"Global Configuration page"),W.Vb(),W.Vc(44," for more information.\n"),W.Vb(),W.Wb(45,"component-example"),W.Rb(46,"fdp-multi-combobox-mobile-example"),W.Vb(),W.Rb(47,"code-example",1),W.Rb(48,"separator"),W.Wb(49,"fd-docs-section-title",4),W.Vc(50," Multi-Combobox with Groups\n"),W.Vb(),W.Wb(51,"description"),W.Vc(52," Multi-Combobox with Groups. Note that a "),W.Wb(53,"code"),W.Vc(54,"group"),W.Vb(),W.Vc(55," and "),W.Wb(56,"code"),W.Vc(57,"groupKey"),W.Vb(),W.Vc(58," is required\n"),W.Vb(),W.Wb(59,"component-example"),W.Rb(60,"fdp-multi-combobox-group-example"),W.Vb(),W.Rb(61,"code-example",1),W.Rb(62,"separator"),W.Wb(63,"fd-docs-section-title",5),W.Vc(64," Multi-Combobox with Two Columns\n"),W.Vb(),W.Wb(65,"description"),W.Vc(66," Multi-Combobox with two columns of information. Note that a "),W.Wb(67,"code"),W.Vc(68,"secondaryKey"),W.Vb(),W.Vc(69," and "),W.Wb(70,"code"),W.Vc(71,"showSecondaryText"),W.Vb(),W.Vc(72," is required\n"),W.Vb(),W.Wb(73,"component-example"),W.Rb(74,"fdp-multi-combobox-columns-example"),W.Vb(),W.Rb(75,"code-example",1),W.Rb(76,"separator"),W.Wb(77,"fd-docs-section-title",6),W.Vc(78," Reactive Form\n"),W.Vb(),W.Wb(79,"description"),W.Vc(80," The Multi-Combobox component may also be used within Angular Reactive Forms.\n"),W.Vb(),W.Wb(81,"component-example"),W.Rb(82,"fdp-multi-combobox-forms-example"),W.Vb(),W.Rb(83,"code-example",1)),2&e&&(W.Db(11),W.vc("exampleFiles",t.multiComboboxDatasourceExample),W.Db(36),W.vc("exampleFiles",t.multiComboboxMobileExample),W.Db(14),W.vc("exampleFiles",t.multiComboboxGroupExample),W.Db(14),W.vc("exampleFiles",t.multiComboboxColumnsExample),W.Db(8),W.vc("exampleFiles",t.multiComboboxFormExample))},directives:[X.a,R.a,J.a,Y,Z.a,Q.a,I.f,ee,te,oe,ae],encapsulation:2}),x),ce=a("lH0p"),me=a("t9W5"),se=[{path:"",component:L,children:[{path:"",component:le},{path:"api",component:M.a,data:{content:w.a.multiCombobox}}]}],ie=((C=function e(){o(this,e)}).\u0275fac=function(e){return new(e||C)},C.\u0275mod=W.Ob({type:C}),C.\u0275inj=W.Nb({providers:[{provide:v.a,useValue:ce.c,multi:!0}],imports:[[I.g.forChild(se),me.a,D.h,D.L,D.K],I.g]}),C)}}])}();