"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3831],{3831:(i,u,s)=>{s.r(u),s.d(u,{ThemeSwitcherDocsModule:()=>X});var h=s(8674),c=s(36854),U=s(86487),e=s(5e3),l=s(24882),d=s(85684),r=s(44969),g=s(8566),C=s(98791),x=s(63710);let y=(()=>{class n{constructor(){this.file={code:'{\n                "glob": "**/css_variables.css",\n                "input": "./node_modules/@sap-theming/theming-base-content/content/Base/baseLib/",\n                "output": "./assets/theming-base/"\n            },\n            {\n                "glob": "**/*",\n                "input": "./node_modules/fundamental-styles/dist/theming/",\n                "output": "./assets/fundamental-styles-theming/"\n            }\n        ',language:"json"}}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fd-theme-switcher-header"]],decls:29,vars:2,consts:[["type","warning",3,"dismissible"],["routerLink","/core/theming"],[3,"file"],["module","ThemeService","subPackage","utils"]],template:function(t,m){1&t&&(e.TgZ(0,"header"),e._uU(1,"Theme Switcher API"),e.qZA(),e.TgZ(2,"fd-message-strip",0),e._uU(3," DEPRECATED. ThemeService has been deprecated since 0.35.0 version in favor of "),e.TgZ(4,"a",1),e._uU(5,"ThemingModule and ThemingService"),e.qZA(),e._uU(6," which provides more flexibility and functionality to the developers.\n"),e.qZA(),e.TgZ(7,"description"),e._uU(8," Theme switcher API allows user to set specific theme programmatically. There is no longer need for each application to implement its own theme switcher code."),e._UZ(9,"br"),e._uU(10," At the moment this won't work for Internet Explorer 11. We will enhance this feature in the near future."),e._UZ(11,"br"),e._uU(12," The API requires additional assets from the npm packages: "),e.TgZ(13,"code"),e._uU(14,"@sap-theming/theming-base-content"),e.qZA(),e._uU(15," and "),e.TgZ(16,"code"),e._uU(17,"fundamental-styles"),e.qZA(),e._uU(18,"."),e._UZ(19,"br"),e._uU(20," Prerequisites - add those objects to assets array in "),e.TgZ(21,"code"),e._uU(22,"angular.json"),e.qZA(),e._uU(23,":"),e._UZ(24,"br")(25,"fd-code-snippet",2),e.qZA(),e._UZ(26,"import",3)(27,"fd-header-tabs")(28,"router-outlet")),2&t&&(e.xp6(2),e.Q6J("dismissible",!1),e.xp6(23),e.Q6J("file",m.file))},directives:[l.G,d.h,h.yS,r.w,g.N,C.k,x.c,h.lC],encapsulation:2}),n})();var _=s(53789),S=s(50080),b=s(98597),Z=s(99775),w=s(13065),E=s(93943),F=s(28595),f=s(59438),p=s(69808),v=s(87757);function O(n,o){if(1&n){const t=e.EpF();e.TgZ(0,"span",2)(1,"button",3),e.NdJ("click",function(){const a=e.CHM(t).$implicit;return e.oxw().selectTheme(a.id)}),e.qZA()()}if(2&n){const t=o.$implicit;e.xp6(1),e.Q6J("label",t.name)}}function Q(n,o){if(1&n&&e._UZ(0,"link",4),2&n){const t=e.oxw();e.Q6J("href",t.cssUrl,e.uOi)}}function P(n,o){if(1&n&&e._UZ(0,"link",4),2&n){const t=e.oxw();e.Q6J("href",t.cssCustomUrl,e.uOi)}}let A=(()=>{class n{constructor(t){this._themesService=t,this.themeChanged=new e.vpe,this.themes=this._themesService.themes}selectTheme(t){this.cssUrl=this._themesService.setTheme(t),this.cssCustomUrl=this._themesService.setCustomTheme(t),this.themeChanged.emit({themeUrl:this.cssCustomUrl,customThemeUrl:this.cssUrl})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(f.OR))},n.\u0275cmp=e.Xpm({type:n,selectors:[["fd-theme-switcher-example"]],outputs:{themeChanged:"themeChanged"},decls:3,vars:3,consts:[["style","padding: 10px",4,"ngFor","ngForOf"],["rel","stylesheet",3,"href",4,"ngIf"],[2,"padding","10px"],["fd-button","",3,"label","click"],["rel","stylesheet",3,"href"]],template:function(t,m){1&t&&(e.YNc(0,O,2,1,"span",0),e.YNc(1,Q,1,1,"link",1),e.YNc(2,P,1,1,"link",1)),2&t&&(e.Q6J("ngForOf",m.themes),e.xp6(1),e.Q6J("ngIf",m.cssUrl),e.xp6(1),e.Q6J("ngIf",m.cssCustomUrl))},directives:[p.sg,v.r,p.O5],encapsulation:2}),n})();var D=s(29871),R=s(33089),N=s(77579),I=s(82722),J=s(68226);function j(n,o){if(1&n){const t=e.EpF();e.TgZ(0,"span",3)(1,"button",4),e.NdJ("click",function(){const a=e.CHM(t).$implicit;return e.oxw().changeQueryUrl(a.id)}),e.qZA()()}if(2&n){const t=o.$implicit;e.xp6(1),e.Q6J("label",t.name)}}function k(n,o){if(1&n&&e._UZ(0,"link",5),2&n){const t=e.oxw();e.Q6J("href",t.cssUrl,e.uOi)}}function L(n,o){if(1&n&&e._UZ(0,"link",5),2&n){const t=e.oxw();e.Q6J("href",t.cssCustomUrl,e.uOi)}}let M=(()=>{class n{constructor(t,m){this._themesService=t,this._router=m,this.themeChanged=new e.vpe,this.themes=this._themesService.themes,this.themeQueryParamName="customQueryParam",this._onDestroy$=new N.x,this._listenForThemeChange(),this._themesService.setThemeByRoute(this.themeQueryParamName),this._handleThemesFromUrl()}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}changeQueryUrl(t){this._router.navigate([],{queryParams:{customQueryParam:t}})}_listenForThemeChange(){this._themesService.onThemeQueryParamChange.pipe((0,I.R)(this._onDestroy$)).subscribe(t=>{this.cssCustomUrl=t.customThemeUrl,this.cssUrl=t.themeUrl,this.themeChanged.emit({themeUrl:this.cssCustomUrl,customThemeUrl:this.cssUrl})})}_handleThemesFromUrl(){this.themeFromUrl=this._themesService.getThemesFromURL(this.themeQueryParamName),this.themeFromUrl&&(this.cssCustomUrl=this.themeFromUrl.customThemeUrl,this.cssUrl=this.themeFromUrl.themeUrl,this.themeChanged.emit({themeUrl:this.cssCustomUrl,customThemeUrl:this.cssUrl}))}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(f.OR),e.Y36(h.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["fd-theme-url-example"]],outputs:{themeChanged:"themeChanged"},decls:12,vars:6,consts:[["style","padding: 10px",4,"ngFor","ngForOf"],["fd-form-label",""],["rel","stylesheet",3,"href",4,"ngIf"],[2,"padding","10px"],["fd-button","",3,"label","click"],["rel","stylesheet",3,"href"]],template:function(t,m){1&t&&(e.YNc(0,j,2,1,"span",0),e._UZ(1,"br")(2,"br"),e.TgZ(3,"label",1),e._uU(4," Theming detected by "),e.TgZ(5,"code"),e._uU(6,"getThemeFromURL"),e.qZA(),e._uU(7," method: "),e.qZA(),e._uU(8),e.ALo(9,"json"),e.YNc(10,k,1,1,"link",2),e.YNc(11,L,1,1,"link",2)),2&t&&(e.Q6J("ngForOf",m.themes),e.xp6(8),e.hij("\n",e.lcZ(9,4,m.themeFromUrl)," "),e.xp6(2),e.Q6J("ngIf",m.cssUrl),e.xp6(1),e.Q6J("ngIf",m.cssCustomUrl))},directives:[p.sg,v.r,J.h,p.O5],pipes:[p.Ts],encapsulation:2}),n})(),$=(()=>{class n{constructor(t){this._docsThemeService=t,this.themeSwitcherExample=[{language:"html",code:_,fileName:"theme-switcher-example"},{language:"typescript",code:b,fileName:"theme-switcher-example",component:"ThemeSwitcherExampleComponent"}],this.themeUrlExample=[{language:"html",code:S,fileName:"theme-url-example"},{language:"typescript",code:Z,fileName:"theme-url-example",component:"ThemeUrlExampleComponent"}]}handleThemeChanged(t){this._docsThemeService.onThemeChange.next(t)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(w.S))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-theme-switcher-docs"]],decls:27,vars:2,consts:[["id","theme-switcher","componentName","theme-switcher"],[3,"themeChanged"],[3,"exampleFiles"],["id","via-url","componentName","theme-switcher"]],template:function(t,m){1&t&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Theme switcher "),e.qZA(),e.TgZ(2,"description"),e._uU(3," Css files are switched via choosing option. "),e.qZA(),e.TgZ(4,"component-example")(5,"fd-theme-switcher-example",1),e.NdJ("themeChanged",function(a){return m.handleThemeChanged(a)}),e.qZA()(),e._UZ(6,"code-example",2)(7,"separator"),e.TgZ(8,"fd-docs-section-title",3),e._uU(9," Setting theme via url "),e.qZA(),e.TgZ(10,"description"),e._uU(11," Theme can be set by adding property in URL providing name of the theme like in the following example. Parameter is configurable, it can be set by calling "),e.TgZ(12,"code"),e._uU(13,"setThemeByRoute"),e.qZA(),e._uU(14,". See example by adding "),e.TgZ(15,"code"),e._uU(16,"?customQueryParam=sap_fiori_3_dark"),e.qZA(),e._uU(17," to URL. To make it work properly, you need to have imported "),e.TgZ(18,"code"),e._uU(19,"RouterModule"),e.qZA(),e._uU(20," into the project. In case you want to handle theming only once, after page is loaded, use "),e.TgZ(21,"code"),e._uU(22,"getThemesFromURL"),e.qZA(),e._uU(23," method.\n"),e.qZA(),e.TgZ(24,"component-example")(25,"fd-theme-url-example",1),e.NdJ("themeChanged",function(a){return m.handleThemeChanged(a)}),e.qZA()(),e._UZ(26,"code-example",2)),2&t&&(e.xp6(6),e.Q6J("exampleFiles",m.themeSwitcherExample),e.xp6(20),e.Q6J("exampleFiles",m.themeUrlExample))},directives:[E.k,r.w,F.O,A,D.E,R.N,M],encapsulation:2}),n})();var Y=s(28674),B=s(29584);const H=[{path:"",component:y,children:[{path:"",component:$},{path:"api",component:c.h,data:{content:U.X.globalConfig}}]}];let X=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({providers:[f.OR],imports:[[h.Bz.forChild(H),Y.g,B.px],h.Bz]}),n})()},98791:(i,u,s)=>{s.d(u,{k:()=>e});var h=s(59148),c=s(5e3),U=s(8566);let e=(()=>{class l{constructor(r){this.currentLib=r}get file(){return{code:`import { ${this.module} } from '${this.library}';`,language:"ts"}}ngOnInit(){const r=["@fundamental-ngx",this.currentLib];this.subPackage&&r.push(this.subPackage),this.library=r.join("/")}}return l.\u0275fac=function(r){return new(r||l)(c.Y36(h.b))},l.\u0275cmp=c.Xpm({type:l,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:1,vars:1,consts:[[3,"file"]],template:function(r,g){1&r&&c._UZ(0,"fd-code-snippet",0),2&r&&c.Q6J("file",g.file)},directives:[U.N],encapsulation:2,changeDetection:0}),l})()},53789:i=>{i.exports='<span *ngFor="let theme of themes" style="padding: 10px">\n    <button fd-button (click)="selectTheme(theme.id)" [label]="theme.name"></button>\n</span>\n\n\x3c!--Uncomment if used standalone--\x3e\n<link rel="stylesheet" *ngIf="cssUrl" [href]="cssUrl" />\n<link rel="stylesheet" *ngIf="cssCustomUrl" [href]="cssCustomUrl" />\n'},98597:i=>{i.exports="import { Component, EventEmitter, Output } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { ThemeServiceOutput, ThemesService } from '@fundamental-ngx/core/utils';\n\n@Component({\n    selector: 'fd-theme-switcher-example',\n    templateUrl: './theme-switcher-example.component.html'\n})\nexport class ThemeSwitcherExampleComponent {\n    /** This is for internal usage, can be removed, when used in standalone application */\n    @Output()\n    themeChanged = new EventEmitter<ThemeServiceOutput>();\n\n    themes = this._themesService.themes;\n    cssUrl: SafeResourceUrl;\n    cssCustomUrl: SafeResourceUrl;\n\n    constructor(private _themesService: ThemesService) {}\n\n    selectTheme(selectedTheme: string): void {\n        this.cssUrl = this._themesService.setTheme(selectedTheme);\n        this.cssCustomUrl = this._themesService.setCustomTheme(selectedTheme);\n\n        this.themeChanged.emit({\n            themeUrl: this.cssCustomUrl,\n            customThemeUrl: this.cssUrl\n        });\n    }\n}\n"},50080:i=>{i.exports='<span *ngFor="let theme of themes" style="padding: 10px">\n    <button fd-button (click)="changeQueryUrl(theme.id)" [label]="theme.name"></button>\n</span>\n\n<br /><br />\n<label fd-form-label> Theming detected by <code>getThemeFromURL</code> method: </label>\n{{ themeFromUrl | json }}\n\n\x3c!--Uncomment if used standalone--\x3e\n<link rel="stylesheet" *ngIf="cssUrl" [href]="cssUrl" />\n<link rel="stylesheet" *ngIf="cssCustomUrl" [href]="cssCustomUrl" />\n'},99775:i=>{i.exports="import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { ThemeServiceOutput, ThemesService } from '@fundamental-ngx/core/utils';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'fd-theme-url-example',\n    templateUrl: './theme-url-example.component.html'\n})\nexport class ThemeUrlExampleComponent implements OnDestroy {\n    /** This is for internal usage, can be removed, when used in standalone application */\n    @Output()\n    themeChanged = new EventEmitter<ThemeServiceOutput>();\n\n    themes = this._themesService.themes;\n    cssUrl: SafeResourceUrl;\n    cssCustomUrl: SafeResourceUrl;\n    themeFromUrl: ThemeServiceOutput | undefined;\n\n    readonly themeQueryParamName = 'customQueryParam';\n\n    /** An RxJS Subject that will kill the data stream upon destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _themesService: ThemesService, private _router: Router) {\n        this._listenForThemeChange();\n        this._themesService.setThemeByRoute(this.themeQueryParamName);\n\n        this._handleThemesFromUrl();\n    }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    changeQueryUrl(param: string): void {\n        this._router.navigate([], { queryParams: { customQueryParam: param } });\n    }\n\n    private _listenForThemeChange(): void {\n        this._themesService.onThemeQueryParamChange.pipe(takeUntil(this._onDestroy$)).subscribe((theme) => {\n            this.cssCustomUrl = theme.customThemeUrl;\n            this.cssUrl = theme.themeUrl;\n\n            this.themeChanged.emit({\n                themeUrl: this.cssCustomUrl,\n                customThemeUrl: this.cssUrl\n            });\n        });\n    }\n\n    // Method used to directly fetch themes, after page is being loaded. No subscriptions are added there.\n    private _handleThemesFromUrl(): void {\n        this.themeFromUrl = this._themesService.getThemesFromURL(this.themeQueryParamName);\n\n        if (this.themeFromUrl) {\n            this.cssCustomUrl = this.themeFromUrl.customThemeUrl;\n            this.cssUrl = this.themeFromUrl.themeUrl;\n\n            this.themeChanged.emit({\n                themeUrl: this.cssCustomUrl,\n                customThemeUrl: this.cssUrl\n            });\n        }\n    }\n}\n"}}]);