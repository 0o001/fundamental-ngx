(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{wMli:function(e,n,a){"use strict";a.r(n),a.d(n,"PlatformSearchFieldDocsModule",function(){return j});var t={};a.r(t),a.d(t,"default",function(){return C});var r={};a.r(r),a.d(r,"default",function(){return w});var o={};a.r(o),a.d(o,"default",function(){return x});var c={};a.r(c),a.d(c,"default",function(){return W});var l={};a.r(l),a.d(l,"default",function(){return I});var i={};a.r(i),a.d(i,"default",function(){return T});var s={};a.r(s),a.d(s,"default",function(){return k});var u={};a.r(u),a.d(u,"default",function(){return D});var p=a("tyNb"),d=a("jzzn"),b=a("IywY"),h=a("t9W5"),g=a("qBHQ"),m=a("fXoL"),y=a("dor/"),v=a("kt86"),f=a("RJTZ"),V=a("Kpas");let S=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Kb({type:e,selectors:[["app-search-field-header"]],decls:7,vars:0,consts:[["module","PlatformSearchFieldModule","subPackage","search-field"]],template:function(e,n){1&e&&(m.Wb(0,"header"),m.Vc(1,"Search Field"),m.Vb(),m.Wb(2,"description"),m.Vc(3,"The SearchField component is an interface used to initiate searches for an application. The SearchField allows the user to type in keywords and initiate a search based on the keyword via a keyboard 'enter' or by clicking on the search icon button. The SearchField has the option of including a type ahead dropdown to assist users on their keyword search."),m.Vb(),m.Rb(4,"import",0),m.Rb(5,"fd-header-tabs"),m.Rb(6,"router-outlet"))},directives:[y.a,v.a,f.a,V.a,p.h],encapsulation:2}),e})();var C=".result-field + .result-field {\n    margin-top: 0.7rem;\n}\n\n.result-block {\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n}\n",w='<h4>Cozy</h4>\n<fdp-search-field [placeholder]="\'Search\'" [suggestions]="suggestions" (searchSubmit)="onSearchSubmit($event)"\n    (inputChange)="onInputChange($event)"></fdp-search-field>\n<div class="result-block">\n    <div class="result-field">\n        <label>Input Change Text: </label><span>{{ inputText }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Term: </label><span>{{ searchTerm }}</span>\n    </div>\n</div>\n<h4>Compact</h4>\n<fdp-search-field\n    [placeholder]="\'Search\'"\n    [suggestions]="suggestions"\n    [contentDensity]="\'compact\'"\n    ariaLabel="Search something"\n    (searchSubmit)="onCompactSearchSubmit($event)"\n    (inputChange)="onCompactInputChange($event)"></fdp-search-field>\n\n<div class="result-block">\n    <div class="result-field">\n        <label>Input Change Text: </label><span>{{ compactInputText }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Term: </label><span>{{ compactSearchTerm }}</span>\n    </div>\n</div>\n',x="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SuggestionItem, SearchInput } from '@fundamental-ngx/platform/search-field';\n\n@Component({\n    selector: 'fdp-platform-search-field-basic-example',\n    templateUrl: './platform-search-field-basic-example.component.html',\n    styleUrls: ['./platform-search-field-basic-example.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformSearchFieldBasicExampleComponent implements OnInit {\n    public suggestions: SuggestionItem[];\n\n    public searchTerm = '';\n    public inputText = '';\n\n    public compactSearchTerm = '';\n    public compactInputText = '';\n\n    ngOnInit(): void {\n        this.suggestions = [\n            {\n                value: 'Apple'\n            },\n            {\n                value: 'Banana'\n            },\n            {\n                value: 'Blueberry'\n            },\n            {\n                value: 'Cherry'\n            },\n            {\n                value: 'Grape'\n            },\n            {\n                value: 'Lemon'\n            },\n            {\n                value: 'Lime'\n            },\n            {\n                value: 'Orange'\n            },\n            {\n                value: 'Peach'\n            },\n            {\n                value: 'Pineapple'\n            },\n            {\n                value: 'Plum'\n            },\n            {\n                value: 'Raspberry'\n            }\n        ];\n    }\n\n    onSearchSubmit($event: SearchInput): void {\n        this.searchTerm = $event.text;\n    }\n\n    onInputChange($event: SearchInput): void {\n        this.inputText = $event.text;\n    }\n\n    onCompactSearchSubmit($event: SearchInput): void {\n        this.compactSearchTerm = $event.text;\n    }\n\n    onCompactInputChange($event: SearchInput): void {\n        this.compactInputText = $event.text;\n    }\n}\n",W='<h4>Cozy</h4>\n<fdp-search-field [placeholder]="\'Search\'" [suggestions]="suggestions" [categories]="categories"\n    (searchSubmit)="onSearchSubmit($event)" (inputChange)="onInputChange($event)"></fdp-search-field>\n<div class="result-block">\n    <div class="result-field">\n        <label>Input Change Text: </label><span>{{ inputText }}</span>\n    </div>\n    <div class="result-field">\n        <label>Input Change Category: </label><span>{{ inputCategory }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Term: </label><span>{{ searchTerm }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Category: </label><span>{{ searchCategory }}</span>\n    </div>\n</div>\n<h4>Compact</h4>\n<fdp-search-field [placeholder]="\'Search\'" [suggestions]="suggestions" [categories]="categories"\n    [contentDensity]="\'compact\'" (searchSubmit)="onCompactSearchSubmit($event)"\n    (inputChange)="onCompactInputChange($event)"></fdp-search-field>\n<div class="result-block">\n    <div class="result-field">\n        <label>Input Change Text: </label><span>{{ compactInputText }}</span>\n    </div>\n    <div class="result-field">\n        <label>Input Change Category: </label><span>{{ compactInputCategory }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Term: </label><span>{{ compactSearchTerm }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Category: </label><span>{{ compactSearchCategory }}</span>\n    </div>\n</div>\n',I="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SuggestionItem, SearchInput, ValueLabelItem } from '@fundamental-ngx/platform/search-field';\n\n@Component({\n    selector: 'fdp-platform-search-field-categories-example',\n    templateUrl: './platform-search-field-categories-example.component.html',\n    styleUrls: ['./platform-search-field-categories-example.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformSearchFieldCategoriesExampleComponent implements OnInit {\n    public suggestions: SuggestionItem[];\n    public categories: ValueLabelItem[];\n\n    public searchTerm = '';\n    public searchCategory = '';\n    public inputText = '';\n    public inputCategory = '';\n\n    public compactSearchTerm = '';\n    public compactSearchCategory = '';\n    public compactInputText = '';\n    public compactInputCategory = '';\n\n    ngOnInit(): void {\n        this.suggestions = [\n            {\n                value: 'Apple'\n            },\n            {\n                value: 'Banana'\n            },\n            {\n                value: 'Blueberry'\n            },\n            {\n                value: 'Cherry'\n            },\n            {\n                value: 'Grape'\n            },\n            {\n                value: 'Lemon'\n            },\n            {\n                value: 'Lime'\n            },\n            {\n                value: 'Orange'\n            },\n            {\n                value: 'Peach'\n            },\n            {\n                value: 'Pineapple'\n            },\n            {\n                value: 'Plum'\n            },\n            {\n                value: 'Raspberry'\n            }\n        ];\n\n        this.categories = [\n            {\n                value: 'red',\n                label: 'Red'\n            },\n            {\n                value: 'orange',\n                label: 'Orange'\n            },\n            {\n                value: 'yellow',\n                label: 'Yellow'\n            },\n            {\n                value: 'green',\n                label: 'Green'\n            },\n            {\n                value: 'blue',\n                label: 'Blue'\n            },\n            {\n                value: 'indigo',\n                label: 'Indigo'\n            },\n            {\n                value: 'violet',\n                label: 'Violet'\n            }\n        ];\n    }\n\n    onSearchSubmit($event: SearchInput): void {\n        this.searchTerm = $event.text;\n        this.searchCategory = $event.category;\n    }\n\n    onInputChange($event: SearchInput): void {\n        this.inputText = $event.text;\n        this.inputCategory = $event.category;\n    }\n\n    onCompactSearchSubmit($event: SearchInput): void {\n        this.compactSearchTerm = $event.text;\n        this.compactSearchCategory = $event.category;\n    }\n\n    onCompactInputChange($event: SearchInput): void {\n        this.compactInputText = $event.text;\n        this.compactInputCategory = $event.category;\n    }\n}\n",T='<h4>Cozy</h4>\n<fdp-search-field\n    placeholder="Search"\n    [dataSource]="dataSource"\n    [categories]="categories"\n    (searchSubmit)="onSearchSubmit($event)"\n    (inputChange)="onInputChange($event)"\n></fdp-search-field>\n<div class="result-block">\n    <div class="result-field">\n        <label>Input Change Text: </label><span>{{ inputText }}</span>\n    </div>\n    <div class="result-field">\n        <label>Input Change Category: </label><span>{{ inputCategory }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Term: </label><span>{{ searchTerm }}</span>\n    </div>\n    <div class="result-field">\n        <label>Search Submit Category: </label><span>{{ searchCategory }}</span>\n    </div>\n</div>\n',k="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SearchFieldDataSource } from '@fundamental-ngx/platform/shared';\nimport { SearchInput, ValueLabelItem } from '@fundamental-ngx/platform/search-field';\nimport { SearchFieldDataProvider } from './platform-search-field-data-source-example.service';\n\n@Component({\n    selector: 'fdp-platform-search-field-data-source-example',\n    templateUrl: './platform-search-field-data-source-example.component.html',\n    styleUrls: ['./platform-search-field-data-source-example.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformSearchFieldDataSourceExampleComponent implements OnInit {\n    public categories: ValueLabelItem[];\n\n    public searchTerm = '';\n    public searchCategory = '';\n    public inputText = '';\n    public inputCategory = '';\n\n    public dataSource: SearchFieldDataSource<any>;\n\n    ngOnInit(): void {\n        this.dataSource = new SearchFieldDataSource(new SearchFieldDataProvider());\n        this.categories = [\n            {\n                value: 'red',\n                label: 'Red'\n            },\n            {\n                value: 'orange',\n                label: 'Orange'\n            },\n            {\n                value: 'yellow',\n                label: 'Yellow'\n            },\n            {\n                value: 'green',\n                label: 'Green'\n            },\n            {\n                value: 'blue',\n                label: 'Blue'\n            },\n            {\n                value: 'indigo',\n                label: 'Indigo'\n            },\n            {\n                value: 'violet',\n                label: 'Violet'\n            }\n        ];\n    }\n\n    onSearchSubmit($event: SearchInput): void {\n        this.searchTerm = $event.text;\n        this.searchCategory = $event.category;\n    }\n\n    onInputChange($event: SearchInput): void {\n        this.inputText = $event.text;\n        this.inputCategory = $event.category;\n    }\n}\n",D="import { of, Observable } from 'rxjs';\n\nimport { DataProvider } from '@fundamental-ngx/platform/shared';\n\nconst DATA = [\n    {\n        keyword: 'Blueberry',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blueberry Pancakes',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Cheese',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Dragon',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Jeans',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Monday',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Moon',\n        category: 'blue'\n    },\n    {\n        keyword: 'Blue Ox',\n        category: 'blue'\n    },\n    {\n        keyword: 'Boy Blue',\n        category: 'blue'\n    },\n    {\n        keyword: 'Electric Indigo',\n        category: 'indigo'\n    },\n    {\n        keyword: 'Green Apple',\n        category: 'green'\n    },\n    {\n        keyword: 'Green Dragon',\n        category: 'green'\n    },\n    {\n        keyword: 'Green Giant',\n        category: 'green'\n    },\n    {\n        keyword: 'Green Grass',\n        category: 'green'\n    },\n    {\n        keyword: 'Green Salad',\n        category: 'green'\n    },\n    {\n        keyword: 'Green Thumb',\n        category: 'green'\n    },\n    {\n        keyword: 'Indigo',\n        category: 'indigo'\n    },\n    {\n        keyword: 'Mellow Yellow',\n        category: 'yellow'\n    },\n    {\n        keyword: 'Orange Crush',\n        category: 'orange'\n    },\n    {\n        keyword: 'Orange Juice',\n        category: 'orange'\n    },\n    {\n        keyword: 'Red Dragon',\n        category: 'red'\n    },\n    {\n        keyword: 'Red Rose',\n        category: 'red'\n    },\n    {\n        keyword: 'Red Tag',\n        category: 'red'\n    },\n    {\n        keyword: 'Red Wagon',\n        category: 'red'\n    },\n    {\n        keyword: 'Violet',\n        category: 'violet'\n    },\n    {\n        keyword: 'Violet Violin',\n        category: 'violet'\n    },\n    {\n        keyword: 'Yellow Corn',\n        category: 'yellow'\n    },\n    {\n        keyword: 'Yellowstone',\n        category: 'yellow'\n    },\n    {\n        keyword: 'Yellow Rose',\n        category: 'yellow'\n    }\n];\n\nexport class SearchFieldDataProvider extends DataProvider<string> {\n    constructor() {\n        super();\n    }\n\n    fetch(params: Map<string, string>): Observable<string[]> {\n        let data = DATA;\n        if (!!params.get('keyword')) {\n            const keyword = params.get('keyword').toLowerCase();\n            data = data.filter((item) => item.keyword.toLowerCase().indexOf(keyword) > -1);\n        }\n        if (!!params.get('category')) {\n            data = data.filter((item) => item.category === params.get('category'));\n        }\n        return of(data.map((item) => item.keyword));\n    }\n}\n",F=a("ddaM"),B=a("X1JU"),R=a("g0Du");let $=(()=>{class e{constructor(){this.searchTerm="",this.inputText="",this.compactSearchTerm="",this.compactInputText=""}ngOnInit(){this.suggestions=[{value:"Apple"},{value:"Banana"},{value:"Blueberry"},{value:"Cherry"},{value:"Grape"},{value:"Lemon"},{value:"Lime"},{value:"Orange"},{value:"Peach"},{value:"Pineapple"},{value:"Plum"},{value:"Raspberry"}]}onSearchSubmit(e){this.searchTerm=e.text}onInputChange(e){this.inputText=e.text}onCompactSearchSubmit(e){this.compactSearchTerm=e.text}onCompactInputChange(e){this.compactInputText=e.text}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Kb({type:e,selectors:[["fdp-platform-search-field-basic-example"]],decls:28,vars:9,consts:[[3,"placeholder","suggestions","searchSubmit","inputChange"],[1,"result-block"],[1,"result-field"],["ariaLabel","Search something",3,"placeholder","suggestions","contentDensity","searchSubmit","inputChange"]],template:function(e,n){1&e&&(m.Wb(0,"h4"),m.Vc(1,"Cozy"),m.Vb(),m.Wb(2,"fdp-search-field",0),m.jc("searchSubmit",function(e){return n.onSearchSubmit(e)})("inputChange",function(e){return n.onInputChange(e)}),m.Vb(),m.Wb(3,"div",1),m.Wb(4,"div",2),m.Wb(5,"label"),m.Vc(6,"Input Change Text: "),m.Vb(),m.Wb(7,"span"),m.Vc(8),m.Vb(),m.Vb(),m.Wb(9,"div",2),m.Wb(10,"label"),m.Vc(11,"Search Submit Term: "),m.Vb(),m.Wb(12,"span"),m.Vc(13),m.Vb(),m.Vb(),m.Vb(),m.Wb(14,"h4"),m.Vc(15,"Compact"),m.Vb(),m.Wb(16,"fdp-search-field",3),m.jc("searchSubmit",function(e){return n.onCompactSearchSubmit(e)})("inputChange",function(e){return n.onCompactInputChange(e)}),m.Vb(),m.Wb(17,"div",1),m.Wb(18,"div",2),m.Wb(19,"label"),m.Vc(20,"Input Change Text: "),m.Vb(),m.Wb(21,"span"),m.Vc(22),m.Vb(),m.Vb(),m.Wb(23,"div",2),m.Wb(24,"label"),m.Vc(25,"Search Submit Term: "),m.Vb(),m.Wb(26,"span"),m.Vc(27),m.Vb(),m.Vb(),m.Vb()),2&e&&(m.Db(2),m.vc("placeholder","Search")("suggestions",n.suggestions),m.Db(6),m.Wc(n.inputText),m.Db(5),m.Wc(n.searchTerm),m.Db(3),m.vc("placeholder","Search")("suggestions",n.suggestions)("contentDensity","compact"),m.Db(6),m.Wc(n.compactInputText),m.Db(5),m.Wc(n.compactSearchTerm))},directives:[R.a],styles:[".result-field+.result-field{margin-top:.7rem}.result-block{margin-top:1rem;margin-bottom:2rem}"],encapsulation:2}),e})();var O=a("5HkS"),P=a("Hxo2");let G=(()=>{class e{constructor(){this.searchTerm="",this.searchCategory="",this.inputText="",this.inputCategory="",this.compactSearchTerm="",this.compactSearchCategory="",this.compactInputText="",this.compactInputCategory=""}ngOnInit(){this.suggestions=[{value:"Apple"},{value:"Banana"},{value:"Blueberry"},{value:"Cherry"},{value:"Grape"},{value:"Lemon"},{value:"Lime"},{value:"Orange"},{value:"Peach"},{value:"Pineapple"},{value:"Plum"},{value:"Raspberry"}],this.categories=[{value:"red",label:"Red"},{value:"orange",label:"Orange"},{value:"yellow",label:"Yellow"},{value:"green",label:"Green"},{value:"blue",label:"Blue"},{value:"indigo",label:"Indigo"},{value:"violet",label:"Violet"}]}onSearchSubmit(e){this.searchTerm=e.text,this.searchCategory=e.category}onInputChange(e){this.inputText=e.text,this.inputCategory=e.category}onCompactSearchSubmit(e){this.compactSearchTerm=e.text,this.compactSearchCategory=e.category}onCompactInputChange(e){this.compactInputText=e.text,this.compactInputCategory=e.category}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Kb({type:e,selectors:[["fdp-platform-search-field-categories-example"]],decls:48,vars:15,consts:[[3,"placeholder","suggestions","categories","searchSubmit","inputChange"],[1,"result-block"],[1,"result-field"],[3,"placeholder","suggestions","categories","contentDensity","searchSubmit","inputChange"]],template:function(e,n){1&e&&(m.Wb(0,"h4"),m.Vc(1,"Cozy"),m.Vb(),m.Wb(2,"fdp-search-field",0),m.jc("searchSubmit",function(e){return n.onSearchSubmit(e)})("inputChange",function(e){return n.onInputChange(e)}),m.Vb(),m.Wb(3,"div",1),m.Wb(4,"div",2),m.Wb(5,"label"),m.Vc(6,"Input Change Text: "),m.Vb(),m.Wb(7,"span"),m.Vc(8),m.Vb(),m.Vb(),m.Wb(9,"div",2),m.Wb(10,"label"),m.Vc(11,"Input Change Category: "),m.Vb(),m.Wb(12,"span"),m.Vc(13),m.Vb(),m.Vb(),m.Wb(14,"div",2),m.Wb(15,"label"),m.Vc(16,"Search Submit Term: "),m.Vb(),m.Wb(17,"span"),m.Vc(18),m.Vb(),m.Vb(),m.Wb(19,"div",2),m.Wb(20,"label"),m.Vc(21,"Search Submit Category: "),m.Vb(),m.Wb(22,"span"),m.Vc(23),m.Vb(),m.Vb(),m.Vb(),m.Wb(24,"h4"),m.Vc(25,"Compact"),m.Vb(),m.Wb(26,"fdp-search-field",3),m.jc("searchSubmit",function(e){return n.onCompactSearchSubmit(e)})("inputChange",function(e){return n.onCompactInputChange(e)}),m.Vb(),m.Wb(27,"div",1),m.Wb(28,"div",2),m.Wb(29,"label"),m.Vc(30,"Input Change Text: "),m.Vb(),m.Wb(31,"span"),m.Vc(32),m.Vb(),m.Vb(),m.Wb(33,"div",2),m.Wb(34,"label"),m.Vc(35,"Input Change Category: "),m.Vb(),m.Wb(36,"span"),m.Vc(37),m.Vb(),m.Vb(),m.Wb(38,"div",2),m.Wb(39,"label"),m.Vc(40,"Search Submit Term: "),m.Vb(),m.Wb(41,"span"),m.Vc(42),m.Vb(),m.Vb(),m.Wb(43,"div",2),m.Wb(44,"label"),m.Vc(45,"Search Submit Category: "),m.Vb(),m.Wb(46,"span"),m.Vc(47),m.Vb(),m.Vb(),m.Vb()),2&e&&(m.Db(2),m.vc("placeholder","Search")("suggestions",n.suggestions)("categories",n.categories),m.Db(6),m.Wc(n.inputText),m.Db(5),m.Wc(n.inputCategory),m.Db(5),m.Wc(n.searchTerm),m.Db(5),m.Wc(n.searchCategory),m.Db(3),m.vc("placeholder","Search")("suggestions",n.suggestions)("categories",n.categories)("contentDensity","compact"),m.Db(6),m.Wc(n.compactInputText),m.Db(5),m.Wc(n.compactInputCategory),m.Db(5),m.Wc(n.compactSearchTerm),m.Db(5),m.Wc(n.compactSearchCategory))},directives:[R.a],styles:[".result-field+.result-field{margin-top:.7rem}.result-block{margin-top:1rem;margin-bottom:2rem}"],encapsulation:2}),e})();var L=a("lRwm"),A=a("LRne");const N=[{keyword:"Blueberry",category:"blue"},{keyword:"Blueberry Pancakes",category:"blue"},{keyword:"Blue Cheese",category:"blue"},{keyword:"Blue Dragon",category:"blue"},{keyword:"Blue Jeans",category:"blue"},{keyword:"Blue Monday",category:"blue"},{keyword:"Blue Moon",category:"blue"},{keyword:"Blue Ox",category:"blue"},{keyword:"Boy Blue",category:"blue"},{keyword:"Electric Indigo",category:"indigo"},{keyword:"Green Apple",category:"green"},{keyword:"Green Dragon",category:"green"},{keyword:"Green Giant",category:"green"},{keyword:"Green Grass",category:"green"},{keyword:"Green Salad",category:"green"},{keyword:"Green Thumb",category:"green"},{keyword:"Indigo",category:"indigo"},{keyword:"Mellow Yellow",category:"yellow"},{keyword:"Orange Crush",category:"orange"},{keyword:"Orange Juice",category:"orange"},{keyword:"Red Dragon",category:"red"},{keyword:"Red Rose",category:"red"},{keyword:"Red Tag",category:"red"},{keyword:"Red Wagon",category:"red"},{keyword:"Violet",category:"violet"},{keyword:"Violet Violin",category:"violet"},{keyword:"Yellow Corn",category:"yellow"},{keyword:"Yellowstone",category:"yellow"},{keyword:"Yellow Rose",category:"yellow"}];class E extends L.j{constructor(){super()}fetch(e){let n=N;if(e.get("keyword")){const a=e.get("keyword").toLowerCase();n=n.filter(e=>e.keyword.toLowerCase().indexOf(a)>-1)}return e.get("category")&&(n=n.filter(n=>n.category===e.get("category"))),Object(A.a)(n.map(e=>e.keyword))}}let Y=(()=>{class e{constructor(){this.searchTerm="",this.searchCategory="",this.inputText="",this.inputCategory=""}ngOnInit(){this.dataSource=new L.A(new E),this.categories=[{value:"red",label:"Red"},{value:"orange",label:"Orange"},{value:"yellow",label:"Yellow"},{value:"green",label:"Green"},{value:"blue",label:"Blue"},{value:"indigo",label:"Indigo"},{value:"violet",label:"Violet"}]}onSearchSubmit(e){this.searchTerm=e.text,this.searchCategory=e.category}onInputChange(e){this.inputText=e.text,this.inputCategory=e.category}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Kb({type:e,selectors:[["fdp-platform-search-field-data-source-example"]],decls:24,vars:6,consts:[["placeholder","Search",3,"dataSource","categories","searchSubmit","inputChange"],[1,"result-block"],[1,"result-field"]],template:function(e,n){1&e&&(m.Wb(0,"h4"),m.Vc(1,"Cozy"),m.Vb(),m.Wb(2,"fdp-search-field",0),m.jc("searchSubmit",function(e){return n.onSearchSubmit(e)})("inputChange",function(e){return n.onInputChange(e)}),m.Vb(),m.Wb(3,"div",1),m.Wb(4,"div",2),m.Wb(5,"label"),m.Vc(6,"Input Change Text: "),m.Vb(),m.Wb(7,"span"),m.Vc(8),m.Vb(),m.Vb(),m.Wb(9,"div",2),m.Wb(10,"label"),m.Vc(11,"Input Change Category: "),m.Vb(),m.Wb(12,"span"),m.Vc(13),m.Vb(),m.Vb(),m.Wb(14,"div",2),m.Wb(15,"label"),m.Vc(16,"Search Submit Term: "),m.Vb(),m.Wb(17,"span"),m.Vc(18),m.Vb(),m.Vb(),m.Wb(19,"div",2),m.Wb(20,"label"),m.Vc(21,"Search Submit Category: "),m.Vb(),m.Wb(22,"span"),m.Vc(23),m.Vb(),m.Vb(),m.Vb()),2&e&&(m.Db(2),m.vc("dataSource",n.dataSource)("categories",n.categories),m.Db(6),m.Wc(n.inputText),m.Db(5),m.Wc(n.inputCategory),m.Db(5),m.Wc(n.searchTerm),m.Db(5),m.Wc(n.searchCategory))},directives:[R.a],styles:[".result-field+.result-field{margin-top:.7rem}.result-block{margin-top:1rem;margin-bottom:2rem}"],encapsulation:2}),e})();const M=[{path:"",component:S,children:[{path:"",component:(()=>{class e{constructor(){this.searchFieldBasic=[{language:"html",code:r,fileName:"platform-search-field-basic-example"},{language:"typescript",code:o,fileName:"platform-search-field-basic-example",component:"PlatformSearchFieldBasicExampleComponent",scssFileCode:t}],this.searchFieldCategories=[{language:"html",code:c,fileName:"platform-search-field-categories-example"},{language:"typescript",code:l,fileName:"platform-search-field-categories-example",component:"PlatformSearchFieldCategoriesExampleComponent",scssFileCode:t}],this.searchFieldDataSource=[{language:"html",code:i,fileName:"platform-search-field-data-source-example"},{language:"typescript",code:s,fileName:"platform-search-field-data-source-example",component:"PlatformSearchFieldDataSourceExampleComponent",scssFileCode:t},{language:"typescript",code:u,fileName:"platform-search-field-data-source-example",service:!0,component:"SearchFieldDataProvider"}]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Kb({type:e,selectors:[["app-search-field"]],decls:81,vars:3,consts:[["id","simple","componentName","search-field"],[3,"exampleFiles"],["id","categories","componentName","search-field"],["id","data-source","componentName","search-field"]],template:function(e,n){1&e&&(m.Wb(0,"fd-docs-section-title",0),m.Vc(1,"Search Field\n"),m.Vb(),m.Wb(2,"description"),m.Vc(3,"The data for the typeahead dropdown list can be provided via the "),m.Wb(4,"code"),m.Vc(5,"suggestions"),m.Vb(),m.Vc(6," property. Data provided this manner can either be an array of strings or an Observeable with an array of strings as output. Suggestion data will be filtered and highlighted based on the user input."),m.Vb(),m.Wb(7,"description"),m.Vc(8,"The Search Field component outputs two types of events: an "),m.Wb(9,"code"),m.Vc(10,"inputChange"),m.Vb(),m.Vc(11," event whenever the input text changes, and a "),m.Wb(12,"code"),m.Vc(13,"searchSubmit"),m.Vb(),m.Vc(14," event when the user types a keyboard enter or clicks the search icon button."),m.Vb(),m.Wb(15,"description"),m.Vc(16,"The placeholder text for the Search Field can be changed with the "),m.Wb(17,"code"),m.Vc(18,"placeholder"),m.Vb(),m.Vc(19," property.\n"),m.Vb(),m.Wb(20,"description"),m.Vc(21,"The Search field "),m.Wb(22,"code"),m.Vc(23,"size"),m.Vb(),m.Vc(24," property can be either "),m.Wb(25,"code"),m.Vc(26,"cozy"),m.Vb(),m.Vc(27," or "),m.Wb(28,"code"),m.Vc(29,"compact"),m.Vb(),m.Vb(),m.Wb(30,"description"),m.Vc(31,"The Search field "),m.Wb(32,"code"),m.Vc(33,"ariaLabel"),m.Vb(),m.Vc(34," property can be used to set ARIA attribute to clarify what search field is. "),m.Vb(),m.Wb(35,"description"),m.Vc(36,"The Search field "),m.Wb(37,"code"),m.Vc(38,"ariaLabelledBy"),m.Vb(),m.Vc(39," property can be used to set ARIA attribute with id of elements which labels search input to clarify what search field is. "),m.Vb(),m.Wb(40,"component-example"),m.Rb(41,"fdp-platform-search-field-basic-example"),m.Vb(),m.Rb(42,"code-example",1),m.Rb(43,"separator"),m.Wb(44,"fd-docs-section-title",2),m.Vc(45,"Search Field with Categories\n"),m.Vb(),m.Wb(46,"description"),m.Vc(47,"Categories can be added to the search field by assigning an array of strings to the "),m.Wb(48,"code"),m.Vc(49,"categories"),m.Vb(),m.Vc(50," property. The selected category is included in the event data emitted in both the "),m.Wb(51,"code"),m.Vc(52,"inputChange"),m.Vb(),m.Vc(53," and "),m.Wb(54,"code"),m.Vc(55,"searchSubmit"),m.Vb(),m.Vc(56," events."),m.Vb(),m.Wb(57,"component-example"),m.Rb(58,"fdp-platform-search-field-categories-example"),m.Vb(),m.Rb(59,"code-example",1),m.Rb(60,"separator"),m.Wb(61,"fd-docs-section-title",3),m.Vc(62,"Search Field with Data Source\n"),m.Vb(),m.Wb(63,"description"),m.Vc(64,"A dynamic "),m.Wb(65,"code"),m.Vc(66,"dataSource"),m.Vb(),m.Vc(67," can be provided to the Search Field as an alternative to the static string array provided via the "),m.Wb(68,"code"),m.Vc(69,"suggestions"),m.Vb(),m.Vc(70," property. Use the "),m.Wb(71,"code"),m.Vc(72,"SearchFieldDataSource"),m.Vb(),m.Vc(73," class and "),m.Wb(74,"code"),m.Vc(75,"SearchFieldDataProvider"),m.Vb(),m.Vc(76," base class to create a data source which can be connected to a back-end service."),m.Vb(),m.Wb(77,"component-example"),m.Rb(78,"fdp-platform-search-field-data-source-example"),m.Vb(),m.Rb(79,"code-example",1),m.Rb(80,"separator")),2&e&&(m.Db(42),m.vc("exampleFiles",n.searchFieldBasic),m.Db(17),m.vc("exampleFiles",n.searchFieldCategories),m.Db(20),m.vc("exampleFiles",n.searchFieldDataSource))},directives:[F.a,v.a,B.a,$,O.a,P.a,G,Y],encapsulation:2}),e})()},{path:"api",component:d.a,data:{content:b.a.searchField}}]}];let j=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=m.Ob({type:e}),e.\u0275inj=m.Nb({imports:[[p.g.forChild(M),h.a,g.a],p.g]}),e})()}}]);