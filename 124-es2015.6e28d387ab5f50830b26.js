(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{"F/hh":function(e,t,o){"use strict";o.r(t),o.d(t,"PlatformMultiComboboxDocsModule",function(){return Q});var n={};o.r(n),o.d(n,"default",function(){return v});var a={};o.r(a),o.d(a,"default",function(){return D});var l={};o.r(l),o.d(l,"default",function(){return M});var c={};o.r(c),o.d(c,"default",function(){return W});var m={};o.r(m),o.d(m,"default",function(){return F});var s={};o.r(s),o.d(s,"default",function(){return w});var r={};o.r(r),o.d(r,"default",function(){return R});var i={};o.r(i),o.d(i,"default",function(){return T});var p={};o.r(p),o.d(p,"default",function(){return E});var d={};o.r(d),o.d(d,"default",function(){return L});var b=o("tyNb"),u=o("A+vx"),f=o("XaOr"),y=o("jzzn"),g=o("IywY"),S=o("fXoL"),h=o("dor/"),x=o("kt86"),V=o("RJTZ"),C=o("Kpas");let I=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fd-platform-multi-combobox-header"]],decls:7,vars:0,consts:[["module","PlatformMultiComboboxModule"]],template:function(e,t){1&e&&(S.Wb(0,"header"),S.Vc(1,"Multi-Combobox"),S.Vb(),S.Wb(2,"description"),S.Vc(3," The multi-combo box control is commonly used to enable users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to open the list of available options. The select options in the list have checkboxes that permit multi-selection.\n"),S.Vb(),S.Rb(4,"import",0),S.Rb(5,"fd-header-tabs"),S.Rb(6,"router-outlet"))},directives:[h.a,x.a,V.a,C.a,b.h],encapsulation:2}),e})();var v='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="array-of-strings" label="Array of Strings">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-strings"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            [selectedItems]="selectedItems1"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="array-of-objects" label="Array of Objects">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-objects"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            lookupKey="name"\n            [selectedItems]="selectedItems2"\n            (selectionChange)="onSelect2($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems2 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="observable" label="Observable">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="observable"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceOf"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect3($event)"\n            [selectedItems]="selectedItems3"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems3 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="ds" label="Data Source">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="ds"\n            placeholder="Type some text..."\n            [dataSource]="ds"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect4($event)"\n            [selectedItems]="selectedItems4"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems4 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n\n<fdp-form-group [noLabelLayout]="false" columnLayout="XL3-L2-M1-S1">\n    <fdp-form-field id="standard" label="Example with \'N more\' label" column="1">\n        <fdp-multi-combobox\n            name="standard"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            (selectionChange)="onSelect5($event)"\n            [selectedItems]="selectedItems5"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems5  }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',D="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { ArrayComboBoxDataSource, DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-datasource-example',\n    templateUrl: './multi-combobox-datasource-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxDatasourceExampleComponent {\n    dataSourceStrings = [\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    dataSourceOf = of(this.dataSource);\n    ds = new ArrayComboBoxDataSource(this.dataSource);\n\n    selectedItems1 = [this.dataSourceStrings[1]];\n    selectedItems2 = [this.dataSource[1]];\n    selectedItems3 = null;\n    selectedItems4 = null;\n    selectedItems5 = [this.dataSourceStrings[1], this.dataSourceStrings[2], this.dataSourceStrings[3], this.dataSourceStrings[4]];\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n\n    onSelect2(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems2 = item.selectedItems;\n    }\n\n    onSelect3(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems3 = item.selectedItems;\n    }\n\n    onSelect4(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems4 = item.selectedItems;\n    }\n\n    onSelect5(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems5 = item.selectedItems;\n    }\n}\n",M='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="mobile" label="Mobile Mode Combobox">\n        <fdp-multi-combobox\n            name="mobile"\n            placeholder="Type some text..."\n            displayKey="name"\n            [dataSource]="dataSource"\n            [mobile]="true"\n            [mobileConfig]="mobileConfig"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',W="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { MobileModeConfig } from '@fundamental-ngx/core/mobile-mode';\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-mobile-example',\n    templateUrl: './multi-combobox-mobile-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxMobileExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = null;\n\n    mobileConfig: MobileModeConfig = {\n        title: 'Title',\n        approveButtonText: 'Save',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true\n    };\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",F='<fdp-form-group [noLabelLayout]="false" [formGroup]="customForm">\n    <fdp-form-field id="field" label="Array of Strings">\n        <fdp-multi-combobox\n            name="field"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect($event)"\n            formControlName="field"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n        <p>Form Selected Item: {{ customForm.getRawValue() | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',w="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-forms-example',\n    templateUrl: './multi-combobox-forms-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxFormsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    customForm = new FormGroup({\n        field: new FormControl(this.dataSource[3])\n    });\n\n    selectedItems = [this.dataSource[3]];\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",R='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="group" label="Group with Key">\n        <fdp-multi-combobox\n            name="group"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            groupKey="type"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="group-without-key" label="Group without Key">\n        <fdp-multi-combobox\n            name="group-without-key"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            (selectionChange)="onSelect1($event)"\n            [selectedItems]="selectedItems1"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',T="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-group-example',\n    templateUrl: './multi-combobox-group-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxGroupExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = [this.dataSource[1]];\n    selectedItems1 = null;\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n}\n",E='<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="columns" label="Two Columns" required="true">\n        <fdp-multi-combobox\n            name="columns"\n            placeholder="Type some text..."\n            [autoResize]="true"\n            [dataSource]="dataSource"\n            displayKey="name"\n            secondaryKey="type"\n            showSecondaryText="true"\n            secondaryTextAlignment="right"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',L="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS, MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-multi-combobox-columns-example',\n    templateUrl: './multi-combobox-columns-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxColumnsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Florida Evergreen Blueberry', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = null;\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",A=o("ddaM"),K=o("X1JU"),j=o("LRne"),B=o("I7mx"),P=o("npbV"),O=o("ulPk"),N=o("ofXK");let k=(()=>{class e{constructor(){this.dataSourceStrings=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.dataSourceOf=Object(j.a)(this.dataSource),this.ds=new f.b(this.dataSource),this.selectedItems1=[this.dataSourceStrings[1]],this.selectedItems2=[this.dataSource[1]],this.selectedItems3=null,this.selectedItems4=null,this.selectedItems5=[this.dataSourceStrings[1],this.dataSourceStrings[2],this.dataSourceStrings[3],this.dataSourceStrings[4]]}onSelect1(e){this.selectedItems1=e.selectedItems}onSelect2(e){this.selectedItems2=e.selectedItems}onSelect3(e){this.selectedItems3=e.selectedItems}onSelect4(e){this.selectedItems4=e.selectedItems}onSelect5(e){this.selectedItems5=e.selectedItems}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fdp-multi-combobox-datasource-example"]],features:[S.Cb([{provide:f.d,useValue:new Map}])],decls:25,vars:27,consts:[[3,"noLabelLayout"],["id","array-of-strings","label","Array of Strings"],["name","array-of-strings","placeholder","Type some text...",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","array-of-objects","label","Array of Objects"],["name","array-of-objects","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","observable","label","Observable"],["name","observable","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","ds","label","Data Source"],["name","ds","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["columnLayout","XL3-L2-M1-S1",3,"noLabelLayout"],["id","standard","label","Example with 'N more' label","column","1"],["name","standard","placeholder","Type some text...",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(S.Wb(0,"fdp-form-group",0),S.Wb(1,"fdp-form-field",1),S.Wb(2,"fdp-multi-combobox",2),S.jc("selectionChange",function(e){return t.onSelect1(e)}),S.Vb(),S.Wb(3,"p"),S.Vc(4),S.Vb(),S.Vb(),S.Wb(5,"fdp-form-field",3),S.Wb(6,"fdp-multi-combobox",4),S.jc("selectionChange",function(e){return t.onSelect2(e)}),S.Vb(),S.Wb(7,"p"),S.Vc(8),S.oc(9,"json"),S.Vb(),S.Vb(),S.Wb(10,"fdp-form-field",5),S.Wb(11,"fdp-multi-combobox",6),S.jc("selectionChange",function(e){return t.onSelect3(e)}),S.Vb(),S.Wb(12,"p"),S.Vc(13),S.oc(14,"json"),S.Vb(),S.Vb(),S.Wb(15,"fdp-form-field",7),S.Wb(16,"fdp-multi-combobox",8),S.jc("selectionChange",function(e){return t.onSelect4(e)}),S.Vb(),S.Wb(17,"p"),S.Vc(18),S.oc(19,"json"),S.Vb(),S.Vb(),S.Vb(),S.Wb(20,"fdp-form-group",9),S.Wb(21,"fdp-form-field",10),S.Wb(22,"fdp-multi-combobox",11),S.jc("selectionChange",function(e){return t.onSelect5(e)}),S.Vb(),S.Wb(23,"p"),S.Vc(24),S.Vb(),S.Vb(),S.Vb()),2&e&&(S.vc("noLabelLayout",!1),S.Db(2),S.vc("autoResize",!0)("dataSource",t.dataSourceStrings)("selectedItems",t.selectedItems1),S.Db(2),S.Xc("Selected: ",t.selectedItems1,""),S.Db(2),S.vc("autoResize",!0)("dataSource",t.dataSource)("selectedItems",t.selectedItems2),S.Db(2),S.Xc("Selected: ",S.pc(9,21,t.selectedItems2),""),S.Db(3),S.vc("autoResize",!0)("dataSource",t.dataSourceOf)("selectedItems",t.selectedItems3),S.Db(2),S.Xc("Selected: ",S.pc(14,23,t.selectedItems3),""),S.Db(3),S.vc("autoResize",!0)("dataSource",t.ds)("selectedItems",t.selectedItems4),S.Db(2),S.Xc("Selected: ",S.pc(19,25,t.selectedItems4),""),S.Db(2),S.vc("noLabelLayout",!1),S.Db(2),S.vc("dataSource",t.dataSourceStrings)("selectedItems",t.selectedItems5),S.Db(2),S.Xc("Selected: ",t.selectedItems5,""))},directives:[B.a,P.a,O.a],pipes:[N.h],encapsulation:2,changeDetection:0}),e})();var z=o("5HkS"),G=o("Hxo2");let X=(()=>{class e{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=null,this.mobileConfig={title:"Title",approveButtonText:"Save",cancelButtonText:"Cancel",hasCloseButton:!0}}onSelect(e){this.selectedItems=e.selectedItems}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fdp-multi-combobox-mobile-example"]],features:[S.Cb([{provide:f.d,useValue:new Map}])],decls:6,vars:8,consts:[[3,"noLabelLayout"],["id","mobile","label","Mobile Mode Combobox"],["name","mobile","placeholder","Type some text...","displayKey","name",3,"dataSource","mobile","mobileConfig","selectedItems","selectionChange"]],template:function(e,t){1&e&&(S.Wb(0,"fdp-form-group",0),S.Wb(1,"fdp-form-field",1),S.Wb(2,"fdp-multi-combobox",2),S.jc("selectionChange",function(e){return t.onSelect(e)}),S.Vb(),S.Wb(3,"p"),S.Vc(4),S.oc(5,"json"),S.Vb(),S.Vb(),S.Vb()),2&e&&(S.vc("noLabelLayout",!1),S.Db(2),S.vc("dataSource",t.dataSource)("mobile",!0)("mobileConfig",t.mobileConfig)("selectedItems",t.selectedItems),S.Db(2),S.Xc("Selected: ",S.pc(5,6,t.selectedItems),""))},directives:[B.a,P.a,O.a],pipes:[N.h],encapsulation:2,changeDetection:0}),e})(),J=(()=>{class e{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=[this.dataSource[1]],this.selectedItems1=null}onSelect(e){this.selectedItems=e.selectedItems}onSelect1(e){this.selectedItems1=e.selectedItems}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fdp-multi-combobox-group-example"]],features:[S.Cb([{provide:f.d,useValue:new Map}])],decls:11,vars:11,consts:[[3,"noLabelLayout"],["id","group","label","Group with Key"],["name","group","placeholder","Type some text...","displayKey","name","group","true","groupKey","type",3,"dataSource","selectedItems","selectionChange"],["id","group-without-key","label","Group without Key"],["name","group-without-key","placeholder","Type some text...","displayKey","name","group","true",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(S.Wb(0,"fdp-form-group",0),S.Wb(1,"fdp-form-field",1),S.Wb(2,"fdp-multi-combobox",2),S.jc("selectionChange",function(e){return t.onSelect(e)}),S.Vb(),S.Wb(3,"p"),S.Vc(4),S.oc(5,"json"),S.Vb(),S.Vb(),S.Wb(6,"fdp-form-field",3),S.Wb(7,"fdp-multi-combobox",4),S.jc("selectionChange",function(e){return t.onSelect1(e)}),S.Vb(),S.Wb(8,"p"),S.Vc(9),S.oc(10,"json"),S.Vb(),S.Vb(),S.Vb()),2&e&&(S.vc("noLabelLayout",!1),S.Db(2),S.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems),S.Db(2),S.Xc("Selected: ",S.pc(5,7,t.selectedItems),""),S.Db(3),S.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems1),S.Db(2),S.Xc("Selected: ",S.pc(10,9,t.selectedItems1),""))},directives:[B.a,P.a,O.a],pipes:[N.h],encapsulation:2,changeDetection:0}),e})(),_=(()=>{class e{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Florida Evergreen Blueberry",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=null}onSelect(e){this.selectedItems=e.selectedItems}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fdp-multi-combobox-columns-example"]],features:[S.Cb([{provide:f.d,useValue:new Map}])],decls:6,vars:7,consts:[[3,"noLabelLayout"],["id","columns","label","Two Columns","required","true"],["name","columns","placeholder","Type some text...","displayKey","name","secondaryKey","type","showSecondaryText","true","secondaryTextAlignment","right",3,"autoResize","dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(S.Wb(0,"fdp-form-group",0),S.Wb(1,"fdp-form-field",1),S.Wb(2,"fdp-multi-combobox",2),S.jc("selectionChange",function(e){return t.onSelect(e)}),S.Vb(),S.Wb(3,"p"),S.Vc(4),S.oc(5,"json"),S.Vb(),S.Vb(),S.Vb()),2&e&&(S.vc("noLabelLayout",!1),S.Db(2),S.vc("autoResize",!0)("dataSource",t.dataSource)("selectedItems",t.selectedItems),S.Db(2),S.Xc("Selected Item: ",S.pc(5,5,t.selectedItems),""))},directives:[B.a,P.a,O.a],pipes:[N.h],encapsulation:2,changeDetection:0}),e})();var $=o("3Pt+");let U=(()=>{class e{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.customForm=new $.i({field:new $.f(this.dataSource[3])}),this.selectedItems=[this.dataSource[3]]}onSelect(e){this.selectedItems=e.selectedItems}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["fdp-multi-combobox-forms-example"]],features:[S.Cb([{provide:f.d,useValue:new Map}])],decls:9,vars:10,consts:[[3,"noLabelLayout","formGroup"],["id","field","label","Array of Strings"],["name","field","placeholder","Type some text...","displayKey","name","formControlName","field",3,"dataSource","selectedItems","selectionChange"]],template:function(e,t){1&e&&(S.Wb(0,"fdp-form-group",0),S.Wb(1,"fdp-form-field",1),S.Wb(2,"fdp-multi-combobox",2),S.jc("selectionChange",function(e){return t.onSelect(e)}),S.Vb(),S.Wb(3,"p"),S.Vc(4),S.oc(5,"json"),S.Vb(),S.Wb(6,"p"),S.Vc(7),S.oc(8,"json"),S.Vb(),S.Vb(),S.Vb()),2&e&&(S.vc("noLabelLayout",!1)("formGroup",t.customForm),S.Db(2),S.vc("dataSource",t.dataSource)("selectedItems",t.selectedItems),S.Db(2),S.Xc("Selected Item: ",S.pc(5,6,t.selectedItems),""),S.Db(3),S.Xc("Form Selected Item: ",S.pc(8,8,t.customForm.getRawValue()),""))},directives:[B.a,$.r,$.j,P.a,O.a,$.q,$.h],pipes:[N.h],encapsulation:2,changeDetection:0}),e})(),q=(()=>{class e{constructor(){this.multiComboboxDatasourceExample=[{language:"html",fileName:"multi-combobox-datasource-example",code:n},{language:"typescript",fileName:"multi-combobox-datasource-example",code:a,component:"MultiComboboxDatasourceExampleComponent"}],this.multiComboboxMobileExample=[{language:"html",fileName:"multi-combobox-mobile-example",code:l},{language:"typescript",fileName:"multi-combobox-mobile-example",code:c,component:"MultiComboboxMobileExampleComponent"}],this.multiComboboxGroupExample=[{language:"html",fileName:"multi-combobox-group-example",code:r},{language:"typescript",fileName:"multi-combobox-group-example",code:i,component:"MultiComboboxGroupExampleComponent"}],this.multiComboboxColumnsExample=[{language:"html",fileName:"multi-combobox-columns-example",code:p},{language:"typescript",fileName:"multi-combobox-columns-example",code:d,component:"MultiComboboxColumnsExampleComponent"}],this.multiComboboxFormExample=[{language:"html",fileName:"multi-combobox-forms-example",code:m},{language:"typescript",fileName:"multi-combobox-forms-example",code:s,component:"MultiComboboxFormsExampleComponent"}]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=S.Kb({type:e,selectors:[["platform-multi-combobox-docs"]],decls:84,vars:5,consts:[["id","data-source","componentName","multi-combobox"],[3,"exampleFiles"],["id","mobile","componentName","multi-combobox"],["routerLink","/core/global-config","fragment","mobile-mode-config"],["id","group","componentName","multi-combobox"],["id","columns","componentName","multi-combobox"],["id","reactive-form","componentName","multi-combobox"]],template:function(e,t){1&e&&(S.Wb(0,"fd-docs-section-title",0),S.Vc(1,"DataSource"),S.Vb(),S.Wb(2,"description"),S.Vc(3," Input "),S.Wb(4,"code"),S.Vc(5,"[dataSource]"),S.Vb(),S.Vc(6," has this type "),S.Wb(7,"code"),S.Vc(8,"type FdpMultiComboboxDataSource<T> = MultiComboBoxDataSource<T> | Observable<T[]> | T[]"),S.Vb(),S.Vb(),S.Wb(9,"component-example"),S.Rb(10,"fdp-multi-combobox-datasource-example"),S.Vb(),S.Rb(11,"code-example",1),S.Rb(12,"separator"),S.Wb(13,"fd-docs-section-title",2),S.Vc(14,"Multi-Combobox Mobile Mode"),S.Vb(),S.Wb(15,"description"),S.Vc(16," To use Multi-Combobox in mobile mode: "),S.Wb(17,"ul"),S.Wb(18,"li"),S.Vc(19,"import "),S.Wb(20,"code"),S.Vc(21,"MultiComboboxMobileModule"),S.Vb(),S.Vb(),S.Wb(22,"li"),S.Vc(23,"Set "),S.Wb(24,"code"),S.Vc(25,"[mobile]"),S.Vb(),S.Vc(26," property to true"),S.Vb(),S.Wb(27,"li"),S.Vc(28,"Set "),S.Wb(29,"code"),S.Vc(30,"[mobileConfig]"),S.Vb(),S.Vc(31," with "),S.Wb(32,"code"),S.Vc(33,"MobileModeConfig"),S.Vb(),S.Vc(34," configuration object to customize the look of the control "),S.Vb(),S.Vb(),S.Vc(35," Multi-Combobox Mobile Mode can be configured "),S.Wb(36,"strong"),S.Vc(37,"globally"),S.Vb(),S.Vc(38," by providing "),S.Wb(39,"code"),S.Vc(40,"MOBILE_MODE_CONFIG"),S.Vb(),S.Vc(41," token. Check "),S.Wb(42,"a",3),S.Vc(43,"Global Configuration page"),S.Vb(),S.Vc(44," for more information.\n"),S.Vb(),S.Wb(45,"component-example"),S.Rb(46,"fdp-multi-combobox-mobile-example"),S.Vb(),S.Rb(47,"code-example",1),S.Rb(48,"separator"),S.Wb(49,"fd-docs-section-title",4),S.Vc(50," Multi-Combobox with Groups\n"),S.Vb(),S.Wb(51,"description"),S.Vc(52," Multi-Combobox with Groups. Note that a "),S.Wb(53,"code"),S.Vc(54,"group"),S.Vb(),S.Vc(55," and "),S.Wb(56,"code"),S.Vc(57,"groupKey"),S.Vb(),S.Vc(58," is required\n"),S.Vb(),S.Wb(59,"component-example"),S.Rb(60,"fdp-multi-combobox-group-example"),S.Vb(),S.Rb(61,"code-example",1),S.Rb(62,"separator"),S.Wb(63,"fd-docs-section-title",5),S.Vc(64," Multi-Combobox with Two Columns\n"),S.Vb(),S.Wb(65,"description"),S.Vc(66," Multi-Combobox with two columns of information. Note that a "),S.Wb(67,"code"),S.Vc(68,"secondaryKey"),S.Vb(),S.Vc(69," and "),S.Wb(70,"code"),S.Vc(71,"showSecondaryText"),S.Vb(),S.Vc(72," is required\n"),S.Vb(),S.Wb(73,"component-example"),S.Rb(74,"fdp-multi-combobox-columns-example"),S.Vb(),S.Rb(75,"code-example",1),S.Rb(76,"separator"),S.Wb(77,"fd-docs-section-title",6),S.Vc(78," Reactive Form\n"),S.Vb(),S.Wb(79,"description"),S.Vc(80," The Multi-Combobox component may also be used within Angular Reactive Forms.\n"),S.Vb(),S.Wb(81,"component-example"),S.Rb(82,"fdp-multi-combobox-forms-example"),S.Vb(),S.Rb(83,"code-example",1)),2&e&&(S.Db(11),S.vc("exampleFiles",t.multiComboboxDatasourceExample),S.Db(36),S.vc("exampleFiles",t.multiComboboxMobileExample),S.Db(14),S.vc("exampleFiles",t.multiComboboxGroupExample),S.Db(14),S.vc("exampleFiles",t.multiComboboxColumnsExample),S.Db(8),S.vc("exampleFiles",t.multiComboboxFormExample))},directives:[A.a,x.a,K.a,k,z.a,G.a,b.f,X,J,_,U],encapsulation:2}),e})();var H=o("lH0p"),Y=o("t9W5");const Z=[{path:"",component:I,children:[{path:"",component:q},{path:"api",component:y.a,data:{content:g.a.multiCombobox}}]}];let Q=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=S.Ob({type:e}),e.\u0275inj=S.Nb({providers:[{provide:u.a,useValue:H.c,multi:!0}],imports:[[b.g.forChild(Z),Y.a,f.h,f.L,f.K],b.g]}),e})()}}]);