(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{ij4T:function(e,t,n){"use strict";n.r(t),n.d(t,"PlatformTextareaDocsModule",function(){return we});var a={};n.r(a),n.d(a,"default",function(){return C});var r={};n.r(r),n.d(r,"default",function(){return I});var o={};n.r(o),n.d(o,"default",function(){return D});var i={};n.r(i),n.d(i,"default",function(){return L});var l={};n.r(l),n.d(l,"default",function(){return W});var s={};n.r(s),n.d(s,"default",function(){return k});var d={};n.r(d),n.d(d,"default",function(){return M});var c={};n.r(c),n.d(c,"default",function(){return R});var f={};n.r(f),n.d(f,"default",function(){return P});var p={};n.r(p),n.d(p,"default",function(){return E});var m=n("tyNb"),g=n("jzzn"),u=n("IywY"),h=n("t9W5"),b=n("XaOr"),x=n("fXoL"),w=n("dor/"),V=n("kt86"),T=n("RJTZ"),v=n("Kpas");let y=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["app-textarea-header"]],decls:24,vars:0,consts:[["routerLink","/core/textarea"],["module","PlatformTextAreaModule"]],template:function(e,t){1&e&&(x.Wb(0,"header"),x.Vc(1,"Textarea"),x.Vb(),x.Wb(2,"description"),x.Vc(3," The text area is an input control that allows the user to enter several lines of text. "),x.Rb(4,"br"),x.Vc(5," This text area is specially designed to work with Platform Forms, although it can be used by itself as well in conjunction with "),x.Wb(6,"a",0),x.Vc(7,"Fundamental ngx core's"),x.Vb(),x.Vc(8," form directives to achieve similar results. "),x.Rb(9,"br"),x.Rb(10,"br"),x.Rb(11,"import",1),x.Rb(12,"br"),x.Wb(13,"h2"),x.Vc(14,"Platform specific enhancements:"),x.Vb(),x.Vc(15," 1. Textarea can automatically grow its height by specifying the max number of rows, or height to which it can grow. "),x.Rb(16,"br"),x.Vc(17," 2. A counter message that counts the number of remaining or exceeded characters. "),x.Rb(18,"br"),x.Vc(19," 3. Various interaction behaviours when counter exceeds the number of maximum characters. "),x.Rb(20,"br"),x.Vc(21," 4. Support for internationalisation of counter message.\n"),x.Vb(),x.Rb(22,"fd-header-tabs"),x.Rb(23,"router-outlet"))},directives:[w.a,V.a,m.f,T.a,v.a,m.h],styles:[""]}),e})();var C='<main class="fd-page">\n    <div *ngIf="true" class="fd-page__content fd-has-background-color-neutral-2">\n        <fdp-form-group #fg1 [formGroup]="form" [object]="data">\n            <fdp-form-field\n                #ff1\n                id="basicTextarea"\n                label="Basic Textarea with Platform Forms"\n                placeholder="Start entering detailed description"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea name="basicTextarea" [formControl]="ff1.formControl"></fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff2\n                id="readonlyDescription"\n                label="Readonly Textarea"\n                placeholder="Start entering detailed description"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea name="readonlyDescription" [formControl]="ff2.formControl" [readonly]="true">\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff3\n                id="disabledDescription"\n                label="Disabled Textarea"\n                placeholder="Start entering detailed description"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea name="disabledDescription" [disabled]="true" value="this is a disabled textarea">\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff4\n                id="compactTextarea"\n                label="Compact Textarea"\n                placeholder="Start entering detailed description"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea name="compactTextarea" [formControl]="ff4.formControl" contentDensity="compact">\n                </fdp-textarea>\n            </fdp-form-field>\n        </fdp-form-group>\n\n        <div fd-form-item>\n            <label fd-form-label for="textarea-1">Textarea without Platform Forms</label>\n            <fdp-textarea\n                id="textarea-1"\n                name="textarea-1"\n                placeholder="write something here"\n                [maxLength]="10"\n                [showExceededText]="true"\n                [growing]="true"\n                [growingMaxLines]="5"\n                [cols]="10"\n                wrapType="soft"\n                #textarea\n            >\n            </fdp-textarea>\n            <fd-form-message\n                *ngIf="textarea.value && textarea.value.length > 10"\n                type="warning"\n                aria-live="assertive"\n                aria-atomic="true"\n                >This is an example warning when used without forms.\n            </fd-form-message>\n        </div>\n        <br />\n    </div>\n</main>\n',I="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-textarea-basic-example',\n    templateUrl: './platform-textarea-basic-example.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformTextareaBasicExampleComponent implements OnInit {\n    form: FormGroup;\n    data: ReadonlyDescriptionObject;\n\n    constructor() {\n        this.form = new FormGroup({});\n\n        this.data = new ReadonlyDescriptionObject(\n            'This is a readonly description where you can scroll down to read but cannot edit anything. ' +\n                'This is a readonly description where you can scroll down to read but cannot edit anything. ' +\n                'This is a readonly description where you can scroll down to read but cannot edit anything. ' +\n                'This is a readonly description where you can scroll down to read but cannot edit anything. ' +\n                'This is a readonly description where you can scroll down to read but cannot edit anything. ' +\n                'This is a readonly description where you can scroll down to read but cannot edit anything.'\n        );\n    }\n    ngOnInit(): void {}\n}\nclass ReadonlyDescriptionObject {\n    constructor(public readonlyDescription: string) {}\n}\n",D='<main class="fd-page">\n    <div *ngIf="true" class="fd-page__content fd-has-background-color-neutral-2">\n        <fdp-form-group #fg2 [formGroup]="form">\n            <fdp-form-field\n                #ff2\n                id="detailedDescription"\n                label="Detailed description"\n                placeholder="Start entering detailed description"\n                rank="10"\n                [required]="true"\n                [validators]="textareaValidator"\n            >\n                <fdp-textarea\n                    [formControl]="ff2.formControl"\n                    name="detailedDescription"\n                    [maxLength]="10"\n                    stateType="error"\n                    [showExceededText]="true"\n                    [value]="value"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff3\n                id="noCounterMessageInteraction"\n                label="When showExceededText is false and value is set"\n                placeholder="Start entering. Counter message will not be shown, but if an initial value is set whose length > maxLength, excess text is removed on Backpress"\n                rank="10"\n                [required]="true"\n                [validators]="textareaNoCounterMessageValidator"\n            >\n                <fdp-textarea\n                    [formControl]="ff3.formControl"\n                    name="noCounterMessageInteraction"\n                    [maxLength]="10"\n                    [showExceededText]="false"\n                    value="Some value that crosses max length"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field id="submit-button" rank="20">\n                <fdp-button type="submit" (click)="onSubmit()" label="Submit"></fdp-button>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <span *ngIf="errors.required" role="alert" aria-atomic="true" > Value is required </span>\n                <span *ngIf="errors.maxlength" role="alert" aria-atomic="true" >\n                    Please get your character count under limit.\n                </span>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</main>\n\n<pre>Form result: {{ form.value | json }}</pre>\n<pre>Form Status: {{ form.status | json }}</pre>\n',L="import { Component, OnInit, AfterViewInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ValidatorFn, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-textarea-counter-example',\n    templateUrl: './platform-textarea-counter-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformTextareaCounterExampleComponent implements OnInit, AfterViewInit {\n    form: FormGroup;\n    value = 'Lorem ipsum, dolor sit amet';\n    private textareaValidator: ValidatorFn[];\n    private textareaNoCounterMessageValidator: ValidatorFn[];\n    constructor(private _cd: ChangeDetectorRef) {\n        this.form = new FormGroup({});\n\n        this.textareaValidator = [Validators.maxLength(10), Validators.required];\n        this.textareaNoCounterMessageValidator = [Validators.required];\n    }\n\n    onSubmit(): void {\n        if (this.form.valid) {\n            alert('Submitted successfully');\n        }\n    }\n\n    ngOnInit(): void {}\n\n    ngAfterViewInit(): void {\n        this._cd.detectChanges();\n    }\n}\n",W='<main class="fd-page">\n    <div *ngIf="true" class="fd-page__content fd-has-background-color-neutral-2">\n        <fdp-form-group #fg3>\n            <fdp-form-field\n                #ff3\n                id="templateExample"\n                label="Detailed description"\n                placeholder="Start entering detailed description"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n                [validators]="textareaValidator"\n            >\n                <fdp-textarea\n                    name="templateExample"\n                    [growingMaxLines]="3"\n                    [cols]="10"\n                    [growing]="true"\n                    [maxLength]="10"\n                    [showExceededText]="true"\n                    wrapType="hard"\n                    [(ngModel)]="tValue"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <span role="alert" aria-atomic="true" *ngIf="errors.required">\n                    Value is required\n                </span>\n                <span role="alert" aria-atomic="true" *ngIf="errors.maxlength">\n                    Please get your character count under limit.\n                </span>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</main>\n',k="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-textarea-counter-template-example',\n    templateUrl: './platform-textarea-counter-template-example.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformTextareaCounterTemplateExampleComponent implements OnInit {\n    private textareaValidator: ValidatorFn[];\n    tValue =\n        'Lorem ipsum dolor st amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat';\n\n    constructor() {\n        this.textareaValidator = [Validators.maxLength(10)];\n    }\n\n    ngOnInit(): void {}\n}\n",M='<main class="fd-page">\n    <div *ngIf="true" class="fd-page__content fd-has-background-color-neutral-2">\n        <fdp-form-group #fg4 [formGroup]="form">\n            <fdp-form-field\n                #ff1\n                id="growingDisabledTextarea"\n                label="Textarea with growing=false and growingMaxLines=7"\n                placeholder="Start entering something. Growing is not enabled, but growingMaxLines of 7 is given, so it is restricted to a height of 7 lines."\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n                style="width: auto"\n            >\n                <fdp-textarea\n                    name="growingDisabledTextarea"\n                    [formControl]="ff1.formControl"\n                    [growingMaxLines]="7"\n                    [cols]="10"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n            <fdp-form-field\n                #ff11\n                id="growingDisabledHeightTextarea"\n                label="Textarea with growing=false and height=\'80px\'"\n                placeholder="Start entering something.  Growing is not enabled, but height is set, so it is restricted to a height of 80px"\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n                [validators]="textareaValidator"\n            >\n                <fdp-textarea\n                    [formControl]="ff11.formControl"\n                    name="growingDisabledHeightTextarea"\n                    [growing]="false"\n                    [showExceededText]="true"\n                    [maxLength]="6"\n                    [cols]="10"\n                    height="80px"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff2\n                id="growingMaxLinesTextarea"\n                label="Textarea with growing=true and growingMaxLines=5"\n                [placeholder]="\n                    \'Start entering something. It will grow until growingMaxLines number of lines are visible.\'\n                "\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea\n                    [formControl]="ff2.formControl"\n                    name="growingMaxLinesTextarea"\n                    [growing]="true"\n                    [growingMaxLines]="5"\n                    [cols]="10"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff3\n                id="growingHeightTextarea"\n                label="Textarea with growing=true and height=\'80px\'"\n                placeholder="Start entering something. It will grow until height is reached."\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n                [validators]="textareaValidator"\n            >\n                <fdp-textarea\n                    [formControl]="ff3.formControl"\n                    name="growingHeightTextarea"\n                    [growing]="true"\n                    [showExceededText]="true"\n                    [maxLength]="6"\n                    [cols]="10"\n                    height="80px"\n                    wrapType="hard"\n                    [value]="tValue"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff4\n                id="growingTextarea"\n                label="Textarea with growingMaxLines and height both set"\n                placeholder="Start entering something. Preference will be given to grow by height."\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea\n                    [formControl]="ff4.formControl"\n                    name="growingTextarea"\n                    [growing]="true"\n                    [growingMaxLines]="3"\n                    [cols]="10"\n                    height="80px"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <fdp-form-field\n                #ff5\n                id="growingOptionsDisabledTextarea"\n                label="Textarea with growing=true neither height nor growingMaxLines set"\n                placeholder="Start entering something. It will keep growing."\n                hint="This is tooltip help"\n                rank="10"\n                hintPlacement="left"\n            >\n                <fdp-textarea\n                    name="growingOptionsDisabledTextarea"\n                    [formControl]="ff5.formControl"\n                    [growing]="true"\n                    [cols]="10"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n            <ng-template #i18n let-errors>\n                <span *ngIf="errors.required"> Value is required </span>\n                <span role="alert" aria-atomic="true" *ngIf="errors.maxlength">\n                    Please get your character count under limit.\n                </span>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</main>\n',R="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ValidatorFn, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-textarea-autogrow-example',\n    templateUrl: './platform-textarea-autogrow-example.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformTextareaAutogrowExampleComponent implements OnInit {\n    form: FormGroup;\n    private textareaValidator: ValidatorFn[];\n    tValue = '1\\n2\\n3\\n4\\n5\\n6';\n\n    constructor() {\n        this.form = new FormGroup({});\n\n        this.textareaValidator = [Validators.maxLength(6)];\n    }\n\n    ngOnInit(): void {}\n}\n",P='<main class="fd-page">\n    <div *ngIf="true" class="fd-page__content fd-has-background-color-neutral-2">\n        <fdp-form-group #fg2 [formGroup]="form">\n            <fdp-form-field\n                #ff2\n                id="i18nTextarea"\n                i18n-label="@@platformI18nTextareaLabel"\n                label="Detailed description"\n                i18n-placeholder="@@platformI18nTextareaPlaceholder"\n                placeholder="Start entering detailed description"\n                rank="10"\n                [required]="true"\n                [validators]="textareaValidator"\n            >\n                <fdp-textarea\n                    [formControl]="ff2.formControl"\n                    name="i18nTextarea"\n                    [growingMaxLines]="3"\n                    [growing]="true"\n                    [maxLength]="10"\n                    [cols]="10"\n                    stateType="error"\n                    [showExceededText]="true"\n                    height="80px"\n                    wrapType="hard"\n                >\n                </fdp-textarea>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <span i18n="@@platformI18nRequiredValidation" *ngIf="errors.required"> Value is required </span>\n                <span i18n="@@platformI18nMaxlengthValidation" role="alert" aria-atomic="true" *ngIf="errors.maxlength">\n                    Please get your character count under limit.\n                </span>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</main>\n',E="import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ValidatorFn, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'fdp-platform-textarea-i18n-example',\n    templateUrl: './platform-textarea-i18n-example.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PlatformTextareaI18nExampleComponent implements OnInit {\n    form: FormGroup;\n    private textareaValidator: ValidatorFn[];\n    // textareaValue = $localize`:@@textareaValue:This is long description just to see\n    // if this gets translated to the right language. This is long description just to see if this gets translated\n    // to the right language. This is long description just to see if this gets translated to the right language.\n    // This is long description just to see if this gets translated to the right language. This is long description just to see\n    // if this gets translated to the right language. `;\n\n    constructor() {\n        this.form = new FormGroup({});\n\n        this.textareaValidator = [Validators.maxLength(10), Validators.required];\n    }\n\n    ngOnInit(): void {}\n}\n",S=n("ddaM"),q=n("X1JU"),F=n("3Pt+"),_=n("ofXK"),O=n("I7mx"),j=n("npbV"),G=n("JZdX"),N=n("Dtj0"),H=n("jEcC");function A(e,t){1&e&&(x.Wb(0,"fd-form-message",22),x.Vc(1,"This is an example warning when used without forms. "),x.Vb())}function K(e,t){if(1&e&&(x.Wb(0,"div",2),x.Wb(1,"fdp-form-group",3,4),x.Wb(3,"fdp-form-field",5,6),x.Rb(5,"fdp-textarea",7),x.Vb(),x.Wb(6,"fdp-form-field",8,9),x.Rb(8,"fdp-textarea",10),x.Vb(),x.Wb(9,"fdp-form-field",11,12),x.Rb(11,"fdp-textarea",13),x.Vb(),x.Wb(12,"fdp-form-field",14,15),x.Rb(14,"fdp-textarea",16),x.Vb(),x.Vb(),x.Wb(15,"div",17),x.Wb(16,"label",18),x.Vc(17,"Textarea without Platform Forms"),x.Vb(),x.Rb(18,"fdp-textarea",19,20),x.Tc(20,A,2,0,"fd-form-message",21),x.Vb(),x.Rb(21,"br"),x.Vb()),2&e){const e=x.Hc(4),t=x.Hc(7),n=x.Hc(13),a=x.Hc(19),r=x.nc();x.Db(1),x.vc("formGroup",r.form)("object",r.data),x.Db(4),x.vc("formControl",e.formControl),x.Db(3),x.vc("formControl",t.formControl)("readonly",!0),x.Db(3),x.vc("disabled",!0),x.Db(3),x.vc("formControl",n.formControl),x.Db(4),x.vc("maxLength",10)("showExceededText",!0)("growing",!0)("growingMaxLines",5)("cols",10),x.Db(2),x.vc("ngIf",a.value&&a.value.length>10)}}let U=(()=>{class e{constructor(){this.form=new F.i({}),this.data=new z("This is a readonly description where you can scroll down to read but cannot edit anything. This is a readonly description where you can scroll down to read but cannot edit anything. This is a readonly description where you can scroll down to read but cannot edit anything. This is a readonly description where you can scroll down to read but cannot edit anything. This is a readonly description where you can scroll down to read but cannot edit anything. This is a readonly description where you can scroll down to read but cannot edit anything.")}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["fdp-platform-textarea-basic-example"]],decls:2,vars:1,consts:[[1,"fd-page"],["class","fd-page__content fd-has-background-color-neutral-2",4,"ngIf"],[1,"fd-page__content","fd-has-background-color-neutral-2"],[3,"formGroup","object"],["fg1",""],["id","basicTextarea","label","Basic Textarea with Platform Forms","placeholder","Start entering detailed description","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff1",""],["name","basicTextarea",3,"formControl"],["id","readonlyDescription","label","Readonly Textarea","placeholder","Start entering detailed description","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff2",""],["name","readonlyDescription",3,"formControl","readonly"],["id","disabledDescription","label","Disabled Textarea","placeholder","Start entering detailed description","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff3",""],["name","disabledDescription","value","this is a disabled textarea",3,"disabled"],["id","compactTextarea","label","Compact Textarea","placeholder","Start entering detailed description","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff4",""],["name","compactTextarea","contentDensity","compact",3,"formControl"],["fd-form-item",""],["fd-form-label","","for","textarea-1"],["id","textarea-1","name","textarea-1","placeholder","write something here","wrapType","soft",3,"maxLength","showExceededText","growing","growingMaxLines","cols"],["textarea",""],["type","warning","aria-live","assertive","aria-atomic","true",4,"ngIf"],["type","warning","aria-live","assertive","aria-atomic","true"]],template:function(e,t){1&e&&(x.Wb(0,"main",0),x.Tc(1,K,22,13,"div",1),x.Vb()),2&e&&(x.Db(1),x.vc("ngIf",!0))},directives:[_.o,O.a,F.r,F.j,j.a,G.a,F.q,F.g,N.a,H.a],encapsulation:2}),e})();class z{constructor(e){this.readonlyDescription=e}}var B=n("5HkS"),X=n("Hxo2");function $(e,t){1&e&&(x.Wb(0,"span"),x.Vc(1," Value is required "),x.Vb())}function J(e,t){1&e&&(x.Wb(0,"span",26),x.Vc(1," Please get your character count under limit. "),x.Vb())}function Z(e,t){if(1&e&&(x.Tc(0,$,2,0,"span",24),x.Tc(1,J,2,0,"span",25)),2&e){const e=t.$implicit;x.vc("ngIf",e.required),x.Db(1),x.vc("ngIf",e.maxlength)}}function Y(e,t){if(1&e&&(x.Wb(0,"div",2),x.Wb(1,"fdp-form-group",3,4),x.Wb(3,"fdp-form-field",5,6),x.Rb(5,"fdp-textarea",7),x.Vb(),x.Wb(6,"fdp-form-field",8,9),x.Rb(8,"fdp-textarea",10),x.Vb(),x.Wb(9,"fdp-form-field",11,12),x.Rb(11,"fdp-textarea",13),x.Vb(),x.Wb(12,"fdp-form-field",14,15),x.Rb(14,"fdp-textarea",16),x.Vb(),x.Wb(15,"fdp-form-field",17,18),x.Rb(17,"fdp-textarea",19),x.Vb(),x.Wb(18,"fdp-form-field",20,21),x.Rb(20,"fdp-textarea",22),x.Vb(),x.Tc(21,Z,2,2,"ng-template",null,23,x.Uc),x.Vb(),x.Vb()),2&e){const e=x.Hc(4),t=x.Hc(7),n=x.Hc(10),a=x.Hc(13),r=x.Hc(16),o=x.Hc(19),i=x.nc();x.Db(1),x.vc("formGroup",i.form),x.Db(4),x.vc("formControl",e.formControl)("growingMaxLines",7)("cols",10),x.Db(1),x.vc("validators",i.textareaValidator),x.Db(2),x.vc("formControl",t.formControl)("growing",!1)("showExceededText",!0)("maxLength",6)("cols",10),x.Db(1),x.vc("placeholder","Start entering something. It will grow until growingMaxLines number of lines are visible."),x.Db(2),x.vc("formControl",n.formControl)("growing",!0)("growingMaxLines",5)("cols",10),x.Db(1),x.vc("validators",i.textareaValidator),x.Db(2),x.vc("formControl",a.formControl)("growing",!0)("showExceededText",!0)("maxLength",6)("cols",10)("value",i.tValue),x.Db(3),x.vc("formControl",r.formControl)("growing",!0)("growingMaxLines",3)("cols",10),x.Db(3),x.vc("formControl",o.formControl)("growing",!0)("cols",10)}}let Q=(()=>{class e{constructor(){this.tValue="1\n2\n3\n4\n5\n6",this.form=new F.i({}),this.textareaValidator=[F.A.maxLength(6)]}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["fdp-platform-textarea-autogrow-example"]],decls:2,vars:1,consts:[[1,"fd-page"],["class","fd-page__content fd-has-background-color-neutral-2",4,"ngIf"],[1,"fd-page__content","fd-has-background-color-neutral-2"],[3,"formGroup"],["fg4",""],["id","growingDisabledTextarea","label","Textarea with growing=false and growingMaxLines=7","placeholder","Start entering something. Growing is not enabled, but growingMaxLines of 7 is given, so it is restricted to a height of 7 lines.","hint","This is tooltip help","rank","10","hintPlacement","left",2,"width","auto"],["ff1",""],["name","growingDisabledTextarea","wrapType","hard",3,"formControl","growingMaxLines","cols"],["id","growingDisabledHeightTextarea","label","Textarea with growing=false and height='80px'","placeholder","Start entering something.  Growing is not enabled, but height is set, so it is restricted to a height of 80px","hint","This is tooltip help","rank","10","hintPlacement","left",3,"validators"],["ff11",""],["name","growingDisabledHeightTextarea","height","80px","wrapType","hard",3,"formControl","growing","showExceededText","maxLength","cols"],["id","growingMaxLinesTextarea","label","Textarea with growing=true and growingMaxLines=5","hint","This is tooltip help","rank","10","hintPlacement","left",3,"placeholder"],["ff2",""],["name","growingMaxLinesTextarea","wrapType","hard",3,"formControl","growing","growingMaxLines","cols"],["id","growingHeightTextarea","label","Textarea with growing=true and height='80px'","placeholder","Start entering something. It will grow until height is reached.","hint","This is tooltip help","rank","10","hintPlacement","left",3,"validators"],["ff3",""],["name","growingHeightTextarea","height","80px","wrapType","hard",3,"formControl","growing","showExceededText","maxLength","cols","value"],["id","growingTextarea","label","Textarea with growingMaxLines and height both set","placeholder","Start entering something. Preference will be given to grow by height.","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff4",""],["name","growingTextarea","height","80px","wrapType","hard",3,"formControl","growing","growingMaxLines","cols"],["id","growingOptionsDisabledTextarea","label","Textarea with growing=true neither height nor growingMaxLines set","placeholder","Start entering something. It will keep growing.","hint","This is tooltip help","rank","10","hintPlacement","left"],["ff5",""],["name","growingOptionsDisabledTextarea","wrapType","hard",3,"formControl","growing","cols"],["i18n",""],[4,"ngIf"],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(e,t){1&e&&(x.Wb(0,"main",0),x.Tc(1,Y,23,29,"div",1),x.Vb()),2&e&&(x.Db(1),x.vc("ngIf",!0))},directives:[_.o,O.a,F.r,F.j,j.a,G.a,F.q,F.g],encapsulation:2}),e})();var ee=n("oxJj");function te(e,t){1&e&&(x.Wb(0,"span",15),x.Vc(1," Value is required "),x.Vb())}function ne(e,t){1&e&&(x.Wb(0,"span",15),x.Vc(1," Please get your character count under limit. "),x.Vb())}function ae(e,t){if(1&e&&(x.Tc(0,te,2,0,"span",14),x.Tc(1,ne,2,0,"span",14)),2&e){const e=t.$implicit;x.vc("ngIf",e.required),x.Db(1),x.vc("ngIf",e.maxlength)}}function re(e,t){if(1&e){const e=x.Xb();x.Wb(0,"div",2),x.Wb(1,"fdp-form-group",3,4),x.Wb(3,"fdp-form-field",5,6),x.Rb(5,"fdp-textarea",7),x.Vb(),x.Wb(6,"fdp-form-field",8,9),x.Rb(8,"fdp-textarea",10),x.Vb(),x.Wb(9,"fdp-form-field",11),x.Wb(10,"fdp-button",12),x.jc("click",function(){return x.Kc(e),x.nc().onSubmit()}),x.Vb(),x.Vb(),x.Tc(11,ae,2,2,"ng-template",null,13,x.Uc),x.Vb(),x.Vb()}if(2&e){const e=x.Hc(4),t=x.Hc(7),n=x.nc();x.Db(1),x.vc("formGroup",n.form),x.Db(2),x.vc("required",!0)("validators",n.textareaValidator),x.Db(2),x.vc("formControl",e.formControl)("maxLength",10)("showExceededText",!0)("value",n.value),x.Db(1),x.vc("required",!0)("validators",n.textareaNoCounterMessageValidator),x.Db(2),x.vc("formControl",t.formControl)("maxLength",10)("showExceededText",!1)}}let oe=(()=>{class e{constructor(e){this._cd=e,this.value="Lorem ipsum, dolor sit amet",this.form=new F.i({}),this.textareaValidator=[F.A.maxLength(10),F.A.required],this.textareaNoCounterMessageValidator=[F.A.required]}onSubmit(){this.form.valid&&alert("Submitted successfully")}ngOnInit(){}ngAfterViewInit(){this._cd.detectChanges()}}return e.\u0275fac=function(t){return new(t||e)(x.Qb(x.h))},e.\u0275cmp=x.Kb({type:e,selectors:[["fdp-platform-textarea-counter-example"]],decls:8,vars:7,consts:[[1,"fd-page"],["class","fd-page__content fd-has-background-color-neutral-2",4,"ngIf"],[1,"fd-page__content","fd-has-background-color-neutral-2"],[3,"formGroup"],["fg2",""],["id","detailedDescription","label","Detailed description","placeholder","Start entering detailed description","rank","10",3,"required","validators"],["ff2",""],["name","detailedDescription","stateType","error",3,"formControl","maxLength","showExceededText","value"],["id","noCounterMessageInteraction","label","When showExceededText is false and value is set","placeholder","Start entering. Counter message will not be shown, but if an initial value is set whose length > maxLength, excess text is removed on Backpress","rank","10",3,"required","validators"],["ff3",""],["name","noCounterMessageInteraction","value","Some value that crosses max length",3,"formControl","maxLength","showExceededText"],["id","submit-button","rank","20"],["type","submit","label","Submit",3,"click"],["i18n",""],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(e,t){1&e&&(x.Wb(0,"main",0),x.Tc(1,re,13,12,"div",1),x.Vb(),x.Wb(2,"pre"),x.Vc(3),x.oc(4,"json"),x.Vb(),x.Wb(5,"pre"),x.Vc(6),x.oc(7,"json"),x.Vb()),2&e&&(x.Db(1),x.vc("ngIf",!0),x.Db(2),x.Xc("Form result: ",x.pc(4,3,t.form.value),""),x.Db(3),x.Xc("Form Status: ",x.pc(7,5,t.form.status),""))},directives:[_.o,O.a,F.r,F.j,j.a,G.a,F.q,F.g,ee.a],pipes:[_.h],encapsulation:2,changeDetection:0}),e})();function ie(e,t){1&e&&(x.Wb(0,"span",9),x.Vc(1," Value is required "),x.Vb())}function le(e,t){1&e&&(x.Wb(0,"span",9),x.Vc(1," Please get your character count under limit. "),x.Vb())}function se(e,t){if(1&e&&(x.Tc(0,ie,2,0,"span",8),x.Tc(1,le,2,0,"span",8)),2&e){const e=t.$implicit;x.vc("ngIf",e.required),x.Db(1),x.vc("ngIf",e.maxlength)}}function de(e,t){if(1&e){const e=x.Xb();x.Wb(0,"div",2),x.Wb(1,"fdp-form-group",null,3),x.Wb(3,"fdp-form-field",4,5),x.Wb(5,"fdp-textarea",6),x.jc("ngModelChange",function(t){return x.Kc(e),x.nc().tValue=t}),x.Vb(),x.Vb(),x.Tc(6,se,2,2,"ng-template",null,7,x.Uc),x.Vb(),x.Vb()}if(2&e){const e=x.nc();x.Db(3),x.vc("validators",e.textareaValidator),x.Db(2),x.vc("growingMaxLines",3)("cols",10)("growing",!0)("maxLength",10)("showExceededText",!0)("ngModel",e.tValue)}}let ce=(()=>{class e{constructor(){this.tValue="Lorem ipsum dolor st amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat",this.textareaValidator=[F.A.maxLength(10)]}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["fdp-platform-textarea-counter-template-example"]],decls:2,vars:1,consts:[[1,"fd-page"],["class","fd-page__content fd-has-background-color-neutral-2",4,"ngIf"],[1,"fd-page__content","fd-has-background-color-neutral-2"],["fg3",""],["id","templateExample","label","Detailed description","placeholder","Start entering detailed description","hint","This is tooltip help","rank","10","hintPlacement","left",3,"validators"],["ff3",""],["name","templateExample","wrapType","hard",3,"growingMaxLines","cols","growing","maxLength","showExceededText","ngModel","ngModelChange"],["i18n",""],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(e,t){1&e&&(x.Wb(0,"main",0),x.Tc(1,de,8,7,"div",1),x.Vb()),2&e&&(x.Db(1),x.vc("ngIf",!0))},directives:[_.o,O.a,j.a,G.a,F.q,F.t],encapsulation:2}),e})();function fe(e,t){1&e&&(x.Wb(0,"span"),x.ac(1,11),x.Vb())}function pe(e,t){1&e&&(x.Wb(0,"span",12),x.ac(1,13),x.Vb())}function me(e,t){if(1&e&&(x.Tc(0,fe,2,0,"span",9),x.Tc(1,pe,2,0,"span",10)),2&e){const e=t.$implicit;x.vc("ngIf",e.required),x.Db(1),x.vc("ngIf",e.maxlength)}}function ge(e,t){if(1&e&&(x.Wb(0,"div",2),x.Wb(1,"fdp-form-group",3,4),x.Wb(3,"fdp-form-field",5,6),x.Rb(5,"fdp-textarea",7),x.Vb(),x.Tc(6,me,2,2,"ng-template",null,8,x.Uc),x.Vb(),x.Vb()),2&e){const e=x.Hc(4),t=x.nc();x.Db(1),x.vc("formGroup",t.form),x.Db(2),x.vc("required",!0)("validators",t.textareaValidator),x.Db(2),x.vc("formControl",e.formControl)("growingMaxLines",3)("growing",!0)("maxLength",10)("cols",10)("showExceededText",!0)}}let ue=(()=>{class e{constructor(){this.form=new F.i({}),this.textareaValidator=[F.A.maxLength(10),F.A.required]}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["fdp-platform-textarea-i18n-example"]],decls:2,vars:1,consts:function(){let e,t,n,a;return e=$localize`:@@platformI18nTextareaLabel␟2eb87ed4be26f513ef2aeeae4b574ca157e7525c␟2189603588896354817:Detailed description`,t=$localize`:@@platformI18nTextareaPlaceholder␟8753343d39a6706df10ff504f79047c8c229f6ba␟3332011100288531472:Start entering detailed description`,n=$localize`:@@platformI18nRequiredValidation␟542a5481d2bf6fad69deffc84871f54eaaff86b2␟7386452610361273153: Value is required `,a=$localize`:@@platformI18nMaxlengthValidation␟65a7fa85c84e96a0318daaae489b5784001ecfe4␟6449000192185195928: Please get your character count under limit. `,[[1,"fd-page"],["class","fd-page__content fd-has-background-color-neutral-2",4,"ngIf"],[1,"fd-page__content","fd-has-background-color-neutral-2"],[3,"formGroup"],["fg2",""],["id","i18nTextarea","label",e,"placeholder",t,"rank","10",3,"required","validators"],["ff2",""],["name","i18nTextarea","stateType","error","height","80px","wrapType","hard",3,"formControl","growingMaxLines","growing","maxLength","cols","showExceededText"],["i18n",""],[4,"ngIf"],["role","alert","aria-atomic","true",4,"ngIf"],n,["role","alert","aria-atomic","true"],a]},template:function(e,t){1&e&&(x.Wb(0,"main",0),x.Tc(1,ge,8,9,"div",1),x.Vb()),2&e&&(x.Db(1),x.vc("ngIf",!0))},directives:[_.o,O.a,F.r,F.j,j.a,G.a,F.q,F.g],encapsulation:2}),e})(),he=(()=>{class e{constructor(){this.textareaBasic=[{language:"html",code:a,fileName:"platform-textarea-basic-example"},{language:"typescript",code:r,fileName:"platform-textarea-basic-example",component:"PlatformTextareaBasicExampleComponent"}],this.textareaCounter=[{language:"html",code:o,fileName:"platform-textarea-counter-example"},{language:"typescript",code:i,fileName:"platform-textarea-counter-example",component:"PlatformTextareaCounterExampleComponent"}],this.textareaTemplateCounter=[{language:"html",code:l,fileName:"platform-textarea-counter-template-example"},{language:"typescript",code:s,fileName:"platform-textarea-counter-template-example",component:"PlatformTextareaCounterTemplateExampleComponent"}],this.textareaAutogrow=[{language:"html",code:d,fileName:"platform-textarea-autogrow-example"},{language:"typescript",code:c,fileName:"platform-textarea-autogrow-example",component:"PlatformTextareaAutogrowExampleComponent"}],this.textareaI18n=[{language:"html",code:f,fileName:"platform-textarea-i18n-example"},{language:"typescript",code:p,fileName:"platform-textarea-i18n-example",component:"PlatformTextareaI18nExampleComponent"}]}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=x.Kb({type:e,selectors:[["app-textarea"]],decls:91,vars:5,consts:[["id","basic","componentName","textarea"],[3,"exampleFiles"],["id","autogrow","componentName","textarea"],["id","counter","componentName","textarea"],["id","template-driven","componentName","textarea"],["id","i18n","componentName","textarea"]],template:function(e,t){1&e&&(x.Wb(0,"fd-docs-section-title",0),x.Vc(1," Textarea\n"),x.Vb(),x.Wb(2,"description"),x.Vc(3,"This example shows basic Textarea"),x.Vb(),x.Wb(4,"component-example"),x.Rb(5,"fdp-platform-textarea-basic-example"),x.Vb(),x.Rb(6,"code-example",1),x.Rb(7,"separator"),x.Wb(8,"fd-docs-section-title",2),x.Vc(9," Textarea with "),x.Wb(10,"code"),x.Vc(11,"growing"),x.Vb(),x.Vc(12," option\n"),x.Vb(),x.Wb(13,"description"),x.Vc(14," This example shows how Textarea behaves when "),x.Wb(15,"code"),x.Vc(16,"growing"),x.Vb(),x.Vc(17," is set. "),x.Rb(18,"br"),x.Rb(19,"br"),x.Wb(20,"code"),x.Vc(21,"growingMaxLines"),x.Vb(),x.Vc(22," - the number of visible lines. Height of textarea is according to this number. "),x.Rb(23,"br"),x.Wb(24,"code"),x.Vc(25,"height"),x.Vb(),x.Vc(26," - if specified, overrides "),x.Wb(27,"code"),x.Vc(28,"growingMaxLines"),x.Vb(),x.Vc(29," to set the height of textarea. "),x.Rb(30,"br"),x.Wb(31,"code"),x.Vc(32,"cols"),x.Vb(),x.Vc(33," - approximately, the number of characters in a single line when the width of textarea is not set. "),x.Rb(34,"br"),x.Wb(35,"code"),x.Vc(36,"growing"),x.Vb(),x.Vc(37," - when set to true, resizes the textarea to either "),x.Wb(38,"code"),x.Vc(39,"growingMaxLines"),x.Vb(),x.Vc(40," or "),x.Wb(41,"code"),x.Vc(42,"height"),x.Vb(),x.Vc(43,", whichever is applied. As user types, the textarea overflows beyond the width to the next line and grows in height until the number of "),x.Wb(44,"code"),x.Vc(45,"growingMaxLines"),x.Vb(),x.Vc(46," is reached, or until the "),x.Wb(47,"code"),x.Vc(48,"height"),x.Vb(),x.Vc(49," is reached; whichever takes precedence. Beyond this, a scrollbar appears.\n"),x.Vb(),x.Wb(50,"component-example"),x.Rb(51,"fdp-platform-textarea-autogrow-example"),x.Vb(),x.Rb(52,"code-example",1),x.Rb(53,"separator"),x.Wb(54,"fd-docs-section-title",3),x.Vc(55," Textarea with message counter\n"),x.Vb(),x.Wb(56,"description"),x.Vc(57,"This example shows how Textarea behaves when showExceededText is set. It also shows form submission."),x.Vb(),x.Wb(58,"component-example"),x.Rb(59,"fdp-platform-textarea-counter-example"),x.Vb(),x.Rb(60,"code-example",1),x.Rb(61,"separator"),x.Wb(62,"fd-docs-section-title",4),x.Vc(63," Textarea with message counter in template-driven form\n"),x.Vb(),x.Wb(64,"description"),x.Vc(65,"This example shows how Textarea behaves with a template-driven form with an initial value set."),x.Vb(),x.Wb(66,"component-example"),x.Rb(67,"fdp-platform-textarea-counter-template-example"),x.Vb(),x.Rb(68,"code-example",1),x.Rb(69,"separator"),x.Wb(70,"fd-docs-section-title",5),x.Vc(71," Textarea with internationalization support.\n"),x.Vb(),x.Wb(72,"description"),x.Vc(73,"This example shows how Textarea works with i18n markers to achieve internationalization support. Translation of the counter message is available directly from the library and will be added to your application's .xlf files on using the following commands from version 0.21.0 onwards: "),x.Rb(74,"br"),x.Wb(75,"code"),x.Vc(76,"ng add @fundamental-ngx/platform"),x.Vb(),x.Vc(77," - if you don't already have ngx/platform installed, use this; or "),x.Rb(78,"br"),x.Wb(79,"code"),x.Vc(80,"ng update @fundamental-ngx/platform --migrate-only --from=0.20.0"),x.Vb(),x.Vc(81," - if you have ngx/platform installed and want to get the library translations, use this. "),x.Rb(82,"br"),x.Vc(83," You can modify the counter message translation by looking for the i18n trans-unit id "),x.Wb(84,"code"),x.Vc(85,"platformI18nTextareaCounterMessage"),x.Vb(),x.Vc(86," in your application's .xlf files. "),x.Rb(87,"br"),x.Vb(),x.Wb(88,"component-example"),x.Rb(89,"fdp-platform-textarea-i18n-example"),x.Vb(),x.Rb(90,"code-example",1)),2&e&&(x.Db(6),x.vc("exampleFiles",t.textareaBasic),x.Db(46),x.vc("exampleFiles",t.textareaAutogrow),x.Db(8),x.vc("exampleFiles",t.textareaCounter),x.Db(8),x.vc("exampleFiles",t.textareaTemplateCounter),x.Db(22),x.vc("exampleFiles",t.textareaI18n))},directives:[S.a,V.a,q.a,U,B.a,X.a,Q,oe,ce,ue],encapsulation:2}),e})();var be=n("NZOU");const xe=[{path:"",component:y,children:[{path:"",component:he},{path:"api",component:g.a,data:{content:u.a.textarea}}]}];let we=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=x.Ob({type:e}),e.\u0275inj=x.Nb({imports:[[m.g.forChild(xe),h.a,b.ab,b.h,b.r,be.g],m.g]}),e})()}}]);