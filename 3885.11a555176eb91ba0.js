"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3885],{3885:(we,k,i)=>{i.r(k),i.d(k,{CheckboxDocsModule:()=>Ce});var h=i(7912),y=i(69979),Z=i(58027),A=i(67949),e=i(70074),V=i(86950),L=i(41767),x=i(38276),D=i(8317),O=i(80528),a=i(85756),C=i(96919),s=i(237),u=i(66763),b=i(70151),p=i(10210);const G=function(){return{trueValue:"sirius"}},I=function(){return{trueValue:"vega"}},E=function(){return{trueValue:"einstein"}},B=function(){return{trueValue:"newton"}};let R=(()=>{class t{constructor(){this.field1=[],this.field2=["vega"],this.form1=new a.cw({einstein:new a.NI,newton:new a.NI}),this.form1Data=new W([],["newton"])}checkedChangeFunction(){}indeterminateChangeFunction(){}changeFunction(){}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:27,consts:[["columnLayout","XL2-L2-M1-S1"],["id","sirius","label","Sirius",3,"column","rank"],["name","sirius-cb","title","Sirius",3,"values","ngModel","ngModelChange"],["id","vega","label","Vega",3,"column","rank"],["name","vega-cb","title","Vega",3,"values","ngModel","ngModelChange"],[2,"padding-left","2rem"],["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["rmsfg",""],["id","einstein","label","Einstein",3,"column","rank"],["rfield1",""],["name","einstein-cb","fdCompact","","title","Albert Einstein",3,"values","formControl"],["id","newton","label","Newton",3,"column","rank"],["rfield2",""],["name","newton-cb","fdCompact","","title","Issac Newton",3,"values","formControl"]],template:function(n,o){if(1&n&&(e.TgZ(0,"h3"),e._uU(1,"Template Driven Form"),e.qZA(),e.TgZ(2,"p"),e._uU(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),e.qZA(),e.TgZ(4,"fdp-form-group",0)(5,"fdp-form-field",1)(6,"fdp-checkbox",2),e.NdJ("ngModelChange",function(r){return o.field1=r}),e.qZA()(),e.TgZ(7,"fdp-form-field",3)(8,"fdp-checkbox",4),e.NdJ("ngModelChange",function(r){return o.field2=r}),e.qZA()()(),e.TgZ(9,"div",5),e._uU(10),e.qZA(),e.TgZ(11,"div",5),e._uU(12),e.qZA(),e._UZ(13,"br")(14,"br"),e.TgZ(15,"h3"),e._uU(16,"Reactive/Model Driven Form"),e.qZA(),e.TgZ(17,"p"),e._uU(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),e.qZA(),e.TgZ(19,"fdp-form-group",6,7)(21,"fdp-form-field",8,9),e._UZ(23,"fdp-checkbox",10),e.qZA(),e.TgZ(24,"fdp-form-field",11,12),e._UZ(26,"fdp-checkbox",13),e.qZA()(),e.TgZ(27,"div",5),e._uU(28),e.ALo(29,"json"),e.qZA()),2&n){const c=e.MAs(22),r=e.MAs(25);e.xp6(5),e.Q6J("column",1)("rank",1),e.xp6(1),e.Q6J("values",e.DdM(23,G))("ngModel",o.field1),e.xp6(1),e.Q6J("column",2)("rank",1),e.xp6(1),e.Q6J("values",e.DdM(24,I))("ngModel",o.field2),e.xp6(2),e.hij("field1: ",o.field1,""),e.xp6(2),e.hij("field2: ",o.field2,""),e.xp6(7),e.Q6J("formGroup",o.form1)("object",o.form1Data),e.xp6(2),e.Q6J("column",1)("rank",1),e.xp6(2),e.Q6J("values",e.DdM(25,E))("formControl",c.formControl),e.xp6(1),e.Q6J("column",2)("rank",1),e.xp6(2),e.Q6J("values",e.DdM(26,B))("formControl",r.formControl),e.xp6(2),e.hij("form value: ",e.lcZ(29,21,o.form1.getRawValue()),"")}},dependencies:[a.JJ,a.JL,a.On,a.oH,a.sg,C.$,s.b,u.H,b.h,p.Ts],encapsulation:2}),t})();class W{constructor(l,n){this.einstein=l,this.newton=n}}let Y=(()=>{class t{constructor(){this.customForm=new a.cw({red:new a.NI,blue:new a.NI,green:new a.NI}),this.data=new H(!1,!0),this.yellow=!1,this.white=!0}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:25,consts:[[3,"noLabelLayout"],["id","yellow","label","Yellow",3,"noLabelLayout","rank","editable"],["name","yellow-cb",3,"ngModel","ngModelChange"],["id","white","label","White",3,"rank"],["name","white-cb","title","White",3,"ngModel","ngModelChange"],["id","violet","label","Violet",3,"rank"],["name","violet-cb","title","Violet",3,"ngModel","ngModelChange"],[2,"padding-left","2rem"],["fdCompact","",3,"formGroup","object"],["id","red","label","Red",3,"rank"],["red",""],["name","red-cb","title","Red",3,"formControl"],["id","blue","label","Blue",3,"rank"],["blue",""],["name","blue-cb","title","Blue",3,"formControl"],["id","green","label","Green",3,"rank"],["green",""],["name","green-cb","title","Green",3,"formControl"],["fdCompact",""],["id","disabled","label","Red",3,"rank"],["disabled",""],["name","disabled-cb","title","Red",3,"disabled"]],template:function(n,o){if(1&n&&(e.TgZ(0,"h3"),e._uU(1,"Binary Checkbox in Template Driven Form"),e.qZA(),e.TgZ(2,"fdp-form-group",0)(3,"fdp-form-field",1)(4,"fdp-checkbox",2),e.NdJ("ngModelChange",function(r){return o.yellow=r}),e.qZA()(),e.TgZ(5,"fdp-form-field",3)(6,"fdp-checkbox",4),e.NdJ("ngModelChange",function(r){return o.white=r}),e.qZA()(),e.TgZ(7,"fdp-form-field",5)(8,"fdp-checkbox",6),e.NdJ("ngModelChange",function(r){return o.violet=r}),e.qZA()()(),e.TgZ(9,"div",7)(10,"div"),e._uU(11),e.qZA(),e.TgZ(12,"div"),e._uU(13),e.qZA(),e.TgZ(14,"div"),e._uU(15),e.qZA()(),e._UZ(16,"br")(17,"br"),e.TgZ(18,"h3"),e._uU(19,"Binary Checkbox in Reactive/Model Driven Form"),e.qZA(),e.TgZ(20,"fdp-form-group",8)(21,"fdp-form-field",9,10),e._UZ(23,"fdp-checkbox",11),e.qZA(),e.TgZ(24,"fdp-form-field",12,13),e._UZ(26,"fdp-checkbox",14),e.qZA(),e.TgZ(27,"fdp-form-field",15,16),e._UZ(29,"fdp-checkbox",17),e.qZA()(),e.TgZ(30,"div",7),e._uU(31),e.ALo(32,"json"),e.qZA(),e.TgZ(33,"h3"),e._uU(34,"Disabled Checkbox"),e.qZA(),e.TgZ(35,"fdp-form-group",18)(36,"fdp-form-field",19,20),e._UZ(38,"fdp-checkbox",21),e.qZA()()),2&n){const c=e.MAs(22),r=e.MAs(25),m=e.MAs(28);e.xp6(2),e.Q6J("noLabelLayout",!1),e.xp6(1),e.Q6J("noLabelLayout",!0)("rank",4)("editable",!0),e.xp6(1),e.Q6J("ngModel",o.yellow),e.xp6(1),e.Q6J("rank",4),e.xp6(1),e.Q6J("ngModel",o.white),e.xp6(1),e.Q6J("rank",4),e.xp6(1),e.Q6J("ngModel",o.violet),e.xp6(3),e.hij("Yellow: ",o.yellow,""),e.xp6(2),e.hij("White: ",o.white,""),e.xp6(2),e.hij("Violet: ",o.violet,""),e.xp6(5),e.Q6J("formGroup",o.customForm)("object",o.data),e.xp6(1),e.Q6J("rank",4),e.xp6(2),e.Q6J("formControl",c.formControl),e.xp6(1),e.Q6J("rank",4),e.xp6(2),e.Q6J("formControl",r.formControl),e.xp6(1),e.Q6J("rank",4),e.xp6(2),e.Q6J("formControl",m.formControl),e.xp6(2),e.hij("form value: ",e.lcZ(32,23,o.customForm.getRawValue()),""),e.xp6(5),e.Q6J("rank",1),e.xp6(2),e.Q6J("disabled",!0)}},dependencies:[a.JJ,a.JL,a.On,a.oH,a.sg,C.$,s.b,u.H,b.h,p.Ts],encapsulation:2}),t})();class H{constructor(l,n,o){this.red=l,this.blue=n,this.green=o}}var X=i(29092),z=i(25233);function $(t,l){1&t&&(e.TgZ(0,"span",13),e._uU(1," Value is required "),e.qZA())}function K(t,l){1&t&&(e.TgZ(0,"span",13),e._uU(1," Value is invalid "),e.qZA())}function ee(t,l){if(1&t&&(e.YNc(0,$,2,0,"span",12),e.YNc(1,K,2,0,"span",12)),2&t){const n=l.$implicit;e.Q6J("ngIf",n.required),e.xp6(1),e.Q6J("ngIf",n.invalid)}}let oe=(()=>{class t{constructor(){this.customForm=new a.cw({presence:new a.NI,aggrement:new a.NI}),this.data=new ne(!0,!0),this.validators=[a.kI.requiredTrue]}onSubmit(){alert("Status: "+this.customForm.status)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-checkbox-error-handling"]],decls:24,vars:20,consts:[["columnLayout","XL2-L1-M1-S1",3,"formGroup","object"],["fg",""],["id","presence","label","Your presence is necessary","hint","hint text","hintPlacement","left",3,"validators","rank","column","required"],["ffr1",""],["name","presence-cb","title","title text",3,"formControl"],["id","aggrement","hint","hint text","hintPlacement","left",3,"validators","rank","column","required"],["ffr2",""],["name","aggrement-cb","title","Do you Agree with Terms and Conditions",3,"formControl"],["fd-link","","href","#"],["id","button-1",3,"rank","column"],["buttonType","emphasized","label","Submit",3,"click"],["i18n",""],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(n,o){if(1&n&&(e.TgZ(0,"h3"),e._uU(1,"Checkbox Error Handling"),e.qZA(),e.TgZ(2,"fdp-form-group",0,1)(4,"fdp-form-field",2,3),e._UZ(6,"fdp-checkbox",4),e.qZA(),e.TgZ(7,"fdp-form-field",5,6)(9,"fdp-checkbox",7),e._uU(10," Do you Agree with "),e.TgZ(11,"a",8),e._uU(12," Terms and Conditions"),e.qZA(),e._uU(13,"? "),e.qZA()(),e.TgZ(14,"fdp-form-field",9)(15,"fdp-button",10),e.NdJ("click",function(){return o.onSubmit()}),e.qZA()(),e.YNc(16,ee,2,2,"ng-template",null,11,e.W1O),e.qZA(),e.TgZ(18,"p"),e._uU(19),e.ALo(20,"json"),e.qZA(),e.TgZ(21,"p"),e._uU(22),e.ALo(23,"json"),e.qZA()),2&n){const c=e.MAs(5),r=e.MAs(8);e.xp6(2),e.Q6J("formGroup",o.customForm)("object",o.data),e.xp6(2),e.Q6J("validators",o.validators)("rank",10)("column",1)("required",!0),e.xp6(2),e.Q6J("formControl",c.formControl),e.xp6(1),e.Q6J("validators",o.validators)("rank",15)("column",2)("required",!0),e.xp6(2),e.Q6J("formControl",r.formControl),e.xp6(5),e.Q6J("rank",20)("column",2),e.xp6(5),e.hij("Form value: ",e.lcZ(20,16,o.customForm.getRawValue()),""),e.xp6(3),e.hij("Form Status: ",e.lcZ(23,18,o.customForm.status),"")}},dependencies:[a.JJ,a.JL,a.oH,a.sg,p.O5,X.N,s.b,u.H,b.h,z.r,p.Ts],encapsulation:2}),t})();class ne{constructor(l,n){this.presence=l,this.aggrement=n}}const te=function(){return{trueValue:"orion"}},re=function(){return{trueValue:"cygnus"}};let ae=(()=>{class t{constructor(){this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:14,consts:[["name","orion","label","Orion","title","Orion",3,"values","checked","checkedChange"],["name","cygnus","label","Cygnus","title","Cygnus",3,"checked","values","checkedChange"],["name","lyra","label","Lyra","title","Lyra",3,"checked","checkedChange"],["name","gemini","label","Gemini","title","Gemini",3,"checked","checkedChange"],["name","orion","label","Orion","title","Orion",3,"checked","disabled","checkedChange"]],template:function(n,o){1&n&&(e.TgZ(0,"h3"),e._uU(1,"Binary Checkbox With Value"),e.qZA(),e.TgZ(2,"fdp-checkbox",0),e.NdJ("checkedChange",function(r){return o.orion=r}),e.qZA(),e.TgZ(3,"div"),e._uU(4),e.qZA(),e.TgZ(5,"fdp-checkbox",1),e.NdJ("checkedChange",function(r){return o.cygnus=r}),e.qZA(),e.TgZ(6,"div"),e._uU(7),e.qZA(),e._UZ(8,"br")(9,"br"),e.TgZ(10,"h3"),e._uU(11,"Binary Checkbox Without Value"),e.qZA(),e.TgZ(12,"fdp-checkbox",2),e.NdJ("checkedChange",function(r){return o.lyra=r}),e.qZA(),e.TgZ(13,"div"),e._uU(14),e.qZA(),e.TgZ(15,"fdp-checkbox",3),e.NdJ("checkedChange",function(r){return o.gemini=r}),e.qZA(),e.TgZ(16,"div"),e._uU(17),e.qZA(),e.TgZ(18,"h3"),e._uU(19,"Disabled Checkbox"),e.qZA(),e.TgZ(20,"fdp-checkbox",4),e.NdJ("checkedChange",function(r){return o.orion=r}),e.qZA()),2&n&&(e.xp6(2),e.Q6J("values",e.DdM(12,te))("checked",o.orion),e.xp6(2),e.hij("value: ",o.orion,""),e.xp6(1),e.Q6J("checked",o.cygnus)("values",e.DdM(13,re)),e.xp6(2),e.hij("value: ",o.cygnus,""),e.xp6(5),e.Q6J("checked",o.lyra),e.xp6(2),e.hij("value: ",o.lyra,""),e.xp6(1),e.Q6J("checked",o.gemini),e.xp6(2),e.hij("value: ",o.gemini,""),e.xp6(3),e.Q6J("checked",o.orion)("disabled",!0))},dependencies:[s.b],encapsulation:2}),t})();var v=i(48358);function le(t,l){1&t&&(e.ynx(0),e._uU(1," value is required "),e.BQk())}function ce(t,l){1&t&&e.YNc(0,le,2,0,"ng-container",62),2&t&&e.Q6J("ngIf",l.$implicit.required)}const d=function(){return{trueValue:"Yes"}};let ie=(()=>{class t{constructor(){this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new a.cw({paris:new a.NI,doha:new a.NI,amsterdam:new a.NI,venice:new a.NI,kyoto:new a.NI,barcelona:new a.NI,athens:new a.NI,sydney:new a.NI}),this.citiesData=new me(!1,"Yes",null,!1,!0,null,null,!1),this.agreementsFormGroup=new a.cw({}),this.registrationForm=new a.cw({agreements:this.agreementsFormGroup,acceptAll:new a.NI}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}ngAfterViewInit(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()}setAgreementsOnAcceptAllChange(){var n;null===(n=this.registrationForm.get("acceptAll"))||void 0===n||n.valueChanges.subscribe(o=>this.acceptAll(o))}setControlOnAgreementsChange(){var n;null===(n=this.registrationForm.get("agreements"))||void 0===n||n.valueChanges.pipe((0,v.U)(o=>this.getValuesFromObject(o)),(0,v.U)(o=>{const c=o.reduce((m,f)=>f&&m,!0),r=o.reduce((m,f)=>!f&&m,!0);return!!c||!r&&null})).subscribe(o=>this.setAcceptAll(o))}acceptAll(n){var o;null!==n&&(null===(o=this.registrationForm.get("agreements"))||void 0===o||o.patchValue({marketing:n,newsletter:n,termsAndConditions:n},{emitEvent:!1}))}setAcceptAll(n){var o;(null===(o=this.registrationForm.get("acceptAll"))||void 0===o?void 0:o.value)!==n&&this.registrationForm.patchValue({acceptAll:n},{emitEvent:!1})}getValuesFromObject(n){return Object.keys(n).map(o=>n[o])}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:127,consts:[["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["id","paris","label","Paris",3,"column","rank"],["paris",""],["name","paris-cb",3,"values","tristate","tristateSelectable","formControl"],["id","doha","label","Doha",3,"column","rank"],["doha",""],["name","doha-cb",3,"values","tristate","tristateSelectable","formControl"],["id","amsterdam","label","Amsterdam",3,"column","rank"],["amsterdam",""],["name","amsterdam-cb",3,"values","tristate","tristateSelectable","formControl"],["id","venice","label","Venice",3,"column","rank"],["venice",""],["name","venice-cb",3,"tristate","tristateSelectable","formControl"],["id","kyoto","label","Kyoto",3,"column","rank"],["kyoto",""],["name","kyoto-cb",3,"tristate","tristateSelectable","formControl"],["id","barcelona","label","Barcelona",3,"column","rank"],["barcelona",""],["name","barcelona-cb",3,"tristate","tristateSelectable","formControl"],["id","athens","label","athens: tristateSelectable false",3,"column","rank"],["athens",""],["name","athens-cb",3,"values","tristate","tristateSelectable","formControl"],["id","sydney","label","Sydney: tristateSelectable false",3,"column","rank"],["sydney",""],["name","sydney-cb",3,"tristate","tristateSelectable","formControl"],["columnLayout","XL2-L2-M1-S1"],["id","havana","label","Havana",3,"column","rank"],["name","havana-cb",3,"values","tristate","tristateSelectable","ngModel","ngModelChange"],["id","beirut","label","Beirut",3,"column","rank"],["name","beirut-cb",3,"values","tristate","tristateSelectable","ngModel","ngModelChange"],["id","budapest","label","Budapest",3,"column","rank"],["name","budapest-cb",3,"values","tristate","tristateSelectable","ngModel","ngModelChange"],["id","lisbon","label","Lisbon",3,"column","rank"],["name","lisbon-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","istanbul","label","Istanbul",3,"column","rank"],["name","istanbul-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","busan","label","Busan",3,"column","rank"],["name","busan-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","dubrovnik","label","Dubrovnik: tristateSelectable false",3,"column","rank"],["name","dubrovnik-cb",3,"values","tristate","tristateSelectable","ngModel","ngModelChange"],["id","jaipur","label","Jaipur: tristateSelectable false",3,"column","rank"],["name","jaipur-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],[3,"column"],[3,"formGroup"],["form","ngForm"],["fgtristate",""],["id","acceptAll","label","Accept All",3,"column","rank"],["ffr1",""],["name","all",3,"tristate","tristateSelectable","checked","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["id","termsAndConditions","label","I accept Terms and Conditions",3,"rank"],["ffr2",""],["name","termsAndConditions-cb",3,"formControl"],["id","marketing","label","I want to receive Marketing Materials",3,"rank"],["ffr3",""],["name","marketing-cb",3,"formControl"],["id","newsletter","label","I want to sign for a Newsletter",3,"rank"],["ffr4",""],["name","newsletter-cb",3,"formControl"],["i18n",""],[4,"ngIf"]],template:function(n,o){if(1&n&&(e.TgZ(0,"h3"),e._uU(1,"Reactive Form: TriState Checkbox With Value and Without Value"),e.qZA(),e.TgZ(2,"fdp-form-group",0)(3,"fdp-form-field",1,2),e._UZ(5,"fdp-checkbox",3),e.qZA(),e.TgZ(6,"fdp-form-field",4,5),e._UZ(8,"fdp-checkbox",6),e.qZA(),e.TgZ(9,"fdp-form-field",7,8),e._UZ(11,"fdp-checkbox",9),e.qZA(),e.TgZ(12,"fdp-form-field",10,11),e._UZ(14,"fdp-checkbox",12),e.qZA(),e.TgZ(15,"fdp-form-field",13,14),e._UZ(17,"fdp-checkbox",15),e.qZA(),e.TgZ(18,"fdp-form-field",16,17),e._UZ(20,"fdp-checkbox",18),e.qZA(),e.TgZ(21,"fdp-form-field",19,20),e._UZ(23,"fdp-checkbox",21),e.qZA(),e.TgZ(24,"fdp-form-field",22,23),e._UZ(26,"fdp-checkbox",24),e.qZA()(),e.TgZ(27,"div"),e._uU(28),e.ALo(29,"json"),e.qZA(),e._UZ(30,"br")(31,"br"),e.TgZ(32,"h3"),e._uU(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),e.qZA(),e.TgZ(34,"fdp-form-group",25)(35,"fdp-form-field",26)(36,"fdp-checkbox",27),e.NdJ("ngModelChange",function(r){return o.havana=r}),e.qZA()(),e.TgZ(37,"fdp-form-field",28)(38,"fdp-checkbox",29),e.NdJ("ngModelChange",function(r){return o.beirut=r}),e.qZA()(),e.TgZ(39,"fdp-form-field",30)(40,"fdp-checkbox",31),e.NdJ("ngModelChange",function(r){return o.budapest=r}),e.qZA()(),e.TgZ(41,"fdp-form-field",32)(42,"fdp-checkbox",33),e.NdJ("ngModelChange",function(r){return o.lisbon=r}),e.qZA()(),e.TgZ(43,"fdp-form-field",34)(44,"fdp-checkbox",35),e.NdJ("ngModelChange",function(r){return o.istanbul=r}),e.qZA()(),e.TgZ(45,"fdp-form-field",36)(46,"fdp-checkbox",37),e.NdJ("ngModelChange",function(r){return o.busan=r}),e.qZA()(),e.TgZ(47,"fdp-form-field",38)(48,"fdp-checkbox",39),e.NdJ("ngModelChange",function(r){return o.dubrovnik=r}),e.qZA()(),e.TgZ(49,"fdp-form-field",40)(50,"fdp-checkbox",41),e.NdJ("ngModelChange",function(r){return o.jaipur=r}),e.qZA()(),e.TgZ(51,"fdp-form-field",42)(52,"div"),e._uU(53),e.qZA(),e.TgZ(54,"div"),e._uU(55),e.qZA(),e.TgZ(56,"div"),e._uU(57),e.qZA(),e.TgZ(58,"div"),e._uU(59),e.qZA()(),e.TgZ(60,"fdp-form-field",42)(61,"div"),e._uU(62),e.qZA(),e.TgZ(63,"div"),e._uU(64),e.qZA(),e.TgZ(65,"div"),e._uU(66),e.qZA(),e.TgZ(67,"div"),e._uU(68),e.qZA()()(),e.TgZ(69,"h3"),e._uU(70,"TriState Checkbox Used with Multiple checkboxes"),e.qZA(),e.TgZ(71,"form",43,44)(73,"fdp-form-group",43,45)(75,"fdp-form-field",46,47),e._UZ(77,"fdp-checkbox",48),e.qZA()(),e.TgZ(78,"div",49)(79,"fdp-form-group",50,51)(81,"fdp-form-field",52,53),e._UZ(83,"fdp-checkbox",54),e.qZA(),e.TgZ(84,"fdp-form-field",55,56),e._UZ(86,"fdp-checkbox",57),e.qZA(),e.TgZ(87,"fdp-form-field",58,59),e._UZ(89,"fdp-checkbox",60),e.qZA(),e.YNc(90,ce,1,1,"ng-template",null,61,e.W1O),e.qZA()()()),2&n){const c=e.MAs(4),r=e.MAs(7),m=e.MAs(10),f=e.MAs(13),g=e.MAs(16),ve=e.MAs(19),_e=e.MAs(22),ye=e.MAs(25),Ze=e.MAs(76),Ae=e.MAs(82),Te=e.MAs(85),Me=e.MAs(88);e.xp6(2),e.Q6J("formGroup",o.cities)("object",o.citiesData),e.xp6(1),e.Q6J("column",1)("rank",1),e.xp6(2),e.Q6J("values",e.DdM(119,d))("tristate",!0)("tristateSelectable",!0)("formControl",c.formControl),e.xp6(1),e.Q6J("column",1)("rank",3),e.xp6(2),e.Q6J("values",e.DdM(120,d))("tristate",!0)("tristateSelectable",!0)("formControl",r.formControl),e.xp6(1),e.Q6J("column",1)("rank",5),e.xp6(2),e.Q6J("values",e.DdM(121,d))("tristate",!0)("tristateSelectable",!0)("formControl",m.formControl),e.xp6(1),e.Q6J("column",2)("rank",2),e.xp6(2),e.Q6J("tristate",!0)("tristateSelectable",!0)("formControl",f.formControl),e.xp6(1),e.Q6J("column",2)("rank",4),e.xp6(2),e.Q6J("tristate",!0)("tristateSelectable",!0)("formControl",g.formControl),e.xp6(1),e.Q6J("column",2)("rank",6),e.xp6(2),e.Q6J("tristate",!0)("tristateSelectable",!0)("formControl",ve.formControl),e.xp6(1),e.Q6J("column",1)("rank",7),e.xp6(2),e.Q6J("values",e.DdM(122,d))("tristate",!0)("tristateSelectable",!1)("formControl",_e.formControl),e.xp6(1),e.Q6J("column",2)("rank",8),e.xp6(2),e.Q6J("tristate",!0)("tristateSelectable",!1)("formControl",ye.formControl),e.xp6(2),e.hij("form value: ",e.lcZ(29,117,o.cities.getRawValue()),""),e.xp6(7),e.Q6J("column",1)("rank",1),e.xp6(1),e.Q6J("values",e.DdM(123,d))("tristate",!0)("tristateSelectable",!0)("ngModel",o.havana),e.xp6(1),e.Q6J("column",1)("rank",3),e.xp6(1),e.Q6J("values",e.DdM(124,d))("tristate",!0)("tristateSelectable",!0)("ngModel",o.beirut),e.xp6(1),e.Q6J("column",1)("rank",5),e.xp6(1),e.Q6J("values",e.DdM(125,d))("tristate",!0)("tristateSelectable",!0)("ngModel",o.budapest),e.xp6(1),e.Q6J("column",2)("rank",2),e.xp6(1),e.Q6J("tristate",!0)("tristateSelectable",!0)("ngModel",o.lisbon),e.xp6(1),e.Q6J("column",2)("rank",4),e.xp6(1),e.Q6J("tristate",!0)("tristateSelectable",!0)("ngModel",o.istanbul),e.xp6(1),e.Q6J("column",2)("rank",6),e.xp6(1),e.Q6J("tristate",!0)("tristateSelectable",!0)("ngModel",o.busan),e.xp6(1),e.Q6J("column",1)("rank",7),e.xp6(1),e.Q6J("values",e.DdM(126,d))("tristate",!0)("tristateSelectable",!1)("ngModel",o.dubrovnik),e.xp6(1),e.Q6J("column",2)("rank",7),e.xp6(1),e.Q6J("tristate",!0)("tristateSelectable",!1)("ngModel",o.jaipur),e.xp6(1),e.Q6J("column",1),e.xp6(2),e.hij("Havana: ",o.havana,""),e.xp6(2),e.hij("Beirut: ",o.beirut,""),e.xp6(2),e.hij("Budapest: ",o.budapest,""),e.xp6(2),e.hij("Dubrovnik: ",o.dubrovnik,""),e.xp6(1),e.Q6J("column",2),e.xp6(2),e.hij("Lisbon: ",o.lisbon,""),e.xp6(2),e.hij("Istanbul: ",o.istanbul,""),e.xp6(2),e.hij("Busan: ",o.busan,""),e.xp6(2),e.hij("Jaipur: ",o.jaipur,""),e.xp6(3),e.Q6J("formGroup",o.registrationForm),e.xp6(2),e.Q6J("formGroup",o.registrationForm),e.xp6(2),e.Q6J("column",1)("rank",1),e.xp6(2),e.Q6J("tristate",!0)("tristateSelectable",!1)("checked",!1)("formControl",Ze.formControl),e.xp6(2),e.Q6J("formGroup",o.agreementsFormGroup)("object",o.choices),e.xp6(2),e.Q6J("rank",3),e.xp6(2),e.Q6J("formControl",Ae.formControl),e.xp6(1),e.Q6J("rank",3),e.xp6(2),e.Q6J("formControl",Te.formControl),e.xp6(1),e.Q6J("rank",4),e.xp6(2),e.Q6J("formControl",Me.formControl)}},dependencies:[a._Y,a.JJ,a.JL,a.On,a.oH,a.sg,p.O5,s.b,u.H,b.h,p.Ts],encapsulation:2}),t})();class me{constructor(l,n,o,c,r,m,f,g){this.paris=l,this.doha=n,this.amsterdam=o,this.venice=c,this.kyoto=r,this.barcelona=m,this.athens=f,this.sydney=g}}let de=(()=>{class t{constructor(){this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:8,consts:[["id","checkboxLable"],["id","a11y1",3,"noLabelLayout","rank"],["name","checkboxA11y1","ariaLabel","checkbox using aria-label",3,"ngModel","ngModelChange"],["id","a11y2",3,"rank"],["name","checkboxA11y2","ariaLabelledBy","checkboxLable",3,"ngModel","ngModelChange"],["id","a11y3","label","Disabled checkbox using aria-disabled",3,"rank"],["name","checkboxA11y3","title","It is a disabled checkbox",3,"disabled","ngModel","ngModelChange"]],template:function(n,o){1&n&&(e.TgZ(0,"h3"),e._uU(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),e.qZA(),e.TgZ(2,"p",0),e._uU(3,"checkbox using aria-labelledby"),e.qZA(),e.TgZ(4,"fdp-form-group")(5,"fdp-form-field",1)(6,"fdp-checkbox",2),e.NdJ("ngModelChange",function(r){return o.checkboxA11y1=r}),e.qZA()(),e.TgZ(7,"fdp-form-field",3)(8,"fdp-checkbox",4),e.NdJ("ngModelChange",function(r){return o.checkboxA11y2=r}),e.qZA()(),e.TgZ(9,"fdp-form-field",5)(10,"fdp-checkbox",6),e.NdJ("ngModelChange",function(r){return o.checkboxA11y3=r}),e.qZA()()()),2&n&&(e.xp6(5),e.Q6J("noLabelLayout",!0)("rank",1),e.xp6(1),e.Q6J("ngModel",o.checkboxA11y1),e.xp6(1),e.Q6J("rank",2),e.xp6(1),e.Q6J("ngModel",o.checkboxA11y2),e.xp6(1),e.Q6J("rank",3),e.xp6(1),e.Q6J("disabled",!0)("ngModel",o.checkboxA11y3))},dependencies:[a.JJ,a.On,s.b,u.H,b.h],encapsulation:2}),t})(),fe=(()=>{class t{constructor(){this.multiselectCheckbox=[{language:"html",code:'<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="sirius" label="Sirius" [column]="1" [rank]="1">\n        <fdp-checkbox\n            name="sirius-cb"\n            [values]="{ trueValue: \'sirius\' }"\n            title="Sirius"\n            [(ngModel)]="field1"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="vega" label="Vega" [column]="2" [rank]="1">\n        <fdp-checkbox name="vega-cb" [values]="{ trueValue: \'vega\' }" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [formGroup]="form1" [object]="form1Data" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #rfield1 id="einstein" label="Einstein" [column]="1" [rank]="1">\n        <fdp-checkbox\n            name="einstein-cb"\n            [values]="{ trueValue: \'einstein\' }"\n            fdCompact\n            title="Albert Einstein"\n            [formControl]="rfield1.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 id="newton" label="Newton" [column]="2" [rank]="1">\n        <fdp-checkbox\n            name="newton-cb"\n            [values]="{ trueValue: \'newton\' }"\n            fdCompact\n            title="Issac Newton"\n            [formControl]="rfield2.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem">form value: {{ form1.getRawValue() | json }}</div>\n',fileName:"platform-multiselect-checkbox"},{language:"typescript",code:"import { FormControl, FormGroup } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n\n    form1 = new FormGroup({\n        einstein: new FormControl(),\n        newton: new FormControl()\n    });\n    form1Data = new Form1data([], ['newton']);\n\n    public checkedChangeFunction(): void {}\n\n    public indeterminateChangeFunction(): void {}\n\n    public changeFunction(): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n",fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:'<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="yellow" label="Yellow" [noLabelLayout]="true" [rank]="4" [editable]="true">\n        <fdp-checkbox name="yellow-cb" [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="white" [rank]="4" label="White">\n        <fdp-checkbox name="white-cb" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="violet" label="Violet" [rank]="4">\n        <fdp-checkbox name="violet-cb" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [formGroup]="customForm" [object]="data" fdCompact>\n    <fdp-form-field #red id="red" label="Red" [rank]="4">\n        <fdp-checkbox name="red-cb" title="Red" [formControl]="red.formControl"> </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue id="blue" label="Blue" [rank]="4">\n        <fdp-checkbox name="blue-cb" title="Blue" [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green id="green" label="Green" [rank]="4">\n        <fdp-checkbox name="green-cb" title="Green" [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group fdCompact>\n    <fdp-form-field #disabled id="disabled" label="Red" [rank]="1">\n        <fdp-checkbox name="disabled-cb" title="Red" [disabled]="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',fileName:"platform-binary-checkbox"},{language:"typescript",code:"import { FormControl, FormGroup } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({\n        red: new FormControl(),\n        blue: new FormControl(),\n        green: new FormControl()\n    });\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, public green?: boolean) {}\n}\n",fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:'<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg [formGroup]="customForm" [object]="data" columnLayout="XL2-L1-M1-S1">\n    <fdp-form-field\n        #ffr1\n        id="presence"\n        [validators]="validators"\n        label="Your presence is necessary"\n        hint="hint text"\n        hintPlacement="left"\n        [rank]="10"\n        [column]="1"\n        [required]="true"\n    >\n        <fdp-checkbox name="presence-cb" title="title text" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field\n        #ffr2\n        id="aggrement"\n        [validators]="validators"\n        hint="hint text"\n        hintPlacement="left"\n        [rank]="15"\n        [column]="2"\n        [required]="true"\n    >\n        <fdp-checkbox\n            name="aggrement-cb"\n            title="Do you Agree with Terms and Conditions"\n            [formControl]="ffr2.formControl"\n        >\n            Do you Agree with <a fd-link href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="button-1" [rank]="20" [column]="2">\n        <fdp-button buttonType="emphasized" (click)="onSubmit()" label="Submit"></fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true"> Value is required </span>\n        <span *ngIf="errors.invalid" role="alert" aria-atomic="true"> Value is invalid </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',fileName:"platform-checkbox-error-handling"},{language:"typescript",code:"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm = new FormGroup({\n        presence: new FormControl(),\n        aggrement: new FormControl()\n    });\n    data = new SomeObject(true, true);\n    validators = [Validators.requiredTrue];\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:'<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox name="orion" label="Orion" title="Orion" [values]="{ trueValue: \'orion\' }" [(checked)]="orion">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox name="cygnus" label="Cygnus" title="Cygnus" [(checked)]="cygnus" [values]="{ trueValue: \'cygnus\' }">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox name="lyra" label="Lyra" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox name="gemini" label="Gemini" title="Gemini" [(checked)]="gemini"> </fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox name="orion" label="Orion" title="Orion" [(checked)]="orion" [disabled]="true"> </fdp-checkbox>\n',fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n}\n",fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:'<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [formGroup]="cities" [object]="citiesData" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #paris id="paris" label="Paris" [column]="1" [rank]="1">\n        <fdp-checkbox\n            name="paris-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="paris.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha id="doha" label="Doha" [column]="1" [rank]="3">\n        <fdp-checkbox\n            name="doha-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="doha.formControl"\n        >\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam id="amsterdam" label="Amsterdam" [column]="1" [rank]="5">\n        <fdp-checkbox\n            name="amsterdam-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="amsterdam.formControl"\n        >\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice id="venice" label="Venice" [column]="2" [rank]="2">\n        <fdp-checkbox\n            name="venice-cb"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="venice.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto id="kyoto" label="Kyoto" [column]="2" [rank]="4">\n        <fdp-checkbox\n            name="kyoto-cb"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="kyoto.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona id="barcelona" label="Barcelona" [column]="2" [rank]="6">\n        <fdp-checkbox\n            name="barcelona-cb"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [formControl]="barcelona.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens id="athens" label="athens: tristateSelectable false" [column]="1" [rank]="7">\n        <fdp-checkbox\n            name="athens-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="false"\n            [formControl]="athens.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney id="sydney" label="Sydney: tristateSelectable false" [column]="2" [rank]="8">\n        <fdp-checkbox\n            name="sydney-cb"\n            [tristate]="true"\n            [tristateSelectable]="false"\n            [formControl]="sydney.formControl"\n        ></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="havana" label="Havana" [column]="1" [rank]="1">\n        <fdp-checkbox\n            name="havana-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [(ngModel)]="havana"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="beirut" label="Beirut" [column]="1" [rank]="3">\n        <fdp-checkbox\n            name="beirut-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [(ngModel)]="beirut"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="budapest" label="Budapest" [column]="1" [rank]="5">\n        <fdp-checkbox\n            name="budapest-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [(ngModel)]="budapest"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="lisbon" label="Lisbon" [column]="2" [rank]="2">\n        <fdp-checkbox name="lisbon-cb" [tristate]="true" [tristateSelectable]="true" [(ngModel)]="lisbon">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="istanbul" label="Istanbul" [column]="2" [rank]="4">\n        <fdp-checkbox\n            name="istanbul-cb"\n            [tristate]="true"\n            [tristateSelectable]="true"\n            [(ngModel)]="istanbul"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="busan" label="Busan" [column]="2" [rank]="6">\n        <fdp-checkbox name="busan-cb" [tristate]="true" [tristateSelectable]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="dubrovnik" label="Dubrovnik: tristateSelectable false" [column]="1" [rank]="7">\n        <fdp-checkbox\n            name="dubrovnik-cb"\n            [values]="{ trueValue: \'Yes\' }"\n            [tristate]="true"\n            [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="jaipur" label="Jaipur: tristateSelectable false" [column]="2" [rank]="7">\n        <fdp-checkbox name="jaipur-cb" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [column]="1">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field [column]="2">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 id="acceptAll" label="Accept All" [column]="1" [rank]="1">\n            <fdp-checkbox\n                name="all"\n                [tristate]="true"\n                [tristateSelectable]="false"\n                [checked]="false"\n                [formControl]="ffr1.formControl"\n            ></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="agreementsFormGroup" [object]="choices">\n            <fdp-form-field #ffr2 id="termsAndConditions" label="I accept Terms and Conditions" [rank]="3">\n                <fdp-checkbox name="termsAndConditions-cb" [formControl]="ffr2.formControl"> </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 id="marketing" label="I want to receive Marketing Materials" [rank]="3">\n                <fdp-checkbox name="marketing-cb" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 id="newsletter" label="I want to sign for a Newsletter" [rank]="4">\n                <fdp-checkbox name="newsletter-cb" [formControl]="ffr4.formControl"> </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required"> value is required </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>\n',fileName:"platform-tristate-checkbox"},{language:"typescript",code:"import { Component, AfterViewInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean | null = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean | null = null;\n    public busan = true;\n    public dubrovnik: boolean | null = null;\n    public jaipur: boolean | null = null;\n\n    public cities = new FormGroup({\n        paris: new FormControl(),\n        doha: new FormControl(),\n        amsterdam: new FormControl(),\n        venice: new FormControl(),\n        kyoto: new FormControl(),\n        barcelona: new FormControl(),\n        athens: new FormControl(),\n        sydney: new FormControl()\n    });\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public agreementsFormGroup = new FormGroup({});\n\n    public registrationForm = new FormGroup({\n        agreements: this.agreementsFormGroup,\n        acceptAll: new FormControl()\n    });\n\n    public choices: Record<string, any> = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll')?.valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            ?.valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements')?.patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean | null): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Record<string, any>): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean | null,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean | null,\n        public athens: string | boolean | null,\n        public sydney: string | boolean\n    ) {}\n}\n",fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:'<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group>\n    <fdp-form-field id="a11y1" [noLabelLayout]="true" [rank]="1">\n        <fdp-checkbox\n            name="checkboxA11y1"\n            ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"\n        ></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y2" [rank]="2">\n        <fdp-checkbox name="checkboxA11y2" ariaLabelledBy="checkboxLable" [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y3" label="Disabled checkbox using aria-disabled" [rank]="3">\n        <fdp-checkbox\n            name="checkboxA11y3"\n            title="It is a disabled checkbox"\n            [disabled]="true"\n            [(ngModel)]="checkboxA11y3"\n        ></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',fileName:"platform-checkbox-a11y"},{language:"typescript",code:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-checkbox"]],decls:57,vars:6,consts:[["id","with-form","componentName","checkbox"],[3,"exampleFiles"],["id","without-form","componentName","checkbox"],[2,"list-style-type","circle"],["id","with-value","componentName","checkbox"],["id","tristate","componentName","checkbox"],["id","state","componentName","checkbox"],["id","a11y","componentName","checkbox"]],template:function(n,o){1&n&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Binary Checkbox Used With Form "),e.qZA(),e.TgZ(2,"description"),e._uU(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),e.qZA(),e.TgZ(4,"component-example"),e._UZ(5,"fdp-platform-binary-checkbox"),e.qZA(),e._UZ(6,"code-example",1)(7,"separator"),e.TgZ(8,"fd-docs-section-title",2),e._uU(9," Checkbox Used Without Form "),e.qZA(),e.TgZ(10,"description"),e._uU(11," This example shows Binary Checkbox without form "),e.TgZ(12,"ul",3)(13,"li"),e._uU(14,"checkbox with value property"),e.qZA(),e.TgZ(15,"li"),e._uU(16,"checkbox without value property"),e.qZA()()(),e.TgZ(17,"component-example"),e._UZ(18,"fdp-platform-binary-checkbox-no-form"),e.qZA(),e._UZ(19,"code-example",1)(20,"separator"),e.TgZ(21,"fd-docs-section-title",4),e._uU(22," Checkboxes With Value Property "),e.qZA(),e.TgZ(23,"description"),e._uU(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),e.qZA(),e.TgZ(25,"component-example"),e._UZ(26,"fdp-platform-multiselect-checkbox"),e.qZA(),e._UZ(27,"code-example",1)(28,"separator"),e.TgZ(29,"fd-docs-section-title",5),e._uU(30," Tristate Checkbox With Value Property and Without Value Property\n"),e.qZA(),e.TgZ(31,"description"),e._uU(32," This example shows tristate checkbox in Reactive form and Template driven form "),e.TgZ(33,"ul",3)(34,"li"),e._uU(35,"Tristate checkbox with value property"),e.qZA(),e.TgZ(36,"li"),e._uU(37,"Tristate checkbox without value property"),e.qZA()()(),e.TgZ(38,"component-example"),e._UZ(39,"fdp-platform-tristate-checkbox"),e.qZA(),e._UZ(40,"code-example",1)(41,"separator"),e.TgZ(42,"fd-docs-section-title",6),e._uU(43," Checkbox With Form and State Change on Error\n"),e.qZA(),e.TgZ(44,"description"),e._uU(45,"This example shows Checkbox Error state, when form has error "),e.qZA(),e.TgZ(46,"component-example"),e._UZ(47,"fdp-platform-checkbox-error-handling"),e.qZA(),e._UZ(48,"code-example",1)(49,"separator"),e.TgZ(50,"fd-docs-section-title",7),e._uU(51," Accessibility on checkbox "),e.qZA(),e.TgZ(52,"description"),e._uU(53,"This example shows Checkbox accessibility"),e.qZA(),e.TgZ(54,"component-example"),e._UZ(55,"fdp-platform-checkbox-a11y"),e.qZA(),e._UZ(56,"code-example",1)),2&n&&(e.xp6(6),e.Q6J("exampleFiles",o.binaryCheckbox),e.xp6(13),e.Q6J("exampleFiles",o.noFormCheckbox),e.xp6(8),e.Q6J("exampleFiles",o.multiselectCheckbox),e.xp6(13),e.Q6J("exampleFiles",o.triCheckbox),e.xp6(8),e.Q6J("exampleFiles",o.errorCheckbox),e.xp6(8),e.Q6J("exampleFiles",o.a11yCheckbox))},dependencies:[V.N,L.E,x.w,D.k,O.O,R,Y,oe,ae,ie,de],encapsulation:2}),t})();var se=i(11825),pe=i(92178),ue=i(80320),be=i(10990);let he=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-checkbox-header"]],decls:22,vars:0,consts:[["routerLink","/core/checkbox"],["routerLink","/platform/checkbox-group"],["module","PlatformCheckboxModule","subPackage","form"]],template:function(n,o){1&n&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Checkbox"),e.qZA(),e.TgZ(3,"description"),e._uU(4," This is an extension of the Checkbox component present in "),e.TgZ(5,"a",0),e._uU(6,"ngx-core"),e.qZA(),e._uU(7,". "),e._UZ(8,"br"),e._uU(9," For usecase of Multiple checkboxes selection, please see "),e.TgZ(10,"a",1),e._uU(11,"Checkbox Group"),e.qZA(),e._uU(12,". "),e.TgZ(13,"h3"),e._uU(14,"Platform specific enhancements:"),e.qZA(),e.TgZ(15,"ul")(16,"li"),e._uU(17," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),e.qZA(),e.TgZ(18,"li"),e._uU(19,'Platform checkbox can be used outside form using "checked" property two way binding.'),e.qZA()()(),e._UZ(20,"import",2)(21,"fd-header-tabs"),e.qZA())},dependencies:[h.yS,se.k,pe.G,ue.c,x.w,be.i],encapsulation:2}),t})();var ge=i(18177),_=i(21803),ke=i(99916);const xe=[{path:"",component:he,children:[{path:"",component:fe},{path:"api",component:y.h,data:{content:Z.X.checkbox}}]}];let Ce=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({providers:[(0,ke.PP)("fdp-checkbox")],imports:[h.Bz.forChild(xe),A.g,_.U_,_.Mk,ge.R,h.Bz]}),t})()}}]);