!function(){function e(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function n(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function t(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{v0Ft:function(n,a,r){"use strict";r.r(a),r.d(a,"PlatformWizardGeneratorDocsModule",function(){return mn});var i={};r.r(i),r.d(i,"default",function(){return C});var o={};r.r(o),r.d(o,"default",function(){return W});var d={};r.r(d),r.d(d,"default",function(){return S});var s={};r.r(s),r.d(s,"default",function(){return T});var m={};r.r(m),r.d(m,"default",function(){return I});var p={};r.r(p),r.d(p,"default",function(){return x});var l={};r.r(l),r.d(l,"default",function(){return G});var c={};r.r(c),r.d(c,"default",function(){return k});var u={};r.r(u),r.d(u,"default",function(){return F});var f={};r.r(f),r.d(f,"default",function(){return M});var b={};r.r(b),r.d(b,"default",function(){return P});var y={};r.r(y),r.d(y,"default",function(){return N});var g={};r.r(g),r.d(g,"default",function(){return A});var h={};r.r(h),r.d(h,"default",function(){return _});var z={};r.r(z),r.d(z,"default",function(){return E});var v={};r.r(v),r.d(v,"default",function(){return q});var V={};r.r(V),r.d(V,"default",function(){return j});var w={};r.r(w),r.d(w,"default",function(){return R});var D=r("tyNb"),C='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',W="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-default-example',\n  templateUrl: './wizard-generator-default-example.component.html'\n})\nexport class WizardGeneratorDefaultExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor() { }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",S='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',T="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WizardGeneratorItem, WizardTitle, WizardDialogGeneratorService, WizardGeneratorFormsValue } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-wizard-generator-dialog-example',\n    templateUrl: './wizard-generator-dialog-example.component.html'\n})\nexport class WizardGeneratorDialogExampleComponent implements OnDestroy {\n\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    allowSubscribe = true;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",I='<fdp-button (click)="openDialog()" label="Open customized wizard in dialog"></fdp-button>\n\n<ng-template let-goNext="goNext" #goNextTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="emphasized" label="Custom next button" (click)="goNext()"></fdp-button>\n</ng-template>\n\n<ng-template let-goBack="goBack" #goBackTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="ghost" label="Custom back button" (click)="goBack()"></fdp-button>\n</ng-template>\n\n<ng-template let-finish="finish" #finishTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="emphasized" label="Custom finish button" (click)="finish()"></fdp-button>\n</ng-template>\n\n<ng-template let-cancel="cancel" #cancelTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="ghost" label="Custom cancel button" (click)="cancel()"></fdp-button>\n</ng-template>\n\n<ng-template let-dialog let-dialogConfig="dialogConfig" #confirmationDialogTemplate>\n    <fd-dialog [dialogConfig]="dialogConfig" [dialogRef]="dialog">\n        <fd-dialog-header>\n            <button fd-dialog-close-button (click)="dialog.dismiss()"></button>\n        </fd-dialog-header>\n\n        <fd-dialog-body>\n            This is custom confirmation dialog.\n        </fd-dialog-body>\n\n        <fd-dialog-footer>\n            <fd-button-bar\n                    fdType="emphasized"\n                    label="Yes"\n                    type="submit"\n                    (click)="dialog.close(true)">\n            </fd-button-bar>\n            <fd-button-bar\n                    fd-initial-focus\n                    label="No"\n                    (click)="dialog.dismiss()">\n            </fd-button-bar>\n        </fd-dialog-footer>\n    </fd-dialog>\n</ng-template>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',x="import { Component, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-customizable-example',\n  templateUrl: './wizard-generator-customizable-example.component.html'\n})\nexport class WizardGeneratorCustomizableExampleComponent implements OnDestroy {\n\n    @ViewChild('goNextTemplate') goNextTemplate: TemplateRef<any>;\n    @ViewChild('goBackTemplate') goBackTemplate: TemplateRef<any>;\n    @ViewChild('finishTemplate') finishTemplate: TemplateRef<any>;\n    @ViewChild('cancelTemplate') cancelTemplate: TemplateRef<any>;\n    @ViewChild('confirmationDialogTemplate') confirmationDialogTemplate: TemplateRef<any>;\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle,\n                goNextButtonTemplate: this.goNextTemplate,\n                goBackButtonTemplate: this.goBackTemplate,\n                finishButtonTemplate: this.finishTemplate,\n                cancelButtonTemplate: this.cancelTemplate,\n                confirmationDialogTemplate: this.confirmationDialogTemplate\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n}\n",G='<fdp-wizard-generator [appendToWizard]="false" [items]="stepItems" [title]="wizardTitle" (wizardFinished)="wizardFinished($event)">\n    <ng-template fdpWizardGeneratorGoNextButton let-goNext="goNext">\n        <fdp-button contentDensity="condensed" buttonType="emphasized" label="Custom next button" (click)="goNext()"></fdp-button>\n    </ng-template>\n    <ng-template fdpWizardGeneratorFinishButton let-finish="finish">\n        <fdp-button contentDensity="condensed" buttonType="emphasized" label="Custom finish button" (click)="finish()"></fdp-button>\n    </ng-template>\n</fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',k="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-customizable-embeded-example',\n  templateUrl: './wizard-generator-customizable-embeded-example.component.html'\n})\nexport class WizardGeneratorCustomizableEmbededExampleComponent {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        }\n    ];\n\n    constructor() { }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",F='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',M="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-condition-example',\n  templateUrl: './wizard-generator-condition-example.component.html'\n})\nexport class WizardGeneratorConditionExampleComponent implements OnDestroy {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            },\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",P='<fdp-wizard-generator [items]="stepItems" [responsivePaddings]="false" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',N="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-responsive-paddings-example',\n  templateUrl: './wizard-generator-responsive-paddings-example.component.html'\n})\nexport class WizardGeneratorResponsivePaddingsExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor() { }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",A='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',_="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WizardGeneratorItem, WizardTitle, WizardDialogGeneratorService, WizardGeneratorFormsValue } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-responsive-dialog-example',\n  templateUrl: './wizard-generator-responsive-dialog-example.component.html'\n})\nexport class WizardGeneratorResponsiveDialogExampleComponent implements OnDestroy {\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: false,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",E='<fdp-wizard-generator [items]="stepItems" [responsivePaddings]="true" [displaySummaryStep]="true" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',q="import { Component, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-visible-summary-example',\n  templateUrl: './wizard-generator-visible-summary-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor() { }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",j='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',R="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform';\n\n@Component({\n  selector: 'fdp-wizard-generator-visible-summary-branching-example',\n  templateUrl: './wizard-generator-visible-summary-branching-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryBranchingExampleComponent implements OnDestroy {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            },\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true,\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            }\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",B=r("fXoL"),$=r("ddaM"),L=r("kt86"),O=r("X1JU"),U=r("3Pt+"),K=r("MdoR"),X=r("ofXK");function J(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Q,Y=((Q=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Q)},Q.\u0275cmp=B.Kb({type:Q,selectors:[["fdp-wizard-generator-default-example"]],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-wizard-generator",0),B.jc("wizardFinished",function(e){return n.wizardFinished(e)}),B.Vb(),B.Tc(1,J,3,3,"p",1)),2&e&&(B.vc("items",n.stepItems),B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[K.a,X.o],pipes:[X.h],encapsulation:2}),Q),H=r("5HkS"),Z=r("Hxo2"),ee=r("XNiG"),ne=r("1G5W"),te=r("XaOr"),ae=r("oxJj");function re(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var ie,oe=((ie=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.allowSubscribe=!0,this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ee.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(ne.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||ie)(B.Qb(te.vb))},ie.\u0275cmp=B.Kb({type:ie,selectors:[["fdp-wizard-generator-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-button",0),B.jc("click",function(){return n.openDialog()}),B.Vb(),B.Tc(1,re,3,3,"p",1)),2&e&&(B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[ae.a,X.o],pipes:[X.h],encapsulation:2}),ie),de=r("YDzK"),se=r("w5KD");function me(e,n){1&e&&(B.Wb(0,"fdp-button",4),B.jc("click",function(){return(0,n.goNext)()}),B.Vb())}function pe(e,n){1&e&&(B.Wb(0,"fdp-button",5),B.jc("click",function(){return(0,n.finish)()}),B.Vb())}function le(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var ce,ue=((ce=function(){function n(){e(this,n),this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||ce)},ce.\u0275cmp=B.Kb({type:ce,selectors:[["fdp-wizard-generator-customizable-embeded-example"]],decls:4,vars:4,consts:[[3,"appendToWizard","items","title","wizardFinished"],["fdpWizardGeneratorGoNextButton",""],["fdpWizardGeneratorFinishButton",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",3,"click"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-wizard-generator",0),B.jc("wizardFinished",function(e){return n.wizardFinished(e)}),B.Tc(1,me,1,0,"ng-template",1),B.Tc(2,pe,1,0,"ng-template",2),B.Vb(),B.Tc(3,le,3,3,"p",3)),2&e&&(B.vc("appendToWizard",!1)("items",n.stepItems)("title",n.wizardTitle),B.Db(3),B.vc("ngIf",n.wizardValue))},directives:[K.a,de.a,se.a,X.o,ae.a],pipes:[X.h],encapsulation:2}),ce),fe=r("VlTP"),be=r("z4oC"),ye=r("YnUX"),ge=r("R7Mx"),he=r("ZuJN"),ze=r("8yLD"),ve=r("ugC7"),Ve=["goNextTemplate"],we=["goBackTemplate"],De=["finishTemplate"],Ce=["cancelTemplate"],We=["confirmationDialogTemplate"];function Se(e,n){1&e&&(B.Wb(0,"fdp-button",7),B.jc("click",function(){return(0,n.goNext)()}),B.Vb())}function Te(e,n){1&e&&(B.Wb(0,"fdp-button",8),B.jc("click",function(){return(0,n.goBack)()}),B.Vb())}function Ie(e,n){1&e&&(B.Wb(0,"fdp-button",9),B.jc("click",function(){return(0,n.finish)()}),B.Vb())}function xe(e,n){1&e&&(B.Wb(0,"fdp-button",10),B.jc("click",function(){return(0,n.cancel)()}),B.Vb())}function Ge(e,n){if(1&e&&(B.Wb(0,"fd-dialog",11),B.Wb(1,"fd-dialog-header"),B.Wb(2,"button",12),B.jc("click",function(){return n.$implicit.dismiss()}),B.Vb(),B.Vb(),B.Wb(3,"fd-dialog-body"),B.Vc(4," This is custom confirmation dialog. "),B.Vb(),B.Wb(5,"fd-dialog-footer"),B.Wb(6,"fd-button-bar",13),B.jc("click",function(){return n.$implicit.close(!0)}),B.Vb(),B.Wb(7,"fd-button-bar",14),B.jc("click",function(){return n.$implicit.dismiss()}),B.Vb(),B.Vb(),B.Vb()),2&e){var t=n.$implicit;B.vc("dialogConfig",n.dialogConfig)("dialogRef",t)}}function ke(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Fe,Me=((Fe=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ee.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle,goNextButtonTemplate:this.goNextTemplate,goBackButtonTemplate:this.goBackTemplate,finishButtonTemplate:this.finishTemplate,cancelButtonTemplate:this.cancelTemplate,confirmationDialogTemplate:this.confirmationDialogTemplate}}).afterClosed.pipe(Object(ne.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}}]),n}()).\u0275fac=function(e){return new(e||Fe)(B.Qb(te.vb))},Fe.\u0275cmp=B.Kb({type:Fe,selectors:[["fdp-wizard-generator-customizable-example"]],viewQuery:function(e,n){var t;1&e&&(B.ad(Ve,1),B.ad(we,1),B.ad(De,1),B.ad(Ce,1),B.ad(We,1)),2&e&&(B.Gc(t=B.kc())&&(n.goNextTemplate=t.first),B.Gc(t=B.kc())&&(n.goBackTemplate=t.first),B.Gc(t=B.kc())&&(n.finishTemplate=t.first),B.Gc(t=B.kc())&&(n.cancelTemplate=t.first),B.Gc(t=B.kc())&&(n.confirmationDialogTemplate=t.first))},decls:12,vars:1,consts:[["label","Open customized wizard in dialog",3,"click"],["goNextTemplate",""],["goBackTemplate",""],["finishTemplate",""],["cancelTemplate",""],["confirmationDialogTemplate",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom back button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom cancel button",1,"fd-bar__element",3,"click"],[3,"dialogConfig","dialogRef"],["fd-dialog-close-button","",3,"click"],["fdType","emphasized","label","Yes","type","submit",3,"click"],["fd-initial-focus","","label","No",3,"click"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-button",0),B.jc("click",function(){return n.openDialog()}),B.Vb(),B.Tc(1,Se,1,0,"ng-template",null,1,B.Uc),B.Tc(3,Te,1,0,"ng-template",null,2,B.Uc),B.Tc(5,Ie,1,0,"ng-template",null,3,B.Uc),B.Tc(7,xe,1,0,"ng-template",null,4,B.Uc),B.Tc(9,Ge,8,2,"ng-template",null,5,B.Uc),B.Tc(11,ke,3,3,"p",6)),2&e&&(B.Db(11),B.vc("ngIf",n.wizardValue))},directives:[ae.a,X.o,fe.a,be.a,ye.a,ge.a,he.a,ze.a,ve.a],pipes:[X.h],encapsulation:2}),Fe);function Pe(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Ne,Ae=((Ne=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[U.A.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:function(e,n){var t,a;return"Credit Card"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:function(e,n){var t,a;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ee.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(ne.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Ne)(B.Qb(te.vb))},Ne.\u0275cmp=B.Kb({type:Ne,selectors:[["fdp-wizard-generator-condition-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-button",0),B.jc("click",function(){return n.openDialog()}),B.Vb(),B.Tc(1,Pe,3,3,"p",1)),2&e&&(B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[ae.a,X.o],pipes:[X.h],encapsulation:2}),Ne);function _e(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Ee,qe=((Ee=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Ee)},Ee.\u0275cmp=B.Kb({type:Ee,selectors:[["fdp-wizard-generator-responsive-paddings-example"]],decls:2,vars:3,consts:[[3,"items","responsivePaddings","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-wizard-generator",0),B.jc("wizardFinished",function(e){return n.wizardFinished(e)}),B.Vb(),B.Tc(1,_e,3,3,"p",1)),2&e&&(B.vc("items",n.stepItems)("responsivePaddings",!1),B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[K.a,X.o],pipes:[X.h],encapsulation:2}),Ee);function je(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Re,Be=((Re=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Re)},Re.\u0275cmp=B.Kb({type:Re,selectors:[["fdp-wizard-generator-visible-summary-example"]],decls:2,vars:4,consts:[[3,"items","responsivePaddings","displaySummaryStep","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-wizard-generator",0),B.jc("wizardFinished",function(e){return n.wizardFinished(e)}),B.Vb(),B.Tc(1,je,3,3,"p",1)),2&e&&(B.vc("items",n.stepItems)("responsivePaddings",!0)("displaySummaryStep",!0),B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[K.a,X.o],pipes:[X.h],encapsulation:2}),Re);function $e(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Le,Oe=((Le=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[U.A.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:function(e,n){var t,a;return"Credit Card"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:function(e,n){var t,a;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0,when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)}}],this._onDestroy$=new ee.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(ne.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Le)(B.Qb(te.vb))},Le.\u0275cmp=B.Kb({type:Le,selectors:[["fdp-wizard-generator-visible-summary-branching-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-button",0),B.jc("click",function(){return n.openDialog()}),B.Vb(),B.Tc(1,$e,3,3,"p",1)),2&e&&(B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[ae.a,X.o],pipes:[X.h],encapsulation:2}),Le);function Ue(e,n){if(1&e&&(B.Wb(0,"p"),B.Vc(1),B.oc(2,"json"),B.Vb()),2&e){var t=B.nc();B.Db(1),B.Xc(" Wizard value: ",B.pc(2,1,t.wizardValue),"\n")}}var Ke,Xe,Je,Qe,Ye=((Xe=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[U.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[U.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[U.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[U.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ee.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!1,title:this.wizardTitle}}).afterClosed.pipe(Object(ne.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Xe)(B.Qb(te.vb))},Xe.\u0275cmp=B.Kb({type:Xe,selectors:[["fdp-wizard-generator-responsive-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(B.Wb(0,"fdp-button",0),B.jc("click",function(){return n.openDialog()}),B.Vb(),B.Tc(1,Ue,3,3,"p",1)),2&e&&(B.Db(1),B.vc("ngIf",n.wizardValue))},directives:[ae.a,X.o],pipes:[X.h],encapsulation:2}),Xe),He=((Ke=function n(){e(this,n),this.defaultExample=[{language:"html",code:i,fileName:"wizard-generator-default-example"},{language:"typescript",code:o,fileName:"wizard-generator-default-example",component:"WizardGeneratorDefaultExampleComponent"}],this.dialogExample=[{language:"html",code:d,fileName:"wizard-generator-dialog-example"},{language:"typescript",code:s,fileName:"wizard-generator-dialog-example",component:"WizardGeneratorDialogExampleComponent"}],this.customizableExample=[{language:"html",code:m,fileName:"wizard-generator-customizable-example"},{language:"typescript",code:p,fileName:"wizard-generator-customizable-example",component:"WizardGeneratorCustomizableExampleComponent"}],this.customizableEmbededExample=[{language:"html",code:l,fileName:"wizard-generator-customizable-embeded-example"},{language:"typescript",code:c,fileName:"wizard-generator-customizable-embeded-example",component:"WizardGeneratorCustomizableEmbededExampleComponent"}],this.branchingExample=[{language:"html",code:b,fileName:"wizard-generator-condition-example"},{language:"typescript",code:f,fileName:"wizard-generator-condition-example",component:"WizardGeneratorConditionExampleComponent"}],this.responsivePaddingsExample=[{language:"html",code:u,fileName:"wizard-generator-responsive-paddings-example"},{language:"typescript",code:y,fileName:"wizard-generator-responsive-paddings-example",component:"WizardGeneratorResponsivePaddingsExampleComponent"}],this.visibleSummaryExample=[{language:"html",code:z,fileName:"wizard-generator-visible-summary-example"},{language:"typescript",code:v,fileName:"wizard-generator-visible-summary-example",component:"WizardGeneratorVisibleSummaryExampleComponent"}],this.visibleBranchingSummaryExample=[{language:"html",code:V,fileName:"wizard-generator-visible-summary-branching-example"},{language:"typescript",code:w,fileName:"wizard-generator-visible-summary-branching-example",component:"WizardGeneratorVisibleSummaryBranchingExampleComponent"}],this.responsiveDialogPaddingsExample=[{language:"html",code:g,fileName:"wizard-generator-responsive-dialog-example"},{language:"typescript",code:h,fileName:"wizard-generator-responsive-dialog-example",component:"WizardGeneratorResponsiveDialogExampleComponent"}]}).\u0275fac=function(e){return new(e||Ke)},Ke.\u0275cmp=B.Kb({type:Ke,selectors:[["fdp-platform-wizard-generator-docs"]],decls:194,vars:9,consts:[["id","wizard-default-example","componentName","wizard"],[3,"exampleFiles"],["id","in-dialog","componentName","wizard-generator"],["id","customization","componentName","wizard-generator"],["id","dialog-customization","componentName","wizard-generator"],["id","branching","componentName","wizard-generator"],["id","responsive-paddings","componentName","wizard-generator"],[2,"text-align","left"],[2,"margin-left","2rem"],["id","visible-summary","componentName","wizard-generator"],["id","visible-summary-with-branching","componentName","wizard-generator"],["id","responsive-paddings-in-dialog","componentName","wizard-generator"]],template:function(e,n){1&e&&(B.Wb(0,"fd-docs-section-title",0),B.Vc(1," Default Wizard generator\n"),B.Vb(),B.Wb(2,"description"),B.Vc(3,' The default wizard displays a walkthrough screen with forms split into sections. Once the user fills all of the necessary input fields, and presses the "Next step" button, new step will appear. A summary step can be added by providing additional step with '),B.Wb(4,"code"),B.Vc(5,"summary: true"),B.Vb(),B.Vc(6," property to the wizard generator metadata.\n"),B.Vb(),B.Wb(7,"component-example"),B.Rb(8,"fdp-wizard-generator-default-example"),B.Vb(),B.Rb(9,"code-example",1),B.Rb(10,"separator"),B.Wb(11,"fd-docs-section-title",2),B.Vc(12," Wizard generator in dialog\n"),B.Vb(),B.Wb(13,"description"),B.Vc(14," The wizard generator can also be used within a dialog by calling "),B.Wb(15,"code"),B.Vc(16,"open"),B.Vb(),B.Vc(17," method from "),B.Wb(18,"code"),B.Vc(19,"WizardDialogGeneratorService"),B.Vb(),B.Vc(20," A Cancel button is displayed in the footer, so the user can exit the wizard at any point during the process. However, if a user exits the wizard after adding their input, they will receive a warning that their information will be lost.\n"),B.Vb(),B.Wb(21,"component-example"),B.Rb(22,"fdp-wizard-generator-dialog-example"),B.Vb(),B.Rb(23,"code-example",1),B.Rb(24,"separator"),B.Wb(25,"fd-docs-section-title",3),B.Vc(26," Customizable Wizard generator\n"),B.Vb(),B.Wb(27,"description"),B.Vc(28," The wizard component can be customized with modifier inputs. Steps can be placed on separate pages, rather than appended to the wizard, by setting the "),B.Wb(29,"code"),B.Vc(30,"[appendToWizard]"),B.Vb(),B.Vc(31," input to "),B.Wb(32,"code"),B.Vc(33,"false"),B.Vb(),B.Vc(34,". "),B.Rb(35,"br"),B.Rb(36,"br"),B.Vc(37," You can also use icons for the step indicators by adding "),B.Wb(38,"code"),B.Vc(39,"icon"),B.Vb(),B.Vc(40," property to the wizard steps object. "),B.Rb(41,"br"),B.Rb(42,"br"),B.Vc(43," Buttons appearance can be changed with "),B.Wb(44,"code"),B.Vc(45,"[navigationButtonLabels]"),B.Vb(),B.Vc(46," property. "),B.Rb(47,"br"),B.Rb(48,"br"),B.Vc(49," If you want to use completely different style for navigational buttons, you can use special directives: "),B.Wb(50,"code"),B.Vc(51,"fdpWizardGeneratorGoNextButton, fdpWizardGeneratorFinishButton"),B.Vb(),B.Vc(52,".\n"),B.Vb(),B.Wb(53,"component-example"),B.Rb(54,"fdp-wizard-generator-customizable-embeded-example"),B.Vb(),B.Rb(55,"code-example",1),B.Rb(56,"separator"),B.Wb(57,"fd-docs-section-title",4),B.Vc(58," Customizable Wizard generator in dialog\n"),B.Vb(),B.Wb(59,"description"),B.Vc(60," Dialog close confirmation text can be changed with "),B.Wb(61,"code"),B.Vc(62,"confirmationDialogText, confirmationDialogCloseText, confirmationDialogCancelText"),B.Vb(),B.Vc(63," properties. "),B.Rb(64,"br"),B.Rb(65,"br"),B.Vc(66," If you want to use completely different style for navigational buttons, you can use "),B.Wb(67,"code"),B.Vc(68,"goNextButtonTemplate, goBackButtonTemplate, finishButtonTemplate, cancelButtonTemplate"),B.Vb(),B.Vc(69," properties for the dialog wizard. "),B.Rb(70,"br"),B.Rb(71,"br"),B.Vc(72," If you want to use your custom confirmation dialog, you can pass it "),B.Wb(73,"code"),B.Vc(74,"confirmationDialogTemplate"),B.Vb(),B.Vc(75," property to wizard dialog service.\n"),B.Vb(),B.Wb(76,"component-example"),B.Rb(77,"fdp-wizard-generator-customizable-example"),B.Vb(),B.Rb(78,"code-example",1),B.Rb(79,"separator"),B.Wb(80,"fd-docs-section-title",5),B.Vc(81," Branching Wizard\n"),B.Vb(),B.Wb(82,"description"),B.Vc(83," Developers can configure branching behaviour of the wizard by providing "),B.Wb(84,"code"),B.Vc(85,"when"),B.Vb(),B.Vc(86," property function to the wizard generator step and by specifying "),B.Wb(87,"code"),B.Vc(88,"dependencyFields"),B.Vb(),B.Vc(89," property of the wizard generator step to reflect which steps are creating branches.\n"),B.Vb(),B.Wb(90,"component-example"),B.Rb(91,"fdp-wizard-generator-condition-example"),B.Vb(),B.Rb(92,"code-example",1),B.Rb(93,"separator"),B.Wb(94,"fd-docs-section-title",6),B.Vc(95," Responsive paddings for Wizard generator\n"),B.Vb(),B.Wb(96,"description"),B.Wb(97,"p"),B.Vc(98,"The default wizard have responsive paddings applied for progress bar and content. To disable responsive paddings, you can use "),B.Wb(99,"code"),B.Vc(100,'[responsivePaddings]="false"'),B.Vb(),B.Vc(101," input to the wizard generator component."),B.Vb(),B.Wb(102,"p"),B.Vc(103,"Responsive paddings values:"),B.Vb(),B.Wb(104,"table"),B.Wb(105,"thead"),B.Wb(106,"tr"),B.Wb(107,"th",7),B.Wb(108,"strong"),B.Vc(109,"rem"),B.Vb(),B.Vb(),B.Wb(110,"th",7),B.Wb(111,"div",8),B.Wb(112,"p"),B.Wb(113,"strong"),B.Vc(114,"Min-width"),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Wb(115,"th",7),B.Wb(116,"div",8),B.Wb(117,"strong"),B.Vc(118,"Max-width"),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Wb(119,"tbody"),B.Wb(120,"tr"),B.Wb(121,"td",7),B.Vc(122,"1rem"),B.Vb(),B.Wb(123,"td",7),B.Wb(124,"span",8),B.Wb(125,"em"),B.Vc(126,"n/a"),B.Vb(),B.Vb(),B.Vb(),B.Wb(127,"td",7),B.Wb(128,"span",8),B.Vc(129,"599px"),B.Vb(),B.Vb(),B.Vb(),B.Wb(130,"tr"),B.Wb(131,"td",7),B.Vc(132,"2rem"),B.Vb(),B.Wb(133,"td",7),B.Wb(134,"span",8),B.Vc(135,"600px"),B.Vb(),B.Vb(),B.Wb(136,"td",7),B.Wb(137,"span",8),B.Vc(138,"1023px"),B.Vb(),B.Vb(),B.Vb(),B.Wb(139,"tr"),B.Wb(140,"td",7),B.Vc(141,"2rem"),B.Vb(),B.Wb(142,"td",7),B.Wb(143,"span",8),B.Vc(144,"1024px"),B.Vb(),B.Vb(),B.Wb(145,"td",7),B.Wb(146,"span",8),B.Vc(147,"1439px"),B.Vb(),B.Vb(),B.Vb(),B.Wb(148,"tr"),B.Wb(149,"td",7),B.Vc(150,"3rem"),B.Vb(),B.Wb(151,"td",7),B.Wb(152,"span",8),B.Vc(153,"1440px"),B.Vb(),B.Vb(),B.Wb(154,"td",7),B.Wb(155,"span",8),B.Wb(156,"em"),B.Vc(157,"n/a"),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Vb(),B.Wb(158,"component-example"),B.Rb(159,"fdp-wizard-generator-responsive-paddings-example"),B.Vb(),B.Rb(160,"code-example",1),B.Rb(161,"separator"),B.Wb(162,"fd-docs-section-title",9),B.Vc(163," Visible summary step in progress bar\n"),B.Vb(),B.Wb(164,"description"),B.Vc(165," By default, Wizard generator doesn't show Summary step in the wizard progress bar section. Developers can configure visibility of the summary step by providing "),B.Wb(166,"code"),B.Vc(167,'[displaySummaryStep]="true"'),B.Vb(),B.Vc(168," property of "),B.Wb(169,"code"),B.Vc(170,"<fdp-wizard-generator />"),B.Vb(),B.Vc(171,".\n"),B.Vb(),B.Wb(172,"component-example"),B.Rb(173,"fdp-wizard-generator-visible-summary-example"),B.Vb(),B.Rb(174,"code-example",1),B.Rb(175,"separator"),B.Wb(176,"fd-docs-section-title",10),B.Vc(177," Visible summary step with branching\n"),B.Vb(),B.Wb(178,"description"),B.Vc(179," As per design specification, no steps should be visible after branching step, until it's completed. This means that developers should configure appropriate condidions for steps visibility. Same applies to the summary step, if it should be visible in wizard progress bar.\n"),B.Vb(),B.Wb(180,"component-example"),B.Rb(181,"fdp-wizard-generator-visible-summary-branching-example"),B.Vb(),B.Rb(182,"code-example",1),B.Rb(183,"separator"),B.Wb(184,"fd-docs-section-title",11),B.Vc(185," Responsive paddings for Wizard generator in dialog\n"),B.Vb(),B.Wb(186,"description"),B.Vc(187," Use "),B.Wb(188,"code"),B.Vc(189,"responsivePaddings: false"),B.Vb(),B.Vc(190," property for dialog config to dosable wizard responsive paddings inside dialog.\n"),B.Vb(),B.Wb(191,"component-example"),B.Rb(192,"fdp-wizard-generator-responsive-dialog-example"),B.Vb(),B.Rb(193,"code-example",1)),2&e&&(B.Db(9),B.vc("exampleFiles",n.defaultExample),B.Db(14),B.vc("exampleFiles",n.dialogExample),B.Db(32),B.vc("exampleFiles",n.customizableEmbededExample),B.Db(23),B.vc("exampleFiles",n.customizableExample),B.Db(14),B.vc("exampleFiles",n.branchingExample),B.Db(68),B.vc("exampleFiles",n.responsivePaddingsExample),B.Db(14),B.vc("exampleFiles",n.visibleSummaryExample),B.Db(8),B.vc("exampleFiles",n.visibleBranchingSummaryExample),B.Db(11),B.vc("exampleFiles",n.responsiveDialogPaddingsExample))},directives:[$.a,L.a,O.a,Y,H.a,Z.a,oe,ue,Me,Ae,qe,Be,Oe,Ye],encapsulation:2}),Ke),Ze=r("dor/"),en=r("RJTZ"),nn=r("Kpas"),tn=((Je=function n(){e(this,n)}).\u0275fac=function(e){return new(e||Je)},Je.\u0275cmp=B.Kb({type:Je,selectors:[["fdp-platform-wizard-generator-header"]],decls:22,vars:0,consts:[["routerLink","/core/wizard"],["module","PlatformWizardGeneratorModule"]],template:function(e,n){1&e&&(B.Wb(0,"header"),B.Vc(1,"Wizard generator"),B.Vb(),B.Wb(2,"description"),B.Vc(3," This is a wrapper of the Platform component present in "),B.Wb(4,"a",0),B.Vc(5,"@fundamental-ngx/core"),B.Vb(),B.Vc(6,". "),B.Rb(7,"br"),B.Vc(8," It provides ability to dynamically generate Wizard without any user-provided templates. "),B.Rb(9,"br"),B.Rb(10,"br"),B.Wb(11,"h3"),B.Vc(12,"Platform specific enhancements:"),B.Vb(),B.Wb(13,"ul"),B.Wb(14,"li"),B.Vc(15," Steps are dynamically rendered based on steps object input. "),B.Vb(),B.Wb(16,"li"),B.Vc(17," Branching logic is based on the steps object input. "),B.Vb(),B.Vb(),B.Vb(),B.Rb(18,"br"),B.Rb(19,"import",1),B.Rb(20,"fd-header-tabs"),B.Rb(21,"router-outlet"))},directives:[Ze.a,L.a,D.f,en.a,nn.a,D.h],encapsulation:2}),Je),an=r("jzzn"),rn=r("IywY"),on=r("t9W5"),dn=r("9TyJ"),sn=[{path:"",component:tn,children:[{path:"",component:He},{path:"api",component:an.a,data:{content:rn.a.wizardGenerator}}]}],mn=((Qe=function n(){e(this,n)}).\u0275fac=function(e){return new(e||Qe)},Qe.\u0275mod=B.Ob({type:Qe}),Qe.\u0275inj=B.Nb({imports:[[D.g.forChild(sn),on.a,te.fb,te.r,dn.r,dn.c]]}),Qe)}}])}();