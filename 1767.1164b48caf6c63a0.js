"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1767],{36854:(N,D,t)=>{t.d(D,{h:()=>T});var l=t(74042),s=(t(77135),t(5e3)),v=t(8674),u=t(69808),A=t(87757),m=t(63043),b=t(50578),I=t(27078),e=t(42437),E=t(24919);const w=["menu"];function S(_,P){if(1&_&&s._UZ(0,"button",8),2&_){const g=s.oxw(),f=s.MAs(6);s.Q6J("label","Select a file ("+g.files.length+")")("fdMenu",!0)("fdMenuTrigger",f)}}function F(_,P){if(1&_){const g=s.EpF();s.TgZ(0,"li",9),s.NdJ("click",function(){const Z=s.CHM(g).$implicit;return s.oxw().getFile(Z)}),s.TgZ(1,"div",10)(2,"span",11),s._uU(3),s.qZA()()()}if(2&_){const g=P.$implicit,f=s.oxw();s.ekj("is-selected",g===f.activeFile),s.xp6(3),s.Oqu(g)}}let T=(()=>{class _{constructor(g,f){this.route=g,this.apiService=f}ngOnInit(){this.route.snapshot.data&&(this.files=this.route.snapshot.data.content),this.files&&this.files.length>0?(this.files.sort(),this.getFile(this.files[0]),this.activeFile=this.files[0]):this.result="<h2>No API files found.</h2>"}getFile(g){this.apiService.getComponentHtml(g).subscribe(f=>{this.result=f,this.activeFile=g,this.menu.close()},f=>{console.warn("Did not find file "+g+".\nError: "+f)})}}return _.\u0275fac=function(g){return new(g||_)(s.Y36(v.gz),s.Y36(l.S))},_.\u0275cmp=s.Xpm({type:_,selectors:[["fd-api"]],viewQuery:function(g,f){if(1&g&&s.Gf(w,5),2&g){let C;s.iGM(C=s.CRH())&&(f.menu=C.first)}},decls:9,vars:5,consts:[[1,"api-main-container"],[1,"api-main-header"],[2,"display","flex","flex-grow","1"],["fd-button","",3,"label","fdMenu","fdMenuTrigger",4,"ngIf"],["placement","bottom-start",3,"fillControlMode"],["menu",""],["fd-menu-item","",3,"is-selected","click",4,"ngFor","ngForOf"],[3,"innerHTML"],["fd-button","",3,"label","fdMenu","fdMenuTrigger"],["fd-menu-item","",3,"click"],["fd-menu-interactive",""],["fd-menu-title",""]],template:function(g,f){1&g&&(s.TgZ(0,"div",0)(1,"h2",1),s._uU(2),s.qZA(),s._UZ(3,"span",2),s.YNc(4,S,1,3,"button",3),s.TgZ(5,"fd-menu",4,5),s.YNc(7,F,4,3,"li",6),s.qZA()(),s._UZ(8,"div",7)),2&g&&(s.xp6(2),s.Oqu(f.activeFile),s.xp6(2),s.Q6J("ngIf",f.files.length>1),s.xp6(1),s.Q6J("fillControlMode",null),s.xp6(2),s.Q6J("ngForOf",f.files),s.xp6(1),s.Q6J("innerHTML",f.result,s.oJD))},directives:[u.O5,A.r,m.k,b.M,u.sg,I.qv,e.K,E.h],styles:[".api-main-header[_ngcontent-%COMP%]{margin:0;font-weight:700;text-rendering:optimizeLegibility}.api-main-container[_ngcontent-%COMP%]{margin-top:2em;display:flex;align-items:center;justify-content:flex-start;flex-wrap:wrap}fd-popover[_ngcontent-%COMP%]     .fd-button{margin-right:0}"]}),_})()},63710:(N,D,t)=>{t.d(D,{c:()=>I});var l=t(5e3),h=t(17791),s=t(66997),v=t(8674),u=t(1726),A=t(55124),m=t(33089);const b=function(){return{exact:!0}};let I=(()=>{class e{}return e.\u0275fac=function(w){return new(w||e)},e.\u0275cmp=l.Xpm({type:e,selectors:[["fd-header-tabs"]],decls:12,vars:4,consts:[["fd-tab-nav",""],["fd-tab-item",""],["fd-tab-link","","routerLink","./","routerLinkActive","",3,"active","routerLinkActiveOptions"],["rla1","routerLinkActive"],["fd-tab-tag",""],["fd-tab-link","","routerLink","./api","routerLinkActive","",3,"active"],["rla2","routerLinkActive"],[2,"margin-top","0"]],template:function(w,S){if(1&w&&(l.TgZ(0,"ul",0)(1,"li",1)(2,"a",2,3)(4,"span",4),l._uU(5,"Examples"),l.qZA()()(),l.TgZ(6,"li",1)(7,"a",5,6)(9,"span",4),l._uU(10,"API"),l.qZA()()()(),l._UZ(11,"separator",7)),2&w){const F=l.MAs(3),T=l.MAs(8);l.xp6(2),l.Q6J("active",F.isActive)("routerLinkActiveOptions",l.DdM(3,b)),l.xp6(5),l.Q6J("active",T.isActive)}},directives:[h.d,s.w,v.yS,u.w,v.Od,A.P6,m.N],styles:["[_nghost-%COMP%]{display:block}.fd-tabs[_ngcontent-%COMP%]{margin-bottom:0;margin-top:24px;box-shadow:none}.fd-tabs__item[_ngcontent-%COMP%]{padding:0;margin-right:24px}.fd-tabs__link[_ngcontent-%COMP%]{min-width:60px;padding-right:12px;padding-left:12px;text-align:center}"]}),e})()},24882:(N,D,t)=>{t.d(D,{G:()=>s});var l=t(5e3);const h=["*"];let s=(()=>{class v{}return v.\u0275fac=function(A){return new(A||v)},v.\u0275cmp=l.Xpm({type:v,selectors:[["header"]],ngContentSelectors:h,decls:2,vars:0,consts:[[1,"header"]],template:function(A,m){1&A&&(l.F$t(),l.TgZ(0,"h1",0),l.Hsn(1),l.qZA())},styles:[".header[_ngcontent-%COMP%]{color:var(--sapPageHeader_TextColor);margin-top:2rem;font-size:2.2rem}"]}),v})()},98791:(N,D,t)=>{t.d(D,{k:()=>v});var l=t(59148),h=t(5e3),s=t(8566);let v=(()=>{class u{constructor(m){this.currentLib=m}get file(){return{code:`import { ${this.module} } from '${this.library}';`,language:"ts"}}ngOnInit(){const m=["@fundamental-ngx",this.currentLib];this.subPackage&&m.push(this.subPackage),this.library=m.join("/")}}return u.\u0275fac=function(m){return new(m||u)(h.Y36(l.b))},u.\u0275cmp=h.Xpm({type:u,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:1,vars:1,consts:[[3,"file"]],template:function(m,b){1&m&&h._UZ(0,"fd-code-snippet",0),2&m&&h.Q6J("file",b.file)},directives:[s.N],encapsulation:2,changeDetection:0}),u})()},74042:(N,D,t)=>{t.d(D,{S:()=>v});var l=t(59148),h=t(5e3),s=t(40520);let v=(()=>{class u{constructor(m,b){this.httpClient=m,this.currentLib=b,this.BASE_URL="assets/typedoc/"}getComponentHtml(m){m=m.toLocaleLowerCase()+".html";const b=this.buildUrl(this.BASE_URL,this.currentLib||"core","classes",m);return this.httpClient.get(b,{responseType:"text"})}buildUrl(...m){return m.join("/").replace(/\/+/g,"/")}}return u.\u0275fac=function(m){return new(m||u)(h.LFG(s.eN),h.LFG(l.b))},u.\u0275prov=h.Yz7({token:u,factory:u.\u0275fac}),u})()},28674:(N,D,t)=>{t.d(D,{g:()=>f});var l=t(69808),h=t(8674),s=t(52382),v=t(62970),u=t(53732),A=t(74042),m=t(32818),b=t(30825),I=t(90523),e=t(80848),E=t(83271),w=t(77135),S=t(89282),F=t(95037),T=t(27155),_=t(75394);const P=[T.P4,w.$9,e.Q,F.ow,b.hJ,S.H,I.nY,E.LO,_.s];var g=t(5e3);let f=(()=>{class C{}return C.\u0275fac=function(x){return new(x||C)},C.\u0275mod=g.oAB({type:C}),C.\u0275inj=g.cJS({providers:[u.t,A.S],imports:[[s.u5,l.ez,h.Bz,m.f,P,v.JP.forChild()],s.u5,s.UX,m.f,l.ez,T.P4,w.$9,e.Q,F.ow,b.hJ,S.H,I.nY,E.LO,_.s]}),C})()},21767:(N,D,t)=>{t.r(D),t.d(D,{PlatformApprovalFlowDocsModule:()=>me});var l=t(8674),h=t(95790),s=t(85403),v=t(66841),u=t(35424),A=t(68405),m=t(36854),b=t(45665),I=t(28674),e=t(5e3),E=t(24882),w=t(87960),S=t(44969),F=t(98791),T=t(63710);let _=(()=>{class i{}return i.\u0275fac=function(a){return new(a||i)},i.\u0275cmp=e.Xpm({type:i,selectors:[["fd-approval-flow-header"]],decls:17,vars:0,consts:[["label","SAP Ariba Component","title","SAP Ariba Component","color","8"],["module","PlatformApprovalFlowModule","subPackage","approval-flow"]],template:function(a,n){1&a&&(e.TgZ(0,"header"),e._uU(1,"Approval Flow"),e.qZA(),e._UZ(2,"fd-info-label",0),e.TgZ(3,"description"),e._uU(4," The Approval Flow component is a complex component which tracks and manages the approval process for a business object. From the Approval Flow component a user is able to: "),e.TgZ(5,"ul")(6,"li"),e._uU(7,"See the progress of the approval process"),e.qZA(),e.TgZ(8,"li"),e._uU(9,"Add, edit, move (drag and drop) and delete approvers"),e.qZA(),e.TgZ(10,"li"),e._uU(11,"Add and remove watchers"),e.qZA(),e.TgZ(12,"li"),e._uU(13,"Send reminder notifications to approvers"),e.qZA()()(),e._UZ(14,"import",1)(15,"fd-header-tabs")(16,"router-outlet"))},directives:[E.G,w.e,S.w,F.k,T.c,l.lC],styles:[""]}),i})();var P=t(28412),g=t(99638),f=t(93943),C=t(28595),Z=t(50727),x=t(39646),R=t(91005),O=t(65059),y=t(46698),k=t(37701),L=t(69808),U=t(52382),Q=t(62828),W=t(98407);const G=["reminderTemplate"];function H(i,c){if(1&i&&(e.TgZ(0,"p",27)(1,"span"),e._uU(2,"Mobile"),e.qZA(),e.TgZ(3,"a",28),e._uU(4),e.qZA()()),2&i){const a=e.oxw().data;e.xp6(3),e.Q6J("href","tel:"+a.phone,e.LSH),e.xp6(1),e.Oqu(a.phone)}}function K(i,c){if(1&i&&(e.TgZ(0,"p",27)(1,"span"),e._uU(2,"Phone"),e.qZA(),e.TgZ(3,"a",28),e._uU(4),e.qZA()()),2&i){const a=e.oxw().data;e.xp6(3),e.Q6J("href","tel:"+a.phone,e.LSH),e.xp6(1),e.Oqu(a.phone)}}function $(i,c){if(1&i&&(e.TgZ(0,"p",27)(1,"span"),e._uU(2,"E-mail"),e.qZA(),e.TgZ(3,"a",28),e._uU(4),e.qZA()()),2&i){const a=e.oxw().data;e.xp6(3),e.Q6J("href","mailto:"+a.email,e.LSH),e.xp6(1),e.Oqu(a.email)}}function Y(i,c){if(1&i&&(e.TgZ(0,"h4",24),e._uU(1,"Contact info"),e.qZA(),e.YNc(2,H,5,2,"p",25),e.YNc(3,K,5,2,"p",25),e.YNc(4,$,5,2,"p",25),e.TgZ(5,"h4",26),e._uU(6,"Company"),e.qZA(),e.TgZ(7,"p",27)(8,"span"),e._uU(9,"Name"),e.qZA(),e.TgZ(10,"span"),e._uU(11),e.qZA()(),e.TgZ(12,"p",27)(13,"span"),e._uU(14,"Address"),e.qZA(),e.TgZ(15,"span"),e._uU(16,"481 West Street, Anytown OH, 83749, USA"),e.qZA()()),2&i){const a=c.data;e.xp6(2),e.Q6J("ngIf",null==a?null:a.phone),e.xp6(1),e.Q6J("ngIf",null==a?null:a.phone),e.xp6(1),e.Q6J("ngIf",null==a?null:a.email),e.xp6(7),e.hij("Company A",null==a?null:a.email,"")}}function z(i,c){if(1&i&&(e.ynx(0),e._uU(1),e.BQk()),2&i){const a=e.oxw().$implicit;e.xp6(1),e.hij(" Reminder has been sent to ",a.data.targets[0].name," ")}}function X(i,c){if(1&i&&e._uU(0),2&i){const a=e.oxw().$implicit;e.AsE(" Reminder has been sent to ",a.data.targets.length," members of ",a.data.node.description," ")}}function V(i,c){if(1&i&&(e.YNc(0,z,2,1,"ng-container",29),e.YNc(1,X,1,2,"ng-template",null,30,e.W1O)),2&i){const a=c.$implicit,n=e.MAs(2);e.Q6J("ngIf",1===a.data.targets.length)("ngIfElse",n)}}function q(i,c){if(1&i&&(e.TgZ(0,"option",31),e._uU(1),e.ALo(2,"titlecase"),e.qZA()),2&i){const a=c.$implicit;e.Q6J("value",a),e.xp6(1),e.Oqu(e.lcZ(2,2,a))}}let ee=(()=>{class i{constructor(a){this._messageToastService=a,this.graphs=se(),this.examples=["empty","simple","medium","complex"],this.selectedExample="complex",this.approvalProcess=this.graphs[this.selectedExample],this.userDataSource=new O._1(new j),this.watcherDataSource=new O._1(new j),this.teamDataSource=new O.L8(new re),this.checkDueDate=!1,this.setNotStartedStatuses=!1,this.editModeEnabled=!0,this.nodeActionsDisabled=!1,this.nodeActionsConfig={disableAddBefore:!1,disableAddAfter:!1,disableAddParallel:!1,disableEdit:!1,disableRemove:!1},this.nodeActionsConfigForNewNodes={disableAddBefore:!1,disableAddAfter:!1,disableAddParallel:!1},this.allStatuses=["in progress","not started","approved","rejected"],this.sendReminderStatuses=["in progress","not started"],this.disableSaveButton=!1,this.disableExitButton=!1,this._subscriptions=new Z.w0,this.newNodes=new Map}ngOnDestroy(){this._subscriptions.unsubscribe()}valueChanged(a){console.log("valueChanged",a)}sendReminders(a){this._messageToastService.open(this._reminderTemplate,{data:{targets:a.users,node:a.node},duration:5e3})}changeExampleData(){this.approvalProcess=(0,y.Z)(this.graphs[this.selectedExample])}toggleNodeActions(a){const d=(0,y.Z)(this._approvalFlow.approvalProcess);d.nodes.forEach(o=>{o.disableActions=a}),this.approvalProcess=d}toggleSpecificNodeAction(a,n){const o=(0,y.Z)(this._approvalFlow.approvalProcess);o.nodes.forEach(M=>{M.actionsConfig=Object.assign(Object.assign({},M.actionsConfig),{[a]:n})}),this.approvalProcess=o}newNodeSettingsChange(){this._approvalFlow.approvalProcess.nodes.forEach(n=>{if(this.newNodes.has(n.id)){const d=this._approvalFlow.getNodeMetadataByNodeId(n.id);d.canAddNodeAfter=!this.nodeActionsConfigForNewNodes.disableAddAfter,d.canAddNodeBefore=!this.nodeActionsConfigForNewNodes.disableAddBefore,d.canAddParallel=!this.nodeActionsConfigForNewNodes.disableAddParallel}})}nodeClick(a){console.log("Node click handler",a)}afterNodeAdd(a){console.log("After node add handler",a),this.newNodes.set(a.id,a),this.newNodeSettingsChange()}afterNodeEdit(a){console.log("After node edit handler",a),this.newNodeSettingsChange()}setNotStarted(){const a=this._approvalFlow.approvalProcess,n=new Map(this.graphs[this.selectedExample].nodes.map(o=>[o.id,o])),d=(0,y.Z)(a);d.nodes=d.nodes.map(o=>{const M=this.setNotStartedStatuses||!n.has(o.id)?"not started":n.get(o.id).status;return Object.assign(Object.assign({},o),{status:M})}),this.approvalProcess=d}}return i.\u0275fac=function(a){return new(a||i)(e.Y36(A.H2))},i.\u0275cmp=e.Xpm({type:i,selectors:[["fdp-platform-approval-flow-example"]],viewQuery:function(a,n){if(1&a&&(e.Gf(u.KF,5),e.Gf(G,5)),2&a){let d;e.iGM(d=e.CRH())&&(n._approvalFlow=d.first),e.iGM(d=e.CRH())&&(n._reminderTemplate=d.first)}},decls:68,vars:37,consts:[["title","Basic Approval Flow Demo",3,"value","userDetailsTemplate","userDataSource","watcherDataSource","teamDataSource","checkDueDate","allowSendRemindersForStatuses","isEditAvailable","disableSaveButton","disableExitButton","nodeClick","afterNodeAdd","afterNodeEdit","valueChange","sendReminders"],["userDetailsTemplate",""],["reminderTemplate",""],[3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["type","checkbox",3,"ngModel","ngModelChange"],["id","disableAddingNodeBefore","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeBefore"],["id","disableAddingNodeAfter","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeAfter"],["id","disableAddingNodeParallel","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeParallel"],["id","disableEditingNode","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableEditingNode"],["id","disableRemovingNode","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableRemovingNode"],[2,"display","flex","align-items","center","flex-wrap","wrap"],[2,"margin-left","0.5rem",3,"compact","dropdownValues","ngModel","ngModelChange"],["id","disableAddingNodeBeforeForNewNodes","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeBeforeForNewNodes"],["id","disableAddingNodeAfterForNewNodes","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeAfterForNewNodes"],["id","disableAddingNodeParallelForNewNodes","type","checkbox",3,"disabled","ngModel","ngModelChange"],["for","disableAddingNodeParallelForNewNodes"],[2,"margin-bottom","1rem"],["style","display: flex; flex-direction: column",4,"ngIf"],[2,"margin-top","1.5rem","margin-bottom","1rem"],[2,"display","flex","flex-direction","column"],[3,"href"],[4,"ngIf","ngIfElse"],["multipleReceivers",""],[3,"value"]],template:function(a,n){if(1&a&&(e.TgZ(0,"fdp-approval-flow",0),e.NdJ("nodeClick",function(o){return n.nodeClick(o)})("afterNodeAdd",function(o){return n.afterNodeAdd(o)})("afterNodeEdit",function(o){return n.afterNodeEdit(o)})("valueChange",function(o){return n.valueChanged(o)})("sendReminders",function(o){return n.sendReminders(o)}),e.qZA(),e.YNc(1,Y,17,4,"ng-template",null,1,e.W1O),e.YNc(3,V,3,2,"ng-template",null,2,e.W1O),e.TgZ(5,"p"),e._uU(6," Selected example: "),e.TgZ(7,"select",3),e.NdJ("ngModelChange",function(o){return n.selectedExample=o})("ngModelChange",function(){return n.changeExampleData()}),e.YNc(8,q,3,4,"option",4),e.qZA()(),e.TgZ(9,"p"),e._uU(10,'Enable "Edit mode": '),e.TgZ(11,"input",5),e.NdJ("ngModelChange",function(o){return n.editModeEnabled=o}),e.qZA()(),e.TgZ(12,"p"),e._uU(13,"Enable due date warnings: "),e.TgZ(14,"input",5),e.NdJ("ngModelChange",function(o){return n.checkDueDate=o}),e.qZA()(),e.TgZ(15,"p"),e._uU(16,' Set all statuses to "Not Started": '),e.TgZ(17,"input",5),e.NdJ("ngModelChange",function(o){return n.setNotStartedStatuses=o})("ngModelChange",function(){return n.setNotStarted()}),e.qZA()(),e.TgZ(18,"p"),e._uU(19," Disable all node actions: "),e.TgZ(20,"input",5),e.NdJ("ngModelChange",function(o){return n.nodeActionsDisabled=o})("ngModelChange",function(o){return n.toggleNodeActions(o)}),e.qZA()(),e.TgZ(21,"p"),e._uU(22,"Disable certain node actions:"),e.qZA(),e.TgZ(23,"div")(24,"p")(25,"input",6),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfig.disableAddBefore=o})("ngModelChange",function(o){return n.toggleSpecificNodeAction("disableAddBefore",o)}),e.qZA(),e.TgZ(26,"label",7),e._uU(27,"Disable adding before"),e.qZA()(),e.TgZ(28,"p")(29,"input",8),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfig.disableAddAfter=o})("ngModelChange",function(o){return n.toggleSpecificNodeAction("disableAddAfter",o)}),e.qZA(),e.TgZ(30,"label",9),e._uU(31,"Disable adding after"),e.qZA()(),e.TgZ(32,"p")(33,"input",10),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfig.disableAddParallel=o})("ngModelChange",function(o){return n.toggleSpecificNodeAction("disableAddParallel",o)}),e.qZA(),e.TgZ(34,"label",11),e._uU(35,"Disable adding parallel"),e.qZA()(),e.TgZ(36,"p")(37,"input",12),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfig.disableEdit=o})("ngModelChange",function(o){return n.toggleSpecificNodeAction("disableEdit",o)}),e.qZA(),e.TgZ(38,"label",13),e._uU(39,"Disable editing"),e.qZA()(),e.TgZ(40,"p")(41,"input",14),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfig.disableRemove=o})("ngModelChange",function(o){return n.toggleSpecificNodeAction("disableRemove",o)}),e.qZA(),e.TgZ(42,"label",15),e._uU(43,"Disable removing"),e.qZA()()(),e.TgZ(44,"p",16),e._uU(45," Allow sending reminders to approvers with statuses: "),e.TgZ(46,"fd-multi-input",17),e.NdJ("ngModelChange",function(o){return n.sendReminderStatuses=o}),e.qZA()(),e.TgZ(47,"p"),e._uU(48,"Disable certain node actions for newly added nodes:"),e.qZA(),e.TgZ(49,"div")(50,"p")(51,"input",18),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfigForNewNodes.disableAddBefore=o})("ngModelChange",function(){return n.newNodeSettingsChange()}),e.qZA(),e.TgZ(52,"label",19),e._uU(53,"Disable adding before"),e.qZA()(),e.TgZ(54,"p")(55,"input",20),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfigForNewNodes.disableAddAfter=o})("ngModelChange",function(){return n.newNodeSettingsChange()}),e.qZA(),e.TgZ(56,"label",21),e._uU(57,"Disable adding after"),e.qZA()(),e.TgZ(58,"p")(59,"input",22),e.NdJ("ngModelChange",function(o){return n.nodeActionsConfigForNewNodes.disableAddParallel=o})("ngModelChange",function(){return n.newNodeSettingsChange()}),e.qZA(),e.TgZ(60,"label",23),e._uU(61,"Disable adding parallel"),e.qZA()()(),e.TgZ(62,"p"),e._uU(63,'Disable "Save" button: '),e.TgZ(64,"input",5),e.NdJ("ngModelChange",function(o){return n.disableSaveButton=o}),e.qZA()(),e.TgZ(65,"p"),e._uU(66,'Disable "Exit" button: '),e.TgZ(67,"input",5),e.NdJ("ngModelChange",function(o){return n.disableExitButton=o}),e.qZA()()),2&a){const d=e.MAs(2);e.Q6J("value",n.approvalProcess)("userDetailsTemplate",d)("userDataSource",n.userDataSource)("watcherDataSource",n.watcherDataSource)("teamDataSource",n.teamDataSource)("checkDueDate",n.checkDueDate)("allowSendRemindersForStatuses",n.sendReminderStatuses)("isEditAvailable",n.editModeEnabled)("disableSaveButton",n.disableSaveButton)("disableExitButton",n.disableExitButton),e.xp6(7),e.Q6J("ngModel",n.selectedExample),e.xp6(1),e.Q6J("ngForOf",n.examples),e.xp6(3),e.Q6J("ngModel",n.editModeEnabled),e.xp6(3),e.Q6J("ngModel",n.checkDueDate),e.xp6(3),e.Q6J("ngModel",n.setNotStartedStatuses),e.xp6(3),e.Q6J("ngModel",n.nodeActionsDisabled),e.xp6(5),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddBefore),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddAfter),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableAddParallel),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableEdit),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfig.disableRemove),e.xp6(5),e.Q6J("compact",!0)("dropdownValues",n.allStatuses)("ngModel",n.sendReminderStatuses),e.xp6(5),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfigForNewNodes.disableAddBefore),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfigForNewNodes.disableAddAfter),e.xp6(4),e.Q6J("disabled",n.nodeActionsDisabled)("ngModel",n.nodeActionsConfigForNewNodes.disableAddParallel),e.xp6(5),e.Q6J("ngModel",n.disableSaveButton),e.xp6(3),e.Q6J("ngModel",n.disableExitButton)}},directives:[k.K,L.O5,U.EJ,U.JJ,U.On,L.sg,U.YN,U.Kr,U.Wl,Q.L,W.j],pipes:[L.rS],encapsulation:2}),i})();const J={};[{id:"uid28141",teamId:"teamId3",name:"Luis Franklin",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/men/91.jpg"},{id:"uid08141",teamId:"teamId3",name:"Renee Miles",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/11.jpg"},{id:"uid99641",teamId:"teamId3",name:"Elaine Myers",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/75.jpg"},{id:"uid38141",teamId:"teamId4",name:"Emma Cole",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/91.jpg"},{id:"uid37866",teamId:"teamId4",name:"Daniel Sullivan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/9.jpg"},{id:"uid09141",teamId:"teamId4",name:"Salvador Duncan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/14.jpg"},{id:"uid09641",teamId:"teamId4",name:"Caleb Taylor",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/17.jpg"},{id:"uid99651",teamId:"teamId4",name:"Julie Peters",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/77.jpg"},{id:"uid99655",teamId:"teamId4",name:"Fred Gibson",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/45.jpg"},{id:"uid81355",teamId:"teamId4",name:"George Carter",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/85.jpg"},{id:"uid81353",teamId:"teamId4",name:"Lillian Walker",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/25.jpg"},{id:"uid81955",teamId:"teamId2",name:"Josephine Carlson",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/women/88.jpg"},{id:"uid77135",teamId:"teamId2",name:"Tristan Sutton",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/5.jpg"},{id:"uid77115",teamId:"teamId2",name:"Alvin Stephens",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/78.jpg"},{id:"uid77111",teamId:"teamId2",name:"Logan Herrera",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/53.jpg"},{id:"uid66141",teamId:"teamId1",name:"Melissa Martin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/87.jpg"},{id:"uid66151",teamId:"teamId1",name:"Sofia Hanson",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/24.jpg"},{id:"uid66161",teamId:"teamId1",name:"Jill Fuller",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/64.jpg"},{id:"uid66171",teamId:"teamId1",name:"Ella Franklin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/55.jpg"}].forEach(i=>J[i.id]=i);const se=()=>({empty:{watchers:[r("uid66161")],nodes:[]},simple:{watchers:[r("uid66161")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[r("uid81955")],status:"approved",targets:["ID2"],dueDate:p(30),createDate:p(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[r("uid66171")],status:"in progress",targets:["ID3"],dueDate:p(10),createDate:p(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[r("uid81355")],status:"not started",targets:[],dueDate:p(10),createDate:p(-30)}]},medium:{watchers:[r("uid66151"),r("uid77115")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[r("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:p(30),createDate:p(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[r("uid66171")],status:"in progress",targets:["ID3"],dueDate:p(30),createDate:p(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[r("uid77135")],status:"approved",targets:["ID3"],dueDate:p(30),createDate:p(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[r("uid77111"),r("uid09641"),r("uid09141"),r("uid37866"),r("uid99641"),r("uid38141")],status:"not started",targets:["ID3"],dueDate:p(5),createDate:p(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[r("uid81355")],status:"not started",targets:["ID4"],dueDate:p(30),createDate:p(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[r("uid99651")],status:"not started",targets:[],dueDate:p(30),createDate:p(-30)}]},complex:{watchers:[r("uid66151"),r("uid66141"),r("uid99651"),r("uid99655")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[r("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:p(30),createDate:p(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[r("uid66171")],status:"in progress",targets:["ID3"],dueDate:p(30),createDate:p(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[r("uid28141")],status:"approved",targets:["ID220"],dueDate:p(30),createDate:p(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[r("uid77111"),r("uid09641")],status:"in progress",targets:["ID2220"],dueDate:p(3),createDate:p(-30)},{id:"ID220",name:"node name",description:"node description",approvers:[r("uid08141")],status:"rejected",targets:["ID3"],dueDate:p(30),createDate:p(-30)},{id:"ID2220",name:"node name",description:"Marketing",approvers:[r("uid81353")],status:"not started",targets:["ID3"],dueDate:p(30),createDate:p(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[r("uid81355")],status:"not started",targets:["ID4"],dueDate:p(30),createDate:p(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[r("uid99651")],status:"not started",targets:[],dueDate:p(30),createDate:p(-30)}]}});function r(i){return J[i]}function p(i){return new Date(Date.now()+864e5*i)}class j extends O.FW{fetch(c){var a;let n=[{id:"uid28141",teamId:"teamId3",name:"Luis Franklin",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/men/91.jpg"},{id:"uid08141",teamId:"teamId3",name:"Renee Miles",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/11.jpg"},{id:"uid99641",teamId:"teamId3",name:"Elaine Myers",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/75.jpg"},{id:"uid38141",teamId:"teamId4",name:"Emma Cole",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/91.jpg"},{id:"uid37866",teamId:"teamId4",name:"Daniel Sullivan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/9.jpg"},{id:"uid09141",teamId:"teamId4",name:"Salvador Duncan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/14.jpg"},{id:"uid09641",teamId:"teamId4",name:"Caleb Taylor",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/17.jpg"},{id:"uid99651",teamId:"teamId4",name:"Julie Peters",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/77.jpg"},{id:"uid99655",teamId:"teamId4",name:"Fred Gibson",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/45.jpg"},{id:"uid81355",teamId:"teamId4",name:"George Carter",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/85.jpg"},{id:"uid81353",teamId:"teamId4",name:"Lillian Walker",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/25.jpg"},{id:"uid81955",teamId:"teamId2",name:"Josephine Carlson",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/women/88.jpg"},{id:"uid77135",teamId:"teamId2",name:"Tristan Sutton",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/5.jpg"},{id:"uid77115",teamId:"teamId2",name:"Alvin Stephens",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/78.jpg"},{id:"uid77111",teamId:"teamId2",name:"Logan Herrera",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/53.jpg"},{id:"uid66141",teamId:"teamId1",name:"Melissa Martin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/87.jpg"},{id:"uid66151",teamId:"teamId1",name:"Sofia Hanson",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/24.jpg"},{id:"uid66161",teamId:"teamId1",name:"Jill Fuller",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/64.jpg"},{id:"uid66171",teamId:"teamId1",name:"Ella Franklin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/55.jpg"}];const d=null===(a=c.get("query"))||void 0===a?void 0:a.toLowerCase();return d&&(n=n.filter(o=>{var M;return null===(M=o.name)||void 0===M?void 0:M.toLowerCase().startsWith(d)})),(0,x.of)((0,y.Z)(n)).pipe((0,R.g)(500))}getOne(c){const a=c.get("id"),n=[{id:"uid28141",teamId:"teamId3",name:"Luis Franklin",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/men/91.jpg"},{id:"uid08141",teamId:"teamId3",name:"Renee Miles",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/11.jpg"},{id:"uid99641",teamId:"teamId3",name:"Elaine Myers",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/75.jpg"},{id:"uid38141",teamId:"teamId4",name:"Emma Cole",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/91.jpg"},{id:"uid37866",teamId:"teamId4",name:"Daniel Sullivan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/9.jpg"},{id:"uid09141",teamId:"teamId4",name:"Salvador Duncan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/14.jpg"},{id:"uid09641",teamId:"teamId4",name:"Caleb Taylor",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/17.jpg"},{id:"uid99651",teamId:"teamId4",name:"Julie Peters",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/77.jpg"},{id:"uid99655",teamId:"teamId4",name:"Fred Gibson",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/45.jpg"},{id:"uid81355",teamId:"teamId4",name:"George Carter",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/85.jpg"},{id:"uid81353",teamId:"teamId4",name:"Lillian Walker",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/25.jpg"},{id:"uid81955",teamId:"teamId2",name:"Josephine Carlson",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/women/88.jpg"},{id:"uid77135",teamId:"teamId2",name:"Tristan Sutton",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/5.jpg"},{id:"uid77115",teamId:"teamId2",name:"Alvin Stephens",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/78.jpg"},{id:"uid77111",teamId:"teamId2",name:"Logan Herrera",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/53.jpg"},{id:"uid66141",teamId:"teamId1",name:"Melissa Martin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/87.jpg"},{id:"uid66151",teamId:"teamId1",name:"Sofia Hanson",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/24.jpg"},{id:"uid66161",teamId:"teamId1",name:"Jill Fuller",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/64.jpg"},{id:"uid66171",teamId:"teamId1",name:"Ella Franklin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/55.jpg"}].find(d=>d.id===a);return(0,x.of)(Object.assign(Object.assign({},n),{phone:Math.random().toFixed(13).toString().replace("0.",""),email:`${n.name.toLowerCase().split(" ").join(".")}@company.com`}))}}class re extends O.FW{fetch(c){var a;let n=[{id:"teamId1",name:"Accounting team",description:"",members:["uid66171","uid66161","uid66151","uid66141"].map(i=>r(i))},{id:"teamId2",name:"Sales team",description:"",members:["uid77111","uid77115","uid77135","uid81955"].map(i=>r(i))},{id:"teamId3",name:"Legal team",description:"",members:["uid28141","uid08141","uid99641"].map(i=>r(i))},{id:"teamId4",name:"Marketing team",description:"",members:["uid38141","uid37866","uid09141","uid81353","uid81355","uid99655","uid09641","uid99651"].map(i=>r(i))}];const d=null===(a=c.get("query"))||void 0===a?void 0:a.toLowerCase();return d&&(n=n.filter(o=>{var M;return null===(M=o.name)||void 0===M?void 0:M.toLowerCase().startsWith(d)})),(0,x.of)((0,y.Z)(n)).pipe((0,R.g)(500))}}var le=t(29871);const pe=[{path:"",component:_,children:[{path:"",component:(()=>{class i{constructor(){this.basic=[{language:"html",code:P,fileName:"platform-approval-flow-example",name:"approval-flow-example.component.html"},{language:"typescript",code:g,fileName:"platform-approval-flow-example",component:"PlatformApprovalFlowExampleComponent",name:"approval-flow-example.component.ts"}]}}return i.\u0275fac=function(a){return new(a||i)},i.\u0275cmp=e.Xpm({type:i,selectors:[["app-approval-flow"]],decls:5,vars:1,consts:[["id","approval-flow","componentName","approval-flow"],[3,"exampleFiles"]],template:function(a,n){1&a&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Approval flow "),e.qZA(),e.TgZ(2,"component-example"),e._UZ(3,"fdp-platform-approval-flow-example"),e.qZA(),e._UZ(4,"code-example",1)),2&a&&(e.xp6(4),e.Q6J("exampleFiles",n.basic))},directives:[f.k,C.O,ee,le.E],encapsulation:2}),i})()},{path:"api",component:m.h,data:{content:b.X.approvalFlow}}]}];let me=(()=>{class i{}return i.\u0275fac=function(a){return new(a||i)},i.\u0275mod=e.oAB({type:i}),i.\u0275inj=e.cJS({providers:[v.qF],imports:[[l.Bz.forChild(pe),I.g,u.vU,h.Yp,s.Qj,A.GC],l.Bz]}),i})()},28412:N=>{N.exports='<fdp-approval-flow\n    title="Basic Approval Flow Demo"\n    [value]="approvalProcess"\n    [userDetailsTemplate]="userDetailsTemplate"\n    [userDataSource]="userDataSource"\n    [watcherDataSource]="watcherDataSource"\n    [teamDataSource]="teamDataSource"\n    [checkDueDate]="checkDueDate"\n    [allowSendRemindersForStatuses]="sendReminderStatuses"\n    [isEditAvailable]="editModeEnabled"\n    [disableSaveButton]="disableSaveButton"\n    [disableExitButton]="disableExitButton"\n    (nodeClick)="nodeClick($event)"\n    (afterNodeAdd)="afterNodeAdd($event)"\n    (afterNodeEdit)="afterNodeEdit($event)"\n    (valueChange)="valueChanged($event)"\n    (sendReminders)="sendReminders($event)"\n>\n</fdp-approval-flow>\n\n<ng-template #userDetailsTemplate let-data="data">\n    <h4 style="margin-bottom: 1rem">Contact info</h4>\n\n    <p style="display: flex; flex-direction: column" *ngIf="data?.phone">\n        <span>Mobile</span>\n        <a [href]="\'tel:\' + data.phone">{{ data.phone }}</a>\n    </p>\n\n    <p style="display: flex; flex-direction: column" *ngIf="data?.phone">\n        <span>Phone</span>\n        <a [href]="\'tel:\' + data.phone">{{ data.phone }}</a>\n    </p>\n\n    <p style="display: flex; flex-direction: column" *ngIf="data?.email">\n        <span>E-mail</span>\n        <a [href]="\'mailto:\' + data.email">{{ data.email }}</a>\n    </p>\n\n    <h4 style="margin-top: 1.5rem; margin-bottom: 1rem">Company</h4>\n\n    <p style="display: flex; flex-direction: column">\n        <span>Name</span>\n        <span>Company A{{ data?.email }}</span>\n    </p>\n\n    <p style="display: flex; flex-direction: column">\n        <span>Address</span>\n        <span>481 West Street, Anytown OH, 83749, USA</span>\n    </p>\n</ng-template>\n\n<ng-template let-messageToast #reminderTemplate>\n    <ng-container *ngIf="messageToast.data.targets.length === 1; else multipleReceivers">\n        Reminder has been sent to {{ messageToast.data.targets[0].name }}\n    </ng-container>\n\n    <ng-template #multipleReceivers>\n        Reminder has been sent to {{ messageToast.data.targets.length }} members of\n        {{ messageToast.data.node.description }}\n    </ng-template>\n</ng-template>\n\n\x3c!-- Playground code below, not related to the component itself --\x3e\n\n<p>\n    Selected example:\n    <select [(ngModel)]="selectedExample" (ngModelChange)="changeExampleData()">\n        <option *ngFor="let example of examples" [value]="example">{{ example | titlecase }}</option>\n    </select>\n</p>\n<p>Enable "Edit mode": <input type="checkbox" [(ngModel)]="editModeEnabled" /></p>\n<p>Enable due date warnings: <input type="checkbox" [(ngModel)]="checkDueDate" /></p>\n<p>\n    Set all statuses to "Not Started":\n    <input type="checkbox" [(ngModel)]="setNotStartedStatuses" (ngModelChange)="setNotStarted()" />\n</p>\n<p>\n    Disable all node actions:\n    <input type="checkbox" [(ngModel)]="nodeActionsDisabled" (ngModelChange)="toggleNodeActions($event)" />\n</p>\n<p>Disable certain node actions:</p>\n<div>\n    <p>\n        <input\n            id="disableAddingNodeBefore"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddBefore"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddBefore\', $event)"\n        />\n        <label for="disableAddingNodeBefore">Disable adding before</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeAfter"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddAfter"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddAfter\', $event)"\n        />\n        <label for="disableAddingNodeAfter">Disable adding after</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeParallel"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableAddParallel"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableAddParallel\', $event)"\n        />\n        <label for="disableAddingNodeParallel">Disable adding parallel</label>\n    </p>\n\n    <p>\n        <input\n            id="disableEditingNode"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableEdit"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableEdit\', $event)"\n        />\n        <label for="disableEditingNode">Disable editing</label>\n    </p>\n\n    <p>\n        <input\n            id="disableRemovingNode"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfig.disableRemove"\n            (ngModelChange)="toggleSpecificNodeAction(\'disableRemove\', $event)"\n        />\n        <label for="disableRemovingNode">Disable removing</label>\n    </p>\n</div>\n<p style="display: flex; align-items: center; flex-wrap: wrap">\n    Allow sending reminders to approvers with statuses:\n    <fd-multi-input\n        style="margin-left: 0.5rem"\n        [compact]="true"\n        [dropdownValues]="allStatuses"\n        [(ngModel)]="sendReminderStatuses"\n    ></fd-multi-input>\n</p>\n<p>Disable certain node actions for newly added nodes:</p>\n<div>\n    <p>\n        <input\n            id="disableAddingNodeBeforeForNewNodes"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfigForNewNodes.disableAddBefore"\n            (ngModelChange)="newNodeSettingsChange()"\n        />\n        <label for="disableAddingNodeBeforeForNewNodes">Disable adding before</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeAfterForNewNodes"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfigForNewNodes.disableAddAfter"\n            (ngModelChange)="newNodeSettingsChange()"\n        />\n        <label for="disableAddingNodeAfterForNewNodes">Disable adding after</label>\n    </p>\n\n    <p>\n        <input\n            id="disableAddingNodeParallelForNewNodes"\n            [disabled]="nodeActionsDisabled"\n            type="checkbox"\n            [(ngModel)]="nodeActionsConfigForNewNodes.disableAddParallel"\n            (ngModelChange)="newNodeSettingsChange()"\n        />\n        <label for="disableAddingNodeParallelForNewNodes">Disable adding parallel</label>\n    </p>\n</div>\n<p>Disable "Save" button: <input type="checkbox" [(ngModel)]="disableSaveButton" /></p>\n<p>Disable "Exit" button: <input type="checkbox" [(ngModel)]="disableExitButton" /></p>\n'},99638:N=>{N.exports="import { Component, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { Subscription, of, Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport {\n    ApprovalFlowComponent,\n    ApprovalNode,\n    ApprovalNodeActionsConfig,\n    ApprovalProcess,\n    ApprovalStatus,\n    ApprovalTeam,\n    ApprovalUser,\n    SendRemindersData\n} from '@fundamental-ngx/platform/approval-flow';\nimport {\n    DataProvider,\n    ProviderParams,\n    ApprovalFlowUserDataSource,\n    ApprovalFlowTeamDataSource\n} from '@fundamental-ngx/platform/shared';\nimport { cloneDeep } from 'lodash-es';\nimport { MessageToastService } from '@fundamental-ngx/core/message-toast';\n\n@Component({\n    selector: 'fdp-platform-approval-flow-example',\n    templateUrl: './platform-approval-flow-example.component.html'\n})\nexport class PlatformApprovalFlowExampleComponent implements OnDestroy {\n    private graphs = getGraphs();\n\n    /** @hidden */\n    @ViewChild(ApprovalFlowComponent)\n    _approvalFlow: ApprovalFlowComponent;\n\n    @ViewChild('reminderTemplate') _reminderTemplate: TemplateRef<any>;\n\n    examples: GraphTypes[] = ['empty', 'simple', 'medium', 'complex'];\n    selectedExample: GraphTypes = 'complex';\n    approvalProcess: ApprovalProcess = this.graphs[this.selectedExample];\n\n    userDataSource = new ApprovalFlowUserDataSource(new UserDataProvider());\n    watcherDataSource = new ApprovalFlowUserDataSource(new UserDataProvider());\n    teamDataSource = new ApprovalFlowTeamDataSource(new TeamDataProvider());\n\n    checkDueDate = false;\n    setNotStartedStatuses = false;\n    editModeEnabled = true;\n    nodeActionsDisabled = false;\n    nodeActionsConfig: ApprovalNodeActionsConfig = {\n        disableAddBefore: false,\n        disableAddAfter: false,\n        disableAddParallel: false,\n        disableEdit: false,\n        disableRemove: false\n    };\n    nodeActionsConfigForNewNodes: ApprovalNodeActionsConfig = {\n        disableAddBefore: false,\n        disableAddAfter: false,\n        disableAddParallel: false\n    };\n    allStatuses = ['in progress', 'not started', 'approved', 'rejected'];\n    sendReminderStatuses: ApprovalStatus[] = ['in progress', 'not started'];\n\n    /** @hidden */\n    disableSaveButton = false;\n\n    /** @hidden */\n    disableExitButton = false;\n\n    private _subscriptions = new Subscription();\n\n    /** @hidden */\n    private newNodes = new Map<ApprovalNode['id'], ApprovalNode>();\n\n    constructor(private readonly _messageToastService: MessageToastService) {}\n\n    ngOnDestroy(): void {\n        this._subscriptions.unsubscribe();\n    }\n\n    valueChanged(updatedApprovalProcess: ApprovalProcess): void {\n        console.log('valueChanged', updatedApprovalProcess);\n    }\n\n    sendReminders(data: SendRemindersData): void {\n        this._messageToastService.open(this._reminderTemplate, {\n            data: {\n                targets: data.users,\n                node: data.node\n            },\n            duration: 5000\n        });\n    }\n\n    changeExampleData(): void {\n        this.approvalProcess = cloneDeep(this.graphs[this.selectedExample]);\n    }\n\n    toggleNodeActions(state: boolean): void {\n        const approvalProcess = this._approvalFlow.approvalProcess;\n        const updatedState = cloneDeep(approvalProcess);\n        updatedState.nodes.forEach((node) => {\n            node.disableActions = state;\n        });\n        this.approvalProcess = updatedState;\n    }\n\n    toggleSpecificNodeAction(field: keyof ApprovalNodeActionsConfig, state: boolean): void {\n        const approvalProcess = this._approvalFlow.approvalProcess;\n        const updatedState = cloneDeep(approvalProcess);\n        updatedState.nodes.forEach((node) => {\n            node.actionsConfig = {\n                ...node.actionsConfig,\n                [field]: state\n            };\n        });\n        this.approvalProcess = updatedState;\n    }\n\n    newNodeSettingsChange(): void {\n        const approvalProcess = this._approvalFlow.approvalProcess;\n\n        approvalProcess.nodes.forEach((node) => {\n            if (this.newNodes.has(node.id)) {\n                const meta = this._approvalFlow.getNodeMetadataByNodeId(node.id);\n\n                meta.canAddNodeAfter = !this.nodeActionsConfigForNewNodes.disableAddAfter;\n                meta.canAddNodeBefore = !this.nodeActionsConfigForNewNodes.disableAddBefore;\n                meta.canAddParallel = !this.nodeActionsConfigForNewNodes.disableAddParallel;\n            }\n        });\n    }\n\n    nodeClick(node: ApprovalNode): void {\n        console.log('Node click handler', node);\n    }\n\n    /** Event listener for afterNodeAdd event */\n    afterNodeAdd(node: ApprovalNode): void {\n        console.log('After node add handler', node);\n        this.newNodes.set(node.id, node);\n\n        this.newNodeSettingsChange();\n    }\n\n    /** Event listener for afterNodeEdit event */\n    afterNodeEdit(node: ApprovalNode): void {\n        console.log('After node edit handler', node);\n        this.newNodeSettingsChange();\n    }\n\n    setNotStarted(): void {\n        const approvalProcess = this._approvalFlow.approvalProcess;\n        const initialNodeMap = new Map(\n            (this.graphs[this.selectedExample] as ApprovalProcess).nodes.map((n) => [n.id, n])\n        );\n        const updatedState = cloneDeep(approvalProcess);\n        updatedState.nodes = updatedState.nodes.map((n) => {\n            const status =\n                this.setNotStartedStatuses || !initialNodeMap.has(n.id)\n                    ? 'not started'\n                    : (initialNodeMap.get(n.id) as ApprovalNode).status;\n            return {\n                ...n,\n                status\n            };\n        });\n\n        this.approvalProcess = updatedState;\n    }\n}\n\n/** For all code below\n * TODO #5351: Split into separate file after \"pure\" files will be allowed by the StackBlitz service\n */\n\nconst DAY_IN_MILLISECONDS = 1000 * 60 * 60 * 24;\n\nconst users: () => ApprovalUser[] = () => [\n    {\n        id: 'uid28141',\n        teamId: 'teamId3',\n        name: 'Luis Franklin',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/91.jpg'\n    },\n    {\n        id: 'uid08141',\n        teamId: 'teamId3',\n        name: 'Renee Miles',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/11.jpg'\n    },\n    {\n        id: 'uid99641',\n        teamId: 'teamId3',\n        name: 'Elaine Myers',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/75.jpg'\n    },\n    {\n        id: 'uid38141',\n        teamId: 'teamId4',\n        name: 'Emma Cole',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/91.jpg'\n    },\n    {\n        id: 'uid37866',\n        teamId: 'teamId4',\n        name: 'Daniel Sullivan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/9.jpg'\n    },\n    {\n        id: 'uid09141',\n        teamId: 'teamId4',\n        name: 'Salvador Duncan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/14.jpg'\n    },\n    {\n        id: 'uid09641',\n        teamId: 'teamId4',\n        name: 'Caleb Taylor',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/17.jpg'\n    },\n    {\n        id: 'uid99651',\n        teamId: 'teamId4',\n        name: 'Julie Peters',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/77.jpg'\n    },\n    {\n        id: 'uid99655',\n        teamId: 'teamId4',\n        name: 'Fred Gibson',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/45.jpg'\n    },\n    {\n        id: 'uid81355',\n        teamId: 'teamId4',\n        name: 'George Carter',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/85.jpg'\n    },\n    {\n        id: 'uid81353',\n        teamId: 'teamId4',\n        name: 'Lillian Walker',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/25.jpg'\n    },\n    {\n        id: 'uid81955',\n        teamId: 'teamId2',\n        name: 'Josephine Carlson',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/88.jpg'\n    },\n    {\n        id: 'uid77135',\n        teamId: 'teamId2',\n        name: 'Tristan Sutton',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/5.jpg'\n    },\n    {\n        id: 'uid77115',\n        teamId: 'teamId2',\n        name: 'Alvin Stephens',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/78.jpg'\n    },\n    {\n        id: 'uid77111',\n        teamId: 'teamId2',\n        name: 'Logan Herrera',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/53.jpg'\n    },\n    {\n        id: 'uid66141',\n        teamId: 'teamId1',\n        name: 'Melissa Martin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/87.jpg'\n    },\n    {\n        id: 'uid66151',\n        teamId: 'teamId1',\n        name: 'Sofia Hanson',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/24.jpg'\n    },\n    {\n        id: 'uid66161',\n        teamId: 'teamId1',\n        name: 'Jill Fuller',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/64.jpg'\n    },\n    {\n        id: 'uid66171',\n        teamId: 'teamId1',\n        name: 'Ella Franklin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/55.jpg'\n    }\n];\n\nconst usersMap = {};\nusers().forEach((u) => (usersMap[u.id] = u));\n\nconst teams: () => ApprovalTeam[] = () => [\n    {\n        id: 'teamId1',\n        name: 'Accounting team',\n        description: '',\n        members: ['uid66171', 'uid66161', 'uid66151', 'uid66141'].map((id) => getUser(id))\n    },\n    {\n        id: 'teamId2',\n        name: 'Sales team',\n        description: '',\n        members: ['uid77111', 'uid77115', 'uid77135', 'uid81955'].map((id) => getUser(id))\n    },\n    {\n        id: 'teamId3',\n        name: 'Legal team',\n        description: '',\n        members: ['uid28141', 'uid08141', 'uid99641'].map((id) => getUser(id))\n    },\n    {\n        id: 'teamId4',\n        name: 'Marketing team',\n        description: '',\n        members: ['uid38141', 'uid37866', 'uid09141', 'uid81353', 'uid81355', 'uid99655', 'uid09641', 'uid99651'].map(\n            (id) => getUser(id)\n        )\n    }\n];\n\nconst emptyGraph: () => ApprovalProcess = () => ({\n    watchers: [getUser('uid66161')],\n    nodes: []\n});\n\nconst simpleGraph: () => ApprovalProcess = () => ({\n    watchers: [getUser('uid66161')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        }\n    ]\n});\n\nconst mediumGraph: () => ApprovalProcess = () => ({\n    watchers: [getUser('uid66151'), getUser('uid77115')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid77135')],\n            status: 'approved',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [\n                getUser('uid77111'),\n                getUser('uid09641'),\n                getUser('uid09141'),\n                getUser('uid37866'),\n                getUser('uid99641'),\n                getUser('uid38141')\n            ],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(5),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n});\n\nconst complexGraph: () => ApprovalProcess = () => ({\n    watchers: [getUser('uid66151'), getUser('uid66141'), getUser('uid99651'), getUser('uid99655')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid28141')],\n            status: 'approved',\n            targets: ['ID220'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [getUser('uid77111'), getUser('uid09641')],\n            status: 'in progress',\n            targets: ['ID2220'],\n            dueDate: daysFromNow(3),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID220',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid08141')],\n            status: 'rejected',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2220',\n            name: 'node name',\n            description: 'Marketing',\n            approvers: [getUser('uid81353')],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n});\n\nconst getGraphs: () => Record<GraphTypes, ApprovalProcess> = () => ({\n    empty: emptyGraph(),\n    simple: simpleGraph(),\n    medium: mediumGraph(),\n    complex: complexGraph()\n});\n\nfunction getUser(id: string): ApprovalUser {\n    return usersMap[id];\n}\n\nfunction daysFromNow(days: number): Date {\n    return new Date(Date.now() + DAY_IN_MILLISECONDS * days);\n}\n\ntype GraphTypes = 'empty' | 'simple' | 'medium' | 'complex';\n\nclass UserDataProvider extends DataProvider<ApprovalUser> {\n    fetch(params: ProviderParams): Observable<ApprovalUser[]> {\n        let result = users();\n        const query = params.get('query')?.toLowerCase();\n        if (query) {\n            result = result.filter((u) => u.name?.toLowerCase().startsWith(query));\n        }\n        return of(cloneDeep(result)).pipe(delay(500));\n    }\n\n    getOne(params: ProviderParams): Observable<ApprovalUser & { phone: string; email: string }> {\n        const id = params.get('id');\n        const found = users().find((user) => user.id === id) as ApprovalUser;\n        return of({\n            ...found,\n            phone: Math.random().toFixed(13).toString().replace('0.', ''),\n            email: `${found.name.toLowerCase().split(' ').join('.')}@company.com`\n        });\n    }\n}\n\nclass TeamDataProvider extends DataProvider<ApprovalTeam> {\n    fetch(params: ProviderParams): Observable<ApprovalTeam[]> {\n        let result = teams();\n        const query = params.get('query')?.toLowerCase();\n        if (query) {\n            result = result.filter((u) => u.name?.toLowerCase().startsWith(query));\n        }\n        return of(cloneDeep(result)).pipe(delay(500));\n    }\n}\n"}}]);