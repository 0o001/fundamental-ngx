"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5277],{45277:(r,p,e)=>{e.r(p),e.d(p,{ContentDensityDocsModule:()=>b});var o=e(8674),d=e(36854),a=e(86487),n=e(5e3),c=e(24882),m=e(98791),y=e(63710);let C=(()=>{class t{}return t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=n.Xpm({type:t,selectors:[["fd-content-density-header"]],decls:5,vars:0,consts:[["module","ContentDensityService","subPackage","utils"]],template:function(s,l){1&s&&(n.TgZ(0,"header"),n._uU(1,"Content Density"),n.qZA(),n._UZ(2,"import",0)(3,"fd-header-tabs")(4,"router-outlet"))},directives:[c.G,m.k,y.c,o.lC],encapsulation:2}),t})();var h=e(69785),g=e(44969),D=e(28595),v=e(97045),f=e(71338),u=e(52382),Z=e(40881),U=e(87757);let x=(()=>{class t{constructor(s){this._contentDensityService=s}ngOnInit(){this.selectedDensity=this._contentDensityService.contentDensity.value}onChange(){this._contentDensityService.contentDensity.next(this.selectedDensity)}}return t.\u0275fac=function(s){return new(s||t)(n.Y36(v.PG))},t.\u0275cmp=n.Xpm({type:t,selectors:[["fd-content-density-example"]],decls:10,vars:1,consts:[[2,"display","flex"],[2,"margin-right","8px",3,"ngModel","ngModelChange"],["value","cozy"],["value","condensed"],["value","compact"],["fd-button",""]],template:function(s,l){1&s&&(n.TgZ(0,"div",0)(1,"fd-select",1),n.NdJ("ngModelChange",function(O){return l.selectedDensity=O})("ngModelChange",function(){return l.onChange()}),n.TgZ(2,"fd-option",2),n._uU(3,"Cozy"),n.qZA(),n.TgZ(4,"fd-option",3),n._uU(5,"Condensed"),n.qZA(),n.TgZ(6,"fd-option",4),n._uU(7,"Compact"),n.qZA()(),n.TgZ(8,"button",5),n._uU(9,'My size changes when "Compact" or "Condensed" is selected'),n.qZA()()),2&s&&(n.xp6(1),n.Q6J("ngModel",l.selectedDensity))},directives:[f.Hr,u.JJ,u.On,Z.x,U.r],encapsulation:2}),t})();var T=e(29871),A=e(33089);let E=(()=>{class t{constructor(){this.contentDensityExample=[{language:"typescript",code:h,fileName:"content-density-example",component:"ContentDensityExampleComponent"}]}}return t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=n.Xpm({type:t,selectors:[["app-content-density-docs"]],decls:37,vars:1,consts:[[3,"exampleFiles"]],template:function(s,l){1&s&&(n.TgZ(0,"description"),n._uU(1," Content Density can be maintained app-wide using the "),n.TgZ(2,"code"),n._uU(3,"ContentDensityService"),n.qZA(),n._uU(4,", and components can subscribe to a "),n.TgZ(5,"code"),n._uU(6,"BehaviorSubject"),n.qZA(),n._uU(7," managed by the service and use that to handle changes to the content density. Before using it, you should add "),n.TgZ(8,"code"),n._uU(9,"ContentDensityService"),n.qZA(),n._uU(10," to providers array to "),n.TgZ(11,"code"),n._uU(12,"AppModule"),n.qZA(),n._uU(13,", or other root module in your application. "),n._UZ(14,"br"),n._uU(15," Note that many components only come in one size, and others (such as the button below) only have "),n.TgZ(16,"code"),n._uU(17,"compact"),n.qZA(),n._uU(18," and "),n.TgZ(19,"code"),n._uU(20,"cozy"),n.qZA(),n._uU(21," sizes, so setting the size to "),n.TgZ(22,"code"),n._uU(23,"condensed"),n.qZA(),n._uU(24," will have same effect as compact. "),n._UZ(25,"br"),n._uU(26," All components that have content density options will first check to see if the developer has provided a "),n.TgZ(27,"code"),n._uU(28,"compact"),n.qZA(),n._uU(29," input value, and if not, it will then refer to the value set in the "),n.TgZ(30,"code"),n._uU(31,"ContentDensityService"),n.qZA(),n._uU(32,".\n"),n.qZA(),n.TgZ(33,"component-example"),n._UZ(34,"fd-content-density-example"),n.qZA(),n._UZ(35,"code-example",0)(36,"separator")),2&s&&(n.xp6(35),n.Q6J("exampleFiles",l.contentDensityExample))},directives:[g.w,D.O,x,T.E,A.N],encapsulation:2}),t})();var M=e(28674),S=e(36445);const I=[{path:"",component:C,children:[{path:"",component:E},{path:"api",component:d.h,data:{content:a.X.contentDensity}}]}];let b=(()=>{class t{}return t.\u0275fac=function(s){return new(s||t)},t.\u0275mod=n.oAB({type:t}),t.\u0275inj=n.cJS({imports:[[o.Bz.forChild(I),M.g,S.An],o.Bz]}),t})()},98791:(r,p,e)=>{e.d(p,{k:()=>d});var o=e(5e3);let d=(()=>{class a{constructor(c){this.currentLib=c}ngOnInit(){const c=["@fundamental-ngx",this.currentLib];this.subPackage&&c.push(this.subPackage),this.library=c.join("/")}}return a.\u0275fac=function(c){return new(c||a)(o.Y36("CURRENT_LIB"))},a.\u0275cmp=o.Xpm({type:a,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:9,vars:2,consts:[[2,"color","rgb(0, 0, 136)"],[2,"color","rgb(0, 136, 0)"]],template:function(c,m){1&c&&(o.TgZ(0,"code")(1,"span",0),o._uU(2,"import"),o.qZA(),o._uU(3),o.TgZ(4,"span",0),o._uU(5,"from "),o.qZA(),o.TgZ(6,"span",1),o._uU(7),o.qZA(),o._uU(8,"; "),o.qZA()),2&c&&(o.xp6(3),o.hij(" { ",m.module," } "),o.xp6(4),o.hij("'",m.library,"'"))},encapsulation:2}),a})()},69785:r=>{r.exports="import { Component, OnInit } from '@angular/core';\nimport { ContentDensity, ContentDensityService } from '@fundamental-ngx/core/utils';\n\n@Component({\n    selector: 'fd-content-density-example',\n    templateUrl: './content-density-example.component.html'\n})\nexport class ContentDensityExampleComponent implements OnInit {\n    selectedDensity: ContentDensity;\n\n    constructor(private _contentDensityService: ContentDensityService) {}\n\n    ngOnInit(): void {\n        this.selectedDensity = this._contentDensityService.contentDensity.value;\n    }\n\n    onChange(): void {\n        this._contentDensityService.contentDensity.next(this.selectedDensity);\n    }\n}\n"}}]);