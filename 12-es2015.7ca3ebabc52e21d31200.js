(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{JWtj:function(e,a,n){"use strict";n.r(a),n.d(a,"AvatarGroupDocsModule",function(){return sa});var t={};n.r(t),n.d(t,"default",function(){return f});var r={};n.r(r),n.d(r,"default",function(){return v});var i={};n.r(i),n.d(i,"default",function(){return u});var o={};n.r(o),n.d(o,"default",function(){return m});var l={};n.r(l),n.d(l,"default",function(){return b});var s=n("tyNb"),p=n("jzzn"),c=n("PzQJ"),d=n("t9W5"),f="import { Component, ViewChild } from '@angular/core';\nimport { ENTER, ESCAPE, SPACE, TAB } from '@angular/cdk/keycodes';\n\nimport { AvatarGroupComponent } from '@fundamental-ngx/core/avatar-group';\nimport { PopoverComponent, PopoverBodyComponent } from '@fundamental-ngx/core/popover';\nimport { KeyUtil, Size } from '@fundamental-ngx/core/utils';\nimport { AvatarGroupDataExampleService } from './avatar-group-data-example.service';\n\n@Component({\n    selector: 'fd-avatar-group-individual-type-example',\n    templateUrl: './avatar-group-individual-type-example.component.html'\n})\nexport class AvatarGroupIndividualTypeExampleComponent {\n    @ViewChild('avatarGroup_IndividualType')\n    avatarGroup: AvatarGroupComponent;\n\n    @ViewChild('overflowPopoverBody')\n    popoverBodyComponent: PopoverBodyComponent;\n\n    size: Size = 's';\n    people = this.avatarGroupDataExampleService.generate();\n    personDetails: any = null;\n    overflowPopoverStage: 'main' | 'detail' = 'main';\n\n    get isDetailStage(): boolean {\n        return this.overflowPopoverStage === 'detail';\n    }\n\n    constructor(private readonly avatarGroupDataExampleService: AvatarGroupDataExampleService) {}\n\n    openOverflowDetails(idx: number): void {\n        const visibleItemsCount = this.avatarGroup.allItemsCount - this.avatarGroup.overflowItemsCount;\n        const newIdx = idx + visibleItemsCount;\n        this.personDetails = this.people[newIdx];\n        this.overflowPopoverStage = 'detail';\n\n        setTimeout(() => this.popoverBodyComponent?._focusFirstTabbableElement(), 0);\n    }\n\n    openOverflowMain(): void {\n        this.personDetails = null;\n        this.overflowPopoverStage = 'main';\n\n        setTimeout(() => this.popoverBodyComponent?._focusFirstTabbableElement(), 0);\n    }\n\n    handleControlClick(event: MouseEvent, popover: PopoverComponent): void {\n        popover.open();\n    }\n\n    handleControlKeydown(event: KeyboardEvent, popover: PopoverComponent): void {\n        if (!KeyUtil.isKeyCode(event, [ESCAPE, TAB, SPACE, ENTER])) {\n            return;\n        }\n\n        if (KeyUtil.isKeyCode(event, [ESCAPE, TAB])) {\n            popover.close();\n        }\n\n        if (KeyUtil.isKeyCode(event, [SPACE, ENTER])) {\n            popover.open();\n        }\n    }\n\n    handleOverflowPopoverOpen(isOpen: boolean): void {\n        if (isOpen) {\n            this.openOverflowMain();\n        }\n    }\n}\n",v='<fd-avatar-group #avatarGroup_IndividualType\n                 type="individual"\n                 [size]="size">\n    \x3c!-- AVATARS --\x3e\n    <ng-container *ngFor="let person of people" >\n        <fd-popover [noArrow]="false"\n                    placement="bottom"\n                    [triggers]="[]"\n                    [closeOnOutsideClick]="true"\n                    [closeOnEscapeKey]="true"\n                    [focusAutoCapture]="true"\n                    [focusTrapped]="true"\n                    #individualPopover>\n            <fd-popover-control>\n                <div fd-avatar-group-item\n                     tabindex="0"\n                     (click)="handleControlClick($event, individualPopover)"\n                     (keydown)="handleControlKeydown($event, individualPopover)">\n                    <fd-avatar *ngIf="!person.imageUrl && !person.glyph"\n                               [circle]="true"\n                               [border]="true"\n                               [size]="size"\n                               role="img"\n                               [title]="person.firstName + \' \' + person.lastName"\n                               [label]="person.firstName + \' \' + person.lastName"\n                               [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n\n                    <fd-avatar *ngIf="person.imageUrl"\n                               [circle]="true"\n                               [border]="true"\n                               [size]="size"\n                               [image]="person.imageUrl"\n                               role="img"\n                               [title]="person.firstName + \' \' + person.lastName"\n                               [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n\n                    <fd-avatar *ngIf="person.glyph"\n                               [circle]="true"\n                               [border]="true"\n                               [size]="size"\n                               [glyph]="person.glyph"\n                               role="img"\n                               [title]="person.firstName + \' \' + person.lastName"\n                               [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n                </div>\n            </fd-popover-control>\n\n            <fd-popover-body\n                [attr.aria-labelledby]="person.id+\'-popover-header\'"\n                [attr.aria-describedby]="person.id+\'-popover-subheader\'"\n                role="tooltip">\n                <fd-quick-view [id]="person.id">\n                    <fd-quick-view-title align="left" [id]="person.id+\'-popover-header\'">Business card</fd-quick-view-title>\n                    <fd-quick-view-subheader [id]="person.id+\'-popover-subheader\'">\n                        <fd-avatar *ngIf="!person.imageUrl && !person.glyph"\n                                   [circle]="true"\n                                   size="s"\n                                   role="img"\n                                   [label]="person.firstName + \' \' + person.lastName"\n                                   [title]="person.firstName + \' \' + person.lastName"\n                                   [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n\n                        <fd-avatar *ngIf="person.imageUrl"\n                                   [circle]="true"\n                                   size="s"\n                                   role="img"\n                                   [image]="person.imageUrl"\n                                   [title]="person.firstName + \' \' + person.lastName"\n                                   [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n\n                        <fd-avatar *ngIf="person.glyph"\n                                   [circle]="true"\n                                   size="s"\n                                   role="img"\n                                   [glyph]="person.glyph"\n                                   [title]="person.firstName + \' \' + person.lastName"\n                                   [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"></fd-avatar>\n                        <fd-quick-view-subheader-title>{{ person.firstName }} {{ person.lastName }}</fd-quick-view-subheader-title>\n                        <fd-quick-view-subheader-subtitle>{{ person.position }}</fd-quick-view-subheader-subtitle>\n                    </fd-quick-view-subheader>\n\n                    <fd-quick-view-group [attr.aria-labelledby]="person.id+\'-group-title\'">\n                        <fd-quick-view-group-title [id]="person.id+\'-group-title\'">Contact Details</fd-quick-view-group-title>\n                        <fd-quick-view-group-item>\n                            <fd-quick-view-group-item-label>Phone</fd-quick-view-group-item-label>\n                            <fd-quick-view-group-item-content>\n                                <a fd-link [href]="\'tel:\' + person.phone" [innerText]="person.phone"></a>\n                            </fd-quick-view-group-item-content>\n                        </fd-quick-view-group-item>\n\n                        <fd-quick-view-group-item>\n                            <fd-quick-view-group-item-label>Mobile</fd-quick-view-group-item-label>\n                            <fd-quick-view-group-item-content>\n                                <a fd-link [href]="\'tel:\' + person.mobile" [innerText]="person.mobile"></a>\n                            </fd-quick-view-group-item-content>\n                        </fd-quick-view-group-item>\n\n                        <fd-quick-view-group-item>\n                            <fd-quick-view-group-item-label>Email</fd-quick-view-group-item-label>\n                            <fd-quick-view-group-item-content>\n                                <a fd-link [href]="\'mailto:\' + person.email" [innerText]="person.email"></a>\n                            </fd-quick-view-group-item-content>\n                        </fd-quick-view-group-item>\n                    </fd-quick-view-group>\n                </fd-quick-view>\n            </fd-popover-body>\n        </fd-popover>\n    </ng-container>\n\n    \x3c!-- OVERFLOW --\x3e\n    <fd-popover *ngIf="avatarGroup_IndividualType.overflowItemsCount > 0"\n                [noArrow]="false"\n                [focusTrapped]="true"\n                [focusAutoCapture]="true"\n                [triggers]="[]"\n                [closeOnOutsideClick]="true"\n                [closeOnEscapeKey]="true"\n                placement="bottom"\n                maxWidth="312"\n                (isOpenChange)="handleOverflowPopoverOpen($event)"\n                #overflowPopover>\n        <fd-popover-control>\n            <button fd-button\n                    fd-avatar-group-overflow-button\n                    [compact]="false"\n                    [size]="size"\n                    (click)="handleControlClick($event, overflowPopover)"\n                    (keydown)="handleControlKeydown($event, overflowPopover)">\n                <bdi fd-avatar-group-overflow-button-text>\n                    +{{ avatarGroup_IndividualType.overflowItemsCount }}\n                </bdi>\n            </button>\n        </fd-popover-control>\n        <fd-popover-body #overflowPopoverBody aria-labelledby="avatar-group-0-popover-header" role="tooltip">\n            <div class="fd-popover__wrapper">\n                <div fd-popover-body-header>\n                    <div fd-bar barDesign="header">\n                        <div fd-bar-left>\n                            <fd-button-bar *ngIf="isDetailStage"\n                                           (click)="openOverflowMain()"\n                                           glyph="navigation-left-arrow"\n                                           fdType="transparent"\n                                           aria-label="Back"\n                                           title="Back"\n                            ></fd-button-bar>\n                            <fd-bar-element id="avatar-group-0-popover-header">\n                                {{ isDetailStage ? \'Business Card\' : \'Team Members (\' + avatarGroup_IndividualType.overflowItemsCount + \')\' }}\n                            </fd-bar-element>\n                            <fd-bar-element *ngIf="isDetailStage">&nbsp;</fd-bar-element>\n                        </div>\n                    </div>\n                </div>\n\n                <div fd-avatar-group-overflow-body\n                     [noPadding]="isDetailStage"\n                     [noHorizontalScroll]="isDetailStage"\n                     [noVerticalScroll]="false">\n                    <ng-container *ngIf="overflowPopoverStage === \'main\'">\n                        <div *ngFor="let person of people | slice: -1 * avatarGroup_IndividualType.overflowItemsCount; let idx = index;"\n                             fd-avatar-group-overflow-item>\n\n                            <fd-avatar *ngIf="!person.imageUrl && !person.glyph"\n                                       fd-avatar-group-focusable-avatar\n                                       [circle]="true"\n                                       size="s"\n                                       role="img"\n                                       [label]="person.firstName + \' \' + person.lastName"\n                                       [title]="person.firstName + \' \' + person.lastName"\n                                       [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                       (click)="openOverflowDetails(idx)"\n                                       (keydown.enter)="openOverflowDetails(idx)"\n                                       (keydown.space)="openOverflowDetails(idx)"\n                            ></fd-avatar>\n\n                            <fd-avatar *ngIf="person.imageUrl"\n                                       fd-avatar-group-focusable-avatar\n                                       [circle]="true"\n                                       size="s"\n                                       role="img"\n                                       [image]="person.imageUrl"\n                                       [title]="person.firstName + \' \' + person.lastName"\n                                       [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                       (click)="openOverflowDetails(idx)"\n                                       (keydown.enter)="openOverflowDetails(idx)"\n                                       (keydown.space)="openOverflowDetails(idx)"\n                            ></fd-avatar>\n\n                            <fd-avatar *ngIf="person.glyph"\n                                       fd-avatar-group-focusable-avatar\n                                       [circle]="true"\n                                       size="s"\n                                       role="img"\n                                       [glyph]="person.glyph"\n                                       [title]="person.firstName + \' \' + person.lastName"\n                                       [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                       (click)="openOverflowDetails(idx)"\n                                       (keydown.enter)="openOverflowDetails(idx)"\n                                       (keydown.space)="openOverflowDetails(idx)"\n                            ></fd-avatar>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf="overflowPopoverStage === \'detail\'">\n                        <fd-quick-view [id]="personDetails.id">\n                            <fd-quick-view-subheader>\n                                <fd-avatar *ngIf="!personDetails.imageUrl && !personDetails.glyph"\n                                           [circle]="true"\n                                           size="s"\n                                           [label]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           role="img"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"></fd-avatar>\n\n                                <fd-avatar *ngIf="personDetails.imageUrl"\n                                           [circle]="true"\n                                           size="s"\n                                           [image]="personDetails.imageUrl"\n                                           role="img"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"></fd-avatar>\n\n                                <fd-avatar *ngIf="personDetails.glyph"\n                                           [circle]="true"\n                                           size="s"\n                                           [glyph]="personDetails.glyph"\n                                           role="img"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"></fd-avatar>\n                                <fd-quick-view-subheader-title>{{ personDetails.firstName }} {{ personDetails.lastName }}</fd-quick-view-subheader-title>\n                                <fd-quick-view-subheader-subtitle>{{ personDetails.position }}</fd-quick-view-subheader-subtitle>\n                            </fd-quick-view-subheader>\n\n                            <fd-quick-view-group>\n                                <fd-quick-view-group-title>Contact Details</fd-quick-view-group-title>\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Phone</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'tel:\' + personDetails.phone" [innerText]="personDetails.phone"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Mobile</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'tel:\' + personDetails.mobile" [innerText]="personDetails.mobile"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Email</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'mailto:\' + personDetails.email" [innerText]="personDetails.email"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n                            </fd-quick-view-group>\n                        </fd-quick-view>\n                    </ng-container>\n                </div>\n            </div>\n        </fd-popover-body>\n    </fd-popover>\n</fd-avatar-group>\n',u="import { Component, ViewChild } from '@angular/core';\nimport { ENTER, ESCAPE, SPACE, TAB } from '@angular/cdk/keycodes';\n\nimport { PopoverComponent, PopoverBodyComponent } from '@fundamental-ngx/core/popover';\nimport { KeyUtil, Size } from '@fundamental-ngx/core/utils';\nimport { AvatarGroupDataExampleService } from './avatar-group-data-example.service';\n\n@Component({\n    selector: 'fd-avatar-group-group-type-example',\n    templateUrl: './avatar-group-group-type-example.component.html'\n})\nexport class AvatarGroupGroupTypeExampleComponent {\n    @ViewChild('overflowPopoverBody')\n    popoverBodyComponent: PopoverBodyComponent;\n\n    size: Size = 'l';\n    people = this.avatarGroupDataExampleService.generate();\n    personDetails: any = null;\n    overflowPopoverStage: 'main' | 'detail' = 'main';\n\n    get isDetailStage(): boolean {\n        return this.overflowPopoverStage === 'detail';\n    }\n\n    constructor(private readonly avatarGroupDataExampleService: AvatarGroupDataExampleService) {}\n\n    isOpenChanged(isOpened: boolean): void {\n        if (isOpened) {\n            this.openOverflowMain();\n        }\n    }\n\n    openOverflowDetails(idx: number): void {\n        this.personDetails = this.people[idx];\n        this.overflowPopoverStage = 'detail';\n\n        setTimeout(() => this.popoverBodyComponent?._focusFirstTabbableElement(), 0);\n    }\n\n    openOverflowMain(): void {\n        this.personDetails = null;\n        this.overflowPopoverStage = 'main';\n\n        setTimeout(() => this.popoverBodyComponent?._focusFirstTabbableElement(), 0);\n    }\n\n    handleControlClick(event: MouseEvent, popover: PopoverComponent): void {\n        popover.open();\n    }\n\n    handleControlKeydown(event: KeyboardEvent, popover: PopoverComponent): void {\n        if (!KeyUtil.isKeyCode(event, [ESCAPE, TAB, SPACE, ENTER])) {\n            return;\n        }\n\n        if (KeyUtil.isKeyCode(event, [ESCAPE, TAB])) {\n            popover.close();\n        }\n\n        if (KeyUtil.isKeyCode(event, [SPACE, ENTER])) {\n            popover.open();\n        }\n    }\n}\n",m='<fd-avatar-group #avatarGroup_GroupType type="group" [size]="size">\n    <fd-popover [noArrow]="false"\n                [focusTrapped]="true"\n                [focusAutoCapture]="true"\n                [triggers]="[]"\n                [closeOnOutsideClick]="true"\n                [closeOnEscapeKey]="true"\n                (isOpenChange)="isOpenChanged($event)"\n                placement="bottom"\n                maxWidth="312"\n                #overflowPopover>\n        <fd-popover-control fd-avatar-group-popover-control\n                            [attr.aria-label]="\'Has popup type dialog Conjoined avatars, \' + (people?.length - avatarGroup_GroupType?.overflowItemsCount)\n            + \' avatars displayed, \' + avatarGroup_GroupType?.overflowItemsCount + \' avatars hidden, activate for complete list\'"\n                            (click)="handleControlClick($event, overflowPopover)"\n                            (keydown)="handleControlKeydown($event, overflowPopover)">\n            <div *ngFor="let person of people" fd-avatar-group-item>\n                <fd-avatar *ngIf="!person.imageUrl && !person.glyph"\n                           [label]="person.firstName + \' \' + person.lastName"\n                           [title]="person.firstName + \' \' + person.lastName"\n                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                           role="img"\n                           [circle]="true"\n                           [border]="true"\n                           [size]="size"></fd-avatar>\n\n                <fd-avatar *ngIf="person.imageUrl"\n                           role="img"\n                           [title]="person.firstName + \' \' + person.lastName"\n                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                           [circle]="true"\n                           [border]="true"\n                           [size]="size"\n                           [image]="person.imageUrl"></fd-avatar>\n\n                <fd-avatar *ngIf="person.glyph"\n                           role="img"\n                           [title]="person.firstName + \' \' + person.lastName"\n                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                           [circle]="true"\n                           [border]="true"\n                           [size]="size"\n                           [glyph]="person.glyph"></fd-avatar>\n            </div>\n            <button *ngIf="avatarGroup_GroupType.overflowItemsCount > 0"\n                    fd-button\n                    fd-avatar-group-overflow-button\n                    tabindex="-1"\n                    [compact]="false"\n                    [size]="size">\n                <bdi fd-avatar-group-overflow-button-text>\n                    +{{ avatarGroup_GroupType.overflowItemsCount }}\n                </bdi>\n            </button>\n        </fd-popover-control>\n        <fd-popover-body #overflowPopoverBody aria-labelledby="avatar-group-1-popover-header" role="tooltip">\n            <div class="fd-popover__wrapper">\n                <div fd-popover-body-header>\n                    <div fd-bar barDesign="header">\n                        <div fd-bar-left>\n                            <fd-button-bar *ngIf="isDetailStage"\n                                           (click)="openOverflowMain()"\n                                           glyph="navigation-left-arrow"\n                                           fdType="transparent"\n                                           aria-label="Back"\n                                           title="Back"\n                            ></fd-button-bar>\n                            <fd-bar-element id="avatar-group-1-popover-header">\n                                {{ isDetailStage ? \'Business Card\' : \'Team Members (\' + people.length + \')\' }}\n                            </fd-bar-element>\n                            <fd-bar-element *ngIf="isDetailStage">&nbsp;</fd-bar-element>\n                        </div>\n                    </div>\n                </div>\n\n                <div fd-avatar-group-overflow-body\n                     [noPadding]="isDetailStage"\n                     [noHorizontalScroll]="isDetailStage"\n                     [noVerticalScroll]="false"\n                >\n                    <ng-container *ngIf="overflowPopoverStage === \'main\'">\n                        <ng-container *ngFor="let person of people; let idx = index;">\n                            <div fd-avatar-group-overflow-item>\n                                <fd-avatar *ngIf="!person.imageUrl && !person.glyph"\n                                           fd-avatar-group-focusable-avatar\n                                           [circle]="true"\n                                           size="s"\n                                           [label]="person.firstName + \' \' + person.lastName"\n                                           [title]="person.firstName + \' \' + person.lastName"\n                                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                           role="img"\n                                           (click)="openOverflowDetails(idx)"\n                                           (keydown.enter)="openOverflowDetails(idx)"\n                                           (keydown.space)="openOverflowDetails(idx)"\n                                ></fd-avatar>\n                                <fd-avatar *ngIf="person.imageUrl"\n                                           fd-avatar-group-focusable-avatar\n                                           role="img"\n                                           [title]="person.firstName + \' \' + person.lastName"\n                                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                           [circle]="true"\n                                           size="s"\n                                           [image]="person.imageUrl"\n                                           (click)="openOverflowDetails(idx)"\n                                           (keydown.enter)="openOverflowDetails(idx)"\n                                           (keydown.space)="openOverflowDetails(idx)"\n                                ></fd-avatar>\n                                <fd-avatar *ngIf="person.glyph"\n                                           fd-avatar-group-focusable-avatar\n                                           role="img"\n                                           [title]="person.firstName + \' \' + person.lastName"\n                                           [ariaLabel]="person.firstName + \' \' + person.lastName + \' avatar\'"\n                                           [circle]="true"\n                                           size="s"\n                                           [glyph]="person.glyph"\n                                           (click)="openOverflowDetails(idx)"\n                                           (keydown.enter)="openOverflowDetails(idx)"\n                                           (keydown.space)="openOverflowDetails(idx)"\n                                ></fd-avatar>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n\n                    <ng-container *ngIf="overflowPopoverStage === \'detail\'">\n                        <fd-quick-view [id]="personDetails.id">\n                            <fd-quick-view-subheader>\n                                <fd-avatar *ngIf="!personDetails.imageUrl && !personDetails.glyph"\n                                           [circle]="true"\n                                           size="s"\n                                           role="img"\n                                           [label]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"></fd-avatar>\n                                <fd-avatar *ngIf="personDetails.imageUrl"\n                                           [circle]="true"\n                                           size="s"\n                                           role="img"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"\n                                           [image]="personDetails.imageUrl"></fd-avatar>\n                                <fd-avatar *ngIf="personDetails.glyph"\n                                           [circle]="true"\n                                           size="s"\n                                           role="img"\n                                           [title]="personDetails.firstName + \' \' + personDetails.lastName"\n                                           [ariaLabel]="personDetails.firstName + \' \' + personDetails.lastName + \' avatar\'"\n                                           [glyph]="personDetails.glyph"></fd-avatar>\n                                <fd-quick-view-subheader-title>{{ personDetails.firstName }} {{ personDetails.lastName }}</fd-quick-view-subheader-title>\n                                <fd-quick-view-subheader-subtitle>{{ personDetails.position }}</fd-quick-view-subheader-subtitle>\n                            </fd-quick-view-subheader>\n\n                            <fd-quick-view-group>\n                                <fd-quick-view-group-title>Contact Details</fd-quick-view-group-title>\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Phone</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'tel:\' + personDetails.phone" [innerText]="personDetails.phone"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Mobile</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'tel:\' + personDetails.mobile" [innerText]="personDetails.mobile"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n\n                                <fd-quick-view-group-item>\n                                    <fd-quick-view-group-item-label>Email</fd-quick-view-group-item-label>\n                                    <fd-quick-view-group-item-content>\n                                        <a fd-link [href]="\'mailto:\' + personDetails.email" [innerText]="personDetails.email"></a>\n                                    </fd-quick-view-group-item-content>\n                                </fd-quick-view-group-item>\n                            </fd-quick-view-group>\n                        </fd-quick-view>\n                    </ng-container>\n                </div>\n            </div>\n        </fd-popover-body>\n    </fd-popover>\n</fd-avatar-group>\n',b="import { Injectable } from '@angular/core';\n\nconst firstNames = ['John', 'Sarah', 'Jason', 'Christian', 'Jessica', 'Jonathan', 'Gordon', 'Simon', 'Jason', 'Whitney', 'Chris', 'David'];\nconst lastNames = ['Doe', 'Parker', 'Goldwell', 'Bow', 'Bale', 'Smith', 'Jason', 'Swan', 'Carter', 'Copper'];\nconst positions = ['Marketing Manager', 'Visual Designer', 'Software Developer'];\nconst glyphs = ['accidental-leave', 'account', 'activity-individual', 'action-settings', 'add-contact', 'addresses', 'attachment-photo', 'batch-payments', 'calendar'];\n\ninterface PeopleExample {\n    id: string;\n    firstName: string;\n    lastName: string;\n    position: string;\n    phone: string;\n    mobile: string;\n    email: string;\n    imageUrl?: string;\n    glyph?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AvatarGroupDataExampleService {\n    generate(num: number = 25): PeopleExample[] {\n        const people: PeopleExample[] = [];\n\n        for (let i = 0; i < num; i++) {\n            const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n            const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n            const position = positions[Math.floor(Math.random() * positions.length)];\n\n            people.push({\n                id: this._generateId(),\n                firstName: firstName,\n                lastName: lastName,\n                position: position,\n                phone: this._generatePhone(),\n                mobile: this._generatePhone(),\n                email: this._generateEmail(firstName, lastName),\n                ...this._generateImage()\n            });\n        }\n\n        return people;\n    }\n\n    private _generateImage(): { imageUrl?: string; glyph?: string; } {\n        const option = Math.floor(Math.random() * 3);\n\n        switch (option) {\n            case 1:\n                return { imageUrl: `https://i.pravatar.cc/400?u=${this._generateId()}` }; // 'http://placeimg.com/400/400/people'\n            case 2:\n                return { glyph: glyphs[Math.floor(Math.random() * glyphs.length)] };\n            case 3:\n            default:\n                return null;\n        }\n    }\n\n    private _generateId(): string {\n        return Math.random().toString(36).substring(6);\n    }\n\n    private _generateEmail(firstName: string, lastName: string): string {\n        return `${firstName}_${lastName}_${Math.random().toString(36).substring(6)}@example.com`;\n    }\n\n    private _generatePhone(): string {\n        return '+01' + Math.random().toString().slice(2, 11);\n    }\n}\n",g=n("fXoL"),h=n("ddaM"),w=n("kt86"),y=n("X1JU"),D=n("FtGj"),k=n("Idgb"),N=n("Ue0U"),C=n("t33z");const V=["John","Sarah","Jason","Christian","Jessica","Jonathan","Gordon","Simon","Jason","Whitney","Chris","David"],x=["Doe","Parker","Goldwell","Bow","Bale","Smith","Jason","Swan","Carter","Copper"],q=["Marketing Manager","Visual Designer","Software Developer"],T=["accidental-leave","account","activity-individual","action-settings","add-contact","addresses","attachment-photo","batch-payments","calendar"];let I=(()=>{class e{generate(e=25){const a=[];for(let n=0;n<e;n++){const e=V[Math.floor(Math.random()*V.length)],n=x[Math.floor(Math.random()*x.length)],t=q[Math.floor(Math.random()*q.length)];a.push(Object.assign({id:this._generateId(),firstName:e,lastName:n,position:t,phone:this._generatePhone(),mobile:this._generatePhone(),email:this._generateEmail(e,n)},this._generateImage()))}return a}_generateImage(){switch(Math.floor(3*Math.random())){case 1:return{imageUrl:`https://i.pravatar.cc/400?u=${this._generateId()}`};case 2:return{glyph:T[Math.floor(Math.random()*T.length)]};case 3:default:return null}}_generateId(){return Math.random().toString(36).substring(6)}_generateEmail(e,a){return`${e}_${a}_${Math.random().toString(36).substring(6)}@example.com`}_generatePhone(){return"+01"+Math.random().toString().slice(2,11)}}return e.\u0275fac=function(a){return new(a||e)},e.\u0275prov=g.Mb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();var W=n("CTT1"),z=n("ofXK"),O=n("CHnh"),S=n("f9qr"),P=n("Dzp1"),E=n("BygU"),L=n("huBz"),K=n("6/vF"),U=n("56qc"),G=n("vm/7"),M=n("uglT"),A=n("dk7N"),B=n("b9oo"),_=n("SPnw"),R=n("t1Ro"),F=n("vuIt"),$=n("muRr"),j=n("eDJG"),H=n("rp8N"),X=n("jLFz"),J=n("F8i4"),Q=n("igCS"),Y=n("NFwf"),Z=n("pqKc"),ee=n("5/tG"),ae=n("WW4E"),ne=n("8yLD"),te=n("+ZM/"),re=n("nIyc");const ie=["avatarGroup_IndividualType"],oe=["overflowPopoverBody"];function le(e,a){if(1&e&&g.Rb(0,"fd-avatar",17),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("circle",!0)("border",!0)("size",a.size)("title",e.firstName+" "+e.lastName)("label",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function se(e,a){if(1&e&&g.Rb(0,"fd-avatar",18),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("circle",!0)("border",!0)("size",a.size)("image",e.imageUrl)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function pe(e,a){if(1&e&&g.Rb(0,"fd-avatar",19),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("circle",!0)("border",!0)("size",a.size)("glyph",e.glyph)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function ce(e,a){if(1&e&&g.Rb(0,"fd-avatar",20),2&e){const e=g.nc().$implicit;g.vc("circle",!0)("label",e.firstName+" "+e.lastName)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function de(e,a){if(1&e&&g.Rb(0,"fd-avatar",21),2&e){const e=g.nc().$implicit;g.vc("circle",!0)("image",e.imageUrl)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function fe(e,a){if(1&e&&g.Rb(0,"fd-avatar",22),2&e){const e=g.nc().$implicit;g.vc("circle",!0)("glyph",e.glyph)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}const ve=function(){return[]};function ue(e,a){if(1&e){const e=g.Xb();g.Ub(0),g.Wb(1,"fd-popover",4,5),g.Wb(3,"fd-popover-control"),g.Wb(4,"div",6),g.jc("click",function(a){g.Kc(e);const n=g.Hc(2);return g.nc().handleControlClick(a,n)})("keydown",function(a){g.Kc(e);const n=g.Hc(2);return g.nc().handleControlKeydown(a,n)}),g.Tc(5,le,1,6,"fd-avatar",7),g.Tc(6,se,1,6,"fd-avatar",8),g.Tc(7,pe,1,6,"fd-avatar",9),g.Vb(),g.Vb(),g.Wb(8,"fd-popover-body",10),g.Wb(9,"fd-quick-view",11),g.Wb(10,"fd-quick-view-title",12),g.Vc(11,"Business card"),g.Vb(),g.Wb(12,"fd-quick-view-subheader",11),g.Tc(13,ce,1,4,"fd-avatar",13),g.Tc(14,de,1,4,"fd-avatar",14),g.Tc(15,fe,1,4,"fd-avatar",15),g.Wb(16,"fd-quick-view-subheader-title"),g.Vc(17),g.Vb(),g.Wb(18,"fd-quick-view-subheader-subtitle"),g.Vc(19),g.Vb(),g.Vb(),g.Wb(20,"fd-quick-view-group"),g.Wb(21,"fd-quick-view-group-title",11),g.Vc(22,"Contact Details"),g.Vb(),g.Wb(23,"fd-quick-view-group-item"),g.Wb(24,"fd-quick-view-group-item-label"),g.Vc(25,"Phone"),g.Vb(),g.Wb(26,"fd-quick-view-group-item-content"),g.Rb(27,"a",16),g.Vb(),g.Vb(),g.Wb(28,"fd-quick-view-group-item"),g.Wb(29,"fd-quick-view-group-item-label"),g.Vc(30,"Mobile"),g.Vb(),g.Wb(31,"fd-quick-view-group-item-content"),g.Rb(32,"a",16),g.Vb(),g.Vb(),g.Wb(33,"fd-quick-view-group-item"),g.Wb(34,"fd-quick-view-group-item-label"),g.Vc(35,"Email"),g.Vb(),g.Wb(36,"fd-quick-view-group-item-content"),g.Rb(37,"a",16),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Tb()}if(2&e){const e=a.$implicit;g.Db(1),g.vc("noArrow",!1)("triggers",g.zc(28,ve))("closeOnOutsideClick",!0)("closeOnEscapeKey",!0)("focusAutoCapture",!0)("focusTrapped",!0),g.Db(4),g.vc("ngIf",!e.imageUrl&&!e.glyph),g.Db(1),g.vc("ngIf",e.imageUrl),g.Db(1),g.vc("ngIf",e.glyph),g.Db(1),g.Eb("aria-labelledby",e.id+"-popover-header")("aria-describedby",e.id+"-popover-subheader"),g.Db(1),g.vc("id",e.id),g.Db(1),g.vc("id",e.id+"-popover-header"),g.Db(2),g.vc("id",e.id+"-popover-subheader"),g.Db(1),g.vc("ngIf",!e.imageUrl&&!e.glyph),g.Db(1),g.vc("ngIf",e.imageUrl),g.Db(1),g.vc("ngIf",e.glyph),g.Db(2),g.Yc("",e.firstName," ",e.lastName,""),g.Db(2),g.Wc(e.position),g.Db(1),g.Eb("aria-labelledby",e.id+"-group-title"),g.Db(1),g.vc("id",e.id+"-group-title"),g.Db(6),g.vc("href","tel:"+e.phone,g.Nc)("innerText",e.phone),g.Db(5),g.vc("href","tel:"+e.mobile,g.Nc)("innerText",e.mobile),g.Db(5),g.vc("href","mailto:"+e.email,g.Nc)("innerText",e.email)}}function me(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-button-bar",37),g.jc("click",function(){return g.Kc(e),g.nc(2).openOverflowMain()}),g.Vb()}}function be(e,a){1&e&&(g.Wb(0,"fd-bar-element"),g.Vc(1,"\xa0"),g.Vb())}function ge(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",43),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("circle",!0)("label",e.firstName+" "+e.lastName)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function he(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",44),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("circle",!0)("image",e.imageUrl)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function we(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",45),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(3).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("circle",!0)("glyph",e.glyph)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function ye(e,a){if(1&e&&(g.Wb(0,"div",39),g.Tc(1,ge,1,4,"fd-avatar",40),g.Tc(2,he,1,4,"fd-avatar",41),g.Tc(3,we,1,4,"fd-avatar",42),g.Vb()),2&e){const e=a.$implicit;g.Db(1),g.vc("ngIf",!e.imageUrl&&!e.glyph),g.Db(1),g.vc("ngIf",e.imageUrl),g.Db(1),g.vc("ngIf",e.glyph)}}function De(e,a){if(1&e&&(g.Ub(0),g.Tc(1,ye,4,3,"div",38),g.oc(2,"slice"),g.Tb()),2&e){const e=g.nc(2),a=g.Hc(1);g.Db(1),g.vc("ngForOf",g.qc(2,1,e.people,-1*a.overflowItemsCount))}}function ke(e,a){if(1&e&&g.Rb(0,"fd-avatar",20),2&e){const e=g.nc(3);g.vc("circle",!0)("label",e.personDetails.firstName+" "+e.personDetails.lastName)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")}}function Ne(e,a){if(1&e&&g.Rb(0,"fd-avatar",21),2&e){const e=g.nc(3);g.vc("circle",!0)("image",e.personDetails.imageUrl)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")}}function Ce(e,a){if(1&e&&g.Rb(0,"fd-avatar",22),2&e){const e=g.nc(3);g.vc("circle",!0)("glyph",e.personDetails.glyph)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")}}function Ve(e,a){if(1&e&&(g.Ub(0),g.Wb(1,"fd-quick-view",11),g.Wb(2,"fd-quick-view-subheader"),g.Tc(3,ke,1,4,"fd-avatar",13),g.Tc(4,Ne,1,4,"fd-avatar",14),g.Tc(5,Ce,1,4,"fd-avatar",15),g.Wb(6,"fd-quick-view-subheader-title"),g.Vc(7),g.Vb(),g.Wb(8,"fd-quick-view-subheader-subtitle"),g.Vc(9),g.Vb(),g.Vb(),g.Wb(10,"fd-quick-view-group"),g.Wb(11,"fd-quick-view-group-title"),g.Vc(12,"Contact Details"),g.Vb(),g.Wb(13,"fd-quick-view-group-item"),g.Wb(14,"fd-quick-view-group-item-label"),g.Vc(15,"Phone"),g.Vb(),g.Wb(16,"fd-quick-view-group-item-content"),g.Rb(17,"a",16),g.Vb(),g.Vb(),g.Wb(18,"fd-quick-view-group-item"),g.Wb(19,"fd-quick-view-group-item-label"),g.Vc(20,"Mobile"),g.Vb(),g.Wb(21,"fd-quick-view-group-item-content"),g.Rb(22,"a",16),g.Vb(),g.Vb(),g.Wb(23,"fd-quick-view-group-item"),g.Wb(24,"fd-quick-view-group-item-label"),g.Vc(25,"Email"),g.Vb(),g.Wb(26,"fd-quick-view-group-item-content"),g.Rb(27,"a",16),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Tb()),2&e){const e=g.nc(2);g.Db(1),g.vc("id",e.personDetails.id),g.Db(2),g.vc("ngIf",!e.personDetails.imageUrl&&!e.personDetails.glyph),g.Db(1),g.vc("ngIf",e.personDetails.imageUrl),g.Db(1),g.vc("ngIf",e.personDetails.glyph),g.Db(2),g.Yc("",e.personDetails.firstName," ",e.personDetails.lastName,""),g.Db(2),g.Wc(e.personDetails.position),g.Db(8),g.vc("href","tel:"+e.personDetails.phone,g.Nc)("innerText",e.personDetails.phone),g.Db(5),g.vc("href","tel:"+e.personDetails.mobile,g.Nc)("innerText",e.personDetails.mobile),g.Db(5),g.vc("href","mailto:"+e.personDetails.email,g.Nc)("innerText",e.personDetails.email)}}function xe(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-popover",23,24),g.jc("isOpenChange",function(a){return g.Kc(e),g.nc().handleOverflowPopoverOpen(a)}),g.Wb(2,"fd-popover-control"),g.Wb(3,"button",25),g.jc("click",function(a){g.Kc(e);const n=g.Hc(1);return g.nc().handleControlClick(a,n)})("keydown",function(a){g.Kc(e);const n=g.Hc(1);return g.nc().handleControlKeydown(a,n)}),g.Wb(4,"bdi",26),g.Vc(5),g.Vb(),g.Vb(),g.Vb(),g.Wb(6,"fd-popover-body",27,28),g.Wb(8,"div",29),g.Wb(9,"div",30),g.Wb(10,"div",31),g.Wb(11,"div",32),g.Tc(12,me,1,0,"fd-button-bar",33),g.Wb(13,"fd-bar-element",34),g.Vc(14),g.Vb(),g.Tc(15,be,2,0,"fd-bar-element",35),g.Vb(),g.Vb(),g.Vb(),g.Wb(16,"div",36),g.Tc(17,De,3,4,"ng-container",35),g.Tc(18,Ve,28,13,"ng-container",35),g.Vb(),g.Vb(),g.Vb(),g.Vb()}if(2&e){const e=g.nc(),a=g.Hc(1);g.vc("noArrow",!1)("focusTrapped",!0)("focusAutoCapture",!0)("triggers",g.zc(17,ve))("closeOnOutsideClick",!0)("closeOnEscapeKey",!0),g.Db(3),g.vc("compact",!1)("size",e.size),g.Db(2),g.Xc(" +",a.overflowItemsCount," "),g.Db(7),g.vc("ngIf",e.isDetailStage),g.Db(2),g.Xc(" ",e.isDetailStage?"Business Card":"Team Members ("+a.overflowItemsCount+")"," "),g.Db(1),g.vc("ngIf",e.isDetailStage),g.Db(1),g.vc("noPadding",e.isDetailStage)("noHorizontalScroll",e.isDetailStage)("noVerticalScroll",!1),g.Db(1),g.vc("ngIf","main"===e.overflowPopoverStage),g.Db(1),g.vc("ngIf","detail"===e.overflowPopoverStage)}}let qe=(()=>{class e{constructor(e){this.avatarGroupDataExampleService=e,this.size="s",this.people=this.avatarGroupDataExampleService.generate(),this.personDetails=null,this.overflowPopoverStage="main"}get isDetailStage(){return"detail"===this.overflowPopoverStage}openOverflowDetails(e){this.personDetails=this.people[e+(this.avatarGroup.allItemsCount-this.avatarGroup.overflowItemsCount)],this.overflowPopoverStage="detail",setTimeout(()=>{var e;return null===(e=this.popoverBodyComponent)||void 0===e?void 0:e._focusFirstTabbableElement()},0)}openOverflowMain(){this.personDetails=null,this.overflowPopoverStage="main",setTimeout(()=>{var e;return null===(e=this.popoverBodyComponent)||void 0===e?void 0:e._focusFirstTabbableElement()},0)}handleControlClick(e,a){a.open()}handleControlKeydown(e,a){C.l.isKeyCode(e,[D.k,D.v,D.u,D.j])&&(C.l.isKeyCode(e,[D.k,D.v])&&a.close(),C.l.isKeyCode(e,[D.u,D.j])&&a.open())}handleOverflowPopoverOpen(e){e&&this.openOverflowMain()}}return e.\u0275fac=function(a){return new(a||e)(g.Qb(I))},e.\u0275cmp=g.Kb({type:e,selectors:[["fd-avatar-group-individual-type-example"]],viewQuery:function(e,a){if(1&e&&(g.ad(ie,1),g.ad(oe,1)),2&e){let e;g.Gc(e=g.kc())&&(a.avatarGroup=e.first),g.Gc(e=g.kc())&&(a.popoverBodyComponent=e.first)}},decls:4,vars:3,consts:[["type","individual",3,"size"],["avatarGroup_IndividualType",""],[4,"ngFor","ngForOf"],["placement","bottom","maxWidth","312",3,"noArrow","focusTrapped","focusAutoCapture","triggers","closeOnOutsideClick","closeOnEscapeKey","isOpenChange",4,"ngIf"],["placement","bottom",3,"noArrow","triggers","closeOnOutsideClick","closeOnEscapeKey","focusAutoCapture","focusTrapped"],["individualPopover",""],["fd-avatar-group-item","","tabindex","0",3,"click","keydown"],["role","img",3,"circle","border","size","title","label","ariaLabel",4,"ngIf"],["role","img",3,"circle","border","size","image","title","ariaLabel",4,"ngIf"],["role","img",3,"circle","border","size","glyph","title","ariaLabel",4,"ngIf"],["role","tooltip"],[3,"id"],["align","left",3,"id"],["size","s","role","img",3,"circle","label","title","ariaLabel",4,"ngIf"],["size","s","role","img",3,"circle","image","title","ariaLabel",4,"ngIf"],["size","s","role","img",3,"circle","glyph","title","ariaLabel",4,"ngIf"],["fd-link","",3,"href","innerText"],["role","img",3,"circle","border","size","title","label","ariaLabel"],["role","img",3,"circle","border","size","image","title","ariaLabel"],["role","img",3,"circle","border","size","glyph","title","ariaLabel"],["size","s","role","img",3,"circle","label","title","ariaLabel"],["size","s","role","img",3,"circle","image","title","ariaLabel"],["size","s","role","img",3,"circle","glyph","title","ariaLabel"],["placement","bottom","maxWidth","312",3,"noArrow","focusTrapped","focusAutoCapture","triggers","closeOnOutsideClick","closeOnEscapeKey","isOpenChange"],["overflowPopover",""],["fd-button","","fd-avatar-group-overflow-button","",3,"compact","size","click","keydown"],["fd-avatar-group-overflow-button-text",""],["aria-labelledby","avatar-group-0-popover-header","role","tooltip"],["overflowPopoverBody",""],[1,"fd-popover__wrapper"],["fd-popover-body-header",""],["fd-bar","","barDesign","header"],["fd-bar-left",""],["glyph","navigation-left-arrow","fdType","transparent","aria-label","Back","title","Back",3,"click",4,"ngIf"],["id","avatar-group-0-popover-header"],[4,"ngIf"],["fd-avatar-group-overflow-body","",3,"noPadding","noHorizontalScroll","noVerticalScroll"],["glyph","navigation-left-arrow","fdType","transparent","aria-label","Back","title","Back",3,"click"],["fd-avatar-group-overflow-item","",4,"ngFor","ngForOf"],["fd-avatar-group-overflow-item",""],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","label","title","ariaLabel","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","image","title","ariaLabel","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","glyph","title","ariaLabel","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","label","title","ariaLabel","click","keydown.enter","keydown.space"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","image","title","ariaLabel","click","keydown.enter","keydown.space"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","glyph","title","ariaLabel","click","keydown.enter","keydown.space"]],template:function(e,a){if(1&e&&(g.Wb(0,"fd-avatar-group",0,1),g.Tc(2,ue,38,29,"ng-container",2),g.Tc(3,xe,19,18,"fd-popover",3),g.Vb()),2&e){const e=g.Hc(1);g.vc("size",a.size),g.Db(2),g.vc("ngForOf",a.people),g.Db(1),g.vc("ngIf",e.overflowItemsCount>0)}},directives:[W.a,z.n,z.o,O.a,S.a,P.a,E.a,L.a,K.a,U.a,G.a,M.a,A.a,B.a,_.a,R.a,F.a,$.a,j.a,H.a,X.a,J.a,Q.a,Y.a,Z.a,ee.a,ae.a,ne.a,te.a,re.a],pipes:[z.w],encapsulation:2}),e})();var Te=n("5HkS"),Ie=n("Hxo2"),We=n("24sI");const ze=["overflowPopoverBody"];function Oe(e,a){if(1&e&&g.Rb(0,"fd-avatar",21),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("label",e.firstName+" "+e.lastName)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")("circle",!0)("border",!0)("size",a.size)}}function Se(e,a){if(1&e&&g.Rb(0,"fd-avatar",22),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")("circle",!0)("border",!0)("size",a.size)("image",e.imageUrl)}}function Pe(e,a){if(1&e&&g.Rb(0,"fd-avatar",23),2&e){const e=g.nc().$implicit,a=g.nc();g.vc("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")("circle",!0)("border",!0)("size",a.size)("glyph",e.glyph)}}function Ee(e,a){if(1&e&&(g.Wb(0,"div",17),g.Tc(1,Oe,1,6,"fd-avatar",18),g.Tc(2,Se,1,6,"fd-avatar",19),g.Tc(3,Pe,1,6,"fd-avatar",20),g.Vb()),2&e){const e=a.$implicit;g.Db(1),g.vc("ngIf",!e.imageUrl&&!e.glyph),g.Db(1),g.vc("ngIf",e.imageUrl),g.Db(1),g.vc("ngIf",e.glyph)}}function Le(e,a){if(1&e&&(g.Wb(0,"button",24),g.Wb(1,"bdi",25),g.Vc(2),g.Vb(),g.Vb()),2&e){const e=g.nc(),a=g.Hc(1);g.vc("compact",!1)("size",e.size),g.Db(2),g.Xc(" +",a.overflowItemsCount," ")}}function Ke(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-button-bar",26),g.jc("click",function(){return g.Kc(e),g.nc().openOverflowMain()}),g.Vb()}}function Ue(e,a){1&e&&(g.Wb(0,"fd-bar-element"),g.Vc(1,"\xa0"),g.Vb())}function Ge(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",32),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("circle",!0)("label",e.firstName+" "+e.lastName)("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")}}function Me(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",33),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")("circle",!0)("image",e.imageUrl)}}function Ae(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar",34),g.jc("click",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.enter",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)})("keydown.space",function(){g.Kc(e);const a=g.nc().index;return g.nc(2).openOverflowDetails(a)}),g.Vb()}if(2&e){const e=g.nc().$implicit;g.vc("title",e.firstName+" "+e.lastName)("ariaLabel",e.firstName+" "+e.lastName+" avatar")("circle",!0)("glyph",e.glyph)}}function Be(e,a){if(1&e&&(g.Ub(0),g.Wb(1,"div",28),g.Tc(2,Ge,1,4,"fd-avatar",29),g.Tc(3,Me,1,4,"fd-avatar",30),g.Tc(4,Ae,1,4,"fd-avatar",31),g.Vb(),g.Tb()),2&e){const e=a.$implicit;g.Db(2),g.vc("ngIf",!e.imageUrl&&!e.glyph),g.Db(1),g.vc("ngIf",e.imageUrl),g.Db(1),g.vc("ngIf",e.glyph)}}function _e(e,a){if(1&e&&(g.Ub(0),g.Tc(1,Be,5,3,"ng-container",27),g.Tb()),2&e){const e=g.nc();g.Db(1),g.vc("ngForOf",e.people)}}function Re(e,a){if(1&e&&g.Rb(0,"fd-avatar",40),2&e){const e=g.nc(2);g.vc("circle",!0)("label",e.personDetails.firstName+" "+e.personDetails.lastName)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")}}function Fe(e,a){if(1&e&&g.Rb(0,"fd-avatar",41),2&e){const e=g.nc(2);g.vc("circle",!0)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")("image",e.personDetails.imageUrl)}}function $e(e,a){if(1&e&&g.Rb(0,"fd-avatar",42),2&e){const e=g.nc(2);g.vc("circle",!0)("title",e.personDetails.firstName+" "+e.personDetails.lastName)("ariaLabel",e.personDetails.firstName+" "+e.personDetails.lastName+" avatar")("glyph",e.personDetails.glyph)}}function je(e,a){if(1&e&&(g.Ub(0),g.Wb(1,"fd-quick-view",35),g.Wb(2,"fd-quick-view-subheader"),g.Tc(3,Re,1,4,"fd-avatar",36),g.Tc(4,Fe,1,4,"fd-avatar",37),g.Tc(5,$e,1,4,"fd-avatar",38),g.Wb(6,"fd-quick-view-subheader-title"),g.Vc(7),g.Vb(),g.Wb(8,"fd-quick-view-subheader-subtitle"),g.Vc(9),g.Vb(),g.Vb(),g.Wb(10,"fd-quick-view-group"),g.Wb(11,"fd-quick-view-group-title"),g.Vc(12,"Contact Details"),g.Vb(),g.Wb(13,"fd-quick-view-group-item"),g.Wb(14,"fd-quick-view-group-item-label"),g.Vc(15,"Phone"),g.Vb(),g.Wb(16,"fd-quick-view-group-item-content"),g.Rb(17,"a",39),g.Vb(),g.Vb(),g.Wb(18,"fd-quick-view-group-item"),g.Wb(19,"fd-quick-view-group-item-label"),g.Vc(20,"Mobile"),g.Vb(),g.Wb(21,"fd-quick-view-group-item-content"),g.Rb(22,"a",39),g.Vb(),g.Vb(),g.Wb(23,"fd-quick-view-group-item"),g.Wb(24,"fd-quick-view-group-item-label"),g.Vc(25,"Email"),g.Vb(),g.Wb(26,"fd-quick-view-group-item-content"),g.Rb(27,"a",39),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Tb()),2&e){const e=g.nc();g.Db(1),g.vc("id",e.personDetails.id),g.Db(2),g.vc("ngIf",!e.personDetails.imageUrl&&!e.personDetails.glyph),g.Db(1),g.vc("ngIf",e.personDetails.imageUrl),g.Db(1),g.vc("ngIf",e.personDetails.glyph),g.Db(2),g.Yc("",e.personDetails.firstName," ",e.personDetails.lastName,""),g.Db(2),g.Wc(e.personDetails.position),g.Db(8),g.vc("href","tel:"+e.personDetails.phone,g.Nc)("innerText",e.personDetails.phone),g.Db(5),g.vc("href","tel:"+e.personDetails.mobile,g.Nc)("innerText",e.personDetails.mobile),g.Db(5),g.vc("href","mailto:"+e.personDetails.email,g.Nc)("innerText",e.personDetails.email)}}const He=function(){return[]};let Xe=(()=>{class e{constructor(e){this.avatarGroupDataExampleService=e,this.size="l",this.people=this.avatarGroupDataExampleService.generate(),this.personDetails=null,this.overflowPopoverStage="main"}get isDetailStage(){return"detail"===this.overflowPopoverStage}isOpenChanged(e){e&&this.openOverflowMain()}openOverflowDetails(e){this.personDetails=this.people[e],this.overflowPopoverStage="detail",setTimeout(()=>{var e;return null===(e=this.popoverBodyComponent)||void 0===e?void 0:e._focusFirstTabbableElement()},0)}openOverflowMain(){this.personDetails=null,this.overflowPopoverStage="main",setTimeout(()=>{var e;return null===(e=this.popoverBodyComponent)||void 0===e?void 0:e._focusFirstTabbableElement()},0)}handleControlClick(e,a){a.open()}handleControlKeydown(e,a){C.l.isKeyCode(e,[D.k,D.v,D.u,D.j])&&(C.l.isKeyCode(e,[D.k,D.v])&&a.close(),C.l.isKeyCode(e,[D.u,D.j])&&a.open())}}return e.\u0275fac=function(a){return new(a||e)(g.Qb(I))},e.\u0275cmp=g.Kb({type:e,selectors:[["fd-avatar-group-group-type-example"]],viewQuery:function(e,a){if(1&e&&g.ad(ze,1),2&e){let e;g.Gc(e=g.kc())&&(a.popoverBodyComponent=e.first)}},decls:20,vars:19,consts:[["type","group",3,"size"],["avatarGroup_GroupType",""],["placement","bottom","maxWidth","312",3,"noArrow","focusTrapped","focusAutoCapture","triggers","closeOnOutsideClick","closeOnEscapeKey","isOpenChange"],["overflowPopover",""],["fd-avatar-group-popover-control","",3,"click","keydown"],["fd-avatar-group-item","",4,"ngFor","ngForOf"],["fd-button","","fd-avatar-group-overflow-button","","tabindex","-1",3,"compact","size",4,"ngIf"],["aria-labelledby","avatar-group-1-popover-header","role","tooltip"],["overflowPopoverBody",""],[1,"fd-popover__wrapper"],["fd-popover-body-header",""],["fd-bar","","barDesign","header"],["fd-bar-left",""],["glyph","navigation-left-arrow","fdType","transparent","aria-label","Back","title","Back",3,"click",4,"ngIf"],["id","avatar-group-1-popover-header"],[4,"ngIf"],["fd-avatar-group-overflow-body","",3,"noPadding","noHorizontalScroll","noVerticalScroll"],["fd-avatar-group-item",""],["role","img",3,"label","title","ariaLabel","circle","border","size",4,"ngIf"],["role","img",3,"title","ariaLabel","circle","border","size","image",4,"ngIf"],["role","img",3,"title","ariaLabel","circle","border","size","glyph",4,"ngIf"],["role","img",3,"label","title","ariaLabel","circle","border","size"],["role","img",3,"title","ariaLabel","circle","border","size","image"],["role","img",3,"title","ariaLabel","circle","border","size","glyph"],["fd-button","","fd-avatar-group-overflow-button","","tabindex","-1",3,"compact","size"],["fd-avatar-group-overflow-button-text",""],["glyph","navigation-left-arrow","fdType","transparent","aria-label","Back","title","Back",3,"click"],[4,"ngFor","ngForOf"],["fd-avatar-group-overflow-item",""],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","label","title","ariaLabel","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","role","img","size","s",3,"title","ariaLabel","circle","image","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","role","img","size","s",3,"title","ariaLabel","circle","glyph","click","keydown.enter","keydown.space",4,"ngIf"],["fd-avatar-group-focusable-avatar","","size","s","role","img",3,"circle","label","title","ariaLabel","click","keydown.enter","keydown.space"],["fd-avatar-group-focusable-avatar","","role","img","size","s",3,"title","ariaLabel","circle","image","click","keydown.enter","keydown.space"],["fd-avatar-group-focusable-avatar","","role","img","size","s",3,"title","ariaLabel","circle","glyph","click","keydown.enter","keydown.space"],[3,"id"],["size","s","role","img",3,"circle","label","title","ariaLabel",4,"ngIf"],["size","s","role","img",3,"circle","title","ariaLabel","image",4,"ngIf"],["size","s","role","img",3,"circle","title","ariaLabel","glyph",4,"ngIf"],["fd-link","",3,"href","innerText"],["size","s","role","img",3,"circle","label","title","ariaLabel"],["size","s","role","img",3,"circle","title","ariaLabel","image"],["size","s","role","img",3,"circle","title","ariaLabel","glyph"]],template:function(e,a){if(1&e){const e=g.Xb();g.Wb(0,"fd-avatar-group",0,1),g.Wb(2,"fd-popover",2,3),g.jc("isOpenChange",function(e){return a.isOpenChanged(e)}),g.Wb(4,"fd-popover-control",4),g.jc("click",function(n){g.Kc(e);const t=g.Hc(3);return a.handleControlClick(n,t)})("keydown",function(n){g.Kc(e);const t=g.Hc(3);return a.handleControlKeydown(n,t)}),g.Tc(5,Ee,4,3,"div",5),g.Tc(6,Le,3,3,"button",6),g.Vb(),g.Wb(7,"fd-popover-body",7,8),g.Wb(9,"div",9),g.Wb(10,"div",10),g.Wb(11,"div",11),g.Wb(12,"div",12),g.Tc(13,Ke,1,0,"fd-button-bar",13),g.Wb(14,"fd-bar-element",14),g.Vc(15),g.Vb(),g.Tc(16,Ue,2,0,"fd-bar-element",15),g.Vb(),g.Vb(),g.Vb(),g.Wb(17,"div",16),g.Tc(18,_e,2,1,"ng-container",15),g.Tc(19,je,28,13,"ng-container",15),g.Vb(),g.Vb(),g.Vb(),g.Vb(),g.Vb()}if(2&e){const e=g.Hc(1);g.vc("size",a.size),g.Db(2),g.vc("noArrow",!1)("focusTrapped",!0)("focusAutoCapture",!0)("triggers",g.zc(18,He))("closeOnOutsideClick",!0)("closeOnEscapeKey",!0),g.Db(2),g.Eb("aria-label","Has popup type dialog Conjoined avatars, "+((null==a.people?null:a.people.length)-(null==e?null:e.overflowItemsCount))+" avatars displayed, "+(null==e?null:e.overflowItemsCount)+" avatars hidden, activate for complete list"),g.Db(1),g.vc("ngForOf",a.people),g.Db(1),g.vc("ngIf",e.overflowItemsCount>0),g.Db(7),g.vc("ngIf",a.isDetailStage),g.Db(2),g.Xc(" ",a.isDetailStage?"Business Card":"Team Members ("+a.people.length+")"," "),g.Db(1),g.vc("ngIf",a.isDetailStage),g.Db(1),g.vc("noPadding",a.isDetailStage)("noHorizontalScroll",a.isDetailStage)("noVerticalScroll",!1),g.Db(1),g.vc("ngIf","main"===a.overflowPopoverStage),g.Db(1),g.vc("ngIf","detail"===a.overflowPopoverStage)}},directives:[W.a,O.a,S.a,We.a,z.n,z.o,E.a,Q.a,Y.a,Z.a,ee.a,ae.a,P.a,j.a,H.a,X.a,J.a,ne.a,te.a,re.a,L.a,U.a,G.a,M.a,A.a,B.a,_.a,R.a,F.a,$.a],encapsulation:2}),e})(),Je=(()=>{class e{constructor(){this.individualType=[{language:"html",fileName:"avatar-group-individual-type-example",code:r},{language:"typescript",code:t,fileName:"avatar-group-individual-type-example",component:"AvatarGroupIndividualTypeExampleComponent"},{language:"typescript",name:"avatar-group-data-example.service.ts",code:l,fileName:"avatar-group-data-example",component:"AvatarGroupDataExampleService",service:!0}],this.groupType=[{language:"html",fileName:"avatar-group-group-type-example",code:o},{language:"typescript",code:i,fileName:"avatar-group-group-type-example",component:"AvatarGroupGroupTypeExampleComponent"},{language:"typescript",name:"avatar-group-data-example.service.ts",code:l,fileName:"avatar-group-data-example",component:"AvatarGroupDataExampleService",service:!0}]}}return e.\u0275fac=function(a){return new(a||e)},e.\u0275cmp=g.Kb({type:e,selectors:[["app-avatar-group"]],decls:25,vars:2,consts:[["id","individual-type","componentName","avatar-group"],[3,"exampleFiles"],["id","group-type","componentName","avatar-group"]],template:function(e,a){1&e&&(g.Wb(0,"fd-docs-section-title",0),g.Vc(1," Individual Type\n"),g.Vb(),g.Wb(2,"description"),g.Vc(3," Focus on Each Person ("),g.Wb(4,"code"),g.Vc(5,'type="individual"'),g.Vb(),g.Vc(6,"). "),g.Rb(7,"br"),g.Vc(8," The avatars are displayed next to each other and don\u2019t overlap. Use this type if each person is as important as the group as a whole, and the user\u2019s main focus is to get more information about some individuals in the group.\n"),g.Vb(),g.Wb(9,"component-example"),g.Rb(10,"fd-avatar-group-individual-type-example"),g.Vb(),g.Rb(11,"code-example",1),g.Rb(12,"separator"),g.Wb(13,"fd-docs-section-title",2),g.Vc(14," Group Type\n"),g.Vb(),g.Wb(15,"description"),g.Vc(16," Focus on the Sum of People ("),g.Wb(17,"code"),g.Vc(18,'type="group"'),g.Vb(),g.Vc(19,"). "),g.Rb(20,"br"),g.Vc(21," The group type displays overlapping avatars. Use this type if it\u2019s important to display the sum of people at first sight, rather than the individuals.\n"),g.Vb(),g.Wb(22,"component-example"),g.Rb(23,"fd-avatar-group-group-type-example"),g.Vb(),g.Rb(24,"code-example",1)),2&e&&(g.Db(11),g.vc("exampleFiles",a.individualType),g.Db(13),g.vc("exampleFiles",a.groupType))},directives:[h.a,w.a,y.a,qe,Te.a,Ie.a,Xe],encapsulation:2}),e})();var Qe=n("dor/"),Ye=n("RJTZ"),Ze=n("Kpas");let ea=(()=>{class e{}return e.\u0275fac=function(a){return new(a||e)},e.\u0275cmp=g.Kb({type:e,selectors:[["fd-avatar-group-header"]],decls:26,vars:0,consts:[["module","AvatarGroupModule","subPackage","avatar-group"]],template:function(e,a){1&e&&(g.Wb(0,"header"),g.Vc(1,"Avatar Group"),g.Vb(),g.Wb(2,"description"),g.Wb(3,"p"),g.Vc(4,"The Avatar Group displays a number of avatars which act as a digital representation of the user. It is useful for visually showcasing a team, project team members, or employees for example. "),g.Vb(),g.Vc(5," Types options: "),g.Wb(6,"ul"),g.Wb(7,"li"),g.Vc(8,"Group type"),g.Vb(),g.Wb(9,"li"),g.Vc(10,"Individual type"),g.Vb(),g.Vb(),g.Vc(11," Size variations: "),g.Wb(12,"ul"),g.Wb(13,"li"),g.Vc(14,"Extra Small (xs)"),g.Vb(),g.Wb(15,"li"),g.Vc(16,"Small (s)"),g.Vb(),g.Wb(17,"li"),g.Vc(18,"Medium (m)"),g.Vb(),g.Wb(19,"li"),g.Vc(20,"Large (l)"),g.Vb(),g.Wb(21,"li"),g.Vc(22,"Extra Large (xl)"),g.Vb(),g.Vb(),g.Vb(),g.Rb(23,"import",0),g.Rb(24,"fd-header-tabs"),g.Rb(25,"router-outlet"))},directives:[Qe.a,w.a,Ye.a,Ze.a,s.h],encapsulation:2}),e})();var aa=n("MX2W"),na=n("TClZ"),ta=n("MzQX"),ra=n("G+eq"),ia=n("yqXW"),oa=n("v5fr");const la=[{path:"",component:ea,children:[{path:"",component:Je},{path:"api",component:p.a,data:{content:c.a.avatarGroup}}]}];let sa=(()=>{class e{}return e.\u0275fac=function(a){return new(a||e)},e.\u0275mod=g.Ob({type:e}),e.\u0275inj=g.Nb({imports:[[s.g.forChild(la),d.a,k.a,aa.b,na.c,N.d,ta.a,ra.b,oa.b,ia.b],s.g]}),e})()}}]);