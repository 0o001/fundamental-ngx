(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{UsrI:function(e,n,t){"use strict";t.r(n),t.d(n,"CheckboxDocsModule",function(){return pe});var o={};t.r(o),t.d(o,"default",function(){return v});var r={};t.r(r),t.d(r,"default",function(){return C});var a={};t.r(a),t.d(a,"default",function(){return x});var c={};t.r(c),t.d(c,"default",function(){return y});var i={};t.r(i),t.d(i,"default",function(){return V});var l={};t.r(l),t.d(l,"default",function(){return W});var b={};t.r(b),t.d(b,"default",function(){return F});var d={};t.r(d),t.d(d,"default",function(){return w});var f={};t.r(f),t.d(f,"default",function(){return D});var s={};t.r(s),t.d(s,"default",function(){return M});var m={};t.r(m),t.d(m,"default",function(){return j});var u={};t.r(u),t.d(u,"default",function(){return A});var h=t("tyNb"),p=t("jzzn"),g=t("IywY"),k=t("t9W5"),v='<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="sirius" label="Sirius" column="1" rank="1">\n        <fdp-checkbox name="sirius-cb" value="sirius" title="Sirius" [(ngModel)]="field1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="vega" label="Vega" column="2" rank="1">\n        <fdp-checkbox name="vega-cb" value="vega" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem;">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [formGroup]="form1" [object]="form1Data" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #rfield1 id="einstein" label="Einstein" column="1" rank="1">\n        <fdp-checkbox name="einstein-cb" value="einstein" contentDensity="compact" title="Albert Einstein"\n            [formControl]="rfield1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 id="newton" label="Newton" column="2" rank="1">\n        <fdp-checkbox name="newton-cb" value="newton" contentDensity="compact" title="Issac Newton"\n            [formControl]="rfield2.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">form value: {{ form1.getRawValue() | json }}</div>\n',C="import { FormGroup } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n    field3: string[] = [];\n    field4: string[] = ['altair', 'deneb'];\n\n    form1 = new FormGroup({});\n    form1Data = new Form1data([], ['newton']);\n\n    form2 = new FormGroup({});\n\n    form3 = new FormGroup({});\n    form3data = new Form3data(['faraday', 'edison']);\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n\nclass Form3data {\n    constructor(public scientists: string[]) {}\n}\n",x='<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="yellow" label="Yellow" [noLabelLayout]="true" rank="4" [editable]="true">\n        <fdp-checkbox [name]="\'yellow-cb\'" [isBinary]="true" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="white" rank="4" label="White">\n        <fdp-checkbox name="white-cb" [isBinary]="true" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="violet" label="Violet" rank="4">\n        <fdp-checkbox name="violet-cb" [isBinary]="true" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [formGroup]="customForm" [object]="data">\n    <fdp-form-field #red id="red" label="Red" rank="4">\n        <fdp-checkbox name="red-cb" [isBinary]="true" title="Red" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            contentDensity="compact" [formControl]="red.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue id="blue" label="Blue" rank="4">\n        <fdp-checkbox name="blue-cb" [isBinary]="true" title="Blue" contentDensity="compact"\n            [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green id="green" label="Green" rank="4">\n        <fdp-checkbox name="green-cb" [isBinary]="true" title="Green" contentDensity="compact"\n            [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem;">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group>\n    <fdp-form-field #disabled id="disabled" label="Red" rank="1">\n        <fdp-checkbox name="disabled-cb" [isBinary]="true" title="Red"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" contentDensity="compact" disabled="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',y="import { FormGroup } from '@angular/forms';\nimport { Component, Optional } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({});\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, @Optional() public green?: boolean) {}\n}\n",V='<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg hintPlacement="left" [formGroup]="customForm" [object]="data" columnLayout="XL2-L1-M1-S1">\n    <fdp-form-field #ffr1 id="presence" [validators]="validators" label="Your presence is necessary"\n        hint="hint text" hintPlacement="left" rank="10" column="1" required="true">\n        <fdp-checkbox name="presence-cb" [isBinary]="true" title="title text" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 id="aggrement" [validators]="validators" hint="hint text"\n        hintPlacement="left" rank="15" column="2" required="true">\n        <fdp-checkbox name="aggrement-cb" [isBinary]="true" title="Do you Agree with Terms and Conditions" [formControl]="ffr2.formControl">\n            Do you Agree with <a fd-link href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="button-1" rank="20" column="2">\n        <fdp-button buttonType="emphasized" (click)="onSubmit()" label="Submit"></fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid" role="alert" aria-atomic="true">\n            Value is invalid\n        </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',W="import { FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm: FormGroup;\n    data: SomeObject;\n    validators: ValidatorFn[];\n\n    constructor() {\n        this.customForm = new FormGroup({});\n        this.validators = [Validators.requiredTrue];\n\n        this.data = new SomeObject(true, true);\n    }\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",F='<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" [value]="\'orion\'" title="Orion" [(checked)]="orion"\n    (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n    (change)="changeFunction($event)">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox [name]="\'cygnus\'" [isBinary]="true" [label]="\'Cygnus\'" title="Cygnus" [value]="\'cygnus\'"\n    [(checked)]="cygnus">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox [name]="\'lyra\'" [isBinary]="true" [label]="\'Lyra\'" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox [name]="\'gemini\'" [isBinary]="true" [label]="\'Gemini\'" title="Gemini" [(checked)]="gemini">\n</fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" title="Orion" [(checked)]="orion" [disabled]="true">\n</fdp-checkbox>\n',w="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n",D='<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [formGroup]="cities" [object]="citiesData" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #paris id="paris" label="Paris" column="1" rank="1">\n        <fdp-checkbox name="paris-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [formControl]="paris.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha id="doha" label="Doha" column="1" rank="3">\n        <fdp-checkbox name="doha-cb" value="Yes" [tristate]="true" [formControl]="doha.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam id="amsterdam" label="Amsterdam" column="1" rank="5">\n        <fdp-checkbox name="amsterdam-cb" value="Yes" [tristate]="true" [formControl]="amsterdam.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice id="venice" label="Venice" column="2" rank="2">\n        <fdp-checkbox name="venice-cb" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [tristate]="true" [formControl]="venice.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto id="kyoto" label="Kyoto" column="2" rank="4">\n        <fdp-checkbox name="kyoto-cb" [tristate]="true" [formControl]="kyoto.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona id="barcelona" label="Barcelona" column="2" rank="6">\n        <fdp-checkbox name="barcelona-cb" [tristate]="true" [formControl]="barcelona.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens id="athens" label="athens: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="athens-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="athens.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney id="sydney" label="Sydney: tristateSelectable false" column="2" rank="8">\n        <fdp-checkbox name="sydney-cb" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="sydney.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="havana" label="Havana" column="1" rank="1">\n        <fdp-checkbox name="havana-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [(ngModel)]="havana"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="beirut" label="Beirut" column="1" rank="3">\n        <fdp-checkbox name="beirut-cb" value="Yes" [tristate]="true" [(ngModel)]="beirut"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="budapest" label="Budapest" column="1" rank="5">\n        <fdp-checkbox name="budapest-cb" value="Yes" [tristate]="true" [(ngModel)]="budapest"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="lisbon" label="Lisbon" column="2" rank="2">\n        <fdp-checkbox name="lisbon-cb" [tristate]="true" [(ngModel)]="lisbon"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="istanbul" label="Istanbul" column="2" rank="4">\n        <fdp-checkbox name="istanbul-cb" [tristate]="true" [(ngModel)]="istanbul"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="busan" label="Busan" column="2" rank="6">\n        <fdp-checkbox name="busan-cb" [tristate]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="dubrovnik" label="Dubrovnik: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="dubrovnik-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="jaipur" label="Jaipur: tristateSelectable false" column="2" rank="7">\n        <fdp-checkbox name="jaipur-cb" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field column="1">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field column="2">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 id="acceptAll" label="Accept All" column="1" rank="1">\n            <fdp-checkbox name="all" [tristate]="true" [tristateSelectable]="false" [value]="false"\n                [formControl]="ffr1.formControl"></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid;">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="registrationForm.get(\'agreements\')"\n            [object]="choices">\n            <fdp-form-field #ffr2 id="termsAndConditions" label="I accept Terms and Conditions"\n                rank="3">\n                <fdp-checkbox name="termsAndConditions-cb" [isBinary]="true" [formControl]="ffr2.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 id="marketing" label="I want to receive Marketing Materials"\n                rank="3">\n                <fdp-checkbox name="marketing-cb" [isBinary]="true" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 id="newsletter" label="I want to sign for a Newsletter"\n                rank="4">\n                <fdp-checkbox name="newsletter-cb" [isBinary]="true" [formControl]="ffr4.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required">\n                    value is required\n                </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>\n',M="import { Component, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean = null;\n    public busan = true;\n    public dubrovnik: boolean = null;\n    public jaipur: boolean = null;\n\n    public cities = new FormGroup({});\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public registrationForm = new FormGroup({\n        agreements: new FormGroup({})\n    });\n\n    public choices: Object = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements').patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean,\n        public athens: string | boolean,\n        public sydney: string | boolean\n    ) {}\n}\n",j='<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group>\n    <fdp-form-field id="a11y1" [noLabelLayout]="true" rank="1">\n        <fdp-checkbox name="checkboxA11y1" [isBinary]="true" ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y2" rank="2">\n        <fdp-checkbox name="checkboxA11y2" [isBinary]="true" ariaLabelledBy="checkboxLable"\n            [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y3" label="Disabled checkbox using aria-disabled" rank="3">\n        <fdp-checkbox name="checkboxA11y3" [isBinary]="true" title="It is a disabled checkbox" disabled="true"\n            [(ngModel)]="checkboxA11y3"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',A="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",B=t("fXoL"),R=t("ddaM"),L=t("kt86"),S=t("X1JU"),T=t("mrSG"),G=t("3Pt+"),O=t("vnx5"),X=t("ha2x"),I=t("AbwX"),P=t("ofXK");let N=(()=>{class e{constructor(){this.customForm=new G.i({}),this.data=new H(!1,!0),this.yellow=!1,this.white=!0}checkedChangeFunction(e){}indeterminateChangeFunction(e){}changeFunction(e){}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:25,consts:[[3,"noLabelLayout"],["id","yellow","label","Yellow","rank","4",3,"noLabelLayout","editable"],[3,"name","isBinary","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","white","rank","4","label","White"],["name","white-cb","title","White",3,"isBinary","ngModel","ngModelChange"],["id","violet","label","Violet","rank","4"],["name","violet-cb","title","Violet",3,"isBinary","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"formGroup","object"],["id","red","label","Red","rank","4"],["red",""],["name","red-cb","title","Red","contentDensity","compact",3,"isBinary","formControl","checkedChange","indeterminateChange","change"],["id","blue","label","Blue","rank","4"],["blue",""],["name","blue-cb","title","Blue","contentDensity","compact",3,"isBinary","formControl"],["id","green","label","Green","rank","4"],["green",""],["name","green-cb","title","Green","contentDensity","compact",3,"isBinary","formControl"],["id","disabled","label","Red","rank","1"],["disabled",""],["name","disabled-cb","title","Red","contentDensity","compact","disabled","true",3,"isBinary","checkedChange","indeterminateChange","change"]],template:function(e,n){if(1&e&&(B.Wb(0,"h3"),B.Vc(1,"Binary Checkbox in Template Driven Form"),B.Vb(),B.Wb(2,"fdp-form-group",0),B.Wb(3,"fdp-form-field",1),B.Wb(4,"fdp-checkbox",2),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.yellow=e}),B.Vb(),B.Vb(),B.Wb(5,"fdp-form-field",3),B.Wb(6,"fdp-checkbox",4),B.jc("ngModelChange",function(e){return n.white=e}),B.Vb(),B.Vb(),B.Wb(7,"fdp-form-field",5),B.Wb(8,"fdp-checkbox",6),B.jc("ngModelChange",function(e){return n.violet=e}),B.Vb(),B.Vb(),B.Vb(),B.Wb(9,"div",7),B.Wb(10,"div"),B.Vc(11),B.Vb(),B.Wb(12,"div"),B.Vc(13),B.Vb(),B.Wb(14,"div"),B.Vc(15),B.Vb(),B.Vb(),B.Rb(16,"br"),B.Rb(17,"br"),B.Wb(18,"h3"),B.Vc(19,"Binary Checkbox in Reactive/Model Driven Form"),B.Vb(),B.Wb(20,"fdp-form-group",8),B.Wb(21,"fdp-form-field",9,10),B.Wb(23,"fdp-checkbox",11),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Vb(),B.Wb(24,"fdp-form-field",12,13),B.Rb(26,"fdp-checkbox",14),B.Vb(),B.Wb(27,"fdp-form-field",15,16),B.Rb(29,"fdp-checkbox",17),B.Vb(),B.Vb(),B.Wb(30,"div",7),B.Vc(31),B.oc(32,"json"),B.Vb(),B.Wb(33,"h3"),B.Vc(34,"Disabled Checkbox"),B.Vb(),B.Wb(35,"fdp-form-group"),B.Wb(36,"fdp-form-field",18,19),B.Wb(38,"fdp-checkbox",20),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Vb(),B.Vb()),2&e){const e=B.Hc(22),t=B.Hc(25),o=B.Hc(28);B.Db(2),B.vc("noLabelLayout",!1),B.Db(1),B.vc("noLabelLayout",!0)("editable",!0),B.Db(1),B.vc("name","yellow-cb")("isBinary",!0)("ngModel",n.yellow),B.Db(2),B.vc("isBinary",!0)("ngModel",n.white),B.Db(2),B.vc("isBinary",!0)("ngModel",n.violet),B.Db(3),B.Xc("Yellow: ",n.yellow,""),B.Db(2),B.Xc("White: ",n.white,""),B.Db(2),B.Xc("Violet: ",n.violet,""),B.Db(5),B.vc("formGroup",n.customForm)("object",n.data),B.Db(3),B.vc("isBinary",!0)("formControl",e.formControl),B.Db(3),B.vc("isBinary",!0)("formControl",t.formControl),B.Db(3),B.vc("isBinary",!0)("formControl",o.formControl),B.Db(2),B.Xc("form value: ",B.pc(32,23,n.customForm.getRawValue()),""),B.Db(7),B.vc("isBinary",!0)}},directives:[O.a,X.a,I.a,G.q,G.t,G.r,G.j,G.g],pipes:[P.h],encapsulation:2}),e})(),H=(()=>{let e=class{constructor(e,n,t){this.red=e,this.blue=n,this.green=t}};return e=Object(T.b)([Object(T.d)(2,Object(B.C)()),Object(T.c)("design:paramtypes",[Boolean,Boolean,Boolean])],e),e})();var Y=t("5HkS"),$=t("Hxo2");let q=(()=>{class e{constructor(){this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}checkedChangeFunction(e){}indeterminateChangeFunction(e){}changeFunction(e){}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:27,consts:[["title","Orion",3,"name","isBinary","label","value","checked","checkedChange","indeterminateChange","change"],["title","Cygnus",3,"name","isBinary","label","value","checked","checkedChange"],["title","Lyra",3,"name","isBinary","label","checked","checkedChange"],["title","Gemini",3,"name","isBinary","label","checked","checkedChange"],["title","Orion",3,"name","isBinary","label","checked","disabled","checkedChange"]],template:function(e,n){1&e&&(B.Wb(0,"h3"),B.Vc(1,"Binary Checkbox With Value"),B.Vb(),B.Wb(2,"fdp-checkbox",0),B.jc("checkedChange",function(e){return n.orion=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Wb(3,"div"),B.Vc(4),B.Vb(),B.Wb(5,"fdp-checkbox",1),B.jc("checkedChange",function(e){return n.cygnus=e}),B.Vb(),B.Wb(6,"div"),B.Vc(7),B.Vb(),B.Rb(8,"br"),B.Rb(9,"br"),B.Wb(10,"h3"),B.Vc(11,"Binary Checkbox Without Value"),B.Vb(),B.Wb(12,"fdp-checkbox",2),B.jc("checkedChange",function(e){return n.lyra=e}),B.Vb(),B.Wb(13,"div"),B.Vc(14),B.Vb(),B.Wb(15,"fdp-checkbox",3),B.jc("checkedChange",function(e){return n.gemini=e}),B.Vb(),B.Wb(16,"div"),B.Vc(17),B.Vb(),B.Wb(18,"h3"),B.Vc(19,"Disabled Checkbox"),B.Vb(),B.Wb(20,"fdp-checkbox",4),B.jc("checkedChange",function(e){return n.orion=e}),B.Vb()),2&e&&(B.Db(2),B.vc("name","orion")("isBinary",!0)("label","Orion")("value","orion")("checked",n.orion),B.Db(2),B.Xc("value: ",n.orion,""),B.Db(1),B.vc("name","cygnus")("isBinary",!0)("label","Cygnus")("value","cygnus")("checked",n.cygnus),B.Db(2),B.Xc("value: ",n.cygnus,""),B.Db(5),B.vc("name","lyra")("isBinary",!0)("label","Lyra")("checked",n.lyra),B.Db(2),B.Xc("value: ",n.lyra,""),B.Db(1),B.vc("name","gemini")("isBinary",!0)("label","Gemini")("checked",n.gemini),B.Db(2),B.Xc("value: ",n.gemini,""),B.Db(3),B.vc("name","orion")("isBinary",!0)("label","Orion")("checked",n.orion)("disabled",!0))},directives:[I.a],encapsulation:2}),e})(),E=(()=>{class e{constructor(){this.field1=[],this.field2=["vega"],this.field3=[],this.field4=["altair","deneb"],this.form1=new G.i({}),this.form1Data=new U([],["newton"]),this.form2=new G.i({}),this.form3=new G.i({}),this.form3data=new K(["faraday","edison"])}checkedChangeFunction(e){}indeterminateChangeFunction(e){}changeFunction(e){}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:11,consts:[["columnLayout","XL2-L2-M1-S1"],["id","sirius","label","Sirius","column","1","rank","1"],["name","sirius-cb","value","sirius","title","Sirius",3,"ngModel","ngModelChange"],["id","vega","label","Vega","column","2","rank","1"],["name","vega-cb","value","vega","title","Vega",3,"ngModel","ngModelChange"],[2,"padding-left","2rem"],["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["rmsfg",""],["id","einstein","label","Einstein","column","1","rank","1"],["rfield1",""],["name","einstein-cb","value","einstein","contentDensity","compact","title","Albert Einstein",3,"formControl"],["id","newton","label","Newton","column","2","rank","1"],["rfield2",""],["name","newton-cb","value","newton","contentDensity","compact","title","Issac Newton",3,"formControl"]],template:function(e,n){if(1&e&&(B.Wb(0,"h3"),B.Vc(1,"Template Driven Form"),B.Vb(),B.Wb(2,"p"),B.Vc(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),B.Vb(),B.Wb(4,"fdp-form-group",0),B.Wb(5,"fdp-form-field",1),B.Wb(6,"fdp-checkbox",2),B.jc("ngModelChange",function(e){return n.field1=e}),B.Vb(),B.Vb(),B.Wb(7,"fdp-form-field",3),B.Wb(8,"fdp-checkbox",4),B.jc("ngModelChange",function(e){return n.field2=e}),B.Vb(),B.Vb(),B.Vb(),B.Wb(9,"div",5),B.Vc(10),B.Vb(),B.Wb(11,"div",5),B.Vc(12),B.Vb(),B.Rb(13,"br"),B.Rb(14,"br"),B.Wb(15,"h3"),B.Vc(16,"Reactive/Model Driven Form"),B.Vb(),B.Wb(17,"p"),B.Vc(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),B.Vb(),B.Wb(19,"fdp-form-group",6,7),B.Wb(21,"fdp-form-field",8,9),B.Rb(23,"fdp-checkbox",10),B.Vb(),B.Wb(24,"fdp-form-field",11,12),B.Rb(26,"fdp-checkbox",13),B.Vb(),B.Vb(),B.Wb(27,"div",5),B.Vc(28),B.oc(29,"json"),B.Vb()),2&e){const e=B.Hc(22),t=B.Hc(25);B.Db(6),B.vc("ngModel",n.field1),B.Db(2),B.vc("ngModel",n.field2),B.Db(2),B.Xc("field1: ",n.field1,""),B.Db(2),B.Xc("field2: ",n.field2,""),B.Db(7),B.vc("formGroup",n.form1)("object",n.form1Data),B.Db(4),B.vc("formControl",e.formControl),B.Db(3),B.vc("formControl",t.formControl),B.Db(2),B.Xc("form value: ",B.pc(29,9,n.form1.getRawValue()),"")}},directives:[O.a,X.a,I.a,G.q,G.t,G.r,G.j,G.g],pipes:[P.h],encapsulation:2}),e})();class U{constructor(e,n){this.einstein=e,this.newton=n}}class K{constructor(e){this.scientists=e}}var J=t("lJxs");function z(e,n){1&e&&(B.Ub(0),B.Vc(1," value is required "),B.Tb())}function Z(e,n){1&e&&B.Tc(0,z,2,0,"ng-container",63),2&e&&B.vc("ngIf",n.$implicit.required)}let Q=(()=>{class e{constructor(){this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new G.i({}),this.citiesData=new _(!1,"Yes",null,!1,!0,null,null,!1),this.registrationForm=new G.i({agreements:new G.i({})}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}ngAfterViewInit(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()}checkedChangeFunction(e){}indeterminateChangeFunction(e){}changeFunction(e){}setAgreementsOnAcceptAllChange(){this.registrationForm.get("acceptAll").valueChanges.subscribe(e=>this.acceptAll(e))}setControlOnAgreementsChange(){this.registrationForm.get("agreements").valueChanges.pipe(Object(J.a)(e=>this.getValuesFromObject(e)),Object(J.a)(e=>{const n=e.reduce((e,n)=>n&&e,!0),t=e.reduce((e,n)=>!n&&e,!0);return!!n||!t&&null})).subscribe(e=>this.setAcceptAll(e))}acceptAll(e){null!==e&&this.registrationForm.get("agreements").patchValue({marketing:e,newsletter:e,termsAndConditions:e},{emitEvent:!1})}setAcceptAll(e){var n;(null===(n=this.registrationForm.get("acceptAll"))||void 0===n?void 0:n.value)!==e&&this.registrationForm.patchValue({acceptAll:e},{emitEvent:!1})}getValuesFromObject(e){return Object.keys(e).map(n=>e[n])}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:63,consts:[["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["id","paris","label","Paris","column","1","rank","1"],["paris",""],["name","paris-cb","value","Yes",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","doha","label","Doha","column","1","rank","3"],["doha",""],["name","doha-cb","value","Yes",3,"tristate","formControl"],["id","amsterdam","label","Amsterdam","column","1","rank","5"],["amsterdam",""],["name","amsterdam-cb","value","Yes",3,"tristate","formControl"],["id","venice","label","Venice","column","2","rank","2"],["venice",""],["name","venice-cb",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","kyoto","label","Kyoto","column","2","rank","4"],["kyoto",""],["name","kyoto-cb",3,"tristate","formControl"],["id","barcelona","label","Barcelona","column","2","rank","6"],["barcelona",""],["name","barcelona-cb",3,"tristate","formControl"],["id","athens","label","athens: tristateSelectable false","column","1","rank","7"],["athens",""],["name","athens-cb","value","Yes",3,"tristate","tristateSelectable","formControl"],["id","sydney","label","Sydney: tristateSelectable false","column","2","rank","8"],["sydney",""],["name","sydney-cb",3,"tristate","tristateSelectable","formControl"],["columnLayout","XL2-L2-M1-S1"],["id","havana","label","Havana","column","1","rank","1"],["name","havana-cb","value","Yes",3,"tristate","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","beirut","label","Beirut","column","1","rank","3"],["name","beirut-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","budapest","label","Budapest","column","1","rank","5"],["name","budapest-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","lisbon","label","Lisbon","column","2","rank","2"],["name","lisbon-cb",3,"tristate","ngModel","ngModelChange","checkedChange","indeterminateChange","change"],["id","istanbul","label","Istanbul","column","2","rank","4"],["name","istanbul-cb",3,"tristate","ngModel","ngModelChange"],["id","busan","label","Busan","column","2","rank","6"],["name","busan-cb",3,"tristate","ngModel","ngModelChange"],["id","dubrovnik","label","Dubrovnik: tristateSelectable false","column","1","rank","7"],["name","dubrovnik-cb","value","Yes",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","jaipur","label","Jaipur: tristateSelectable false","column","2","rank","7"],["name","jaipur-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["column","1"],["column","2"],[3,"formGroup"],["form","ngForm"],["fgtristate",""],["id","acceptAll","label","Accept All","column","1","rank","1"],["ffr1",""],["name","all",3,"tristate","tristateSelectable","value","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["id","termsAndConditions","label","I accept Terms and Conditions","rank","3"],["ffr2",""],["name","termsAndConditions-cb",3,"isBinary","formControl"],["id","marketing","label","I want to receive Marketing Materials","rank","3"],["ffr3",""],["name","marketing-cb",3,"isBinary","formControl"],["id","newsletter","label","I want to sign for a Newsletter","rank","4"],["ffr4",""],["name","newsletter-cb",3,"isBinary","formControl"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(B.Wb(0,"h3"),B.Vc(1,"Reactive Form: TriState Checkbox With Value and Without Value"),B.Vb(),B.Wb(2,"fdp-form-group",0),B.Wb(3,"fdp-form-field",1,2),B.Wb(5,"fdp-checkbox",3),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Vb(),B.Wb(6,"fdp-form-field",4,5),B.Rb(8,"fdp-checkbox",6),B.Vb(),B.Wb(9,"fdp-form-field",7,8),B.Rb(11,"fdp-checkbox",9),B.Vb(),B.Wb(12,"fdp-form-field",10,11),B.Wb(14,"fdp-checkbox",12),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Vb(),B.Wb(15,"fdp-form-field",13,14),B.Rb(17,"fdp-checkbox",15),B.Vb(),B.Wb(18,"fdp-form-field",16,17),B.Rb(20,"fdp-checkbox",18),B.Vb(),B.Wb(21,"fdp-form-field",19,20),B.Rb(23,"fdp-checkbox",21),B.Vb(),B.Wb(24,"fdp-form-field",22,23),B.Rb(26,"fdp-checkbox",24),B.Vb(),B.Vb(),B.Wb(27,"div"),B.Vc(28),B.oc(29,"json"),B.Vb(),B.Rb(30,"br"),B.Rb(31,"br"),B.Wb(32,"h3"),B.Vc(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),B.Vb(),B.Wb(34,"fdp-form-group",25),B.Wb(35,"fdp-form-field",26),B.Wb(36,"fdp-checkbox",27),B.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.havana=e}),B.Vb(),B.Vb(),B.Wb(37,"fdp-form-field",28),B.Wb(38,"fdp-checkbox",29),B.jc("ngModelChange",function(e){return n.beirut=e}),B.Vb(),B.Vb(),B.Wb(39,"fdp-form-field",30),B.Wb(40,"fdp-checkbox",31),B.jc("ngModelChange",function(e){return n.budapest=e}),B.Vb(),B.Vb(),B.Wb(41,"fdp-form-field",32),B.Wb(42,"fdp-checkbox",33),B.jc("ngModelChange",function(e){return n.lisbon=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),B.Vb(),B.Vb(),B.Wb(43,"fdp-form-field",34),B.Wb(44,"fdp-checkbox",35),B.jc("ngModelChange",function(e){return n.istanbul=e}),B.Vb(),B.Vb(),B.Wb(45,"fdp-form-field",36),B.Wb(46,"fdp-checkbox",37),B.jc("ngModelChange",function(e){return n.busan=e}),B.Vb(),B.Vb(),B.Wb(47,"fdp-form-field",38),B.Wb(48,"fdp-checkbox",39),B.jc("ngModelChange",function(e){return n.dubrovnik=e}),B.Vb(),B.Vb(),B.Wb(49,"fdp-form-field",40),B.Wb(50,"fdp-checkbox",41),B.jc("ngModelChange",function(e){return n.jaipur=e}),B.Vb(),B.Vb(),B.Wb(51,"fdp-form-field",42),B.Wb(52,"div"),B.Vc(53),B.Vb(),B.Wb(54,"div"),B.Vc(55),B.Vb(),B.Wb(56,"div"),B.Vc(57),B.Vb(),B.Wb(58,"div"),B.Vc(59),B.Vb(),B.Vb(),B.Wb(60,"fdp-form-field",43),B.Wb(61,"div"),B.Vc(62),B.Vb(),B.Wb(63,"div"),B.Vc(64),B.Vb(),B.Wb(65,"div"),B.Vc(66),B.Vb(),B.Wb(67,"div"),B.Vc(68),B.Vb(),B.Vb(),B.Vb(),B.Wb(69,"h3"),B.Vc(70,"TriState Checkbox Used with Multiple checkboxes"),B.Vb(),B.Wb(71,"form",44,45),B.Wb(73,"fdp-form-group",44,46),B.Wb(75,"fdp-form-field",47,48),B.Rb(77,"fdp-checkbox",49),B.Vb(),B.Vb(),B.Wb(78,"div",50),B.Wb(79,"fdp-form-group",51,52),B.Wb(81,"fdp-form-field",53,54),B.Rb(83,"fdp-checkbox",55),B.Vb(),B.Wb(84,"fdp-form-field",56,57),B.Rb(86,"fdp-checkbox",58),B.Vb(),B.Wb(87,"fdp-form-field",59,60),B.Rb(89,"fdp-checkbox",61),B.Vb(),B.Tc(90,Z,1,1,"ng-template",null,62,B.Uc),B.Vb(),B.Vb(),B.Vb()),2&e){const e=B.Hc(4),t=B.Hc(7),o=B.Hc(10),r=B.Hc(13),a=B.Hc(16),c=B.Hc(19),i=B.Hc(22),l=B.Hc(25),b=B.Hc(76),d=B.Hc(82),f=B.Hc(85),s=B.Hc(88);B.Db(2),B.vc("formGroup",n.cities)("object",n.citiesData),B.Db(3),B.vc("tristate",!0)("formControl",e.formControl),B.Db(3),B.vc("tristate",!0)("formControl",t.formControl),B.Db(3),B.vc("tristate",!0)("formControl",o.formControl),B.Db(3),B.vc("tristate",!0)("formControl",r.formControl),B.Db(3),B.vc("tristate",!0)("formControl",a.formControl),B.Db(3),B.vc("tristate",!0)("formControl",c.formControl),B.Db(3),B.vc("tristate",!0)("tristateSelectable",!1)("formControl",i.formControl),B.Db(3),B.vc("tristate",!0)("tristateSelectable",!1)("formControl",l.formControl),B.Db(2),B.Xc("form value: ",B.pc(29,61,n.cities.getRawValue()),""),B.Db(8),B.vc("tristate",!0)("ngModel",n.havana),B.Db(2),B.vc("tristate",!0)("ngModel",n.beirut),B.Db(2),B.vc("tristate",!0)("ngModel",n.budapest),B.Db(2),B.vc("tristate",!0)("ngModel",n.lisbon),B.Db(2),B.vc("tristate",!0)("ngModel",n.istanbul),B.Db(2),B.vc("tristate",!0)("ngModel",n.busan),B.Db(2),B.vc("tristate",!0)("tristateSelectable",!1)("ngModel",n.dubrovnik),B.Db(2),B.vc("tristate",!0)("tristateSelectable",!1)("ngModel",n.jaipur),B.Db(3),B.Xc("Havana: ",n.havana,""),B.Db(2),B.Xc("Beirut: ",n.beirut,""),B.Db(2),B.Xc("Budapest: ",n.budapest,""),B.Db(2),B.Xc("Dubrovnik: ",n.dubrovnik,""),B.Db(3),B.Xc("Lisbon: ",n.lisbon,""),B.Db(2),B.Xc("Istanbul: ",n.istanbul,""),B.Db(2),B.Xc("Busan: ",n.busan,""),B.Db(2),B.Xc("Jaipur: ",n.jaipur,""),B.Db(3),B.vc("formGroup",n.registrationForm),B.Db(2),B.vc("formGroup",n.registrationForm),B.Db(4),B.vc("tristate",!0)("tristateSelectable",!1)("value",!1)("formControl",b.formControl),B.Db(2),B.vc("formGroup",n.registrationForm.get("agreements"))("object",n.choices),B.Db(4),B.vc("isBinary",!0)("formControl",d.formControl),B.Db(3),B.vc("isBinary",!0)("formControl",f.formControl),B.Db(3),B.vc("isBinary",!0)("formControl",s.formControl)}},directives:[O.a,G.r,G.j,X.a,I.a,G.q,G.g,G.t,G.B,P.o],pipes:[P.h],encapsulation:2}),e})();class _{constructor(e,n,t,o,r,a,c,i){this.paris=e,this.doha=n,this.amsterdam=t,this.venice=o,this.kyoto=r,this.barcelona=a,this.athens=c,this.sydney=i}}var ee=t("muRr"),ne=t("D676");function te(e,n){1&e&&(B.Wb(0,"span",13),B.Vc(1," Value is required "),B.Vb())}function oe(e,n){1&e&&(B.Wb(0,"span",13),B.Vc(1," Value is invalid "),B.Vb())}function re(e,n){if(1&e&&(B.Tc(0,te,2,0,"span",12),B.Tc(1,oe,2,0,"span",12)),2&e){const e=n.$implicit;B.vc("ngIf",e.required),B.Db(1),B.vc("ngIf",e.invalid)}}let ae=(()=>{class e{constructor(){this.customForm=new G.i({}),this.validators=[G.A.requiredTrue],this.data=new ce(!0,!0)}onSubmit(){alert("Status: "+this.customForm.status)}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-checkbox-error-handling"]],decls:24,vars:14,consts:[["hintPlacement","left","columnLayout","XL2-L1-M1-S1",3,"formGroup","object"],["fg",""],["id","presence","label","Your presence is necessary","hint","hint text","hintPlacement","left","rank","10","column","1","required","true",3,"validators"],["ffr1",""],["name","presence-cb","title","title text",3,"isBinary","formControl"],["id","aggrement","hint","hint text","hintPlacement","left","rank","15","column","2","required","true",3,"validators"],["ffr2",""],["name","aggrement-cb","title","Do you Agree with Terms and Conditions",3,"isBinary","formControl"],["fd-link","","href","#"],["id","button-1","rank","20","column","2"],["buttonType","emphasized","label","Submit",3,"click"],["i18n",""],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(e,n){if(1&e&&(B.Wb(0,"h3"),B.Vc(1,"Checkbox Error Handling"),B.Vb(),B.Wb(2,"fdp-form-group",0,1),B.Wb(4,"fdp-form-field",2,3),B.Rb(6,"fdp-checkbox",4),B.Vb(),B.Wb(7,"fdp-form-field",5,6),B.Wb(9,"fdp-checkbox",7),B.Vc(10," Do you Agree with "),B.Wb(11,"a",8),B.Vc(12," Terms and Conditions"),B.Vb(),B.Vc(13,"? "),B.Vb(),B.Vb(),B.Wb(14,"fdp-form-field",9),B.Wb(15,"fdp-button",10),B.jc("click",function(){return n.onSubmit()}),B.Vb(),B.Vb(),B.Tc(16,re,2,2,"ng-template",null,11,B.Uc),B.Vb(),B.Wb(18,"p"),B.Vc(19),B.oc(20,"json"),B.Vb(),B.Wb(21,"p"),B.Vc(22),B.oc(23,"json"),B.Vb()),2&e){const e=B.Hc(5),t=B.Hc(8);B.Db(2),B.vc("formGroup",n.customForm)("object",n.data),B.Db(2),B.vc("validators",n.validators),B.Db(2),B.vc("isBinary",!0)("formControl",e.formControl),B.Db(1),B.vc("validators",n.validators),B.Db(2),B.vc("isBinary",!0)("formControl",t.formControl),B.Db(10),B.Xc("Form value: ",B.pc(20,10,n.customForm.getRawValue()),""),B.Db(3),B.Xc("Form Status: ",B.pc(23,12,n.customForm.status),"")}},directives:[O.a,G.r,G.j,X.a,I.a,G.q,G.g,ee.a,ne.a,P.o],pipes:[P.h],encapsulation:2}),e})();class ce{constructor(e,n){this.presence=e,this.aggrement=n}}let ie=(()=>{class e{constructor(){this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:7,consts:[["id","checkboxLable"],["id","a11y1","rank","1",3,"noLabelLayout"],["name","checkboxA11y1","ariaLabel","checkbox using aria-label",3,"isBinary","ngModel","ngModelChange"],["id","a11y2","rank","2"],["name","checkboxA11y2","ariaLabelledBy","checkboxLable",3,"isBinary","ngModel","ngModelChange"],["id","a11y3","label","Disabled checkbox using aria-disabled","rank","3"],["name","checkboxA11y3","title","It is a disabled checkbox","disabled","true",3,"isBinary","ngModel","ngModelChange"]],template:function(e,n){1&e&&(B.Wb(0,"h3"),B.Vc(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),B.Vb(),B.Wb(2,"p",0),B.Vc(3,"checkbox using aria-labelledby"),B.Vb(),B.Wb(4,"fdp-form-group"),B.Wb(5,"fdp-form-field",1),B.Wb(6,"fdp-checkbox",2),B.jc("ngModelChange",function(e){return n.checkboxA11y1=e}),B.Vb(),B.Vb(),B.Wb(7,"fdp-form-field",3),B.Wb(8,"fdp-checkbox",4),B.jc("ngModelChange",function(e){return n.checkboxA11y2=e}),B.Vb(),B.Vb(),B.Wb(9,"fdp-form-field",5),B.Wb(10,"fdp-checkbox",6),B.jc("ngModelChange",function(e){return n.checkboxA11y3=e}),B.Vb(),B.Vb(),B.Vb()),2&e&&(B.Db(5),B.vc("noLabelLayout",!0),B.Db(1),B.vc("isBinary",!0)("ngModel",n.checkboxA11y1),B.Db(2),B.vc("isBinary",!0)("ngModel",n.checkboxA11y2),B.Db(2),B.vc("isBinary",!0)("ngModel",n.checkboxA11y3))},directives:[O.a,X.a,I.a,G.q,G.t],encapsulation:2}),e})(),le=(()=>{class e{constructor(){this.multiselectCheckbox=[{language:"html",code:o,fileName:"platform-multiselect-checkbox"},{language:"typescript",code:r,fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:a,fileName:"platform-binary-checkbox"},{language:"typescript",code:c,fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:i,fileName:"platform-checkbox-error-handling"},{language:"typescript",code:l,fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:b,fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:d,fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:f,fileName:"platform-tristate-checkbox"},{language:"typescript",code:s,fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:m,fileName:"platform-checkbox-a11y"},{language:"typescript",code:u,fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["app-checkbox"]],decls:57,vars:6,consts:[["id","with-form","componentName","checkbox"],[3,"exampleFiles"],["id","without-form","componentName","checkbox"],[2,"list-style-type","circle"],["id","with-value","componentName","checkbox"],["id","tristate","componentName","checkbox"],["id","state","componentName","checkbox"],["id","a11y","componentName","checkbox"]],template:function(e,n){1&e&&(B.Wb(0,"fd-docs-section-title",0),B.Vc(1," Binary Checkbox Used With Form\n"),B.Vb(),B.Wb(2,"description"),B.Vc(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),B.Vb(),B.Wb(4,"component-example"),B.Rb(5,"fdp-platform-binary-checkbox"),B.Vb(),B.Rb(6,"code-example",1),B.Rb(7,"separator"),B.Wb(8,"fd-docs-section-title",2),B.Vc(9," Checkbox Used Without Form\n"),B.Vb(),B.Wb(10,"description"),B.Vc(11," This example shows Binary Checkbox without form "),B.Wb(12,"ul",3),B.Wb(13,"li"),B.Vc(14,"checkbox with value property"),B.Vb(),B.Wb(15,"li"),B.Vc(16,"checkbox without value property"),B.Vb(),B.Vb(),B.Vb(),B.Wb(17,"component-example"),B.Rb(18,"fdp-platform-binary-checkbox-no-form"),B.Vb(),B.Rb(19,"code-example",1),B.Rb(20,"separator"),B.Wb(21,"fd-docs-section-title",4),B.Vc(22," Checkboxes With Value Property\n"),B.Vb(),B.Wb(23,"description"),B.Vc(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),B.Vb(),B.Wb(25,"component-example"),B.Rb(26,"fdp-platform-multiselect-checkbox"),B.Vb(),B.Rb(27,"code-example",1),B.Rb(28,"separator"),B.Wb(29,"fd-docs-section-title",5),B.Vc(30," Tristate Checkbox With Value Property and Without Value Property\n"),B.Vb(),B.Wb(31,"description"),B.Vc(32," This example shows tristate checkbox in Reactive form and Template driven form "),B.Wb(33,"ul",3),B.Wb(34,"li"),B.Vc(35,"Tristate checkbox with value property"),B.Vb(),B.Wb(36,"li"),B.Vc(37,"Tristate checkbox without value property"),B.Vb(),B.Vb(),B.Vb(),B.Wb(38,"component-example"),B.Rb(39,"fdp-platform-tristate-checkbox"),B.Vb(),B.Rb(40,"code-example",1),B.Rb(41,"separator"),B.Wb(42,"fd-docs-section-title",6),B.Vc(43," Checkbox With Form and State Change on Error\n"),B.Vb(),B.Wb(44,"description"),B.Vc(45,"This example shows Checkbox Error state, when form has error "),B.Vb(),B.Wb(46,"component-example"),B.Rb(47,"fdp-platform-checkbox-error-handling"),B.Vb(),B.Rb(48,"code-example",1),B.Rb(49,"separator"),B.Wb(50,"fd-docs-section-title",7),B.Vc(51," Accessibility on checkbox\n"),B.Vb(),B.Wb(52,"description"),B.Vc(53,"This example shows Checkbox accessibility"),B.Vb(),B.Wb(54,"component-example"),B.Rb(55,"fdp-platform-checkbox-a11y"),B.Vb(),B.Rb(56,"code-example",1)),2&e&&(B.Db(6),B.vc("exampleFiles",n.binaryCheckbox),B.Db(13),B.vc("exampleFiles",n.noFormCheckbox),B.Db(8),B.vc("exampleFiles",n.multiselectCheckbox),B.Db(13),B.vc("exampleFiles",n.triCheckbox),B.Db(8),B.vc("exampleFiles",n.errorCheckbox),B.Db(8),B.vc("exampleFiles",n.a11yCheckbox))},directives:[R.a,L.a,S.a,N,Y.a,$.a,q,E,Q,ae,ie],encapsulation:2}),e})();var be=t("dor/"),de=t("RJTZ"),fe=t("Kpas");let se=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=B.Kb({type:e,selectors:[["app-checkbox-header"]],decls:22,vars:0,consts:[["routerLink","/core/checkbox"],["routerLink","/platform/checkbox-group"],["module","PlatformCheckboxModule","subPackage","form"]],template:function(e,n){1&e&&(B.Wb(0,"header"),B.Vc(1,"Checkbox"),B.Vb(),B.Wb(2,"description"),B.Vc(3," This is an extension of the Checkbox component present in "),B.Wb(4,"a",0),B.Vc(5,"ngx-core"),B.Vb(),B.Vc(6,". "),B.Rb(7,"br"),B.Vc(8," For usecase of Multiple checkboxes selection, please see "),B.Wb(9,"a",1),B.Vc(10,"Checkbox Group"),B.Vb(),B.Vc(11,". "),B.Wb(12,"h3"),B.Vc(13,"Platform specific enhancements:"),B.Vb(),B.Wb(14,"ul"),B.Wb(15,"li"),B.Vc(16," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),B.Vb(),B.Wb(17,"li"),B.Vc(18,'Platform checkbox can be used outside form using "checked" property two way binding.'),B.Vb(),B.Vb(),B.Vb(),B.Rb(19,"import",2),B.Rb(20,"fd-header-tabs"),B.Rb(21,"router-outlet"))},directives:[be.a,L.a,h.f,de.a,fe.a,h.h],encapsulation:2}),e})();var me=t("Ccq/"),ue=t("G6Ao");const he=[{path:"",component:se,children:[{path:"",component:le},{path:"api",component:p.a,data:{content:g.a.checkbox}}]}];let pe=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=B.Ob({type:e}),e.\u0275inj=B.Nb({imports:[[h.g.forChild(he),k.a,ue.g,ue.b,me.b],h.g]}),e})()}}]);