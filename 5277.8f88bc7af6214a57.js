"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5277],{45277:(r,d,n)=>{n.r(d),n.d(d,{ContentDensityDocsModule:()=>P});var p=n(8674),a=n(36854),u=n(86487),e=n(5e3),c=n(24882),m=n(98791),s=n(63710);let y=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fd-content-density-header"]],decls:5,vars:0,consts:[["module","ContentDensityService","subPackage","utils"]],template:function(o,l){1&o&&(e.TgZ(0,"header"),e._uU(1,"Content Density"),e.qZA(),e._UZ(2,"import",0)(3,"fd-header-tabs")(4,"router-outlet"))},directives:[c.G,m.k,s.c,p.lC],encapsulation:2}),t})();var h=n(69785),D=n(44969),v=n(28595),g=n(59438),f=n(71338),C=n(52382),Z=n(40881),U=n(87757);let x=(()=>{class t{constructor(o){this._contentDensityService=o}ngOnInit(){this.selectedDensity=this._contentDensityService.contentDensity.value}onChange(){this._contentDensityService.contentDensity.next(this.selectedDensity)}}return t.\u0275fac=function(o){return new(o||t)(e.Y36(g.PG))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fd-content-density-example"]],decls:10,vars:1,consts:[[2,"display","flex"],[2,"margin-right","8px",3,"ngModel","ngModelChange"],["value","cozy"],["value","condensed"],["value","compact"],["fd-button",""]],template:function(o,l){1&o&&(e.TgZ(0,"div",0)(1,"fd-select",1),e.NdJ("ngModelChange",function(z){return l.selectedDensity=z})("ngModelChange",function(){return l.onChange()}),e.TgZ(2,"fd-option",2),e._uU(3,"Cozy"),e.qZA(),e.TgZ(4,"fd-option",3),e._uU(5,"Condensed"),e.qZA(),e.TgZ(6,"fd-option",4),e._uU(7,"Compact"),e.qZA()(),e.TgZ(8,"button",5),e._uU(9,'My size changes when "Compact" or "Condensed" is selected'),e.qZA()()),2&o&&(e.xp6(1),e.Q6J("ngModel",l.selectedDensity))},directives:[f.Hr,C.JJ,C.On,Z.x,U.r],encapsulation:2}),t})();var T=n(29871),A=n(33089);let E=(()=>{class t{constructor(){this.contentDensityExample=[{language:"typescript",code:h,fileName:"content-density-example",component:"ContentDensityExampleComponent"}]}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-content-density-docs"]],decls:37,vars:1,consts:[[3,"exampleFiles"]],template:function(o,l){1&o&&(e.TgZ(0,"description"),e._uU(1," Content Density can be maintained app-wide using the "),e.TgZ(2,"code"),e._uU(3,"ContentDensityService"),e.qZA(),e._uU(4,", and components can subscribe to a "),e.TgZ(5,"code"),e._uU(6,"BehaviorSubject"),e.qZA(),e._uU(7," managed by the service and use that to handle changes to the content density. Before using it, you should add "),e.TgZ(8,"code"),e._uU(9,"ContentDensityService"),e.qZA(),e._uU(10," to providers array to "),e.TgZ(11,"code"),e._uU(12,"AppModule"),e.qZA(),e._uU(13,", or other root module in your application. "),e._UZ(14,"br"),e._uU(15," Note that many components only come in one size, and others (such as the button below) only have "),e.TgZ(16,"code"),e._uU(17,"compact"),e.qZA(),e._uU(18," and "),e.TgZ(19,"code"),e._uU(20,"cozy"),e.qZA(),e._uU(21," sizes, so setting the size to "),e.TgZ(22,"code"),e._uU(23,"condensed"),e.qZA(),e._uU(24," will have same effect as compact. "),e._UZ(25,"br"),e._uU(26," All components that have content density options will first check to see if the developer has provided a "),e.TgZ(27,"code"),e._uU(28,"compact"),e.qZA(),e._uU(29," input value, and if not, it will then refer to the value set in the "),e.TgZ(30,"code"),e._uU(31,"ContentDensityService"),e.qZA(),e._uU(32,".\n"),e.qZA(),e.TgZ(33,"component-example"),e._UZ(34,"fd-content-density-example"),e.qZA(),e._UZ(35,"code-example",0)(36,"separator")),2&o&&(e.xp6(35),e.Q6J("exampleFiles",l.contentDensityExample))},directives:[D.w,v.O,x,T.E,A.N],encapsulation:2}),t})();var M=n(28674),S=n(36445);const O=[{path:"",component:y,children:[{path:"",component:E},{path:"api",component:a.h,data:{content:u.X.contentDensity}}]}];let P=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[p.Bz.forChild(O),M.g,S.An],p.Bz]}),t})()},98791:(r,d,n)=>{n.d(d,{k:()=>e});var p=n(59148),a=n(5e3),u=n(8566);let e=(()=>{class c{constructor(s){this.currentLib=s}get file(){return{code:`import { ${this.module} } from '${this.library}';`,language:"ts"}}ngOnInit(){const s=["@fundamental-ngx",this.currentLib];this.subPackage&&s.push(this.subPackage),this.library=s.join("/")}}return c.\u0275fac=function(s){return new(s||c)(a.Y36(p.b))},c.\u0275cmp=a.Xpm({type:c,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:1,vars:1,consts:[[3,"file"]],template:function(s,y){1&s&&a._UZ(0,"fd-code-snippet",0),2&s&&a.Q6J("file",y.file)},directives:[u.N],encapsulation:2,changeDetection:0}),c})()},69785:r=>{r.exports="import { Component, OnInit } from '@angular/core';\nimport { ContentDensity, ContentDensityService } from '@fundamental-ngx/core/utils';\n\n@Component({\n    selector: 'fd-content-density-example',\n    templateUrl: './content-density-example.component.html'\n})\nexport class ContentDensityExampleComponent implements OnInit {\n    selectedDensity: ContentDensity;\n\n    constructor(private _contentDensityService: ContentDensityService) {}\n\n    ngOnInit(): void {\n        this.selectedDensity = this._contentDensityService.contentDensity.value;\n    }\n\n    onChange(): void {\n        this._contentDensityService.contentDensity.next(this.selectedDensity);\n    }\n}\n"}}]);