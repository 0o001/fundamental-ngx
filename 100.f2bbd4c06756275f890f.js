(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{UsrI:function(e,n,o){"use strict";o.r(n),o.d(n,"CheckboxDocsModule",function(){return se});var t={};o.r(t),o.d(t,"default",function(){return C});var r={};o.r(r),o.d(r,"default",function(){return v});var a={};o.r(a),o.d(a,"default",function(){return x});var i={};o.r(i),o.d(i,"default",function(){return y});var c={};o.r(c),o.d(c,"default",function(){return V});var l={};o.r(l),o.d(l,"default",function(){return F});var b={};o.r(b),o.d(b,"default",function(){return U});var d={};o.r(d),o.d(d,"default",function(){return w});var f={};o.r(f),o.d(f,"default",function(){return M});var u={};o.r(u),o.d(u,"default",function(){return T});var m={};o.r(m),o.d(m,"default",function(){return B});var s={};o.r(s),o.d(s,"default",function(){return A});var p=o("tyNb"),h=o("jzzn"),g=o("IywY"),k=o("t9W5"),C='<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="sirius" label="Sirius" column="1" rank="1">\n        <fdp-checkbox name="sirius-cb" value="sirius" title="sirius" [(ngModel)]="field1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="vega" label="Vega" column="2" rank="1">\n        <fdp-checkbox name="vega-cb" value="vega" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem;">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [formGroup]="form1" [object]="form1Data" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #rfield1 id="einstein" label="Einstein" column="1" rank="1">\n        <fdp-checkbox name="einstein-cb" value="einstein" contentDensity="compact" title="Albert Einstein"\n            [formControl]="rfield1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 id="newton" label="Newton" column="2" rank="1">\n        <fdp-checkbox name="newton-cb" value="newton" contentDensity="compact" title="Issac Newton"\n            [formControl]="rfield2.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">form value: {{ form1.getRawValue() | json }}</div>\n',v="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n    field3: string[] = [];\n    field4: string[] = ['altair', 'deneb'];\n\n    form1 = new FormGroup({});\n    form1Data = new Form1data([], ['newton']);\n\n    form2 = new FormGroup({});\n\n    form3 = new FormGroup({});\n    form3data = new Form3data(['faraday', 'edison']);\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n\nclass Form3data {\n    constructor(public scientists: string[]) {}\n}\n",x='<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="yellow" label="Yellow" [noLabelLayout]="true" rank="4" [editable]="true">\n        <fdp-checkbox [name]="\'yellow-cb\'" [isBinary]="true" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="white" rank="4" label="White">\n        <fdp-checkbox name="white-cb" [isBinary]="true" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="violet" label="Violet" rank="4">\n        <fdp-checkbox name="violet-cb" [isBinary]="true" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [formGroup]="customForm" [object]="data">\n    <fdp-form-field #red id="red" label="Red" rank="4">\n        <fdp-checkbox name="red-cb" [isBinary]="true" title="Red" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            contentDensity="compact" [formControl]="red.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue id="blue" label="Blue" rank="4">\n        <fdp-checkbox name="blue-cb" [isBinary]="true" title="Blue" contentDensity="compact"\n            [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green id="green" label="Green" rank="4">\n        <fdp-checkbox name="green-cb" [isBinary]="true" title="Green" contentDensity="compact"\n            [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem;">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group>\n    <fdp-form-field #disabled id="disabled" label="Red" rank="1">\n        <fdp-checkbox name="disabled-cb" [isBinary]="true" title="Red"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" contentDensity="compact" disabled="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',y="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, Optional } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({});\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, @Optional() public green?: boolean) {}\n}\n",V='<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg hintPlacement="left" [formGroup]="customForm" [object]="data" columnLayout="XL2-L1-M1-S1">\n    <fdp-form-field #ffr1 id="presence" [validators]="validators" label="Your presence is necessary"\n        hint="presence is necessary" hintPlacement="left" rank="10" column="1">\n        <fdp-checkbox name="presence-cb" [isBinary]="true" title="Your presence is necessary" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 id="aggrement" [validators]="validators" hint="this selection is mandatory"\n        hintPlacement="left" rank="15" column="2">\n        <fdp-checkbox name="aggrement-cb" [isBinary]="true" title="Agree with terms" [formControl]="ffr2.formControl">\n            Do you Agree with <a href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="button-1" rank="20" column="2">\n        <fdp-button buttonType="emphasized" (click)="onSubmit()" label="Submit"></fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid">\n            Value is invalid\n        </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',F="import { FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm: FormGroup;\n    data: SomeObject;\n    validators: ValidatorFn[];\n\n    constructor() {\n        this.customForm = new FormGroup({});\n        this.validators = [Validators.requiredTrue];\n\n        this.data = new SomeObject(true, true);\n    }\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",U='<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" [value]="\'orion\'" title="Orion" [(checked)]="orion"\n    (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n    (change)="changeFunction($event)">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox [name]="\'cygnus\'" [isBinary]="true" [label]="\'Cygnus\'" title="Cygnus" [value]="\'cygnus\'"\n    [(checked)]="cygnus">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox [name]="\'lyra\'" [isBinary]="true" [label]="\'Lyra\'" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox [name]="\'gemini\'" [isBinary]="true" [label]="\'Gemini\'" title="Gemini" [(checked)]="gemini">\n</fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" title="Orion" [(checked)]="orion" [disabled]="true">\n</fdp-checkbox>\n',w="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n",M='<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [formGroup]="cities" [object]="citiesData" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #paris id="paris" label="Paris" column="1" rank="1">\n        <fdp-checkbox name="paris-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [formControl]="paris.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha id="doha" label="Doha" column="1" rank="3">\n        <fdp-checkbox name="doha-cb" value="Yes" [tristate]="true" [formControl]="doha.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam id="amsterdam" label="Amsterdam" column="1" rank="5">\n        <fdp-checkbox name="amsterdam-cb" value="Yes" [tristate]="true" [formControl]="amsterdam.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice id="venice" label="Venice" column="2" rank="2">\n        <fdp-checkbox name="venice-cb" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [tristate]="true" [formControl]="venice.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto id="kyoto" label="Kyoto" column="2" rank="4">\n        <fdp-checkbox name="kyoto-cb" [tristate]="true" [formControl]="kyoto.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona id="barcelona" label="Barcelona" column="2" rank="6">\n        <fdp-checkbox name="barcelona-cb" [tristate]="true" [formControl]="barcelona.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens id="athens" label="athens: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="athens-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="athens.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney id="sydney" label="Sydney: tristateSelectable false" column="2" rank="8">\n        <fdp-checkbox name="sydney-cb" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="sydney.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="havana" label="Havana" column="1" rank="1">\n        <fdp-checkbox name="havana-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [(ngModel)]="havana"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="beirut" label="Beirut" column="1" rank="3">\n        <fdp-checkbox name="beirut-cb" value="Yes" [tristate]="true" [(ngModel)]="beirut"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="budapest" label="Budapest" column="1" rank="5">\n        <fdp-checkbox name="budapest-cb" value="Yes" [tristate]="true" [(ngModel)]="budapest"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="lisbon" label="Lisbon" column="2" rank="2">\n        <fdp-checkbox name="lisbon-cb" [tristate]="true" [(ngModel)]="lisbon"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="istanbul" label="Istanbul" column="2" rank="4">\n        <fdp-checkbox name="istanbul-cb" [tristate]="true" [(ngModel)]="istanbul"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="busan" label="Busan" column="2" rank="6">\n        <fdp-checkbox name="busan-cb" [tristate]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="dubrovnik" label="Dubrovnik: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="dubrovnik-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="jaipur" label="Jaipur: tristateSelectable false" column="2" rank="7">\n        <fdp-checkbox name="jaipur-cb" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field column="1">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field column="2">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 id="acceptAll" label="Accept All" column="1" rank="1">\n            <fdp-checkbox name="all" [tristate]="true" [tristateSelectable]="false" [value]="false"\n                [formControl]="ffr1.formControl"></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid;">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="registrationForm.get(\'agreements\')"\n            [object]="choices">\n            <fdp-form-field #ffr2 id="termsAndConditions" label="I accept Terms and Conditions"\n                rank="3">\n                <fdp-checkbox name="termsAndConditions-cb" [isBinary]="true" [formControl]="ffr2.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 id="marketing" label="I want to receive Marketing Materials"\n                rank="3">\n                <fdp-checkbox name="marketing-cb" [isBinary]="true" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 id="newsletter" label="I want want to sign for a Newsletter"\n                rank="4">\n                <fdp-checkbox name="newsletter-cb" [isBinary]="true" [formControl]="ffr4.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required">\n                    value is required\n                </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>\n',T="import { Component, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean = null;\n    public busan = true;\n    public dubrovnik: boolean = null;\n    public jaipur: boolean = null;\n\n    public cities = new FormGroup({});\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public registrationForm = new FormGroup({\n        agreements: new FormGroup({})\n    });\n\n    public choices: Object = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements').patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean,\n        public athens: string | boolean,\n        public sydney: string | boolean\n    ) {}\n}\n",B='<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group>\n    <fdp-form-field id="a11y1" [noLabelLayout]="true" rank="1">\n        <fdp-checkbox name="checkboxA11y1" [isBinary]="true" ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y2" rank="2">\n        <fdp-checkbox name="checkboxA11y2" [isBinary]="true" ariaLabelledBy="checkboxLable"\n            [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y3" label="Disabled checkbox using aria-disabled" rank="3">\n        <fdp-checkbox name="checkboxA11y3" [isBinary]="true" title="It is a disabled checkbox" disabled="true"\n            [(ngModel)]="checkboxA11y3"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',A="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",j=o("fXoL"),L=o("ddaM"),S=o("kt86"),G=o("X1JU"),D=o("mrSG"),Q=o("3Pt+"),O=o("I7mx"),R=o("npbV"),I=o("bcZn"),N=o("ofXK"),P=function(){function e(){this.customForm=new Q.i({}),this.data=new Y(!1,!0),this.yellow=!1,this.white=!0}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:25,consts:[[3,"noLabelLayout"],["id","yellow","label","Yellow","rank","4",3,"noLabelLayout","editable"],[3,"name","isBinary","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","white","rank","4","label","White"],["name","white-cb","title","White",3,"isBinary","ngModel","ngModelChange"],["id","violet","label","Violet","rank","4"],["name","violet-cb","title","Violet",3,"isBinary","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"formGroup","object"],["id","red","label","Red","rank","4"],["red",""],["name","red-cb","title","Red","contentDensity","compact",3,"isBinary","formControl","checkedChange","indeterminateChange","change"],["id","blue","label","Blue","rank","4"],["blue",""],["name","blue-cb","title","Blue","contentDensity","compact",3,"isBinary","formControl"],["id","green","label","Green","rank","4"],["green",""],["name","green-cb","title","Green","contentDensity","compact",3,"isBinary","formControl"],["id","disabled","label","Red","rank","1"],["disabled",""],["name","disabled-cb","title","Red","contentDensity","compact","disabled","true",3,"isBinary","checkedChange","indeterminateChange","change"]],template:function(e,n){if(1&e&&(j.Vb(0,"h3"),j.Tc(1,"Binary Checkbox in Template Driven Form"),j.Ub(),j.Vb(2,"fdp-form-group",0),j.Vb(3,"fdp-form-field",1),j.Vb(4,"fdp-checkbox",2),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.yellow=e}),j.Ub(),j.Ub(),j.Vb(5,"fdp-form-field",3),j.Vb(6,"fdp-checkbox",4),j.ic("ngModelChange",function(e){return n.white=e}),j.Ub(),j.Ub(),j.Vb(7,"fdp-form-field",5),j.Vb(8,"fdp-checkbox",6),j.ic("ngModelChange",function(e){return n.violet=e}),j.Ub(),j.Ub(),j.Ub(),j.Vb(9,"div",7),j.Vb(10,"div"),j.Tc(11),j.Ub(),j.Vb(12,"div"),j.Tc(13),j.Ub(),j.Vb(14,"div"),j.Tc(15),j.Ub(),j.Ub(),j.Qb(16,"br"),j.Qb(17,"br"),j.Vb(18,"h3"),j.Tc(19,"Binary Checkbox in Reactive/Model Driven Form"),j.Ub(),j.Vb(20,"fdp-form-group",8),j.Vb(21,"fdp-form-field",9,10),j.Vb(23,"fdp-checkbox",11),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Ub(),j.Vb(24,"fdp-form-field",12,13),j.Qb(26,"fdp-checkbox",14),j.Ub(),j.Vb(27,"fdp-form-field",15,16),j.Qb(29,"fdp-checkbox",17),j.Ub(),j.Ub(),j.Vb(30,"div",7),j.Tc(31),j.nc(32,"json"),j.Ub(),j.Vb(33,"h3"),j.Tc(34,"Disabled Checkbox"),j.Ub(),j.Vb(35,"fdp-form-group"),j.Vb(36,"fdp-form-field",18,19),j.Vb(38,"fdp-checkbox",20),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Ub(),j.Ub()),2&e){var o=j.Gc(22),t=j.Gc(25),r=j.Gc(28);j.Cb(2),j.uc("noLabelLayout",!1),j.Cb(1),j.uc("noLabelLayout",!0)("editable",!0),j.Cb(1),j.uc("name","yellow-cb")("isBinary",!0)("ngModel",n.yellow),j.Cb(2),j.uc("isBinary",!0)("ngModel",n.white),j.Cb(2),j.uc("isBinary",!0)("ngModel",n.violet),j.Cb(3),j.Vc("Yellow: ",n.yellow,""),j.Cb(2),j.Vc("White: ",n.white,""),j.Cb(2),j.Vc("Violet: ",n.violet,""),j.Cb(5),j.uc("formGroup",n.customForm)("object",n.data),j.Cb(3),j.uc("isBinary",!0)("formControl",o.formControl),j.Cb(3),j.uc("isBinary",!0)("formControl",t.formControl),j.Cb(3),j.uc("isBinary",!0)("formControl",r.formControl),j.Cb(2),j.Vc("form value: ",j.oc(32,23,n.customForm.getRawValue()),""),j.Cb(7),j.uc("isBinary",!0)}},directives:[O.a,R.a,I.a,Q.q,Q.t,Q.r,Q.j,Q.g],pipes:[N.h],encapsulation:2}),e}(),Y=function(){return Object(D.b)([Object(D.f)(2,Object(j.C)()),Object(D.e)("design:paramtypes",[Boolean,Boolean,Boolean])],function(e,n,o){this.red=e,this.blue=n,this.green=o})}(),$=o("5HkS"),W=o("Hxo2"),E=function(){function e(){this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:27,consts:[["title","Orion",3,"name","isBinary","label","value","checked","checkedChange","indeterminateChange","change"],["title","Cygnus",3,"name","isBinary","label","value","checked","checkedChange"],["title","Lyra",3,"name","isBinary","label","checked","checkedChange"],["title","Gemini",3,"name","isBinary","label","checked","checkedChange"],["title","Orion",3,"name","isBinary","label","checked","disabled","checkedChange"]],template:function(e,n){1&e&&(j.Vb(0,"h3"),j.Tc(1,"Binary Checkbox With Value"),j.Ub(),j.Vb(2,"fdp-checkbox",0),j.ic("checkedChange",function(e){return n.orion=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Vb(3,"div"),j.Tc(4),j.Ub(),j.Vb(5,"fdp-checkbox",1),j.ic("checkedChange",function(e){return n.cygnus=e}),j.Ub(),j.Vb(6,"div"),j.Tc(7),j.Ub(),j.Qb(8,"br"),j.Qb(9,"br"),j.Vb(10,"h3"),j.Tc(11,"Binary Checkbox Without Value"),j.Ub(),j.Vb(12,"fdp-checkbox",2),j.ic("checkedChange",function(e){return n.lyra=e}),j.Ub(),j.Vb(13,"div"),j.Tc(14),j.Ub(),j.Vb(15,"fdp-checkbox",3),j.ic("checkedChange",function(e){return n.gemini=e}),j.Ub(),j.Vb(16,"div"),j.Tc(17),j.Ub(),j.Vb(18,"h3"),j.Tc(19,"Disabled Checkbox"),j.Ub(),j.Vb(20,"fdp-checkbox",4),j.ic("checkedChange",function(e){return n.orion=e}),j.Ub()),2&e&&(j.Cb(2),j.uc("name","orion")("isBinary",!0)("label","Orion")("value","orion")("checked",n.orion),j.Cb(2),j.Vc("value: ",n.orion,""),j.Cb(1),j.uc("name","cygnus")("isBinary",!0)("label","Cygnus")("value","cygnus")("checked",n.cygnus),j.Cb(2),j.Vc("value: ",n.cygnus,""),j.Cb(5),j.uc("name","lyra")("isBinary",!0)("label","Lyra")("checked",n.lyra),j.Cb(2),j.Vc("value: ",n.lyra,""),j.Cb(1),j.uc("name","gemini")("isBinary",!0)("label","Gemini")("checked",n.gemini),j.Cb(2),j.Vc("value: ",n.gemini,""),j.Cb(3),j.uc("name","orion")("isBinary",!0)("label","Orion")("checked",n.orion)("disabled",!0))},directives:[I.a],encapsulation:2}),e}(),J=function(){function e(){this.field1=[],this.field2=["vega"],this.field3=[],this.field4=["altair","deneb"],this.form1=new Q.i({}),this.form1Data=new q([],["newton"]),this.form2=new Q.i({}),this.form3=new Q.i({}),this.form3data=new X(["faraday","edison"])}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:11,consts:[["columnLayout","XL2-L2-M1-S1"],["id","sirius","label","Sirius","column","1","rank","1"],["name","sirius-cb","value","sirius","title","sirius",3,"ngModel","ngModelChange"],["id","vega","label","Vega","column","2","rank","1"],["name","vega-cb","value","vega","title","Vega",3,"ngModel","ngModelChange"],[2,"padding-left","2rem"],["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["rmsfg",""],["id","einstein","label","Einstein","column","1","rank","1"],["rfield1",""],["name","einstein-cb","value","einstein","contentDensity","compact","title","Albert Einstein",3,"formControl"],["id","newton","label","Newton","column","2","rank","1"],["rfield2",""],["name","newton-cb","value","newton","contentDensity","compact","title","Issac Newton",3,"formControl"]],template:function(e,n){if(1&e&&(j.Vb(0,"h3"),j.Tc(1,"Template Driven Form"),j.Ub(),j.Vb(2,"p"),j.Tc(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),j.Ub(),j.Vb(4,"fdp-form-group",0),j.Vb(5,"fdp-form-field",1),j.Vb(6,"fdp-checkbox",2),j.ic("ngModelChange",function(e){return n.field1=e}),j.Ub(),j.Ub(),j.Vb(7,"fdp-form-field",3),j.Vb(8,"fdp-checkbox",4),j.ic("ngModelChange",function(e){return n.field2=e}),j.Ub(),j.Ub(),j.Ub(),j.Vb(9,"div",5),j.Tc(10),j.Ub(),j.Vb(11,"div",5),j.Tc(12),j.Ub(),j.Qb(13,"br"),j.Qb(14,"br"),j.Vb(15,"h3"),j.Tc(16,"Reactive/Model Driven Form"),j.Ub(),j.Vb(17,"p"),j.Tc(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),j.Ub(),j.Vb(19,"fdp-form-group",6,7),j.Vb(21,"fdp-form-field",8,9),j.Qb(23,"fdp-checkbox",10),j.Ub(),j.Vb(24,"fdp-form-field",11,12),j.Qb(26,"fdp-checkbox",13),j.Ub(),j.Ub(),j.Vb(27,"div",5),j.Tc(28),j.nc(29,"json"),j.Ub()),2&e){var o=j.Gc(22),t=j.Gc(25);j.Cb(6),j.uc("ngModel",n.field1),j.Cb(2),j.uc("ngModel",n.field2),j.Cb(2),j.Vc("field1: ",n.field1,""),j.Cb(2),j.Vc("field2: ",n.field2,""),j.Cb(7),j.uc("formGroup",n.form1)("object",n.form1Data),j.Cb(4),j.uc("formControl",o.formControl),j.Cb(3),j.uc("formControl",t.formControl),j.Cb(2),j.Vc("form value: ",j.oc(29,9,n.form1.getRawValue()),"")}},directives:[O.a,R.a,I.a,Q.q,Q.t,Q.r,Q.j,Q.g],pipes:[N.h],encapsulation:2}),e}(),q=function(){return function(e,n){this.einstein=e,this.newton=n}}(),X=function(){return function(e){this.scientists=e}}(),H=o("lJxs");function z(e,n){1&e&&(j.Tb(0),j.Tc(1," value is required "),j.Sb())}function K(e,n){1&e&&j.Rc(0,z,2,0,"ng-container",63),2&e&&j.uc("ngIf",n.$implicit.required)}var Z=function(){function e(){this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new Q.i({}),this.citiesData=new _(!1,"Yes",null,!1,!0,null,null,!1),this.registrationForm=new Q.i({agreements:new Q.i({})}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}return e.prototype.ngAfterViewInit=function(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()},e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.prototype.setAgreementsOnAcceptAllChange=function(){var e=this;this.registrationForm.get("acceptAll").valueChanges.subscribe(function(n){return e.acceptAll(n)})},e.prototype.setControlOnAgreementsChange=function(){var e=this;this.registrationForm.get("agreements").valueChanges.pipe(Object(H.a)(function(n){return e.getValuesFromObject(n)}),Object(H.a)(function(e){var n=e.reduce(function(e,n){return n&&e},!0),o=e.reduce(function(e,n){return!n&&e},!0);return!!n||!o&&null})).subscribe(function(n){return e.setAcceptAll(n)})},e.prototype.acceptAll=function(e){null!==e&&this.registrationForm.get("agreements").patchValue({marketing:e,newsletter:e,termsAndConditions:e},{emitEvent:!1})},e.prototype.setAcceptAll=function(e){var n;(null===(n=this.registrationForm.get("acceptAll"))||void 0===n?void 0:n.value)!==e&&this.registrationForm.patchValue({acceptAll:e},{emitEvent:!1})},e.prototype.getValuesFromObject=function(e){return Object.keys(e).map(function(n){return e[n]})},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:63,consts:[["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["id","paris","label","Paris","column","1","rank","1"],["paris",""],["name","paris-cb","value","Yes",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","doha","label","Doha","column","1","rank","3"],["doha",""],["name","doha-cb","value","Yes",3,"tristate","formControl"],["id","amsterdam","label","Amsterdam","column","1","rank","5"],["amsterdam",""],["name","amsterdam-cb","value","Yes",3,"tristate","formControl"],["id","venice","label","Venice","column","2","rank","2"],["venice",""],["name","venice-cb",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","kyoto","label","Kyoto","column","2","rank","4"],["kyoto",""],["name","kyoto-cb",3,"tristate","formControl"],["id","barcelona","label","Barcelona","column","2","rank","6"],["barcelona",""],["name","barcelona-cb",3,"tristate","formControl"],["id","athens","label","athens: tristateSelectable false","column","1","rank","7"],["athens",""],["name","athens-cb","value","Yes",3,"tristate","tristateSelectable","formControl"],["id","sydney","label","Sydney: tristateSelectable false","column","2","rank","8"],["sydney",""],["name","sydney-cb",3,"tristate","tristateSelectable","formControl"],["columnLayout","XL2-L2-M1-S1"],["id","havana","label","Havana","column","1","rank","1"],["name","havana-cb","value","Yes",3,"tristate","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","beirut","label","Beirut","column","1","rank","3"],["name","beirut-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","budapest","label","Budapest","column","1","rank","5"],["name","budapest-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","lisbon","label","Lisbon","column","2","rank","2"],["name","lisbon-cb",3,"tristate","ngModel","ngModelChange","checkedChange","indeterminateChange","change"],["id","istanbul","label","Istanbul","column","2","rank","4"],["name","istanbul-cb",3,"tristate","ngModel","ngModelChange"],["id","busan","label","Busan","column","2","rank","6"],["name","busan-cb",3,"tristate","ngModel","ngModelChange"],["id","dubrovnik","label","Dubrovnik: tristateSelectable false","column","1","rank","7"],["name","dubrovnik-cb","value","Yes",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","jaipur","label","Jaipur: tristateSelectable false","column","2","rank","7"],["name","jaipur-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["column","1"],["column","2"],[3,"formGroup"],["form","ngForm"],["fgtristate",""],["id","acceptAll","label","Accept All","column","1","rank","1"],["ffr1",""],["name","all",3,"tristate","tristateSelectable","value","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["id","termsAndConditions","label","I accept Terms and Conditions","rank","3"],["ffr2",""],["name","termsAndConditions-cb",3,"isBinary","formControl"],["id","marketing","label","I want to receive Marketing Materials","rank","3"],["ffr3",""],["name","marketing-cb",3,"isBinary","formControl"],["id","newsletter","label","I want want to sign for a Newsletter","rank","4"],["ffr4",""],["name","newsletter-cb",3,"isBinary","formControl"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(j.Vb(0,"h3"),j.Tc(1,"Reactive Form: TriState Checkbox With Value and Without Value"),j.Ub(),j.Vb(2,"fdp-form-group",0),j.Vb(3,"fdp-form-field",1,2),j.Vb(5,"fdp-checkbox",3),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Ub(),j.Vb(6,"fdp-form-field",4,5),j.Qb(8,"fdp-checkbox",6),j.Ub(),j.Vb(9,"fdp-form-field",7,8),j.Qb(11,"fdp-checkbox",9),j.Ub(),j.Vb(12,"fdp-form-field",10,11),j.Vb(14,"fdp-checkbox",12),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Ub(),j.Vb(15,"fdp-form-field",13,14),j.Qb(17,"fdp-checkbox",15),j.Ub(),j.Vb(18,"fdp-form-field",16,17),j.Qb(20,"fdp-checkbox",18),j.Ub(),j.Vb(21,"fdp-form-field",19,20),j.Qb(23,"fdp-checkbox",21),j.Ub(),j.Vb(24,"fdp-form-field",22,23),j.Qb(26,"fdp-checkbox",24),j.Ub(),j.Ub(),j.Vb(27,"div"),j.Tc(28),j.nc(29,"json"),j.Ub(),j.Qb(30,"br"),j.Qb(31,"br"),j.Vb(32,"h3"),j.Tc(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),j.Ub(),j.Vb(34,"fdp-form-group",25),j.Vb(35,"fdp-form-field",26),j.Vb(36,"fdp-checkbox",27),j.ic("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.havana=e}),j.Ub(),j.Ub(),j.Vb(37,"fdp-form-field",28),j.Vb(38,"fdp-checkbox",29),j.ic("ngModelChange",function(e){return n.beirut=e}),j.Ub(),j.Ub(),j.Vb(39,"fdp-form-field",30),j.Vb(40,"fdp-checkbox",31),j.ic("ngModelChange",function(e){return n.budapest=e}),j.Ub(),j.Ub(),j.Vb(41,"fdp-form-field",32),j.Vb(42,"fdp-checkbox",33),j.ic("ngModelChange",function(e){return n.lisbon=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),j.Ub(),j.Ub(),j.Vb(43,"fdp-form-field",34),j.Vb(44,"fdp-checkbox",35),j.ic("ngModelChange",function(e){return n.istanbul=e}),j.Ub(),j.Ub(),j.Vb(45,"fdp-form-field",36),j.Vb(46,"fdp-checkbox",37),j.ic("ngModelChange",function(e){return n.busan=e}),j.Ub(),j.Ub(),j.Vb(47,"fdp-form-field",38),j.Vb(48,"fdp-checkbox",39),j.ic("ngModelChange",function(e){return n.dubrovnik=e}),j.Ub(),j.Ub(),j.Vb(49,"fdp-form-field",40),j.Vb(50,"fdp-checkbox",41),j.ic("ngModelChange",function(e){return n.jaipur=e}),j.Ub(),j.Ub(),j.Vb(51,"fdp-form-field",42),j.Vb(52,"div"),j.Tc(53),j.Ub(),j.Vb(54,"div"),j.Tc(55),j.Ub(),j.Vb(56,"div"),j.Tc(57),j.Ub(),j.Vb(58,"div"),j.Tc(59),j.Ub(),j.Ub(),j.Vb(60,"fdp-form-field",43),j.Vb(61,"div"),j.Tc(62),j.Ub(),j.Vb(63,"div"),j.Tc(64),j.Ub(),j.Vb(65,"div"),j.Tc(66),j.Ub(),j.Vb(67,"div"),j.Tc(68),j.Ub(),j.Ub(),j.Ub(),j.Vb(69,"h3"),j.Tc(70,"TriState Checkbox Used with Multiple checkboxes"),j.Ub(),j.Vb(71,"form",44,45),j.Vb(73,"fdp-form-group",44,46),j.Vb(75,"fdp-form-field",47,48),j.Qb(77,"fdp-checkbox",49),j.Ub(),j.Ub(),j.Vb(78,"div",50),j.Vb(79,"fdp-form-group",51,52),j.Vb(81,"fdp-form-field",53,54),j.Qb(83,"fdp-checkbox",55),j.Ub(),j.Vb(84,"fdp-form-field",56,57),j.Qb(86,"fdp-checkbox",58),j.Ub(),j.Vb(87,"fdp-form-field",59,60),j.Qb(89,"fdp-checkbox",61),j.Ub(),j.Rc(90,K,1,1,"ng-template",null,62,j.Sc),j.Ub(),j.Ub(),j.Ub()),2&e){var o=j.Gc(4),t=j.Gc(7),r=j.Gc(10),a=j.Gc(13),i=j.Gc(16),c=j.Gc(19),l=j.Gc(22),b=j.Gc(25),d=j.Gc(76),f=j.Gc(82),u=j.Gc(85),m=j.Gc(88);j.Cb(2),j.uc("formGroup",n.cities)("object",n.citiesData),j.Cb(3),j.uc("tristate",!0)("formControl",o.formControl),j.Cb(3),j.uc("tristate",!0)("formControl",t.formControl),j.Cb(3),j.uc("tristate",!0)("formControl",r.formControl),j.Cb(3),j.uc("tristate",!0)("formControl",a.formControl),j.Cb(3),j.uc("tristate",!0)("formControl",i.formControl),j.Cb(3),j.uc("tristate",!0)("formControl",c.formControl),j.Cb(3),j.uc("tristate",!0)("tristateSelectable",!1)("formControl",l.formControl),j.Cb(3),j.uc("tristate",!0)("tristateSelectable",!1)("formControl",b.formControl),j.Cb(2),j.Vc("form value: ",j.oc(29,61,n.cities.getRawValue()),""),j.Cb(8),j.uc("tristate",!0)("ngModel",n.havana),j.Cb(2),j.uc("tristate",!0)("ngModel",n.beirut),j.Cb(2),j.uc("tristate",!0)("ngModel",n.budapest),j.Cb(2),j.uc("tristate",!0)("ngModel",n.lisbon),j.Cb(2),j.uc("tristate",!0)("ngModel",n.istanbul),j.Cb(2),j.uc("tristate",!0)("ngModel",n.busan),j.Cb(2),j.uc("tristate",!0)("tristateSelectable",!1)("ngModel",n.dubrovnik),j.Cb(2),j.uc("tristate",!0)("tristateSelectable",!1)("ngModel",n.jaipur),j.Cb(3),j.Vc("Havana: ",n.havana,""),j.Cb(2),j.Vc("Beirut: ",n.beirut,""),j.Cb(2),j.Vc("Budapest: ",n.budapest,""),j.Cb(2),j.Vc("Dubrovnik: ",n.dubrovnik,""),j.Cb(3),j.Vc("Lisbon: ",n.lisbon,""),j.Cb(2),j.Vc("Istanbul: ",n.istanbul,""),j.Cb(2),j.Vc("Busan: ",n.busan,""),j.Cb(2),j.Vc("Jaipur: ",n.jaipur,""),j.Cb(3),j.uc("formGroup",n.registrationForm),j.Cb(2),j.uc("formGroup",n.registrationForm),j.Cb(4),j.uc("tristate",!0)("tristateSelectable",!1)("value",!1)("formControl",d.formControl),j.Cb(2),j.uc("formGroup",n.registrationForm.get("agreements"))("object",n.choices),j.Cb(4),j.uc("isBinary",!0)("formControl",f.formControl),j.Cb(3),j.uc("isBinary",!0)("formControl",u.formControl),j.Cb(3),j.uc("isBinary",!0)("formControl",m.formControl)}},directives:[O.a,Q.r,Q.j,R.a,I.a,Q.q,Q.g,Q.t,Q.B,N.o],pipes:[N.h],encapsulation:2}),e}(),_=function(){return function(e,n,o,t,r,a,i,c){this.paris=e,this.doha=n,this.amsterdam=o,this.venice=t,this.kyoto=r,this.barcelona=a,this.athens=i,this.sydney=c}}(),ee=o("oxJj");function ne(e,n){1&e&&(j.Vb(0,"span"),j.Tc(1," Value is required "),j.Ub())}function oe(e,n){1&e&&(j.Vb(0,"span"),j.Tc(1," Value is invalid "),j.Ub())}function te(e,n){if(1&e&&(j.Rc(0,ne,2,0,"span",12),j.Rc(1,oe,2,0,"span",12)),2&e){var o=n.$implicit;j.uc("ngIf",o.required),j.Cb(1),j.uc("ngIf",o.invalid)}}var re=function(){function e(){this.customForm=new Q.i({}),this.validators=[Q.A.requiredTrue],this.data=new ae(!0,!0)}return e.prototype.onSubmit=function(){alert("Status: "+this.customForm.status)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-checkbox-error-handling"]],decls:24,vars:14,consts:[["hintPlacement","left","columnLayout","XL2-L1-M1-S1",3,"formGroup","object"],["fg",""],["id","presence","label","Your presence is necessary","hint","presence is necessary","hintPlacement","left","rank","10","column","1",3,"validators"],["ffr1",""],["name","presence-cb","title","Your presence is necessary",3,"isBinary","formControl"],["id","aggrement","hint","this selection is mandatory","hintPlacement","left","rank","15","column","2",3,"validators"],["ffr2",""],["name","aggrement-cb","title","Agree with terms",3,"isBinary","formControl"],["href","#"],["id","button-1","rank","20","column","2"],["buttonType","emphasized","label","Submit",3,"click"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(j.Vb(0,"h3"),j.Tc(1,"Checkbox Error Handling"),j.Ub(),j.Vb(2,"fdp-form-group",0,1),j.Vb(4,"fdp-form-field",2,3),j.Qb(6,"fdp-checkbox",4),j.Ub(),j.Vb(7,"fdp-form-field",5,6),j.Vb(9,"fdp-checkbox",7),j.Tc(10," Do you Agree with "),j.Vb(11,"a",8),j.Tc(12," Terms and Conditions"),j.Ub(),j.Tc(13,"? "),j.Ub(),j.Ub(),j.Vb(14,"fdp-form-field",9),j.Vb(15,"fdp-button",10),j.ic("click",function(){return n.onSubmit()}),j.Ub(),j.Ub(),j.Rc(16,te,2,2,"ng-template",null,11,j.Sc),j.Ub(),j.Vb(18,"p"),j.Tc(19),j.nc(20,"json"),j.Ub(),j.Vb(21,"p"),j.Tc(22),j.nc(23,"json"),j.Ub()),2&e){var o=j.Gc(5),t=j.Gc(8);j.Cb(2),j.uc("formGroup",n.customForm)("object",n.data),j.Cb(2),j.uc("validators",n.validators),j.Cb(2),j.uc("isBinary",!0)("formControl",o.formControl),j.Cb(1),j.uc("validators",n.validators),j.Cb(2),j.uc("isBinary",!0)("formControl",t.formControl),j.Cb(10),j.Vc("Form value: ",j.oc(20,10,n.customForm.getRawValue()),""),j.Cb(3),j.Vc("Form Status: ",j.oc(23,12,n.customForm.status),"")}},directives:[O.a,Q.r,Q.j,R.a,I.a,Q.q,Q.g,ee.a,N.o],pipes:[N.h],encapsulation:2}),e}(),ae=function(){return function(e,n){this.presence=e,this.aggrement=n}}(),ie=function(){function e(){this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:7,consts:[["id","checkboxLable"],["id","a11y1","rank","1",3,"noLabelLayout"],["name","checkboxA11y1","ariaLabel","checkbox using aria-label",3,"isBinary","ngModel","ngModelChange"],["id","a11y2","rank","2"],["name","checkboxA11y2","ariaLabelledBy","checkboxLable",3,"isBinary","ngModel","ngModelChange"],["id","a11y3","label","Disabled checkbox using aria-disabled","rank","3"],["name","checkboxA11y3","title","It is a disabled checkbox","disabled","true",3,"isBinary","ngModel","ngModelChange"]],template:function(e,n){1&e&&(j.Vb(0,"h3"),j.Tc(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),j.Ub(),j.Vb(2,"p",0),j.Tc(3,"checkbox using aria-labelledby"),j.Ub(),j.Vb(4,"fdp-form-group"),j.Vb(5,"fdp-form-field",1),j.Vb(6,"fdp-checkbox",2),j.ic("ngModelChange",function(e){return n.checkboxA11y1=e}),j.Ub(),j.Ub(),j.Vb(7,"fdp-form-field",3),j.Vb(8,"fdp-checkbox",4),j.ic("ngModelChange",function(e){return n.checkboxA11y2=e}),j.Ub(),j.Ub(),j.Vb(9,"fdp-form-field",5),j.Vb(10,"fdp-checkbox",6),j.ic("ngModelChange",function(e){return n.checkboxA11y3=e}),j.Ub(),j.Ub(),j.Ub()),2&e&&(j.Cb(5),j.uc("noLabelLayout",!0),j.Cb(1),j.uc("isBinary",!0)("ngModel",n.checkboxA11y1),j.Cb(2),j.uc("isBinary",!0)("ngModel",n.checkboxA11y2),j.Cb(2),j.uc("isBinary",!0)("ngModel",n.checkboxA11y3))},directives:[O.a,R.a,I.a,Q.q,Q.t],encapsulation:2}),e}(),ce=function(){function e(){this.multiselectCheckbox=[{language:"html",code:t,fileName:"platform-multiselect-checkbox"},{language:"typescript",code:r,fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:a,fileName:"platform-binary-checkbox"},{language:"typescript",code:i,fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:c,fileName:"platform-checkbox-error-handling"},{language:"typescript",code:l,fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:b,fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:d,fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:f,fileName:"platform-tristate-checkbox"},{language:"typescript",code:u,fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:m,fileName:"platform-checkbox-a11y"},{language:"typescript",code:s,fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["app-checkbox"]],decls:57,vars:18,consts:[[3,"id","componentName"],[3,"exampleFiles"],[2,"list-style-type","circle"]],template:function(e,n){1&e&&(j.Vb(0,"fd-docs-section-title",0),j.Tc(1," Binary Checkbox Used With Form\n"),j.Ub(),j.Vb(2,"description"),j.Tc(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),j.Ub(),j.Vb(4,"component-example"),j.Qb(5,"fdp-platform-binary-checkbox"),j.Ub(),j.Qb(6,"code-example",1),j.Qb(7,"separator"),j.Vb(8,"fd-docs-section-title",0),j.Tc(9," Checkbox Used Without Form\n"),j.Ub(),j.Vb(10,"description"),j.Tc(11," This example shows Binary Checkbox without form "),j.Vb(12,"ul",2),j.Vb(13,"li"),j.Tc(14,"checkbox with value property"),j.Ub(),j.Vb(15,"li"),j.Tc(16,"checkbox without value property"),j.Ub(),j.Ub(),j.Ub(),j.Vb(17,"component-example"),j.Qb(18,"fdp-platform-binary-checkbox-no-form"),j.Ub(),j.Qb(19,"code-example",1),j.Qb(20,"separator"),j.Vb(21,"fd-docs-section-title",0),j.Tc(22," Checkboxes With Value Property\n"),j.Ub(),j.Vb(23,"description"),j.Tc(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),j.Ub(),j.Vb(25,"component-example"),j.Qb(26,"fdp-platform-multiselect-checkbox"),j.Ub(),j.Qb(27,"code-example",1),j.Qb(28,"separator"),j.Vb(29,"fd-docs-section-title",0),j.Tc(30," Tistate Checkbox With Value Property and Without Value Property\n"),j.Ub(),j.Vb(31,"description"),j.Tc(32," This example shows tristate checkbox in Reactive form and Template driven form "),j.Vb(33,"ul",2),j.Vb(34,"li"),j.Tc(35,"Tristate checkbox with value property"),j.Ub(),j.Vb(36,"li"),j.Tc(37,"Tristate checkbox without value property"),j.Ub(),j.Ub(),j.Ub(),j.Vb(38,"component-example"),j.Qb(39,"fdp-platform-tristate-checkbox"),j.Ub(),j.Qb(40,"code-example",1),j.Qb(41,"separator"),j.Vb(42,"fd-docs-section-title",0),j.Tc(43," Checkbox With Form and State Change on Error\n"),j.Ub(),j.Vb(44,"description"),j.Tc(45,"This example shows Checkbox Error state, when form has error "),j.Ub(),j.Vb(46,"component-example"),j.Qb(47,"fdp-platform-checkbox-error-handling"),j.Ub(),j.Qb(48,"code-example",1),j.Qb(49,"separator"),j.Vb(50,"fd-docs-section-title",0),j.Tc(51," Accessibility on checkbox\n"),j.Ub(),j.Vb(52,"description"),j.Tc(53,"This example shows Checkbox accessibility"),j.Ub(),j.Vb(54,"component-example"),j.Qb(55,"fdp-platform-checkbox-a11y"),j.Ub(),j.Qb(56,"code-example",1)),2&e&&(j.uc("id","def1")("componentName","CheckboxComponent"),j.Cb(6),j.uc("exampleFiles",n.binaryCheckbox),j.Cb(2),j.uc("id","def5")("componentName","CheckboxComponent"),j.Cb(11),j.uc("exampleFiles",n.noFormCheckbox),j.Cb(2),j.uc("id","def2")("componentName","CheckboxComponent"),j.Cb(6),j.uc("exampleFiles",n.multiselectCheckbox),j.Cb(2),j.uc("id","def3")("componentName","CheckboxComponent"),j.Cb(11),j.uc("exampleFiles",n.triCheckbox),j.Cb(2),j.uc("id","def4")("componentName","CheckboxComponent"),j.Cb(6),j.uc("exampleFiles",n.errorCheckbox),j.Cb(2),j.uc("id","a1yExample")("componentName","PlatformCheckboxA11yComponent"),j.Cb(6),j.uc("exampleFiles",n.a11yCheckbox))},directives:[L.a,S.a,G.a,P,$.a,W.a,E,J,Z,re,ie],encapsulation:2}),e}(),le=o("dor/"),be=o("RJTZ"),de=o("Kpas"),fe=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=j.Jb({type:e,selectors:[["app-checkbox-header"]],decls:22,vars:2,consts:[[3,"routerLink"],["module","PlatformCheckboxModule"]],template:function(e,n){1&e&&(j.Vb(0,"header"),j.Tc(1,"Checkbox"),j.Ub(),j.Vb(2,"description"),j.Tc(3," This is an extension of the Checkbox component present in "),j.Vb(4,"a",0),j.Tc(5,"ngx-core"),j.Ub(),j.Tc(6,". "),j.Qb(7,"br"),j.Tc(8," For usecase of Multiple checkboxes selection, please see "),j.Vb(9,"a",0),j.Tc(10,"Checkbox Group"),j.Ub(),j.Tc(11,". "),j.Vb(12,"h3"),j.Tc(13,"Platform specific enhancements:"),j.Ub(),j.Vb(14,"ul"),j.Vb(15,"li"),j.Tc(16," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),j.Ub(),j.Vb(17,"li"),j.Tc(18,'Platform checkbox can be used outside form using "checked" property two way binding.'),j.Ub(),j.Ub(),j.Ub(),j.Qb(19,"import",1),j.Qb(20,"fd-header-tabs"),j.Qb(21,"router-outlet")),2&e&&(j.Cb(4),j.uc("routerLink","/core/checkbox"),j.Cb(5),j.uc("routerLink","/platform/checkbox"))},directives:[le.a,S.a,p.f,be.a,de.a,p.h],encapsulation:2}),e}(),ue=o("XaOr"),me=[{path:"",component:fe,children:[{path:"",component:ce},{path:"api",component:h.a,data:{content:g.a.checkbox}}]}],se=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=j.Nb({type:e}),e.\u0275inj=j.Mb({imports:[[p.g.forChild(me),k.a,ue.q,ue.g,ue.o],p.g]}),e}()}}]);