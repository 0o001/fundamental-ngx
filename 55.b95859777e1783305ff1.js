(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{"0Fgy":function(t,n,i){"use strict";i.r(n),i.d(n,"NotificationDocsModule",function(){return ut});var o={};i.r(o),i.d(o,"default",function(){return R});var e={};i.r(e),i.d(e,"default",function(){return N});var a={};i.r(a),i.d(a,"default",function(){return V});var c={};i.r(c),i.d(c,"default",function(){return U});var f={};i.r(f),i.d(f,"default",function(){return k});var r={};i.r(r),i.d(r,"default",function(){return x});var s={};i.r(s),i.d(s,"default",function(){return w});var l={};i.r(l),i.d(l,"default",function(){return G});var p={};i.r(p),i.d(p,"default",function(){return S});var d={};i.r(d),i.d(d,"default",function(){return B});var u=i("tyNb"),b=i("jzzn"),m=i("PzQJ"),v=i("fXoL"),h=i("dor/"),C=i("kt86"),y=i("RJTZ"),T=i("Kpas"),g=function(){function t(){}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=v.Jb({type:t,selectors:[["app-notification-docs-header"]],decls:7,vars:0,consts:[["module","NotificationModule"]],template:function(t,n){1&t&&(v.Vb(0,"header"),v.Tc(1,"Notification"),v.Ub(),v.Vb(2,"description"),v.Tc(3," The notification is component used to show that something happened. It is commonly used to show some simple information, gives possibility to somehow answer to this information or gather more information, by redirecting to the action.\n"),v.Ub(),v.Qb(4,"import",0),v.Qb(5,"fd-header-tabs"),v.Qb(6,"router-outlet"))},directives:[h.a,C.a,y.a,T.a,u.h],styles:[""]}),t}(),R="import { Component } from '@angular/core';\nimport { NotificationService } from '@fundamental-ngx/core';\nimport { NotificationContentComponent } from './notification-content.component';\n\n@Component({\n    selector: 'fd-notification-component-as-content-example',\n    template: `\n        <button fd-button label=\"Open from Component\" (click)=\"open()\"></button>\n        <span style=\"margin-left: 24px;\">{{ closeReason }}</span>\n    `\n})\nexport class NotificationComponentAsContentExampleComponent {\n    public closeReason: string;\n\n    constructor(private notificationService: NotificationService) {}\n\n    open(): void {\n        const notificationService = this.notificationService.open(NotificationContentComponent, {\n            data: {\n                title: 'Notification Title',\n                description: 'Notification Description',\n                metadata: 'Other Data',\n                moreInfo: 'More Info',\n                approve: 'Approve',\n                cancel: 'Cancel',\n                type: 'success'\n            },\n            size: 'm',\n            type: 'success'\n        });\n\n        notificationService.afterClosed.subscribe(\n            (result) => {\n                this.closeReason = 'Notification closed with result: ' + result;\n            },\n            (error) => {\n                this.closeReason = 'Notification dismissed with result: ' + error;\n            }\n        );\n    }\n}\n",N='import { Component } from \'@angular/core\';\nimport { NotificationRef } from \'@fundamental-ngx/core\';\n\n@Component({\n    selector: \'fd-notification-content\',\n    template: `\n        <fd-notification-header\n            (closeButtonClick)="notificationRef.dismiss(\'Close Icon Click\')"\n            [type]="notificationRef.data.type"\n        >\n            <h3 fd-notification-title>{{ notificationRef.data.title }}</h3>\n        </fd-notification-header>\n        <fd-notification-body>\n            <div fd-notification-content>\n                <div fd-notification-avatar>\n                    <fd-avatar size="s" label="John Doe">JD</fd-avatar>\n                </div>\n                <div fd-notification-text>\n                    <div fd-notification-description>\n                        {{ notificationRef.data.description }}\n                    </div>\n                    <div fd-notification-metadata>\n                        {{ notificationRef.data.metadata }}\n                    </div>\n                </div>\n            </div>\n            <fd-notification-footer>\n                <button fd-button [fdType]="\'transparent\'" [label]="notificationRef.data.moreInfo"></button>\n                <div fd-notification-actions>\n                    <button fd-button\n                            [fdType]="\'positive\'"\n                            [label]="notificationRef.data.approve"\n                            (click)="notificationRef.close(\'Approve Button Click\')">\n                    </button>\n                    <button fd-button\n                            [fdType]="\'negative\'"\n                            [label]="notificationRef.data.cancel"\n                            (click)="notificationRef.dismiss(\'Cancel Button Click\')">\n                    </button>\n                </div>\n            </fd-notification-footer>\n        </fd-notification-body>\n    `\n})\nexport class NotificationContentComponent {\n    constructor(public notificationRef: NotificationRef) {}\n}\n',V="import { Component, ComponentRef } from '@angular/core';\nimport { NotificationService } from '@fundamental-ngx/core';\nimport { NotificationGroupComponent } from '@fundamental-ngx/core';\n\n@Component({\n    selector: 'fd-notification-group-template-example',\n    templateUrl: './notification-group-template-example.component.html'\n})\nexport class NotificationGroupTemplateExampleComponent {\n    public closeReason: string;\n\n    constructor(private notificationService: NotificationService) {}\n\n    public currentGroup: ComponentRef<NotificationGroupComponent>;\n\n    newGroup(notificationComponent): void {\n        this.currentGroup = this.notificationService.createNotificationGroup(null);\n        const notifRef = this.notificationService.open(\n            notificationComponent,\n            {\n                size: 's',\n                type: 'warning'\n            },\n            this.currentGroup\n        );\n\n        notifRef.afterClosedGroup.subscribe(\n            (result) => {\n                this.currentGroup = null;\n                this.closeReason = 'Whole Group Closed ' + result;\n            },\n            (error) => {\n                this.currentGroup = null;\n                this.closeReason = 'Whole Group Dismissed ' + error;\n            }\n        );\n    }\n\n    addToGroup(notificationComponent): void {\n        if (this.currentGroup) {\n            const notificationRef = this.notificationService.open(\n                notificationComponent,\n                {\n                    size: 's',\n                    type: 'warning'\n                },\n                this.currentGroup\n            );\n\n            notificationRef.afterClosed.subscribe(\n                (result) => {\n                    this.closeReason = 'Notification closed with result: ' + result;\n                },\n                (error) => {\n                    this.closeReason = 'Notification dismissed with result: ' + error;\n                }\n            );\n        }\n    }\n}\n",U='<button fd-button label="Create Group" *ngIf="!currentGroup" (click)="newGroup(notificationGroupTemplate)"></button>\n<button fd-button label="Add To Group" *ngIf="currentGroup" (click)="addToGroup(notificationTemplate)"></button>\n<span style="margin-left: 20px;">{{ closeReason }}</span>\n\n<ng-template let-notification #notificationTemplate>\n    <fd-notification-header (closeButtonClick)="notification.dismiss(\'Close Button Click\')" [type]="\'warning\'">\n        <h3 fd-notification-title>Notification Title</h3>\n    </fd-notification-header>\n    <fd-notification-body>\n        <div fd-notification-content>\n            <div fd-notification-avatar>\n                <fd-avatar size="s" glyph="washing-machine"></fd-avatar>\n            </div>\n            <div fd-notification-text>\n                <div fd-notification-description>Description</div>\n                <div fd-notification-metadata>Meta Data</div>\n            </div>\n        </div>\n        <fd-notification-footer>\n            <button fd-button label="More Info" [fdType]="\'transparent\'"></button>\n            <div fd-notification-actions>\n                <button fd-button label="Approve" [fdType]="\'positive\'" (click)="notification.close(\'Approve Button Click\')">\n                </button>\n                <button fd-button label="Reject" [fdType]="\'negative\'" (click)="notification.dismiss(\'Reject Button Click\')">\n                </button>\n            </div>\n        </fd-notification-footer>\n    </fd-notification-body>\n</ng-template>\n\n<ng-template let-notification #notificationGroupTemplate>\n    <fd-notification-header\n        (closeButtonClick)="notification.dismissWholeGroup(\'Close Button Click\')"\n        [type]="\'warning\'"\n    >\n        <h3 fd-notification-title>Notification Group</h3>\n    </fd-notification-header>\n    <fd-notification-body>\n        <div fd-notification-content>\n            <div fd-notification-avatar>\n                <fd-avatar size="s" glyph="washing-machine"></fd-avatar>\n            </div>\n            <div fd-notification-text>\n                <div fd-notification-description>This is notification group</div>\n                <div fd-notification-metadata>Notification Group</div>\n            </div>\n        </div>\n        <fd-notification-footer>\n            <button fd-button label="More Info" [fdType]="\'transparent\'"></button>\n            <div fd-notification-actions>\n                <button fd-button\n                        label="Approve All"\n                        [fdType]="\'positive\'"\n                        (click)="notification.closeWholeGroup(\'Approve Button Click\')">\n                </button>\n                <button fd-button\n                        label="Reject All"\n                        [fdType]="\'negative\'"\n                        (click)="notification.dismissWholeGroup(\'Reject Button Click\')">\n                </button>\n            </div>\n        </fd-notification-footer>\n    </fd-notification-body>\n</ng-template>\n',k='import { Component } from \'@angular/core\';\nimport { NotificationRef } from \'@fundamental-ngx/core\';\n\n@Component({\n    selector: \'fd-notification-options-content\',\n    template: `\n        <fd-notification-header\n            (closeButtonClick)="notificationRef.dismiss(\'Close Icon Click\')"\n            [type]="notificationRef.data.type"\n        >\n            <h3 fd-notification-title>{{ notificationRef.data.title }}</h3>\n        </fd-notification-header>\n        <fd-notification-body>\n            <div fd-notification-content>\n                <div fd-notification-avatar>\n                    <fd-avatar size="s" [circle]="true" label="John Doe">JD</fd-avatar>\n                </div>\n                <div fd-notification-text>\n                    <div fd-notification-description>\n                        {{ notificationRef.data.description }}\n                    </div>\n                    <div fd-notification-metadata>\n                        {{ notificationRef.data.metadata }}\n                    </div>\n                </div>\n            </div>\n            <fd-notification-footer>\n                <button fd-button [label]="notificationRef.data.moreInfo" [fdType]="\'transparent\'"></button>\n                <div fd-notification-actions>\n                    <button fd-button\n                            [fdType]="\'positive\'"\n                            [label]="notificationRef.data.approve"\n                            (click)="notificationRef.close(\'Approve Button Click\')">\n                    </button>\n                    <button fd-button\n                            [fdType]="\'negative\'"\n                            [label]="notificationRef.data.cancel"\n                            (click)="notificationRef.dismiss(\'Cancel Button Click\')">\n                    </button>\n                </div>\n            </fd-notification-footer>\n        </fd-notification-body>\n    `\n})\nexport class NotificationOptionsContentComponent {\n    constructor(public notificationRef: NotificationRef) {}\n}\n',x="import { Component, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { NotificationService } from '@fundamental-ngx/core';\nimport { NotificationOptionsContentComponent } from './notification-options-content.component';\n\n@Component({\n    selector: 'fd-notification-options-example',\n    templateUrl: './notification-options-example.component.html',\n    styleUrls: ['./notification-options-example.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [NotificationService]\n})\nexport class NotificationOptionsExampleComponent {\n    @ViewChild('vc', { read: ViewContainerRef })\n    ref: ViewContainerRef;\n\n    data = {\n        title: 'Notification Title',\n        description: 'Notification Description',\n        metadata: 'Other Data',\n        moreInfo: 'More Info',\n        approve: 'Approve',\n        cancel: 'Cancel'\n    };\n\n    constructor(private notificationService: NotificationService) {}\n\n    openNotifications(): void {\n        this.ref.clear();\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            size: 's',\n            type: 'success',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            size: 'm',\n            type: 'success',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            type: 'success',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            type: 'warning',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            type: 'error',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n\n        this.notificationService.open(NotificationOptionsContentComponent, {\n            type: 'information',\n            data: this.data,\n            container: this.ref.element.nativeElement\n        });\n    }\n}\n",w='<div>\n    <button fd-button label="Create Notifications" (click)="openNotifications()"></button>\n</div>\n\n<div class="docs-notifications-inline-container" #vc></div>\n',G="import { Component } from '@angular/core';\nimport { NotificationService } from '@fundamental-ngx/core';\n\n@Component({\n    selector: 'fd-notification-open-template-example',\n    templateUrl: './notification-open-template-example.component.html',\n    styles: ['.action-button {margin-left: 12px;}']\n})\nexport class NotificationOpenTemplateExampleComponent {\n    public closeReason: string;\n\n    constructor(private notificationService: NotificationService) {}\n\n    open(notificationComponent): void {\n        const notificationRef = this.notificationService.open(notificationComponent, {\n            size: 's',\n            type: 'warning'\n        });\n\n        notificationRef.afterClosed.subscribe(\n            (result) => {\n                this.closeReason = 'Notification closed with result: ' + result;\n            },\n            (error) => {\n                this.closeReason = 'Notification dismissed with result: ' + error;\n            }\n        );\n    }\n}\n",S='<button fd-button label="Open Notification" (click)="open(notificationTemplate)"></button>\n<span style="margin-left: 24px;">{{ closeReason }}</span>\n\n<ng-template let-notification #notificationTemplate>\n    <fd-notification-header (closeButtonClick)="notification.dismiss(\'Close Button Click\')">\n        <h3 fd-notification-title>Notification</h3>\n    </fd-notification-header>\n    <fd-notification-body>\n        <div fd-notification-content>\n            <div fd-notification-avatar>\n                <fd-avatar size="s" [circle]="true" ></fd-avatar>\n            </div>\n            <div fd-notification-text>\n                <div fd-notification-description>Notification Description</div>\n                <div fd-notification-metadata>Notification Metadata</div>\n            </div>\n        </div>\n        <fd-notification-footer>\n            <button fd-button label="More Info" [fdType]="\'transparent\'"></button>\n            <div fd-notification-actions>\n                <button fd-button label="Approve" [fdType]="\'positive\'" (click)="notification.close(\'Approve Button Click\')">\n                </button>\n                <button fd-button label="Reject" [fdType]="\'negative\'" (click)="notification.dismiss(\'Reject Button Click\')">\n                </button>\n            </div>\n        </fd-notification-footer>\n    </fd-notification-body>\n</ng-template>\n',B="import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { NotificationService } from '@fundamental-ngx/core';\n\n@Component({\n    selector: 'fd-notification-component-as-object-example',\n    template: `\n        <ng-template #avatarRef>\n            <fd-avatar size=\"s\" [circle]=\"true\" label=\"John Doe\">JD</fd-avatar>\n        </ng-template>\n        <button fd-button label=\"Open from Object\" (click)=\"open()\"></button>\n        <span style=\"margin-left: 24px;\">{{ closeReason }}</span>\n    `\n})\nexport class NotificationAsObjectExampleComponent {\n    public closeReason: string;\n\n    @ViewChild('avatarRef', { read: TemplateRef }) avatarRef: TemplateRef<any>;\n\n    constructor(private notificationService: NotificationService) {}\n\n    open(): void {\n        const notificationService = this.notificationService.open(\n            {\n                title: 'Notification Title',\n                description: 'Notification Description',\n                metadata: 'Other Data',\n                moreInfo: 'More Info',\n                approve: 'Approve',\n                cancel: 'Cancel',\n                avatar: this.avatarRef,\n                cancelCallback: () => {\n                    notificationService.close('Cancel Button');\n                },\n                closeButtonCallback: () => {\n                    notificationService.dismiss('Close Button');\n                },\n                approveCallback: () => {\n                    notificationService.close('Approve Button');\n                }\n            },\n            {\n                size: 'm',\n                type: 'success'\n            }\n        );\n\n        notificationService.afterClosed.subscribe(\n            (result) => {\n                this.closeReason = 'Notification closed with result: ' + result;\n            },\n            (error) => {\n                this.closeReason = 'Notification dismissed with result: ' + error;\n            }\n        );\n    }\n}\n",A=i("X1JU"),I=i("Huv7"),D=i("FNNG"),j=i("N4xr"),z=i("tFGu"),O=i("VBmi"),Q=i("nnEg"),J=i("eDJG"),E=i("Kls2"),M=i("3qZE"),W=i("vp0V"),F=i("7Nsf"),P=i("rp8N"),$=i("Byxz"),L=function(){function t(t){this.notificationRef=t}return t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Kb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-options-content"]],decls:18,vars:11,consts:[[3,"type","closeButtonClick"],["fd-notification-title",""],["fd-notification-content",""],["fd-notification-avatar",""],["size","s","label","John Doe",3,"circle"],["fd-notification-text",""],["fd-notification-description",""],["fd-notification-metadata",""],["fd-button","",3,"label","fdType"],["fd-notification-actions",""],["fd-button","",3,"fdType","label","click"]],template:function(t,n){1&t&&(v.Vb(0,"fd-notification-header",0),v.ic("closeButtonClick",function(){return n.notificationRef.dismiss("Close Icon Click")}),v.Vb(1,"h3",1),v.Tc(2),v.Ub(),v.Ub(),v.Vb(3,"fd-notification-body"),v.Vb(4,"div",2),v.Vb(5,"div",3),v.Vb(6,"fd-avatar",4),v.Tc(7,"JD"),v.Ub(),v.Ub(),v.Vb(8,"div",5),v.Vb(9,"div",6),v.Tc(10),v.Ub(),v.Vb(11,"div",7),v.Tc(12),v.Ub(),v.Ub(),v.Ub(),v.Vb(13,"fd-notification-footer"),v.Qb(14,"button",8),v.Vb(15,"div",9),v.Vb(16,"button",10),v.ic("click",function(){return n.notificationRef.close("Approve Button Click")}),v.Ub(),v.Vb(17,"button",10),v.ic("click",function(){return n.notificationRef.dismiss("Cancel Button Click")}),v.Ub(),v.Ub(),v.Ub(),v.Ub()),2&t&&(v.uc("type",n.notificationRef.data.type),v.Cb(2),v.Uc(n.notificationRef.data.title),v.Cb(4),v.uc("circle",!0),v.Cb(4),v.Vc(" ",n.notificationRef.data.description," "),v.Cb(2),v.Vc(" ",n.notificationRef.data.metadata," "),v.Cb(2),v.uc("label",n.notificationRef.data.moreInfo)("fdType","transparent"),v.Cb(2),v.uc("fdType","positive")("label",n.notificationRef.data.approve),v.Cb(1),v.uc("fdType","negative")("label",n.notificationRef.data.cancel))},directives:[D.a,j.a,z.a,O.a,Q.a,J.a,E.a,M.a,W.a,F.a,P.a,$.a],encapsulation:2}),t}(),K=["vc"],H=function(){function t(t){this.notificationService=t,this.data={title:"Notification Title",description:"Notification Description",metadata:"Other Data",moreInfo:"More Info",approve:"Approve",cancel:"Cancel"}}return t.prototype.openNotifications=function(){this.ref.clear(),this.notificationService.open(L,{size:"s",type:"success",data:this.data,container:this.ref.element.nativeElement}),this.notificationService.open(L,{size:"m",type:"success",data:this.data,container:this.ref.element.nativeElement}),this.notificationService.open(L,{type:"success",data:this.data,container:this.ref.element.nativeElement}),this.notificationService.open(L,{type:"warning",data:this.data,container:this.ref.element.nativeElement}),this.notificationService.open(L,{type:"error",data:this.data,container:this.ref.element.nativeElement}),this.notificationService.open(L,{type:"information",data:this.data,container:this.ref.element.nativeElement})},t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Lb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-options-example"]],viewQuery:function(t,n){var i;1&t&&v.Yc(K,1,v.R),2&t&&v.Fc(i=v.jc())&&(n.ref=i.first)},features:[v.Bb([I.Lb])],decls:4,vars:0,consts:[["fd-button","","label","Create Notifications",3,"click"],[1,"docs-notifications-inline-container"],["vc",""]],template:function(t,n){1&t&&(v.Vb(0,"div"),v.Vb(1,"button",0),v.ic("click",function(){return n.openNotifications()}),v.Ub(),v.Ub(),v.Qb(2,"div",1,2))},directives:[P.a],styles:[".docs-notifications-inline-container .fd-notification-container{position:relative!important;display:block!important;z-index:1!important}"],encapsulation:2}),t}(),X=i("5HkS"),Y=i("Hxo2");function Z(t,n){1&t&&(v.Vb(0,"fd-notification-header",3),v.ic("closeButtonClick",function(){return n.$implicit.dismiss("Close Button Click")}),v.Vb(1,"h3",4),v.Tc(2,"Notification"),v.Ub(),v.Ub(),v.Vb(3,"fd-notification-body"),v.Vb(4,"div",5),v.Vb(5,"div",6),v.Qb(6,"fd-avatar",7),v.Ub(),v.Vb(7,"div",8),v.Vb(8,"div",9),v.Tc(9,"Notification Description"),v.Ub(),v.Vb(10,"div",10),v.Tc(11,"Notification Metadata"),v.Ub(),v.Ub(),v.Ub(),v.Vb(12,"fd-notification-footer"),v.Qb(13,"button",11),v.Vb(14,"div",12),v.Vb(15,"button",13),v.ic("click",function(){return n.$implicit.close("Approve Button Click")}),v.Ub(),v.Vb(16,"button",14),v.ic("click",function(){return n.$implicit.dismiss("Reject Button Click")}),v.Ub(),v.Ub(),v.Ub(),v.Ub()),2&t&&(v.Cb(6),v.uc("circle",!0),v.Cb(7),v.uc("fdType","transparent"),v.Cb(2),v.uc("fdType","positive"),v.Cb(1),v.uc("fdType","negative"))}var q=function(){function t(t){this.notificationService=t}return t.prototype.open=function(t){var n=this;this.notificationService.open(t,{size:"s",type:"warning"}).afterClosed.subscribe(function(t){n.closeReason="Notification closed with result: "+t},function(t){n.closeReason="Notification dismissed with result: "+t})},t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Lb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-open-template-example"]],decls:5,vars:1,consts:[["fd-button","","label","Open Notification",3,"click"],[2,"margin-left","24px"],["notificationTemplate",""],[3,"closeButtonClick"],["fd-notification-title",""],["fd-notification-content",""],["fd-notification-avatar",""],["size","s",3,"circle"],["fd-notification-text",""],["fd-notification-description",""],["fd-notification-metadata",""],["fd-button","","label","More Info",3,"fdType"],["fd-notification-actions",""],["fd-button","","label","Approve",3,"fdType","click"],["fd-button","","label","Reject",3,"fdType","click"]],template:function(t,n){if(1&t){var i=v.Wb();v.Vb(0,"button",0),v.ic("click",function(){v.Ic(i);var t=v.Gc(4);return n.open(t)}),v.Ub(),v.Vb(1,"span",1),v.Tc(2),v.Ub(),v.Rc(3,Z,17,4,"ng-template",null,2,v.Sc)}2&t&&(v.Cb(2),v.Uc(n.closeReason))},directives:[P.a,D.a,j.a,z.a,O.a,Q.a,J.a,E.a,M.a,W.a,F.a,$.a],styles:[".action-button[_ngcontent-%COMP%] {margin-left: 12px;}"]}),t}(),_=function(){function t(t){this.notificationRef=t}return t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Kb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-content"]],decls:18,vars:10,consts:[[3,"type","closeButtonClick"],["fd-notification-title",""],["fd-notification-content",""],["fd-notification-avatar",""],["size","s","label","John Doe"],["fd-notification-text",""],["fd-notification-description",""],["fd-notification-metadata",""],["fd-button","",3,"fdType","label"],["fd-notification-actions",""],["fd-button","",3,"fdType","label","click"]],template:function(t,n){1&t&&(v.Vb(0,"fd-notification-header",0),v.ic("closeButtonClick",function(){return n.notificationRef.dismiss("Close Icon Click")}),v.Vb(1,"h3",1),v.Tc(2),v.Ub(),v.Ub(),v.Vb(3,"fd-notification-body"),v.Vb(4,"div",2),v.Vb(5,"div",3),v.Vb(6,"fd-avatar",4),v.Tc(7,"JD"),v.Ub(),v.Ub(),v.Vb(8,"div",5),v.Vb(9,"div",6),v.Tc(10),v.Ub(),v.Vb(11,"div",7),v.Tc(12),v.Ub(),v.Ub(),v.Ub(),v.Vb(13,"fd-notification-footer"),v.Qb(14,"button",8),v.Vb(15,"div",9),v.Vb(16,"button",10),v.ic("click",function(){return n.notificationRef.close("Approve Button Click")}),v.Ub(),v.Vb(17,"button",10),v.ic("click",function(){return n.notificationRef.dismiss("Cancel Button Click")}),v.Ub(),v.Ub(),v.Ub(),v.Ub()),2&t&&(v.uc("type",n.notificationRef.data.type),v.Cb(2),v.Uc(n.notificationRef.data.title),v.Cb(8),v.Vc(" ",n.notificationRef.data.description," "),v.Cb(2),v.Vc(" ",n.notificationRef.data.metadata," "),v.Cb(2),v.uc("fdType","transparent")("label",n.notificationRef.data.moreInfo),v.Cb(2),v.uc("fdType","positive")("label",n.notificationRef.data.approve),v.Cb(1),v.uc("fdType","negative")("label",n.notificationRef.data.cancel))},directives:[D.a,j.a,z.a,O.a,Q.a,J.a,E.a,M.a,W.a,F.a,P.a,$.a],encapsulation:2}),t}(),tt=function(){function t(t){this.notificationService=t}return t.prototype.open=function(){var t=this;this.notificationService.open(_,{data:{title:"Notification Title",description:"Notification Description",metadata:"Other Data",moreInfo:"More Info",approve:"Approve",cancel:"Cancel",type:"success"},size:"m",type:"success"}).afterClosed.subscribe(function(n){t.closeReason="Notification closed with result: "+n},function(n){t.closeReason="Notification dismissed with result: "+n})},t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Lb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-component-as-content-example"]],decls:3,vars:1,consts:[["fd-button","","label","Open from Component",3,"click"],[2,"margin-left","24px"]],template:function(t,n){1&t&&(v.Vb(0,"button",0),v.ic("click",function(){return n.open()}),v.Ub(),v.Vb(1,"span",1),v.Tc(2),v.Ub()),2&t&&(v.Cb(2),v.Uc(n.closeReason))},directives:[P.a],encapsulation:2}),t}(),nt=i("ofXK");function it(t,n){if(1&t){var i=v.Wb();v.Vb(0,"button",5),v.ic("click",function(){v.Ic(i);var t=v.mc(),n=v.Gc(7);return t.newGroup(n)}),v.Ub()}}function ot(t,n){if(1&t){var i=v.Wb();v.Vb(0,"button",6),v.ic("click",function(){v.Ic(i);var t=v.mc(),n=v.Gc(5);return t.addToGroup(n)}),v.Ub()}}function et(t,n){1&t&&(v.Vb(0,"fd-notification-header",7),v.ic("closeButtonClick",function(){return n.$implicit.dismiss("Close Button Click")}),v.Vb(1,"h3",8),v.Tc(2,"Notification Title"),v.Ub(),v.Ub(),v.Vb(3,"fd-notification-body"),v.Vb(4,"div",9),v.Vb(5,"div",10),v.Qb(6,"fd-avatar",11),v.Ub(),v.Vb(7,"div",12),v.Vb(8,"div",13),v.Tc(9,"Description"),v.Ub(),v.Vb(10,"div",14),v.Tc(11,"Meta Data"),v.Ub(),v.Ub(),v.Ub(),v.Vb(12,"fd-notification-footer"),v.Qb(13,"button",15),v.Vb(14,"div",16),v.Vb(15,"button",17),v.ic("click",function(){return n.$implicit.close("Approve Button Click")}),v.Ub(),v.Vb(16,"button",18),v.ic("click",function(){return n.$implicit.dismiss("Reject Button Click")}),v.Ub(),v.Ub(),v.Ub(),v.Ub()),2&t&&(v.uc("type","warning"),v.Cb(13),v.uc("fdType","transparent"),v.Cb(2),v.uc("fdType","positive"),v.Cb(1),v.uc("fdType","negative"))}function at(t,n){1&t&&(v.Vb(0,"fd-notification-header",7),v.ic("closeButtonClick",function(){return n.$implicit.dismissWholeGroup("Close Button Click")}),v.Vb(1,"h3",8),v.Tc(2,"Notification Group"),v.Ub(),v.Ub(),v.Vb(3,"fd-notification-body"),v.Vb(4,"div",9),v.Vb(5,"div",10),v.Qb(6,"fd-avatar",11),v.Ub(),v.Vb(7,"div",12),v.Vb(8,"div",13),v.Tc(9,"This is notification group"),v.Ub(),v.Vb(10,"div",14),v.Tc(11,"Notification Group"),v.Ub(),v.Ub(),v.Ub(),v.Vb(12,"fd-notification-footer"),v.Qb(13,"button",15),v.Vb(14,"div",16),v.Vb(15,"button",19),v.ic("click",function(){return n.$implicit.closeWholeGroup("Approve Button Click")}),v.Ub(),v.Vb(16,"button",20),v.ic("click",function(){return n.$implicit.dismissWholeGroup("Reject Button Click")}),v.Ub(),v.Ub(),v.Ub(),v.Ub()),2&t&&(v.uc("type","warning"),v.Cb(13),v.uc("fdType","transparent"),v.Cb(2),v.uc("fdType","positive"),v.Cb(1),v.uc("fdType","negative"))}var ct=function(){function t(t){this.notificationService=t}return t.prototype.newGroup=function(t){var n=this;this.currentGroup=this.notificationService.createNotificationGroup(null),this.notificationService.open(t,{size:"s",type:"warning"},this.currentGroup).afterClosedGroup.subscribe(function(t){n.currentGroup=null,n.closeReason="Whole Group Closed "+t},function(t){n.currentGroup=null,n.closeReason="Whole Group Dismissed "+t})},t.prototype.addToGroup=function(t){var n=this;this.currentGroup&&this.notificationService.open(t,{size:"s",type:"warning"},this.currentGroup).afterClosed.subscribe(function(t){n.closeReason="Notification closed with result: "+t},function(t){n.closeReason="Notification dismissed with result: "+t})},t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Lb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-group-template-example"]],decls:8,vars:3,consts:[["fd-button","","label","Create Group",3,"click",4,"ngIf"],["fd-button","","label","Add To Group",3,"click",4,"ngIf"],[2,"margin-left","20px"],["notificationTemplate",""],["notificationGroupTemplate",""],["fd-button","","label","Create Group",3,"click"],["fd-button","","label","Add To Group",3,"click"],[3,"type","closeButtonClick"],["fd-notification-title",""],["fd-notification-content",""],["fd-notification-avatar",""],["size","s","glyph","washing-machine"],["fd-notification-text",""],["fd-notification-description",""],["fd-notification-metadata",""],["fd-button","","label","More Info",3,"fdType"],["fd-notification-actions",""],["fd-button","","label","Approve",3,"fdType","click"],["fd-button","","label","Reject",3,"fdType","click"],["fd-button","","label","Approve All",3,"fdType","click"],["fd-button","","label","Reject All",3,"fdType","click"]],template:function(t,n){1&t&&(v.Rc(0,it,1,0,"button",0),v.Rc(1,ot,1,0,"button",1),v.Vb(2,"span",2),v.Tc(3),v.Ub(),v.Rc(4,et,17,4,"ng-template",null,3,v.Sc),v.Rc(6,at,17,4,"ng-template",null,4,v.Sc)),2&t&&(v.uc("ngIf",!n.currentGroup),v.Cb(1),v.uc("ngIf",n.currentGroup),v.Cb(2),v.Uc(n.closeReason))},directives:[nt.o,P.a,D.a,j.a,z.a,O.a,Q.a,J.a,E.a,M.a,W.a,F.a,$.a],encapsulation:2}),t}(),ft=["avatarRef"];function rt(t,n){1&t&&(v.Vb(0,"fd-avatar",3),v.Tc(1,"JD"),v.Ub()),2&t&&v.uc("circle",!0)}var st=function(){function t(t){this.notificationService=t}return t.prototype.open=function(){var t=this,n=this.notificationService.open({title:"Notification Title",description:"Notification Description",metadata:"Other Data",moreInfo:"More Info",approve:"Approve",cancel:"Cancel",avatar:this.avatarRef,cancelCallback:function(){n.close("Cancel Button")},closeButtonCallback:function(){n.dismiss("Close Button")},approveCallback:function(){n.close("Approve Button")}},{size:"m",type:"success"});n.afterClosed.subscribe(function(n){t.closeReason="Notification closed with result: "+n},function(n){t.closeReason="Notification dismissed with result: "+n})},t.\u0275fac=function(n){return new(n||t)(v.Pb(I.Lb))},t.\u0275cmp=v.Jb({type:t,selectors:[["fd-notification-component-as-object-example"]],viewQuery:function(t,n){var i;1&t&&v.Yc(ft,1,v.N),2&t&&v.Fc(i=v.jc())&&(n.avatarRef=i.first)},decls:5,vars:1,consts:[["avatarRef",""],["fd-button","","label","Open from Object",3,"click"],[2,"margin-left","24px"],["size","s","label","John Doe",3,"circle"]],template:function(t,n){1&t&&(v.Rc(0,rt,2,1,"ng-template",null,0,v.Sc),v.Vb(2,"button",1),v.ic("click",function(){return n.open()}),v.Ub(),v.Vb(3,"span",2),v.Tc(4),v.Ub()),2&t&&(v.Cb(4),v.Uc(n.closeReason))},directives:[P.a,J.a],encapsulation:2}),t}(),lt=function(){function t(){this.componentAsContent=[{language:"typescript",code:o,fileName:"notification-component-as-content-example",component:"NotificationComponentAsContentExampleComponent",name:"Usage of Component",main:!0},{language:"typescript",code:e,name:"Content",fileName:"notification-content",component:"NotificationContentComponent",entryComponent:!0}],this.groups=[{language:"typescript",code:a,component:"NotificationGroupTemplateExampleComponent",fileName:"notification-group-template-example"},{language:"html",code:c,fileName:"notification-group-template-example"}],this.options=[{language:"typescript",code:r,fileName:"notification-options-example",component:"NotificationOptionsExampleComponent"},{language:"typescript",code:f,fileName:"notification-options-content",component:"NotificationOptionsContentComponent",entryComponent:!0},{language:"html",code:s,fileName:"notification-options-example"}],this.template=[{language:"typescript",code:l,component:"NotificationOpenTemplateExampleComponent",fileName:"notification-open-template-example"},{language:"html",code:p,fileName:"notification-open-template-example"}],this.object=[{language:"typescript",code:d,component:"NotificationAsObjectExampleComponent",fileName:"notification-component-as-object-example"}]}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=v.Jb({type:t,selectors:[["app-notification"]],decls:60,vars:5,consts:[[3,"exampleFiles"]],template:function(t,n){1&t&&(v.Vb(0,"h2"),v.Tc(1,"Notification"),v.Ub(),v.Vb(2,"description"),v.Tc(3," Notification Component can be used with a lot of different types and sizes. Also there is example of container usage. It is possible to provide container reference, where should the notification belong. By default it is a "),v.Vb(4,"code"),v.Tc(5,"body"),v.Ub(),v.Tc(6," element.\n"),v.Ub(),v.Vb(7,"component-example"),v.Qb(8,"fd-notification-options-example"),v.Ub(),v.Qb(9,"code-example",0),v.Qb(10,"separator"),v.Vb(11,"h2"),v.Tc(12,"Template as Content"),v.Ub(),v.Vb(13,"description"),v.Tc(14," The NotificationService allows passing in a template reference as the content of the notification. Add "),v.Vb(15,"code"),v.Tc(16,"let-notification"),v.Ub(),v.Tc(17," to the template element to access the injected "),v.Vb(18,"code"),v.Tc(19,"NotificationRef"),v.Ub(),v.Tc(20,". "),v.Qb(21,"br"),v.Qb(22,"br"),v.Tc(23," The example also features a confirmation notification. Subscribe to "),v.Vb(24,"code"),v.Tc(25,"afterClosed"),v.Ub(),v.Tc(26," to access the returned value. A dismissal will trigger an error on the observable, similar to rejecting a promise.\n"),v.Ub(),v.Vb(27,"component-example"),v.Qb(28,"fd-notification-open-template-example"),v.Ub(),v.Qb(29,"code-example",0),v.Qb(30,"separator"),v.Vb(31,"h2"),v.Tc(32,"Component as Content"),v.Ub(),v.Vb(33,"description"),v.Tc(34," A component type can be passed to the NotificationService open method as the content of the notification. Inject "),v.Vb(35,"code"),v.Tc(36,"NotificationRef"),v.Ub(),v.Tc(37," inside the content component to access methods such as close and dismiss.\n"),v.Ub(),v.Vb(38,"component-example"),v.Qb(39,"fd-notification-component-as-content-example"),v.Ub(),v.Qb(40,"code-example",0),v.Qb(41,"separator"),v.Vb(42,"h2"),v.Tc(43,"Notification Groups"),v.Ub(),v.Vb(44,"description"),v.Tc(45," Notifications can be used with groups. Groups allow to maintain all belonged notifications.\n"),v.Ub(),v.Vb(46,"component-example"),v.Qb(47,"fd-notification-group-template-example"),v.Ub(),v.Qb(48,"code-example",0),v.Qb(49,"separator"),v.Vb(50,"h2"),v.Tc(51,"Notifications From Object"),v.Ub(),v.Vb(52,"description"),v.Tc(53," Notifications can be opened without creating separated templates, to achieve it, it is needed to pass "),v.Vb(54,"code"),v.Tc(55,"NotificationDefault"),v.Ub(),v.Tc(56," object instead of content.\n"),v.Ub(),v.Vb(57,"component-example"),v.Qb(58,"fd-notification-component-as-object-example"),v.Ub(),v.Qb(59,"code-example",0)),2&t&&(v.Cb(9),v.uc("exampleFiles",n.options),v.Cb(20),v.uc("exampleFiles",n.template),v.Cb(11),v.uc("exampleFiles",n.componentAsContent),v.Cb(8),v.uc("exampleFiles",n.groups),v.Cb(11),v.uc("exampleFiles",n.object))},directives:[C.a,A.a,H,X.a,Y.a,q,tt,ct,st],encapsulation:2}),t}(),pt=i("t9W5"),dt=[{path:"",component:g,children:[{path:"",component:lt},{path:"api",component:b.a,data:{content:m.a.notification}}]}],ut=function(){function t(){}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=v.Nb({type:t}),t.\u0275inj=v.Mb({providers:[I.Lb],imports:[[u.g.forChild(dt),pt.a,I.Jb,I.h],u.g]}),t}()}}]);