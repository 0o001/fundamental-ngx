(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{"B+eS":function(e,n,t){"use strict";t.r(n),t.d(n,"PlatformApprovalFlowDocsModule",function(){return R});var a={};t.r(a),t.d(a,"default",function(){return D});var r={};t.r(r),t.d(r,"default",function(){return b});var o=t("tyNb"),s=t("Huv7"),i=t("XaOr"),d=t("jzzn"),p=t("IywY"),m=t("t9W5"),l=t("fXoL"),u=t("dor/"),c=t("kt86"),g=t("RJTZ"),h=t("Kpas"),v=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=l.Jb({type:e,selectors:[["fd-approval-flow-header"]],decls:18,vars:0,consts:[["module","PlatformApprovalFlowModule","path","@fundamental-ngx/platform"]],template:function(e,n){1&e&&(l.Vb(0,"header"),l.Tc(1,"Approval Flow"),l.Ub(),l.Vb(2,"description"),l.Tc(3," The Approval Flow component is a complex component which tracks and manages the approval process for a business object. From the Approval Flow component a user is able to: "),l.Vb(4,"ul"),l.Vb(5,"li"),l.Tc(6,"See the progress of approvals"),l.Ub(),l.Vb(7,"li"),l.Tc(8,"Add, edit and delete approvers"),l.Ub(),l.Vb(9,"li"),l.Tc(10,"Add, delete and move approvals"),l.Ub(),l.Vb(11,"li"),l.Tc(12,"Add and remove watchers"),l.Ub(),l.Vb(13,"li"),l.Tc(14,"Send reminder notifications to approvers"),l.Ub(),l.Ub(),l.Ub(),l.Qb(15,"import",0),l.Qb(16,"fd-header-tabs"),l.Qb(17,"router-outlet"))},directives:[u.a,c.a,g.a,h.a,o.h],styles:[""]}),e}(),D='import { Component } from \'@angular/core\';\n\nimport { ApprovalNode, ApprovalStatus } from \'@fundamental-ngx/platform\';\n\nimport { ApprovalFlowExampleDataSource } from \'./approval-flow-example-data-source.class\';\n\n@Component({\n    selector: \'fdp-approval-flow-example\',\n    template: `\n        <fdp-approval-flow\n            title="Basic Approval Flow Demo"\n            [dataSource]="dataSource"\n            [userDetailsTemplate]="userDetailsTemplate"\n            [checkDueDate]="checkDueDate"\n            [allowSendRemindersForStatuses]="sendReminderStatuses"\n            [isEditAvailable]="editModeEnabled"\n            (nodeClick)="nodeClick($event)"\n        >\n        </fdp-approval-flow>\n        <ng-template #userDetailsTemplate let-data="data">\n            <div style="margin-bottom: 4px;"><b>Contact info</b></div>\n\n            <div>Mobile <br> <a href="javascript:void(0)">{{ data?.phone }}</a></div>\n            <div>E-mail <br> <a href="javascript:void(0)">{{ data?.email }}</a></div>\n\n            <div style="margin-top: 1rem;margin-bottom: 4px;"><b>Company</b></div>\n\n            <div>Name <br> Company A</div>\n            <div>Address <br> 481 West Street, Anytown OH, 83749, USA</div>\n        </ng-template>\n\n        <p>\n            Selected example:\n            <select [(ngModel)]="selectedExample" (ngModelChange)="dataSource.selectGraph(selectedExample)">\n                <option *ngFor="let example of examples" [value]="example">{{ example | titlecase }}</option>\n            </select>\n        </p>\n        <p>Enable "Edit mode": <input type="checkbox" [(ngModel)]="editModeEnabled"></p>\n        <p>Show due date warnings: <input type="checkbox" [(ngModel)]="checkDueDate"></p>\n        <p>Set all statuses to "Not Started": <input type="checkbox" [(ngModel)]="setNotStartedStatuses" (ngModelChange)="setNotStarted()"></p>\n        <p style="display: flex;align-items: center;">Allow sending reminders to approvers with statuses: \n            <fd-multi-input \n                style="margin-left: .5rem;"\n                [compact]="true"\n                [dropdownValues]="allStatuses"\n                [(ngModel)]="sendReminderStatuses"\n            ></fd-multi-input>\n        </p>\n    `\n})\nexport class PlatformApprovalFlowExampleComponent {\n    dataSource = new ApprovalFlowExampleDataSource(\'complex\');\n    examples = [\'simple\', \'medium\', \'complex\'];\n    selectedExample = \'complex\';\n    checkDueDate = false;\n    setNotStartedStatuses = false;\n    editModeEnabled = true;\n    allStatuses = [\'in progress\', \'not started\', \'approved\', \'rejected\'];\n    sendReminderStatuses: ApprovalStatus[] = [\'in progress\', \'not started\'];\n\n    nodeClick(node: ApprovalNode): void {\n        console.log(\'Node click handler\', node);\n    }\n\n    setNotStarted(): void {\n        this.dataSource.setDefaultStatus(this.setNotStartedStatuses ? \'not started\' : null);\n    }\n}\n',b="import {\n    ApprovalDataSource,\n    ApprovalNode,\n    ApprovalProcess,\n    ApprovalStatus,\n    ApprovalTeam,\n    ApprovalUser\n} from '@fundamental-ngx/platform';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\nconst DAY_IN_MILISECONDS = 1000 * 60 * 60 * 24;\n\nconst users: ApprovalUser[] = [\n    {\n        id: 'uid28141',\n        name: 'Luis Franklin',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/91.jpg'\n    },\n    {\n        id: 'uid08141',\n        name: 'Renee Miles',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/11.jpg'\n    },\n    {\n        id: 'uid99641',\n        name: 'Elaine Myers',\n        description: 'Legal team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/75.jpg'\n    },\n    {\n        id: 'uid38141',\n        name: 'Emma Cole',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/91.jpg'\n    },\n    {\n        id: 'uid37866',\n        name: 'Daniel Sullivan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/9.jpg'\n    },\n    {\n        id: 'uid09141',\n        name: 'Salvador Duncan',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/14.jpg'\n    },\n    {\n        id: 'uid09641',\n        name: 'Caleb Taylor',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/17.jpg'\n    },\n    {\n        id: 'uid99651',\n        name: 'Julie Peters',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/77.jpg'\n    },\n    {\n        id: 'uid99655',\n        name: 'Fred Gibson',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/45.jpg'\n    },\n    {\n        id: 'uid81355',\n        name: 'George Carter',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/85.jpg'\n    },\n    {\n        id: 'uid81353',\n        name: 'Lillian Walker',\n        description: 'Marketing team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/25.jpg'\n    },\n    {\n        id: 'uid81955',\n        name: 'Josephine Carlson',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/88.jpg'\n    },\n    {\n        id: 'uid77135',\n        name: 'Tristan Sutton',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/5.jpg'\n    },\n    {\n        id: 'uid77115',\n        name: 'Alvin Stephens',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/78.jpg'\n    },\n    {\n        id: 'uid77111',\n        name: 'Logan Herrera',\n        description: 'Sales team',\n        imgUrl: 'https://randomuser.me/api/portraits/men/53.jpg'\n    },\n    {\n        id: 'uid66141',\n        name: 'Melissa Martin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/87.jpg'\n    },\n    {\n        id: 'uid66151',\n        name: 'Sofia Hanson',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/24.jpg'\n    },\n    {\n        id: 'uid66161',\n        name: 'Jill Fuller',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/64.jpg'\n    },\n    {\n        id: 'uid66171',\n        name: 'Ella Franklin',\n        description: 'Accounting team',\n        imgUrl: 'https://randomuser.me/api/portraits/women/55.jpg'\n    }\n];\nconst usersMap = {};\nusers.forEach(u => usersMap[u.id] = u);\n\nconst teams: ApprovalTeam[] = [\n    {\n        id: 'teamId1',\n        name: 'Accounting team',\n        description: '',\n        members: ['uid66171', 'uid66161', 'uid66151', 'uid66141']\n    },\n    {\n        id: 'teamId2',\n        name: 'Sales team',\n        description: '',\n        members: ['uid77111', 'uid77115', 'uid77135', 'uid81955']\n    },\n    {\n        id: 'teamId3',\n        name: 'Legal team',\n        description: '',\n        members: ['uid28141', 'uid08141', 'uid99641']\n    },\n    {\n        id: 'teamId4',\n        name: 'Marketing team',\n        description: '',\n        members: ['uid38141', 'uid37866', 'uid09141', 'uid81353', 'uid81355', 'uid99655', 'uid09641', 'uid99651']\n    }\n];\n\nconst simpleGraph: ApprovalProcess = {\n    watchers: [getUser('uid66161')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(10),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst mediumGraph: ApprovalProcess = {\n    watchers: [getUser('uid66151'), getUser('uid77115')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid77135')],\n            status: 'approved',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [getUser('uid77111'), getUser('uid09641'), getUser('uid09141'), getUser('uid37866'), getUser('uid99641'), getUser('uid38141')],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(5),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst complexGraph: ApprovalProcess = {\n    watchers: [getUser('uid66151'), getUser('uid66141'), getUser('uid99651'), getUser('uid99655')],\n    nodes: [\n        {\n            id: 'ID1',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81955')],\n            status: 'approved',\n            targets: ['ID2', 'ID22', 'ID222'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid66171')],\n            status: 'in progress',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID22',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid28141')],\n            status: 'approved',\n            targets: ['ID220'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID222',\n            name: 'node name',\n            description: 'Marketing team',\n            approvers: [getUser('uid77111'), getUser('uid09641')],\n            status: 'in progress',\n            targets: ['ID2220'],\n            dueDate: daysFromNow(3),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID220',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid08141')],\n            status: 'rejected',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID2220',\n            name: 'node name',\n            description: 'Marketing',\n            approvers: [getUser('uid81353')],\n            status: 'not started',\n            targets: ['ID3'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID3',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid81355')],\n            status: 'not started',\n            targets: ['ID4'],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        },\n        {\n            id: 'ID4',\n            name: 'node name',\n            description: 'node description',\n            approvers: [getUser('uid99651')],\n            status: 'not started',\n            targets: [],\n            dueDate: daysFromNow(30),\n            createDate: daysFromNow(-30)\n        }\n    ]\n};\n\nconst graphs = {\n    simple: simpleGraph,\n    medium: mediumGraph,\n    complex: complexGraph\n};\n\nfunction getUser(id: string): ApprovalUser {\n    return usersMap[id];\n}\n\nfunction daysFromNow(days: number): Date {\n    return new Date(Date.now() + DAY_IN_MILISECONDS * days);\n}\n\ntype GraphTypes = 'simple' | 'medium' | 'complex';\n\nexport class ApprovalFlowExampleDataSource implements ApprovalDataSource {\n    selectedGraph: GraphTypes;\n    defaultStatus: ApprovalStatus | null = null;\n\n    readonly state: BehaviorSubject<ApprovalProcess>;\n\n    constructor(selectedGraph: string = 'complex') {\n        this.selectedGraph = selectedGraph as GraphTypes;\n        this.state = new BehaviorSubject<ApprovalProcess>(graphs[this.selectedGraph]);\n    }\n\n    setDefaultStatus(status: ApprovalStatus | null): void {\n        this.defaultStatus = status;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    selectGraph(selectedGraph: string = 'complex'): void {\n        this.selectedGraph = selectedGraph as GraphTypes;\n        const graph = { ...graphs[this.selectedGraph] };\n        graph.nodes = graph.nodes.map(n => {\n            const nodeCopy = { ...n };\n            if (this.defaultStatus) {\n                nodeCopy.status = this.defaultStatus;\n            }\n\n            return nodeCopy;\n        });\n        this.state.next(graph);\n    }\n\n    fetch(): Observable<ApprovalProcess> {\n        return this.state;\n    }\n\n    fetchUser(id: string): Observable<any> {\n        const user = users.find(u => u.id === id);\n\n        return of({\n            phone: Math.random().toFixed(13).toString().replace('0.', ''),\n            email: `${user.name.toLowerCase().split(' ').join('.')}@company.com`\n        });\n    }\n\n    fetchApprovers(): Observable<ApprovalUser[]> {\n        return of(users);\n    }\n\n    fetchWatchers(): Observable<ApprovalUser[]> {\n        return of(users);\n    }\n\n    fetchTeams(): Observable<ApprovalTeam[]> {\n        return of(teams);\n    }\n\n    updateWatchers(watchers: ApprovalUser[]): void {\n        console.log('call \"updateWatchers\" method from ApprovalDataSource implementation class');\n        const currentGraph = graphs[this.selectedGraph];\n        currentGraph.watchers = watchers;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    updateApproval(approval: ApprovalNode): void {\n        console.log('call \"updateApproval\" method from ApprovalDataSource implementation class');\n    }\n\n    updateApprovals(approvals: ApprovalNode[]): void {\n        console.log('call \"updateApprovals\" method from ApprovalDataSource implementation class');\n        const currentGraph = graphs[this.selectedGraph];\n        currentGraph.nodes = approvals;\n        this.selectGraph(this.selectedGraph);\n    }\n\n    sendReminders(members: ApprovalUser[], approval: ApprovalNode): Observable<any> {\n        console.log('call \"sendReminders\" method from ApprovalDataSource implementation class');\n        return of(null);\n    }\n}\n",f=t("X1JU"),w=t("mrSG"),S=t("2Vo4"),U=t("LRne"),y=[{id:"uid28141",name:"Luis Franklin",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/men/91.jpg"},{id:"uid08141",name:"Renee Miles",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/11.jpg"},{id:"uid99641",name:"Elaine Myers",description:"Legal team",imgUrl:"https://randomuser.me/api/portraits/women/75.jpg"},{id:"uid38141",name:"Emma Cole",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/91.jpg"},{id:"uid37866",name:"Daniel Sullivan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/9.jpg"},{id:"uid09141",name:"Salvador Duncan",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/14.jpg"},{id:"uid09641",name:"Caleb Taylor",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/17.jpg"},{id:"uid99651",name:"Julie Peters",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/77.jpg"},{id:"uid99655",name:"Fred Gibson",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/45.jpg"},{id:"uid81355",name:"George Carter",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/men/85.jpg"},{id:"uid81353",name:"Lillian Walker",description:"Marketing team",imgUrl:"https://randomuser.me/api/portraits/women/25.jpg"},{id:"uid81955",name:"Josephine Carlson",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/women/88.jpg"},{id:"uid77135",name:"Tristan Sutton",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/5.jpg"},{id:"uid77115",name:"Alvin Stephens",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/78.jpg"},{id:"uid77111",name:"Logan Herrera",description:"Sales team",imgUrl:"https://randomuser.me/api/portraits/men/53.jpg"},{id:"uid66141",name:"Melissa Martin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/87.jpg"},{id:"uid66151",name:"Sofia Hanson",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/24.jpg"},{id:"uid66161",name:"Jill Fuller",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/64.jpg"},{id:"uid66171",name:"Ella Franklin",description:"Accounting team",imgUrl:"https://randomuser.me/api/portraits/women/55.jpg"}],A={};y.forEach(function(e){return A[e.id]=e});var I=[{id:"teamId1",name:"Accounting team",description:"",members:["uid66171","uid66161","uid66151","uid66141"]},{id:"teamId2",name:"Sales team",description:"",members:["uid77111","uid77115","uid77135","uid81955"]},{id:"teamId3",name:"Legal team",description:"",members:["uid28141","uid08141","uid99641"]},{id:"teamId4",name:"Marketing team",description:"",members:["uid38141","uid37866","uid09141","uid81353","uid81355","uid99655","uid09641","uid99651"]}],M={simple:{watchers:[x("uid66161")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[x("uid81955")],status:"approved",targets:["ID2"],dueDate:F(30),createDate:F(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[x("uid66171")],status:"in progress",targets:["ID3"],dueDate:F(10),createDate:F(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[x("uid81355")],status:"not started",targets:[],dueDate:F(10),createDate:F(-30)}]},medium:{watchers:[x("uid66151"),x("uid77115")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[x("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:F(30),createDate:F(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[x("uid66171")],status:"in progress",targets:["ID3"],dueDate:F(30),createDate:F(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[x("uid77135")],status:"approved",targets:["ID3"],dueDate:F(30),createDate:F(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[x("uid77111"),x("uid09641"),x("uid09141"),x("uid37866"),x("uid99641"),x("uid38141")],status:"not started",targets:["ID3"],dueDate:F(5),createDate:F(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[x("uid81355")],status:"not started",targets:["ID4"],dueDate:F(30),createDate:F(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[x("uid99651")],status:"not started",targets:[],dueDate:F(30),createDate:F(-30)}]},complex:{watchers:[x("uid66151"),x("uid66141"),x("uid99651"),x("uid99655")],nodes:[{id:"ID1",name:"node name",description:"node description",approvers:[x("uid81955")],status:"approved",targets:["ID2","ID22","ID222"],dueDate:F(30),createDate:F(-30)},{id:"ID2",name:"node name",description:"node description",approvers:[x("uid66171")],status:"in progress",targets:["ID3"],dueDate:F(30),createDate:F(-30)},{id:"ID22",name:"node name",description:"node description",approvers:[x("uid28141")],status:"approved",targets:["ID220"],dueDate:F(30),createDate:F(-30)},{id:"ID222",name:"node name",description:"Marketing team",approvers:[x("uid77111"),x("uid09641")],status:"in progress",targets:["ID2220"],dueDate:F(3),createDate:F(-30)},{id:"ID220",name:"node name",description:"node description",approvers:[x("uid08141")],status:"rejected",targets:["ID3"],dueDate:F(30),createDate:F(-30)},{id:"ID2220",name:"node name",description:"Marketing",approvers:[x("uid81353")],status:"not started",targets:["ID3"],dueDate:F(30),createDate:F(-30)},{id:"ID3",name:"node name",description:"node description",approvers:[x("uid81355")],status:"not started",targets:["ID4"],dueDate:F(30),createDate:F(-30)},{id:"ID4",name:"node name",description:"node description",approvers:[x("uid99651")],status:"not started",targets:[],dueDate:F(30),createDate:F(-30)}]}};function x(e){return A[e]}function F(e){return new Date(Date.now()+864e5*e)}var N=function(){function e(e){void 0===e&&(e="complex"),this.defaultStatus=null,this.selectedGraph=e,this.state=new S.a(M[this.selectedGraph])}return e.prototype.setDefaultStatus=function(e){this.defaultStatus=e,this.selectGraph(this.selectedGraph)},e.prototype.selectGraph=function(e){var n=this;void 0===e&&(e="complex"),this.selectedGraph=e;var t=Object(w.a)({},M[this.selectedGraph]);t.nodes=t.nodes.map(function(e){var t=Object(w.a)({},e);return n.defaultStatus&&(t.status=n.defaultStatus),t}),this.state.next(t)},e.prototype.fetch=function(){return this.state},e.prototype.fetchUser=function(e){var n=y.find(function(n){return n.id===e});return Object(U.a)({phone:Math.random().toFixed(13).toString().replace("0.",""),email:n.name.toLowerCase().split(" ").join(".")+"@company.com"})},e.prototype.fetchApprovers=function(){return Object(U.a)(y)},e.prototype.fetchWatchers=function(){return Object(U.a)(y)},e.prototype.fetchTeams=function(){return Object(U.a)(I)},e.prototype.updateWatchers=function(e){console.log('call "updateWatchers" method from ApprovalDataSource implementation class'),M[this.selectedGraph].watchers=e,this.selectGraph(this.selectedGraph)},e.prototype.updateApproval=function(e){console.log('call "updateApproval" method from ApprovalDataSource implementation class')},e.prototype.updateApprovals=function(e){console.log('call "updateApprovals" method from ApprovalDataSource implementation class'),M[this.selectedGraph].nodes=e,this.selectGraph(this.selectedGraph)},e.prototype.sendReminders=function(e,n){return console.log('call "sendReminders" method from ApprovalDataSource implementation class'),Object(U.a)(null)},e}(),j=t("D9MX"),k=t("3Pt+"),C=t("ofXK"),G=t("9FxG");function T(e,n){if(1&e&&(l.Vb(0,"div",7),l.Vb(1,"b"),l.Tc(2,"Contact info"),l.Ub(),l.Ub(),l.Vb(3,"div"),l.Tc(4,"Mobile "),l.Qb(5,"br"),l.Vb(6,"a",8),l.Tc(7),l.Ub(),l.Ub(),l.Vb(8,"div"),l.Tc(9,"E-mail "),l.Qb(10,"br"),l.Vb(11,"a",8),l.Tc(12),l.Ub(),l.Ub(),l.Vb(13,"div",9),l.Vb(14,"b"),l.Tc(15,"Company"),l.Ub(),l.Ub(),l.Vb(16,"div"),l.Tc(17,"Name "),l.Qb(18,"br"),l.Tc(19," Company A"),l.Ub(),l.Vb(20,"div"),l.Tc(21,"Address "),l.Qb(22,"br"),l.Tc(23," 481 West Street, Anytown OH, 83749, USA"),l.Ub()),2&e){var t=n.data;l.Cb(7),l.Uc(null==t?null:t.phone),l.Cb(5),l.Uc(null==t?null:t.email)}}function E(e,n){if(1&e&&(l.Vb(0,"option",10),l.Tc(1),l.nc(2,"titlecase"),l.Ub()),2&e){var t=n.$implicit;l.uc("value",t),l.Cb(1),l.Uc(l.oc(2,2,t))}}var V=function(){function e(){this.dataSource=new N("complex"),this.examples=["simple","medium","complex"],this.selectedExample="complex",this.checkDueDate=!1,this.setNotStartedStatuses=!1,this.editModeEnabled=!0,this.allStatuses=["in progress","not started","approved","rejected"],this.sendReminderStatuses=["in progress","not started"]}return e.prototype.nodeClick=function(e){console.log("Node click handler",e)},e.prototype.setNotStarted=function(){this.dataSource.setDefaultStatus(this.setNotStartedStatuses?"not started":null)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=l.Jb({type:e,selectors:[["fdp-approval-flow-example"]],decls:19,vars:13,consts:[["title","Basic Approval Flow Demo",3,"dataSource","userDetailsTemplate","checkDueDate","allowSendRemindersForStatuses","isEditAvailable","nodeClick"],["userDetailsTemplate",""],[3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["type","checkbox",3,"ngModel","ngModelChange"],[2,"display","flex","align-items","center"],[2,"margin-left",".5rem",3,"compact","dropdownValues","ngModel","ngModelChange"],[2,"margin-bottom","4px"],["href","javascript:void(0)"],[2,"margin-top","1rem","margin-bottom","4px"],[3,"value"]],template:function(e,n){if(1&e&&(l.Vb(0,"fdp-approval-flow",0),l.ic("nodeClick",function(e){return n.nodeClick(e)}),l.Ub(),l.Rc(1,T,24,2,"ng-template",null,1,l.Sc),l.Vb(3,"p"),l.Tc(4," Selected example: "),l.Vb(5,"select",2),l.ic("ngModelChange",function(e){return n.selectedExample=e})("ngModelChange",function(){return n.dataSource.selectGraph(n.selectedExample)}),l.Rc(6,E,3,4,"option",3),l.Ub(),l.Ub(),l.Vb(7,"p"),l.Tc(8,'Enable "Edit mode": '),l.Vb(9,"input",4),l.ic("ngModelChange",function(e){return n.editModeEnabled=e}),l.Ub(),l.Ub(),l.Vb(10,"p"),l.Tc(11,"Show due date warnings: "),l.Vb(12,"input",4),l.ic("ngModelChange",function(e){return n.checkDueDate=e}),l.Ub(),l.Ub(),l.Vb(13,"p"),l.Tc(14,'Set all statuses to "Not Started": '),l.Vb(15,"input",4),l.ic("ngModelChange",function(e){return n.setNotStartedStatuses=e})("ngModelChange",function(){return n.setNotStarted()}),l.Ub(),l.Ub(),l.Vb(16,"p",5),l.Tc(17,"Allow sending reminders to approvers with statuses: "),l.Vb(18,"fd-multi-input",6),l.ic("ngModelChange",function(e){return n.sendReminderStatuses=e}),l.Ub(),l.Ub()),2&e){var t=l.Gc(2);l.uc("dataSource",n.dataSource)("userDetailsTemplate",t)("checkDueDate",n.checkDueDate)("allowSendRemindersForStatuses",n.sendReminderStatuses)("isEditAvailable",n.editModeEnabled),l.Cb(5),l.uc("ngModel",n.selectedExample),l.Cb(1),l.uc("ngForOf",n.examples),l.Cb(3),l.uc("ngModel",n.editModeEnabled),l.Cb(3),l.uc("ngModel",n.checkDueDate),l.Cb(3),l.uc("ngModel",n.setNotStartedStatuses),l.Cb(3),l.uc("compact",!0)("dropdownValues",n.allStatuses)("ngModel",n.sendReminderStatuses)}},directives:[j.a,k.z,k.q,k.t,C.n,k.a,G.a,k.u,k.C],pipes:[C.x],encapsulation:2}),e}(),O=t("5HkS"),L=[{path:"",component:v,children:[{path:"",component:function(){function e(){this.basic=[{language:"typescript",code:a,fileName:"platform-approval-flow-example",name:"approval-flow-example.component.ts"},{language:"typescript",code:r,fileName:"platform-approval-flow-data-source",name:"approval-flow-example-data-source.class.ts"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=l.Jb({type:e,selectors:[["app-approval-flow"]],decls:5,vars:1,consts:[[3,"exampleFiles"]],template:function(e,n){1&e&&(l.Vb(0,"h2"),l.Tc(1,"Approval Flow"),l.Ub(),l.Vb(2,"component-example"),l.Qb(3,"fdp-approval-flow-example"),l.Ub(),l.Qb(4,"code-example",0)),2&e&&(l.Cb(4),l.uc("exampleFiles",n.basic))},directives:[f.a,V,O.a],encapsulation:2}),e}()},{path:"api",component:d.a,data:{content:p.a.approvalFlow}}]}],R=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=l.Nb({type:e}),e.\u0275inj=l.Mb({providers:[s.dc],imports:[[o.g.forChild(L),m.a,i.n,s.P,s.Ib],o.g]}),e}()}}]);