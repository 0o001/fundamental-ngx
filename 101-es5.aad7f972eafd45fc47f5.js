!function(){function e(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function o(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{"BIH+":function(o,n,a){"use strict";a.r(n),a.d(n,"PlatformComboboxDocsModule",function(){return Ke});var c={};a.r(c),a.d(c,"default",function(){return E});var l={};a.r(l),a.d(l,"default",function(){return M});var m={};a.r(m),a.d(m,"default",function(){return j});var r={};a.r(r),a.d(r,"default",function(){return B});var p={};a.r(p),a.d(p,"default",function(){return K});var i={};a.r(i),a.d(i,"default",function(){return P});var d={};a.r(d),a.d(d,"default",function(){return O});var s={};a.r(s),a.d(s,"default",function(){return k});var b={};a.r(b),a.d(b,"default",function(){return X});var u={};a.r(u),a.d(u,"default",function(){return N});var f={};a.r(f),a.d(f,"default",function(){return _});var y={};a.r(y),a.d(y,"default",function(){return $});var x={};a.r(x),a.d(x,"default",function(){return J});var h={};a.r(h),a.d(h,"default",function(){return z});var S={};a.r(S),a.d(S,"default",function(){return G});var g={};a.r(g),a.d(g,"default",function(){return U});var V,C,v,I,T,D,W=a("tyNb"),w=a("iSGv"),L=a("A+vx"),R=a("G6Ao"),F=a("jzzn"),A=a("IywY"),E='<fdp-form-group [noLabelLayout]="false" columnLayout="XL3-L2-M1-S1">\n    <fdp-form-field id="standard" label="Standard" column="1">\n        <fdp-combobox\n            name="standard"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem1 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="compact" label="Compact" column="1">\n        <fdp-combobox\n            name="compact"\n            placeholder="Type some text..."\n            contentDensity="compact"\n            [dataSource]="dataSource"\n            (selectionChange)="onSelect2($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem2 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="readonly" label="ReadOnly" column="3">\n        <fdp-combobox\n            name="readonly"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            [value]="selectedItem3"\n            readonly="true"\n            (selectionChange)="onSelect3($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem3 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="disabled" label="Disabled" column="3">\n        <fdp-combobox\n            name="disabled"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            [value]="selectedItem4"\n            disabled="true"\n            (selectionChange)="onSelect4($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem4 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="max-height" label="Max Height" column="2">\n        <fdp-combobox\n            name="disabled"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            maxHeight="400px"\n            (selectionChange)="onSelect5($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem5 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="auto-resize" label="Auto-Resize" column="2" hint="The width of the option list adapts to its content. The minimum width is the input field plus the dropdown arrow.">\n        <fdp-combobox\n            name="auto-Resize"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceAutoResize"\n            autoResize="true"\n            (selectionChange)="onSelect6($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem6 }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',M="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-standard',\n    templateUrl: './combobox-standard.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxStandardComponent {\n    dataSource = [\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    dataSourceAutoResize = [\n        'The maximum width is the part of the screen furthest to the right.',\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    selectedItem1 = null;\n    selectedItem2 = null;\n    selectedItem3 = this.dataSource[4];\n    selectedItem4 = this.dataSource[3];\n    selectedItem5 = null;\n    selectedItem6 = null;\n\n    onSelect1(item: ComboboxSelectionChangeEvent): void {\n       this.selectedItem1 = item.payload;\n    }\n\n    onSelect2(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem2 = item.payload;\n    }\n\n    onSelect3(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem3 = item.payload;\n    }\n\n    onSelect4(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem4 = item.payload;\n    }\n\n    onSelect5(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem5 = item.payload;\n    }\n\n    onSelect6(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem6 = item.payload;\n    }\n}\n",j='<fdp-form-group [noLabelLayout]="false" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="mobile" label="Mobile Mode Combobox">\n        <fdp-combobox\n            name="mobile"\n            placeholder="Type some text..."\n            mobile="true"\n            displayKey="name"\n            [dataSource]="dataSource"\n            [mobileConfig]="mobileConfig"\n            (selectionChange)="onSelect($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',B="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { MobileModeConfig } from '@fundamental-ngx/core/mobile-mode';\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-mobile-example',\n    templateUrl: './combobox-mobile-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxMobileExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItem = null;\n\n    mobileConfig: MobileModeConfig = {\n        title: 'Title',\n        approveButtonText: 'Save',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true\n    };\n\n    onSelect(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem = item.payload;\n    }\n}\n",K='<fdp-form-group [noLabelLayout]="false" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="array-of-strings" label="Array of Strings" column="1">\n        <fdp-combobox\n            name="array-of-strings"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem1 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="array-of-objects" label="Array of Objects" column="2">\n        <fdp-combobox\n            name="array-of-objects"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect2($event)"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem2 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="observable" label="Observable" column="1">\n        <fdp-combobox\n            name="observable"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceOf"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect3($event)"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem3 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="ds" label="Data Source" column="2">\n        <fdp-combobox\n            name="ds"\n            placeholder="Type some text..."\n            [dataSource]="ds"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect4($event)"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem4 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',P="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { ArrayComboBoxDataSource, DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-datasource-example',\n    templateUrl: './combobox-datasource-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxDatasourceExampleComponent {\n    dataSourceStrings = [\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    dataSourceOf = of(this.dataSource);\n    ds = new ArrayComboBoxDataSource(this.dataSource);\n\n    selectedItem1 = null;\n    selectedItem2 = null;\n    selectedItem3 = null;\n    selectedItem4 = null;\n\n    onSelect1(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem1 = item.payload;\n    }\n\n    onSelect2(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem2 = item.payload;\n    }\n\n    onSelect3(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem3 = item.payload;\n    }\n\n    onSelect4(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem4 = item.payload;\n    }\n}\n",O='<fdp-form-group [noLabelLayout]="false" columnLayout="XL3-L2-M2-S1">\n    <fdp-form-field id="columns" label="Two Columns">\n        <fdp-combobox\n            name="columns"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            secondaryKey="type"\n            showSecondaryText="true"\n            (selectionChange)="onSelect($event)"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',k="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-columns-example',\n    templateUrl: './combobox-columns-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxColumnsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Biiiiiiiiiiiiiiiiiiiiiiggggggggggggggggggggggggg Banananananananananananananananananananananananananananananananananananananana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItem = null;\n\n    onSelect(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem = item.payload;\n    }\n}\n",X='<fdp-form-group [noLabelLayout]="false" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="group" label="Group with Key" column="1">\n        <fdp-combobox\n            name="group"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            groupKey="type"\n            (selectionChange)="onSelect($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="group-without-key" label="Group without Key" column="2">\n        <fdp-combobox\n            name="group-without-key"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-combobox>\n        <p>Selected: {{ selectedItem1 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',N="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-group-example',\n    templateUrl: './combobox-group-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxGroupExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItem = null;\n    selectedItem1 = null;\n\n    onSelect(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem = item.payload;\n    }\n\n    onSelect1(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem1 = item.payload;\n    }\n}\n",_='<fdp-form-group [noLabelLayout]="false" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="optionItemTemplate" label="Option Item Template" column="1">\n        <span>Allows to customize display item template</span>\n        <fdp-combobox\n            name="optionItemTemplate"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect($event)"\n        >\n            <ng-template fdTemplate="optionItemTemplate" let-item let-index="index">\n                <div class="fd-template-container-div">\n                    <fd-icon glyph="accept" class="fd-template-icon"></fd-icon>\n                    <span class="fd-template-text" [innerText]="item.name"></span>\n                </div>\n            </ng-template>\n        </fdp-combobox>\n        <p>Selected: {{ selectedItem | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="groupItemTemplate" label="Group Item Template" column="2">\n        <span>Allows to customize group header item template</span>\n        <fdp-combobox\n            name="groupItemTemplate"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            group="true"\n            groupKey="type"\n            (selectionChange)="onSelect1($event)"\n        >\n            <ng-template fdTemplate="groupItemTemplate" let-item>\n                <li class="fd-list__group-header" [innerText]="\'Type: \' + item.label"></li>\n            </ng-template>\n        </fdp-combobox>\n        <p>Selected: {{ selectedItem1 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="secondaryItemTemplate" label="Secondary Item Template" column="1">\n        <span>Allows to customize secondary item template</span>\n        <fdp-combobox\n            name="secondaryItemTemplate"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            [showSecondaryText]="true"\n            (selectionChange)="onSelect2($event)"\n        >\n            <ng-template fdTemplate="secondaryItemTemplate" let-item>\n                <span class="fd-list__secondary" [innerText]="item.type"></span>\n            </ng-template>\n        </fdp-combobox>\n        <p>Selected: {{ selectedItem2 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="selectedItemTemplate" label="Selected Item Template" column="2">\n        <span>Allows to customize selected item template</span>\n        <fdp-combobox\n            name="secondaryItemTemplate"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect3($event)"\n        >\n            <ng-template fdTemplate="selectedItemTemplate" let-item>\n                <div class="fd-template-container-div">\n                    <fd-icon glyph="accept" class="fd-template-icon"></fd-icon>\n                    <span [innerText]="item.name"></span>\n                </div>\n            </ng-template>\n        </fdp-combobox>\n        <p>Selected: {{ selectedItem3 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n',$="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-templates-example',\n    templateUrl: './combobox-templates-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styles: [\n        '.fd-template-container-div { display: flex; align-items: center; cursor: pointer;}',\n        '.fd-template-text { margin-right: 12px; margin-left: 12px; }'\n    ],\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxTemplatesExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItem = null;\n    selectedItem1 = null;\n    selectedItem2 = null;\n    selectedItem3 = null;\n\n    onSelect(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem = item.payload;\n    }\n\n    onSelect1(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem1 = item.payload;\n    }\n\n    onSelect2(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem2 = item.payload;\n    }\n\n    onSelect3(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem3 = item.payload;\n    }\n}\n",J='<fdp-form-group [noLabelLayout]="false" [formGroup]="customForm" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="field" label="Array of Strings" required="true">\n        <fdp-combobox\n            name="field"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect($event)"\n            formControlName="field"\n        ></fdp-combobox>\n        <p>Selected Item: {{ selectedItem | json }}</p>\n        <p>Form Selected Item: {{ customForm.getRawValue() | json }}</p>\n    </fdp-form-field>\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required">Field is required</span>\n    </ng-template>\n</fdp-form-group>\n',z="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-forms-example',\n    templateUrl: './combobox-forms-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxFormsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    customForm = new FormGroup({\n        field: new FormControl(this.dataSource[3])\n    });\n\n    selectedItem = this.dataSource[3];\n\n    onSelect(item: ComboboxSelectionChangeEvent): void {\n        this.selectedItem = item.payload;\n    }\n}\n",G='<fdp-form-group [noLabelLayout]="false" mainTitle="Combobox playground" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="combobox-states" label="Select state" column="1">\n        <fdp-combobox\n            name="combobox-states"\n            placeholder="Select state"\n            contentDensity="compact"\n            [dataSource]="states"\n            (selectionChange)="onSelectState($event)"\n        ></fdp-combobox>\n    </fdp-form-field>\n    <fdp-form-field id="combobox-state" label="Combobox with selected state" column="2">\n        <fdp-combobox\n            name="combobox-state"\n            placeholder="Type some text..."\n            contentDensity="compact"\n            [state]="selectedState"\n            [dataSource]="dataSource"\n        >\n        </fdp-combobox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<fdp-form-group [noLabelLayout]="false" mainTitle="Static states" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="combobox-state-success" label="Combobox with success state" column="1">\n        <fdp-combobox\n            name="combobox-state"\n            placeholder="Type some text..."\n            state="success"\n            contentDensity="compact"\n            [dataSource]="dataSource"\n        ></fdp-combobox>\n    </fdp-form-field>\n    <fdp-form-field id="combobox-state-error" label="Combobox with error state" column="2">\n        <fdp-combobox\n            name="combobox-state"\n            placeholder="Type some text..."\n            state="error"\n            contentDensity="compact"\n            [dataSource]="dataSource"\n        ></fdp-combobox>\n    </fdp-form-field>\n    <fdp-form-field id="combobox-state-warning" label="Combobox with warning state" column="1">\n        <fdp-combobox\n            name="combobox-state"\n            placeholder="Type some text..."\n            state="warning"\n            contentDensity="compact"\n            [dataSource]="dataSource"\n        ></fdp-combobox>\n    </fdp-form-field>\n    <fdp-form-field id="combobox-state-info" label="Combobox with information state" column="2">\n        <fdp-combobox\n            name="combobox-state"\n            placeholder="Type some text..."\n            state="information"\n            contentDensity="compact"\n            [dataSource]="dataSource"\n        ></fdp-combobox>\n    </fdp-form-field>\n</fdp-form-group>\n',U="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-combobox-states-example',\n    templateUrl: './combobox-states-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class ComboboxStateComponent {\n    dataSource = [\n        'Apple',\n        'Banana',\n        'Pineapple',\n        'Strawberry',\n        'Broccoli',\n        'Carrot',\n        'Jalape\xf1o',\n        'Spinach'\n    ];\n\n    states = ['success', 'error', 'warning', 'information'];\n    selectedState: string = null;\n\n    onSelectState(item: ComboboxSelectionChangeEvent): void {\n        this.selectedState = item.payload;\n    }\n}\n",q=a("fXoL"),H=a("ddaM"),Y=a("kt86"),Z=a("X1JU"),Q=a("lRwm"),ee=a("vnx5"),oe=a("ha2x"),te=a("9ms8"),ne=((V=function(){function o(){e(this,o),this.dataSource=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.dataSourceAutoResize=["The maximum width is the part of the screen furthest to the right.","Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.selectedItem1=null,this.selectedItem2=null,this.selectedItem3=this.dataSource[4],this.selectedItem4=this.dataSource[3],this.selectedItem5=null,this.selectedItem6=null}return t(o,[{key:"onSelect1",value:function(e){this.selectedItem1=e.payload}},{key:"onSelect2",value:function(e){this.selectedItem2=e.payload}},{key:"onSelect3",value:function(e){this.selectedItem3=e.payload}},{key:"onSelect4",value:function(e){this.selectedItem4=e.payload}},{key:"onSelect5",value:function(e){this.selectedItem5=e.payload}},{key:"onSelect6",value:function(e){this.selectedItem6=e.payload}}]),o}()).\u0275fac=function(e){return new(e||V)},V.\u0275cmp=q.Kb({type:V,selectors:[["fdp-combobox-standard"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:25,vars:15,consts:[["columnLayout","XL3-L2-M1-S1",3,"noLabelLayout"],["id","standard","label","Standard","column","1"],["name","standard","placeholder","Type some text...",3,"dataSource","selectionChange"],["id","compact","label","Compact","column","1"],["name","compact","placeholder","Type some text...","contentDensity","compact",3,"dataSource","selectionChange"],["id","readonly","label","ReadOnly","column","3"],["name","readonly","placeholder","Type some text...","readonly","true",3,"dataSource","value","selectionChange"],["id","disabled","label","Disabled","column","3"],["name","disabled","placeholder","Type some text...","disabled","true",3,"dataSource","value","selectionChange"],["id","max-height","label","Max Height","column","2"],["name","disabled","placeholder","Type some text...","maxHeight","400px",3,"dataSource","selectionChange"],["id","auto-resize","label","Auto-Resize","column","2","hint","The width of the option list adapts to its content. The minimum width is the input field plus the dropdown arrow."],["name","auto-Resize","placeholder","Type some text...","autoResize","true",3,"dataSource","selectionChange"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect1(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.Vb(),q.Vb(),q.Wb(5,"fdp-form-field",3),q.Wb(6,"fdp-combobox",4),q.jc("selectionChange",function(e){return o.onSelect2(e)}),q.Vb(),q.Wb(7,"p"),q.Vc(8),q.Vb(),q.Vb(),q.Wb(9,"fdp-form-field",5),q.Wb(10,"fdp-combobox",6),q.jc("selectionChange",function(e){return o.onSelect3(e)}),q.Vb(),q.Wb(11,"p"),q.Vc(12),q.Vb(),q.Vb(),q.Wb(13,"fdp-form-field",7),q.Wb(14,"fdp-combobox",8),q.jc("selectionChange",function(e){return o.onSelect4(e)}),q.Vb(),q.Wb(15,"p"),q.Vc(16),q.Vb(),q.Vb(),q.Wb(17,"fdp-form-field",9),q.Wb(18,"fdp-combobox",10),q.jc("selectionChange",function(e){return o.onSelect5(e)}),q.Vb(),q.Wb(19,"p"),q.Vc(20),q.Vb(),q.Vb(),q.Wb(21,"fdp-form-field",11),q.Wb(22,"fdp-combobox",12),q.jc("selectionChange",function(e){return o.onSelect6(e)}),q.Vb(),q.Wb(23,"p"),q.Vc(24),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected: ",o.selectedItem1,""),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected: ",o.selectedItem2,""),q.Db(2),q.vc("dataSource",o.dataSource)("value",o.selectedItem3),q.Db(2),q.Xc("Selected: ",o.selectedItem3,""),q.Db(2),q.vc("dataSource",o.dataSource)("value",o.selectedItem4),q.Db(2),q.Xc("Selected: ",o.selectedItem4,""),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected: ",o.selectedItem5,""),q.Db(2),q.vc("dataSource",o.dataSourceAutoResize),q.Db(2),q.Xc("Selected: ",o.selectedItem6,""))},directives:[ee.a,oe.a,te.a],encapsulation:2,changeDetection:0}),V),ae=a("5HkS"),ce=a("Hxo2"),le=((C=function(){function o(){e(this,o),this.dataSource=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.states=["success","error","warning","information"],this.selectedState=null}return t(o,[{key:"onSelectState",value:function(e){this.selectedState=e.payload}}]),o}()).\u0275fac=function(e){return new(e||C)},C.\u0275cmp=q.Kb({type:C,selectors:[["fdp-combobox-states-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:14,vars:9,consts:[["mainTitle","Combobox playground","columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","combobox-states","label","Select state","column","1"],["name","combobox-states","placeholder","Select state","contentDensity","compact",3,"dataSource","selectionChange"],["id","combobox-state","label","Combobox with selected state","column","2"],["name","combobox-state","placeholder","Type some text...","contentDensity","compact",3,"state","dataSource"],["mainTitle","Static states","columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","combobox-state-success","label","Combobox with success state","column","1"],["name","combobox-state","placeholder","Type some text...","state","success","contentDensity","compact",3,"dataSource"],["id","combobox-state-error","label","Combobox with error state","column","2"],["name","combobox-state","placeholder","Type some text...","state","error","contentDensity","compact",3,"dataSource"],["id","combobox-state-warning","label","Combobox with warning state","column","1"],["name","combobox-state","placeholder","Type some text...","state","warning","contentDensity","compact",3,"dataSource"],["id","combobox-state-info","label","Combobox with information state","column","2"],["name","combobox-state","placeholder","Type some text...","state","information","contentDensity","compact",3,"dataSource"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelectState(e)}),q.Vb(),q.Vb(),q.Wb(3,"fdp-form-field",3),q.Rb(4,"fdp-combobox",4),q.Vb(),q.Vb(),q.Wb(5,"fdp-form-group",5),q.Wb(6,"fdp-form-field",6),q.Rb(7,"fdp-combobox",7),q.Vb(),q.Wb(8,"fdp-form-field",8),q.Rb(9,"fdp-combobox",9),q.Vb(),q.Wb(10,"fdp-form-field",10),q.Rb(11,"fdp-combobox",11),q.Vb(),q.Wb(12,"fdp-form-field",12),q.Rb(13,"fdp-combobox",13),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.states),q.Db(2),q.vc("state",o.selectedState)("dataSource",o.dataSource),q.Db(1),q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.vc("dataSource",o.dataSource))},directives:[ee.a,oe.a,te.a],encapsulation:2,changeDetection:0}),C),me=a("ofXK"),re=((v=function(){function o(){e(this,o),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItem=null,this.mobileConfig={title:"Title",approveButtonText:"Save",cancelButtonText:"Cancel",hasCloseButton:!0}}return t(o,[{key:"onSelect",value:function(e){this.selectedItem=e.payload}}]),o}()).\u0275fac=function(e){return new(e||v)},v.\u0275cmp=q.Kb({type:v,selectors:[["fdp-combobox-mobile-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:6,vars:6,consts:[["columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","mobile","label","Mobile Mode Combobox"],["name","mobile","placeholder","Type some text...","mobile","true","displayKey","name",3,"dataSource","mobileConfig","selectionChange"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.oc(5,"json"),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSource)("mobileConfig",o.mobileConfig),q.Db(2),q.Xc("Selected: ",q.pc(5,4,o.selectedItem),""))},directives:[ee.a,oe.a,te.a],pipes:[me.h],encapsulation:2,changeDetection:0}),v),pe=a("LRne"),ie=((D=function(){function o(){e(this,o),this.dataSourceStrings=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.dataSourceOf=Object(pe.a)(this.dataSource),this.ds=new Q.a(this.dataSource),this.selectedItem1=null,this.selectedItem2=null,this.selectedItem3=null,this.selectedItem4=null}return t(o,[{key:"onSelect1",value:function(e){this.selectedItem1=e.payload}},{key:"onSelect2",value:function(e){this.selectedItem2=e.payload}},{key:"onSelect3",value:function(e){this.selectedItem3=e.payload}},{key:"onSelect4",value:function(e){this.selectedItem4=e.payload}}]),o}()).\u0275fac=function(e){return new(e||D)},D.\u0275cmp=q.Kb({type:D,selectors:[["fdp-combobox-datasource-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:20,vars:15,consts:[["columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","array-of-strings","label","Array of Strings","column","1"],["name","array-of-strings","placeholder","Type some text...",3,"dataSource","selectionChange"],["id","array-of-objects","label","Array of Objects","column","2"],["name","array-of-objects","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"dataSource","selectionChange"],["id","observable","label","Observable","column","1"],["name","observable","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"dataSource","selectionChange"],["id","ds","label","Data Source","column","2"],["name","ds","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"dataSource","selectionChange"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect1(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.Vb(),q.Vb(),q.Wb(5,"fdp-form-field",3),q.Wb(6,"fdp-combobox",4),q.jc("selectionChange",function(e){return o.onSelect2(e)}),q.Vb(),q.Wb(7,"p"),q.Vc(8),q.oc(9,"json"),q.Vb(),q.Vb(),q.Wb(10,"fdp-form-field",5),q.Wb(11,"fdp-combobox",6),q.jc("selectionChange",function(e){return o.onSelect3(e)}),q.Vb(),q.Wb(12,"p"),q.Vc(13),q.oc(14,"json"),q.Vb(),q.Vb(),q.Wb(15,"fdp-form-field",7),q.Wb(16,"fdp-combobox",8),q.jc("selectionChange",function(e){return o.onSelect4(e)}),q.Vb(),q.Wb(17,"p"),q.Vc(18),q.oc(19,"json"),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSourceStrings),q.Db(2),q.Xc("Selected Item: ",o.selectedItem1,""),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected Item: ",q.pc(9,9,o.selectedItem2),""),q.Db(3),q.vc("dataSource",o.dataSourceOf),q.Db(2),q.Xc("Selected Item: ",q.pc(14,11,o.selectedItem3),""),q.Db(3),q.vc("dataSource",o.ds),q.Db(2),q.Xc("Selected Item: ",q.pc(19,13,o.selectedItem4),""))},directives:[ee.a,oe.a,te.a],pipes:[me.h],encapsulation:2,changeDetection:0}),D),de=((T=function(){function o(){e(this,o),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Biiiiiiiiiiiiiiiiiiiiiiggggggggggggggggggggggggg Banananananananananananananananananananananananananananananananananananananana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItem=null}return t(o,[{key:"onSelect",value:function(e){this.selectedItem=e.payload}}]),o}()).\u0275fac=function(e){return new(e||T)},T.\u0275cmp=q.Kb({type:T,selectors:[["fdp-combobox-columns-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:6,vars:5,consts:[["columnLayout","XL3-L2-M2-S1",3,"noLabelLayout"],["id","columns","label","Two Columns"],["name","columns","placeholder","Type some text...","displayKey","name","secondaryKey","type","showSecondaryText","true",3,"dataSource","selectionChange"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.oc(5,"json"),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected Item: ",q.pc(5,3,o.selectedItem),""))},directives:[ee.a,oe.a,te.a],pipes:[me.h],encapsulation:2,changeDetection:0}),T),se=((I=function(){function o(){e(this,o),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItem=null,this.selectedItem1=null}return t(o,[{key:"onSelect",value:function(e){this.selectedItem=e.payload}},{key:"onSelect1",value:function(e){this.selectedItem1=e.payload}}]),o}()).\u0275fac=function(e){return new(e||I)},I.\u0275cmp=q.Kb({type:I,selectors:[["fdp-combobox-group-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:11,vars:9,consts:[["columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","group","label","Group with Key","column","1"],["name","group","placeholder","Type some text...","displayKey","name","group","true","groupKey","type",3,"dataSource","selectionChange"],["id","group-without-key","label","Group without Key","column","2"],["name","group-without-key","placeholder","Type some text...","displayKey","name","group","true",3,"dataSource","selectionChange"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.oc(5,"json"),q.Vb(),q.Vb(),q.Wb(6,"fdp-form-field",3),q.Wb(7,"fdp-combobox",4),q.jc("selectionChange",function(e){return o.onSelect1(e)}),q.Vb(),q.Wb(8,"p"),q.Vc(9),q.oc(10,"json"),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected: ",q.pc(5,5,o.selectedItem),""),q.Db(3),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected: ",q.pc(10,7,o.selectedItem1),""))},directives:[ee.a,oe.a,te.a],pipes:[me.h],encapsulation:2,changeDetection:0}),I),be=a("raHT"),ue=a("ysIh");function fe(e,o){if(1&e&&(q.Wb(0,"div",13),q.Rb(1,"fd-icon",14),q.Rb(2,"span",15),q.Vb()),2&e){var t=o.$implicit;q.Db(2),q.vc("innerText",t.name)}}function ye(e,o){1&e&&q.Rb(0,"li",16),2&e&&q.vc("innerText","Type: "+o.$implicit.label)}function xe(e,o){1&e&&q.Rb(0,"span",17),2&e&&q.vc("innerText",o.$implicit.type)}function he(e,o){if(1&e&&(q.Wb(0,"div",13),q.Rb(1,"fd-icon",14),q.Rb(2,"span",18),q.Vb()),2&e){var t=o.$implicit;q.Db(2),q.vc("innerText",t.name)}}var Se,ge=((Se=function(){function o(){e(this,o),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItem=null,this.selectedItem1=null,this.selectedItem2=null,this.selectedItem3=null}return t(o,[{key:"onSelect",value:function(e){this.selectedItem=e.payload}},{key:"onSelect1",value:function(e){this.selectedItem1=e.payload}},{key:"onSelect2",value:function(e){this.selectedItem2=e.payload}},{key:"onSelect3",value:function(e){this.selectedItem3=e.payload}}]),o}()).\u0275fac=function(e){return new(e||Se)},Se.\u0275cmp=q.Kb({type:Se,selectors:[["fdp-combobox-templates-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:33,vars:18,consts:[["columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","optionItemTemplate","label","Option Item Template","column","1"],["name","optionItemTemplate","placeholder","Type some text...","displayKey","name",3,"dataSource","selectionChange"],["fdTemplate","optionItemTemplate"],["id","groupItemTemplate","label","Group Item Template","column","2"],["name","groupItemTemplate","placeholder","Type some text...","displayKey","name","group","true","groupKey","type",3,"dataSource","selectionChange"],["fdTemplate","groupItemTemplate"],["id","secondaryItemTemplate","label","Secondary Item Template","column","1"],["name","secondaryItemTemplate","placeholder","Type some text...","displayKey","name",3,"dataSource","showSecondaryText","selectionChange"],["fdTemplate","secondaryItemTemplate"],["id","selectedItemTemplate","label","Selected Item Template","column","2"],["name","secondaryItemTemplate","placeholder","Type some text...","displayKey","name",3,"dataSource","selectionChange"],["fdTemplate","selectedItemTemplate"],[1,"fd-template-container-div"],["glyph","accept",1,"fd-template-icon"],[1,"fd-template-text",3,"innerText"],[1,"fd-list__group-header",3,"innerText"],[1,"fd-list__secondary",3,"innerText"],[3,"innerText"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"span"),q.Vc(3,"Allows to customize display item template"),q.Vb(),q.Wb(4,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect(e)}),q.Tc(5,fe,3,1,"ng-template",3),q.Vb(),q.Wb(6,"p"),q.Vc(7),q.oc(8,"json"),q.Vb(),q.Vb(),q.Wb(9,"fdp-form-field",4),q.Wb(10,"span"),q.Vc(11,"Allows to customize group header item template"),q.Vb(),q.Wb(12,"fdp-combobox",5),q.jc("selectionChange",function(e){return o.onSelect1(e)}),q.Tc(13,ye,1,1,"ng-template",6),q.Vb(),q.Wb(14,"p"),q.Vc(15),q.oc(16,"json"),q.Vb(),q.Vb(),q.Wb(17,"fdp-form-field",7),q.Wb(18,"span"),q.Vc(19,"Allows to customize secondary item template"),q.Vb(),q.Wb(20,"fdp-combobox",8),q.jc("selectionChange",function(e){return o.onSelect2(e)}),q.Tc(21,xe,1,1,"ng-template",9),q.Vb(),q.Wb(22,"p"),q.Vc(23),q.oc(24,"json"),q.Vb(),q.Vb(),q.Wb(25,"fdp-form-field",10),q.Wb(26,"span"),q.Vc(27,"Allows to customize selected item template"),q.Vb(),q.Wb(28,"fdp-combobox",11),q.jc("selectionChange",function(e){return o.onSelect3(e)}),q.Tc(29,he,3,1,"ng-template",12),q.Vb(),q.Wb(30,"p"),q.Vc(31),q.oc(32,"json"),q.Vb(),q.Vb(),q.Vb()),2&e&&(q.vc("noLabelLayout",!1),q.Db(4),q.vc("dataSource",o.dataSource),q.Db(3),q.Xc("Selected: ",q.pc(8,10,o.selectedItem),""),q.Db(5),q.vc("dataSource",o.dataSource),q.Db(3),q.Xc("Selected: ",q.pc(16,12,o.selectedItem1),""),q.Db(5),q.vc("dataSource",o.dataSource)("showSecondaryText",!0),q.Db(3),q.Xc("Selected: ",q.pc(24,14,o.selectedItem2),""),q.Db(5),q.vc("dataSource",o.dataSource),q.Db(3),q.Xc("Selected: ",q.pc(32,16,o.selectedItem3),""))},directives:[ee.a,oe.a,te.a,be.a,ue.a],pipes:[me.h],styles:[".fd-template-container-div[_ngcontent-%COMP%] { display: flex; align-items: center; cursor: pointer;}",".fd-template-text[_ngcontent-%COMP%] { margin-right: 12px; margin-left: 12px; }"],changeDetection:0}),Se),Ve=a("3Pt+");function Ce(e,o){1&e&&(q.Wb(0,"span"),q.Vc(1,"Field is required"),q.Vb())}function ve(e,o){1&e&&q.Tc(0,Ce,2,0,"span",4),2&e&&q.vc("ngIf",o.$implicit.required)}var Ie,Te,De,We,we=((Te=function(){function o(){e(this,o),this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.customForm=new Ve.i({field:new Ve.f(this.dataSource[3])}),this.selectedItem=this.dataSource[3]}return t(o,[{key:"onSelect",value:function(e){this.selectedItem=e.payload}}]),o}()).\u0275fac=function(e){return new(e||Te)},Te.\u0275cmp=q.Kb({type:Te,selectors:[["fdp-combobox-forms-example"]],features:[q.Cb([{provide:Q.i,useValue:new Map}])],decls:11,vars:9,consts:[["columnLayout","XL2-L2-M1-S1",3,"noLabelLayout","formGroup"],["id","field","label","Array of Strings","required","true"],["name","field","placeholder","Type some text...","displayKey","name","formControlName","field",3,"dataSource","selectionChange"],["i18n",""],[4,"ngIf"]],template:function(e,o){1&e&&(q.Wb(0,"fdp-form-group",0),q.Wb(1,"fdp-form-field",1),q.Wb(2,"fdp-combobox",2),q.jc("selectionChange",function(e){return o.onSelect(e)}),q.Vb(),q.Wb(3,"p"),q.Vc(4),q.oc(5,"json"),q.Vb(),q.Wb(6,"p"),q.Vc(7),q.oc(8,"json"),q.Vb(),q.Vb(),q.Tc(9,ve,1,1,"ng-template",null,3,q.Uc),q.Vb()),2&e&&(q.vc("noLabelLayout",!1)("formGroup",o.customForm),q.Db(2),q.vc("dataSource",o.dataSource),q.Db(2),q.Xc("Selected Item: ",q.pc(5,5,o.selectedItem),""),q.Db(3),q.Xc("Form Selected Item: ",q.pc(8,7,o.customForm.getRawValue()),""))},directives:[ee.a,Ve.r,Ve.j,oe.a,te.a,Ve.q,Ve.h,me.o],pipes:[me.h],encapsulation:2,changeDetection:0}),Te),Le=((Ie=function o(){e(this,o),this.comboboxStandard=[{language:"html",fileName:"combobox-standard",code:c},{language:"typescript",fileName:"combobox-standard",code:l,component:"ComboboxStandardComponent"}],this.comboboxMobile=[{language:"html",fileName:"combobox-mobile-example",code:m},{language:"typescript",fileName:"combobox-mobile-example",code:r,component:"ComboboxMobileExampleComponent"}],this.comboboxDatasource=[{language:"html",fileName:"combobox-datasource-example",code:p},{language:"typescript",fileName:"combobox-datasource-example",code:i,component:"ComboboxDatasourceExampleComponent"}],this.comboboxColumns=[{language:"html",fileName:"combobox-columns-example",code:d},{language:"typescript",fileName:"combobox-columns-example",code:s,component:"ComboboxColumnsExampleComponent"}],this.comboboxGroupExample=[{language:"html",fileName:"combobox-group-example",code:b},{language:"typescript",fileName:"combobox-group-example",code:u,component:"ComboboxGroupExampleComponent"}],this.comboboxTemplatesExample=[{language:"html",fileName:"combobox-templates-example",code:f},{language:"typescript",fileName:"combobox-templates-example",code:y,component:"ComboboxTemplatesExampleComponent"}],this.comboboxFormExample=[{language:"html",fileName:"combobox-forms-example",code:x},{language:"typescript",fileName:"combobox-forms-example",code:h,component:"ComboboxFormsExampleComponent"}],this.comboboxStateExample=[{language:"html",fileName:"combobox-states-example",code:S},{language:"typescript",fileName:"combobox-states-example",code:g,component:"ComboboxStateComponent"}]}).\u0275fac=function(e){return new(e||Ie)},Ie.\u0275cmp=q.Kb({type:Ie,selectors:[["platform-combobox-docs"]],decls:116,vars:8,consts:[["id","standard","componentName","combobox"],[3,"exampleFiles"],["id","states","componentName","combobox"],["id","mobile","componentName","combobox"],["routerLink","/core/global-config","fragment","mobile-mode-config"],["id","data-source","componentName","combobox"],["id","columns","componentName","combobox"],["id","groups","componentName","combobox"],["id","templates","componentName","combobox"],["id","reactive-form","componentName","combobox"]],template:function(e,o){1&e&&(q.Wb(0,"fd-docs-section-title",0),q.Vc(1,"Standard Combobox"),q.Vb(),q.Wb(2,"description"),q.Vc(3,"The standard version of the component that most people will likely use regularly."),q.Vb(),q.Wb(4,"component-example"),q.Rb(5,"fdp-combobox-standard"),q.Vb(),q.Rb(6,"code-example",1),q.Rb(7,"separator"),q.Wb(8,"fd-docs-section-title",2),q.Vc(9," Combobox states.\n"),q.Vb(),q.Wb(10,"description"),q.Vc(11," The Combobox component with states. "),q.Wb(12,"ul"),q.Wb(13,"li"),q.Vc(14,"Set "),q.Wb(15,"code"),q.Vc(16,"[state]"),q.Vb(),q.Vc(17,"property to: "),q.Wb(18,"code"),q.Vc(19,"'success' | 'error' | 'warning' | 'information'"),q.Vb(),q.Vb(),q.Vb(),q.Vb(),q.Wb(20,"component-example"),q.Rb(21,"fdp-combobox-states-example"),q.Vb(),q.Rb(22,"code-example",1),q.Rb(23,"separator"),q.Wb(24,"fd-docs-section-title",3),q.Vc(25,"Combobox Mobile Mode"),q.Vb(),q.Wb(26,"description"),q.Vc(27," To use Combobox in mobile mode: "),q.Wb(28,"ul"),q.Wb(29,"li"),q.Vc(30,"import "),q.Wb(31,"code"),q.Vc(32,"ComboboxMobileModule"),q.Vb(),q.Vb(),q.Wb(33,"li"),q.Vc(34,"Set "),q.Wb(35,"code"),q.Vc(36,"[mobile]"),q.Vb(),q.Vc(37," property to true"),q.Vb(),q.Wb(38,"li"),q.Vc(39,"Set "),q.Wb(40,"code"),q.Vc(41,"[mobileConfig]"),q.Vb(),q.Vc(42," with "),q.Wb(43,"code"),q.Vc(44,"MobileModeConfig"),q.Vb(),q.Vc(45," configuration object to customize the look of the control "),q.Vb(),q.Vb(),q.Vc(46," Combobox Mobile Mode can be configured "),q.Wb(47,"strong"),q.Vc(48,"globally"),q.Vb(),q.Vc(49," by providing "),q.Wb(50,"code"),q.Vc(51,"MOBILE_MODE_CONFIG"),q.Vb(),q.Vc(52," token. Check "),q.Wb(53,"a",4),q.Vc(54,"Global Configuration page"),q.Vb(),q.Vc(55," for more information.\n"),q.Vb(),q.Wb(56,"component-example"),q.Rb(57,"fdp-combobox-mobile-example"),q.Vb(),q.Rb(58,"code-example",1),q.Rb(59,"separator"),q.Wb(60,"fd-docs-section-title",5),q.Vc(61,"DataSource"),q.Vb(),q.Wb(62,"description"),q.Vc(63," Input "),q.Wb(64,"code"),q.Vc(65,"[dataSource]"),q.Vb(),q.Vc(66," has this type "),q.Wb(67,"code"),q.Vc(68,"type FdpComboBoxDataSource<T> = ComboBoxDataSource<T> | Observable<T[]> | T[];"),q.Vb(),q.Vb(),q.Wb(69,"component-example"),q.Rb(70,"fdp-combobox-datasource-example"),q.Vb(),q.Rb(71,"code-example",1),q.Rb(72,"separator"),q.Wb(73,"fd-docs-section-title",6),q.Vc(74,"Combobox with Two Columns"),q.Vb(),q.Wb(75,"description"),q.Vc(76," Combobox with two columns of information. Note that a "),q.Wb(77,"code"),q.Vc(78,"secondaryKey"),q.Vb(),q.Vc(79," and "),q.Wb(80,"code"),q.Vc(81,"shoSecondaryText"),q.Vb(),q.Vc(82," is required\n"),q.Vb(),q.Wb(83,"component-example"),q.Rb(84,"fdp-combobox-columns-example"),q.Vb(),q.Rb(85,"code-example",1),q.Rb(86,"separator"),q.Wb(87,"fd-docs-section-title",7),q.Vc(88," Combobox with Groups\n"),q.Vb(),q.Wb(89,"description"),q.Vc(90," Combobox with Groups. Note that a "),q.Wb(91,"code"),q.Vc(92,"group"),q.Vb(),q.Vc(93," and "),q.Wb(94,"code"),q.Vc(95,"groupKey"),q.Vb(),q.Vc(96," is required\n"),q.Vb(),q.Wb(97,"component-example"),q.Rb(98,"fdp-combobox-group-example"),q.Vb(),q.Rb(99,"code-example",1),q.Rb(100,"separator"),q.Wb(101,"fd-docs-section-title",8),q.Vc(102,"Templates"),q.Vb(),q.Wb(103,"description"),q.Vc(104," Templates:\n"),q.Vb(),q.Wb(105,"component-example"),q.Rb(106,"fdp-combobox-templates-example"),q.Vb(),q.Rb(107,"code-example",1),q.Rb(108,"separator"),q.Wb(109,"fd-docs-section-title",9),q.Vc(110," Reactive Form\n"),q.Vb(),q.Wb(111,"description"),q.Vc(112," The Combobox component may also be used within Angular Reactive Forms.\n"),q.Vb(),q.Wb(113,"component-example"),q.Rb(114,"fdp-combobox-forms-example"),q.Vb(),q.Rb(115,"code-example",1)),2&e&&(q.Db(6),q.vc("exampleFiles",o.comboboxStandard),q.Db(16),q.vc("exampleFiles",o.comboboxStateExample),q.Db(36),q.vc("exampleFiles",o.comboboxMobile),q.Db(13),q.vc("exampleFiles",o.comboboxDatasource),q.Db(14),q.vc("exampleFiles",o.comboboxColumns),q.Db(14),q.vc("exampleFiles",o.comboboxGroupExample),q.Db(8),q.vc("exampleFiles",o.comboboxTemplatesExample),q.Db(8),q.vc("exampleFiles",o.comboboxFormExample))},directives:[H.a,Y.a,Z.a,ne,ae.a,ce.a,le,W.f,re,ie,de,se,ge,we],encapsulation:2}),Ie),Re=a("dor/"),Fe=a("RJTZ"),Ae=a("Kpas"),Ee=((De=function o(){e(this,o)}).\u0275fac=function(e){return new(e||De)},De.\u0275cmp=q.Kb({type:De,selectors:[["fd-platform-combobox-header"]],decls:14,vars:0,consts:[["module","PlatformComboboxModule","subPackage","form"]],template:function(e,o){1&e&&(q.Wb(0,"header"),q.Vc(1,"Combobox"),q.Vb(),q.Wb(2,"description"),q.Vc(3," The combobox component is an opinionated composition of the input-group and popover components to accomplish the UI pattern of an autocomplete-like experience, also known as combobox input. "),q.Wb(4,"h3"),q.Vc(5,"Platform specific enhancements:"),q.Vb(),q.Wb(6,"ul"),q.Wb(7,"li"),q.Vc(8,"The Platform Combobox component implement the FormFieldControl interface, thus can be used within the FormField component."),q.Vb(),q.Wb(9,"li"),q.Vc(10,"The Platform Combobox accepts an array of objects, an observable or a DataSource to be able to connect your data as a continuous reactive stream."),q.Vb(),q.Vb(),q.Vb(),q.Rb(11,"import",0),q.Rb(12,"fd-header-tabs"),q.Rb(13,"router-outlet"))},directives:[Re.a,Y.a,Fe.a,Ae.a,W.h],encapsulation:2}),De),Me=a("lH0p"),je=a("t9W5"),Be=[{path:"",component:Ee,children:[{path:"",component:Le},{path:"api",component:F.a,data:{content:A.a.combobox}}]}],Ke=((We=function o(){e(this,o)}).\u0275fac=function(e){return new(e||We)},We.\u0275mod=q.Ob({type:We}),We.\u0275inj=q.Nb({providers:[{provide:L.a,useValue:Me.a,multi:!0}],imports:[[W.g.forChild(Be),je.a,R.i,R.h,R.b,w.b],W.g]}),We)}}])}();