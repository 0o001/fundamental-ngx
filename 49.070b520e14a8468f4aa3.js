(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{guV6:function(e,n,t){"use strict";t.r(n),t.d(n,"MultiInputDocsModule",(function(){return Re}));var l={};t.r(l),t.d(l,"default",(function(){return I}));var o={};t.r(o),t.d(o,"default",(function(){return B}));var a={};t.r(a),t.d(a,"default",(function(){return T}));var i={};t.r(i),t.d(i,"default",(function(){return N}));var r={};t.r(r),t.d(r,"default",(function(){return k}));var c={};t.r(c),t.d(c,"default",(function(){return O}));var u={};t.r(u),t.d(u,"default",(function(){return P}));var p={};t.r(p),t.d(p,"default",(function(){return j}));var d={};t.r(d),t.d(d,"default",(function(){return E}));var s={};t.r(s),t.d(s,"default",(function(){return L}));var m={};t.r(m),t.d(m,"default",(function(){return U}));var b={};t.r(b),t.d(b,"default",(function(){return K}));var f={};t.r(f),t.d(f,"default",(function(){return D}));var h={};t.r(h),t.d(h,"default",(function(){return J}));var g={};t.r(g),t.d(g,"default",(function(){return H}));var S={};t.r(S),t.d(S,"default",(function(){return G}));var w={};t.r(w),t.d(w,"default",(function(){return z}));var M={};t.r(M),t.d(M,"default",(function(){return W}));var y=t("sEIs"),x=t("eCHz"),v=t("uYCi"),C=t("EM62"),F=t("P+xO"),V=t("Zn6N"),A=t("7o9V"),Q=t("h8DJ"),R=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["app-multi-input-header"]],decls:7,vars:0,consts:[["module","MultiInputModule"]],template:function(e,n){1&e&&(C.Rb(0,"header"),C.Sc(1,"Multi Input"),C.Qb(),C.Rb(2,"description"),C.Sc(3," Input field with multiple selection enabled. Should be used when a user can select between a limited number of pre-defined options with a filter-enabled context.\n"),C.Qb(),C.Mb(4,"import",0),C.Mb(5,"fd-header-tabs"),C.Mb(6,"router-outlet"))},directives:[F.a,V.a,A.a,Q.a,y.g],styles:[""]}),e}(),I="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange']\"\n    [placeholder]=\"'Search here...'\"\n    [(ngModel)]=\"selected\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n\n<br /><br />\n\n<label fd-label for=\"disabledMultiInput1\">Disabled Multi Input</label>\n<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    [disabled]=\"true\"\n    id=\"disabledMultiInput1\"\n    [(ngModel)]=\"secondSelected\"\n></fd-multi-input>\n\nSelected: [{{ secondSelected.toLocaleString() }}]\n\n<br /><br />\n\n<label fd-label for=\"noAddonMultiInput1\">Hidden Addon Button</label>\n<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    id=\"noAddonMultiInput1\"\n    [(ngModel)]=\"thirdSelected\"\n    [displayAddonButton]=\"false\"\n></fd-multi-input>\n\nSelected: [{{ thirdSelected.toLocaleString() }}]\n",B="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-example',\n    templateUrl: './multi-input-example.component.html'\n})\nexport class MultiInputExampleComponent {\n    selected = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry'];\n    secondSelected = ['Pineapple'];\n    thirdSelected = ['Kiwi'];\n}\n",T='<fd-multi-input\n    [dropdownValues]="values"\n    [placeholder]="\'Search here...\'"\n    [(ngModel)]="selected"\n    [displayFn]="displayFunc"\n></fd-multi-input>\n\nSelected: [<span *ngFor="let item of selected; let i = index">{{\n    i === selected.length - 1 ? item.name : item.name + \',\'\n}}</span\n>]\n',N="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-displaywith-example',\n    templateUrl: './multi-input-displaywith-example.component.html'\n})\nexport class MultiInputDisplaywithExampleComponent {\n    values = [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Pineapple' },\n        { name: 'Tomato' },\n        { name: 'Kiwi' },\n        { name: 'Strawberry' },\n        { name: 'Blueberry' },\n        { name: 'Orange' }\n    ];\n\n    selected = [];\n\n    displayFunc(obj: any): string {\n        return obj.name.toLocaleUpperCase();\n    }\n}\n",k="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    [(ngModel)]=\"selected\"\n    [filterFn]=\"customFilter\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n",O="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-filter-example',\n    templateUrl: './multi-input-filter-example.component.html'\n})\nexport class MultiInputFilterExampleComponent {\n    selected = [];\n\n    customFilter(content: any[], searchTerm: string): any[] {\n        if (!searchTerm) {\n            return content;\n        }\n        return content.filter((item) => item.startsWith(searchTerm));\n    }\n}\n",P="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    [(ngModel)]=\"selected\"\n    [includes]=\"true\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n",j="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-includes-example',\n    templateUrl: './multi-input-includes-example.component.html'\n})\nexport class MultiInputIncludesExampleComponent {\n    selected = [];\n}\n",E='<fd-multi-input\n    [dropdownValues]="dropdownValues | async"\n    [placeholder]="\'Search here...\'"\n    [(ngModel)]="selected"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n',L="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'fd-multi-input-async-example',\n    templateUrl: './multi-input-async-example.component.html'\n})\nexport class MultiInputAsyncExampleComponent implements OnInit {\n    selected = [];\n\n    dropdownValues;\n\n    getDropdownValues(): Observable<string[]> {\n        return this.http.get<string[]>('./assets/multi-input-values.json');\n    }\n\n    constructor(private http: HttpClient) {}\n\n    ngOnInit(): void {\n        this.dropdownValues = this.getDropdownValues();\n    }\n}\n",U="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange']\"\n    [placeholder]=\"'Search here...'\"\n    [compact]=\"true\"\n    [(ngModel)]=\"selected\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n",K="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-compact-example',\n    templateUrl: './multi-input-compact-example.component.html'\n})\nexport class MultiInputCompactExampleComponent {\n    selected = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange'];\n}\n",D="<form [formGroup]=\"customForm\">\n    <fieldset fd-fieldset>\n        <div fd-form-item>\n            <label fd-form-label>Valid Multi Input</label>\n            <fd-multi-input\n                [state]=\"isValid() ? 'success' : 'error'\"\n                formControlName=\"selectedValues\"\n                [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n                [placeholder]=\"'Search Here...'\"\n            >\n            </fd-multi-input>\n        </div>\n        <div fd-form-item>\n            <label fd-form-label>Disabled Multi Input</label>\n            <fd-multi-input\n                formControlName=\"disabledSelectedValues\"\n                [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n                [placeholder]=\"'Search Here...'\"\n                [state]=\"'information'\"\n            >\n            </fd-multi-input>\n        </div>\n    </fieldset>\n</form>\n\nSelected Values:\n<span *ngIf=\"customForm.controls.selectedValues.value\">\n    {{ customForm.controls.selectedValues.value | json }}\n</span>\n\nSelected Values:\n<span *ngIf=\"customForm.controls.disabledSelectedValues.value\">\n    {{ customForm.controls.disabledSelectedValues.value | json }}\n</span>\n",J="import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'fd-multi-input-form-example',\n    templateUrl: './multi-input-form-example.component.html'\n})\nexport class MultiInputFormExampleComponent {\n    customForm = new FormGroup({\n        selectedValues: new FormControl({ value: ['Apple', 'Banana'], disabled: false }),\n        disabledSelectedValues: new FormControl({ value: ['Pineapple', 'Tomato'], disabled: true })\n    });\n\n    isValid(): boolean {\n        return this.customForm.get('selectedValues').value && this.customForm.get('selectedValues').value.length > 0;\n    }\n}\n",H='<fd-multi-input\n    [dropdownValues]="values"\n    [allowNewTokens]="true"\n    [displayFn]="displayFunc"\n    [newTokenParseFn]="parseFunc"\n    [(ngModel)]="selected"\n></fd-multi-input>\n\nSelected: [<span *ngFor="let item of selected; let i = index">{{\n    i === selected.length - 1 ? item.name : item.name + \',\'\n}}</span\n>]\n',G="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-new-tokens-example',\n    templateUrl: './multi-input-new-tokens-example.component.html'\n})\nexport class MultiInputNewTokensExampleComponent {\n    values = [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Pineapple' },\n        { name: 'Tomato' },\n        { name: 'Kiwi' },\n        { name: 'Strawberry' },\n        { name: 'Blueberry' },\n        { name: 'Orange' }\n    ];\n\n    selected = [];\n\n    displayFunc(obj: any): string {\n        return obj.name;\n    }\n\n    parseFunc(value: string): object {\n        if (value && value.length) {\n            return { name: value };\n        }\n    }\n}\n",z='<label fd-form-label>Mobile Mode Multi Input</label>\n<fd-multi-input [mobile]="true"\n                [dropdownValues]="values"\n                [showAllButton]="false"\n                placeholder="Search here..."\n                [mobileConfig]="secondConfig"\n                [(ngModel)]="selectedValues"\n></fd-multi-input>\n',W="import { Component } from '@angular/core';\nimport { DialogConfig, MobileModeConfig } from '@fundamental-ngx/core';\n\n@Component({\n    selector: 'fd-multi-input-mobile-example',\n    templateUrl: './multi-input-mobile-example.component.html'\n})\nexport class MultiInputMobileExampleComponent {\n    selectedValues: any[] = [];\n\n    secondConfig: MobileModeConfig = {\n        approveButtonText: 'Approve',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true,\n        dialogConfig: {\n            ariaLabel: 'Select fruits dialog'\n        }\n    };\n\n    values: any[] = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange'];\n}\n",q=t("9Cr2"),Y=t("dB5E"),$=t("usa9"),_=t("nIj0"),X=function(){return["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]},Z=function(){return["Apple","Banana","Pineapple","Tomato"]},ee=function(){function e(){this.selected=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry"],this.secondSelected=["Pineapple"],this.thirdSelected=["Kiwi"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-example"]],decls:14,vars:17,consts:[[3,"dropdownValues","placeholder","ngModel","ngModelChange"],["fd-label","","for","disabledMultiInput1"],["id","disabledMultiInput1",3,"dropdownValues","placeholder","disabled","ngModel","ngModelChange"],["fd-label","","for","noAddonMultiInput1"],["id","noAddonMultiInput1",3,"dropdownValues","placeholder","ngModel","displayAddonButton","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1),C.Mb(2,"br"),C.Mb(3,"br"),C.Rb(4,"label",1),C.Sc(5,"Disabled Multi Input"),C.Qb(),C.Rb(6,"fd-multi-input",2),C.fc("ngModelChange",(function(e){return n.secondSelected=e})),C.Qb(),C.Sc(7),C.Mb(8,"br"),C.Mb(9,"br"),C.Rb(10,"label",3),C.Sc(11,"Hidden Addon Button"),C.Qb(),C.Rb(12,"fd-multi-input",4),C.fc("ngModelChange",(function(e){return n.thirdSelected=e})),C.Qb(),C.Sc(13)),2&e&&(C.rc("dropdownValues",C.vc(14,X))("placeholder","Search here...")("ngModel",n.selected),C.Ab(1),C.Uc(" Selected: [",n.selected.toLocaleString(),"] "),C.Ab(5),C.rc("dropdownValues",C.vc(15,Z))("placeholder","Search here...")("disabled",!0)("ngModel",n.secondSelected),C.Ab(1),C.Uc(" Selected: [",n.secondSelected.toLocaleString(),"] "),C.Ab(5),C.rc("dropdownValues",C.vc(16,Z))("placeholder","Search here...")("ngModel",n.thirdSelected)("displayAddonButton",!1),C.Ab(1),C.Uc(" Selected: [",n.thirdSelected.toLocaleString(),"]\n"))},directives:[$.a,_.t,_.w],encapsulation:2}),e}(),ne=t("gJWE"),te=t("ekBi"),le=function(){return["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]},oe=function(){function e(){this.selected=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-compact-example"]],decls:2,vars:6,consts:[[3,"dropdownValues","placeholder","compact","ngModel","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1)),2&e&&(C.rc("dropdownValues",C.vc(5,le))("placeholder","Search here...")("compact",!0)("ngModel",n.selected),C.Ab(1),C.Uc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[$.a,_.t,_.w],encapsulation:2}),e}(),ae=t("LTOS"),ie=t("aNX7"),re=function(){function e(){this.selectedValues=[],this.secondConfig={approveButtonText:"Approve",cancelButtonText:"Cancel",hasCloseButton:!0,dialogConfig:{ariaLabel:"Select fruits dialog"}},this.values=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-mobile-example"]],decls:3,vars:5,consts:[["fd-form-label",""],["placeholder","Search here...",3,"mobile","dropdownValues","showAllButton","mobileConfig","ngModel","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"label",0),C.Sc(1,"Mobile Mode Multi Input"),C.Qb(),C.Rb(2,"fd-multi-input",1),C.fc("ngModelChange",(function(e){return n.selectedValues=e})),C.Qb()),2&e&&(C.Ab(2),C.rc("mobile",!0)("dropdownValues",n.values)("showAllButton",!1)("mobileConfig",n.secondConfig)("ngModel",n.selectedValues))},directives:[ie.a,$.a,_.t,_.w],encapsulation:2}),e}(),ce=t("2kYt");function ue(e,n){if(1&e&&(C.Rb(0,"span"),C.Sc(1),C.Qb()),2&e){var t=n.$implicit,l=n.index,o=C.jc();C.Ab(1),C.Tc(l===o.selected.length-1?t.name:t.name+",")}}var pe=function(){function e(){this.values=[{name:"Apple"},{name:"Banana"},{name:"Pineapple"},{name:"Tomato"},{name:"Kiwi"},{name:"Strawberry"},{name:"Blueberry"},{name:"Orange"}],this.selected=[]}return e.prototype.displayFunc=function(e){return e.name.toLocaleUpperCase()},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-displaywith-example"]],decls:4,vars:5,consts:[[3,"dropdownValues","placeholder","ngModel","displayFn","ngModelChange"],[4,"ngFor","ngForOf"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1," Selected: ["),C.Qc(2,ue,2,1,"span",1),C.Sc(3,"]\n")),2&e&&(C.rc("dropdownValues",n.values)("placeholder","Search here...")("ngModel",n.selected)("displayFn",n.displayFunc),C.Ab(2),C.rc("ngForOf",n.selected))},directives:[$.a,_.t,_.w,ce.s],encapsulation:2}),e}(),de=function(){return["Apple","Banana","Pineapple","Tomato"]},se=function(){function e(){this.selected=[]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-includes-example"]],decls:2,vars:6,consts:[[3,"dropdownValues","placeholder","ngModel","includes","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1)),2&e&&(C.rc("dropdownValues",C.vc(5,de))("placeholder","Search here...")("ngModel",n.selected)("includes",!0),C.Ab(1),C.Uc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[$.a,_.t,_.w],encapsulation:2}),e}(),me=function(){return["Apple","Banana","Pineapple","Tomato"]},be=function(){function e(){this.selected=[]}return e.prototype.customFilter=function(e,n){return n?e.filter((function(e){return e.startsWith(n)})):e},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-filter-example"]],decls:2,vars:6,consts:[[3,"dropdownValues","placeholder","ngModel","filterFn","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1)),2&e&&(C.rc("dropdownValues",C.vc(5,me))("placeholder","Search here...")("ngModel",n.selected)("filterFn",n.customFilter),C.Ab(1),C.Uc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[$.a,_.t,_.w],encapsulation:2}),e}(),fe=t("vobO"),he=function(){function e(e){this.http=e,this.selected=[]}return e.prototype.getDropdownValues=function(){return this.http.get("./assets/multi-input-values.json")},e.prototype.ngOnInit=function(){this.dropdownValues=this.getDropdownValues()},e.\u0275fac=function(n){return new(n||e)(C.Lb(fe.a))},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-async-example"]],decls:3,vars:6,consts:[[3,"dropdownValues","placeholder","ngModel","ngModelChange"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.kc(1,"async"),C.Qb(),C.Sc(2)),2&e&&(C.rc("dropdownValues",C.lc(1,4,n.dropdownValues))("placeholder","Search here...")("ngModel",n.selected),C.Ab(2),C.Uc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[$.a,_.t,_.w],pipes:[ce.b],encapsulation:2}),e}(),ge=t("OJJ1"),Se=t("QkpV");function we(e,n){if(1&e&&(C.Rb(0,"span"),C.Sc(1),C.kc(2,"json"),C.Qb()),2&e){var t=C.jc();C.Ab(1),C.Uc(" ",C.lc(2,1,t.customForm.controls.selectedValues.value),"\n")}}function Me(e,n){if(1&e&&(C.Rb(0,"span"),C.Sc(1),C.kc(2,"json"),C.Qb()),2&e){var t=C.jc();C.Ab(1),C.Uc(" ",C.lc(2,1,t.customForm.controls.disabledSelectedValues.value),"\n")}}var ye=function(){return["Apple","Banana","Pineapple","Tomato"]},xe=function(){function e(){this.customForm=new _.k({selectedValues:new _.h({value:["Apple","Banana"],disabled:!1}),disabledSelectedValues:new _.h({value:["Pineapple","Tomato"],disabled:!0})})}return e.prototype.isValid=function(){return this.customForm.get("selectedValues").value&&this.customForm.get("selectedValues").value.length>0},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-form-example"]],decls:14,vars:11,consts:[[3,"formGroup"],["fd-fieldset",""],["fd-form-item",""],["fd-form-label",""],["formControlName","selectedValues",3,"state","dropdownValues","placeholder"],["formControlName","disabledSelectedValues",3,"dropdownValues","placeholder","state"],[4,"ngIf"]],template:function(e,n){1&e&&(C.Rb(0,"form",0),C.Rb(1,"fieldset",1),C.Rb(2,"div",2),C.Rb(3,"label",3),C.Sc(4,"Valid Multi Input"),C.Qb(),C.Mb(5,"fd-multi-input",4),C.Qb(),C.Rb(6,"div",2),C.Rb(7,"label",3),C.Sc(8,"Disabled Multi Input"),C.Qb(),C.Mb(9,"fd-multi-input",5),C.Qb(),C.Qb(),C.Qb(),C.Sc(10," Selected Values:\n"),C.Qc(11,we,3,3,"span",6),C.Sc(12," Selected Values:\n"),C.Qc(13,Me,3,3,"span",6)),2&e&&(C.rc("formGroup",n.customForm),C.Ab(5),C.rc("state",n.isValid()?"success":"error")("dropdownValues",C.vc(9,ye))("placeholder","Search Here..."),C.Ab(4),C.rc("dropdownValues",C.vc(10,ye))("placeholder","Search Here...")("state","information"),C.Ab(2),C.rc("ngIf",n.customForm.controls.selectedValues.value),C.Ab(2),C.rc("ngIf",n.customForm.controls.disabledSelectedValues.value))},directives:[_.J,_.u,_.l,ge.a,Se.a,ie.a,$.a,_.t,_.j,ce.t],pipes:[ce.k],encapsulation:2}),e}();function ve(e,n){if(1&e&&(C.Rb(0,"span"),C.Sc(1),C.Qb()),2&e){var t=n.$implicit,l=n.index,o=C.jc();C.Ab(1),C.Tc(l===o.selected.length-1?t.name:t.name+",")}}var Ce=function(){function e(){this.values=[{name:"Apple"},{name:"Banana"},{name:"Pineapple"},{name:"Tomato"},{name:"Kiwi"},{name:"Strawberry"},{name:"Blueberry"},{name:"Orange"}],this.selected=[]}return e.prototype.displayFunc=function(e){return e.name},e.prototype.parseFunc=function(e){if(e&&e.length)return{name:e}},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["fd-multi-input-new-tokens-example"]],decls:4,vars:6,consts:[[3,"dropdownValues","allowNewTokens","displayFn","newTokenParseFn","ngModel","ngModelChange"],[4,"ngFor","ngForOf"]],template:function(e,n){1&e&&(C.Rb(0,"fd-multi-input",0),C.fc("ngModelChange",(function(e){return n.selected=e})),C.Qb(),C.Sc(1," Selected: ["),C.Qc(2,ve,2,1,"span",1),C.Sc(3,"]\n")),2&e&&(C.rc("dropdownValues",n.values)("allowNewTokens",!0)("displayFn",n.displayFunc)("newTokenParseFn",n.parseFunc)("ngModel",n.selected),C.Ab(2),C.rc("ngForOf",n.selected))},directives:[$.a,_.t,_.w,ce.s],encapsulation:2}),e}(),Fe=function(){return["/core/global-config"]},Ve=function(){function e(){this.multiInputBasic=[{language:"html",code:l,fileName:"multi-input-example"},{language:"typescript",component:"MultiInputExampleComponent",code:o,fileName:"multi-input-example"}],this.display=[{language:"html",code:a,fileName:"multi-input-displaywith-example"},{language:"typescript",component:"MultiInputDisplaywithExampleComponent",code:i,fileName:"multi-input-displaywith-example"}],this.filter=[{language:"html",code:r,fileName:"multi-input-filter-example"},{language:"typescript",component:"MultiInputFilterExampleComponent",code:c,fileName:"multi-input-filter-example"}],this.includes=[{language:"html",code:u,fileName:"multi-input-includes-example"},{language:"typescript",component:"MultiInputIncludesExampleComponent",code:p,fileName:"multi-input-includes-example"}],this.async=[{language:"html",code:d,fileName:"multi-input-async-example"},{language:"typescript",component:"MultiInputAsyncExampleComponent",code:s,fileName:"multi-input-async-example"}],this.compact=[{language:"html",code:m,fileName:"multi-input-compact-example"},{language:"typescript",component:"MultiInputCompactExampleComponent",code:b,fileName:"multi-input-compact-example"}],this.form=[{language:"html",code:f,fileName:"multi-input-form-example"},{language:"typescript",component:"MultiInputFormExampleComponent",code:h,fileName:"multi-input-form-example"}],this.mobile=[{language:"html",code:w,fileName:"multi-input-mobile-example"},{language:"typescript",component:"MultiInputMobileExampleComponent",code:M,fileName:"multi-input-mobile-example"}],this.newTokens=[{language:"html",code:g,fileName:"multi-input-new-tokens-example"},{language:"typescript",component:"MultiInputNewTokensExampleComponent",code:S,fileName:"multi-input-new-tokens-example"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=C.Fb({type:e,selectors:[["app-multi-input-docs"]],decls:120,vars:29,consts:[[3,"id","componentName"],[3,"exampleFiles"],["fragment","mobile-mode-config",3,"routerLink"]],template:function(e,n){1&e&&(C.Rb(0,"fd-docs-section-title",0),C.Sc(1," Simple Multi Input\n"),C.Qb(),C.Rb(2,"description"),C.Sc(3," The standard version of the component that most people will use regularly. Width of the input can be controlled simply through the top-level component element sizing. Overflowing tokens can be reviewed by swiping the tokens left and right.\n"),C.Qb(),C.Rb(4,"component-example"),C.Mb(5,"fd-multi-input-example"),C.Qb(),C.Mb(6,"code-example",1),C.Mb(7,"separator"),C.Rb(8,"fd-docs-section-title",0),C.Sc(9," Compact Multi Input\n"),C.Qb(),C.Rb(10,"description"),C.Sc(11," The compact Multi Input is for large screens. The user can review tokens by pressing the right or left arrows on the keyboard.\n"),C.Qb(),C.Rb(12,"component-example"),C.Mb(13,"fd-multi-input-compact-example"),C.Qb(),C.Mb(14,"code-example",1),C.Mb(15,"separator"),C.Rb(16,"fd-docs-section-title",0),C.Sc(17," Mobile Mode Multi Input\n"),C.Qb(),C.Rb(18,"description"),C.Sc(19," To use Multi Input in mobile mode: "),C.Rb(20,"ul"),C.Rb(21,"li"),C.Sc(22,"import "),C.Rb(23,"code"),C.Sc(24,"MultiInputMobileModule"),C.Qb(),C.Qb(),C.Rb(25,"li"),C.Sc(26,"Set "),C.Rb(27,"code"),C.Sc(28,"[mobile]"),C.Qb(),C.Sc(29," property to true"),C.Qb(),C.Rb(30,"li"),C.Sc(31," Set "),C.Rb(32,"code"),C.Sc(33,"[mobileConfig]"),C.Qb(),C.Sc(34," with "),C.Rb(35,"code"),C.Sc(36,"MobileModeConfig"),C.Qb(),C.Sc(37," configuration object to customize the look of the control "),C.Qb(),C.Qb(),C.Sc(38," Multi Input Mobile Mode can be configured "),C.Rb(39,"strong"),C.Sc(40,"globally"),C.Qb(),C.Sc(41," by providing "),C.Rb(42,"code"),C.Sc(43,"MOBILE_MODE_CONFIG"),C.Qb(),C.Sc(44," token. Check "),C.Rb(45,"a",2),C.Sc(46,"Global Configuration page"),C.Qb(),C.Sc(47," for more information.\n"),C.Qb(),C.Rb(48,"component-example"),C.Mb(49,"fd-multi-input-mobile-example"),C.Qb(),C.Mb(50,"code-example",1),C.Mb(51,"separator"),C.Rb(52,"fd-docs-section-title",0),C.Sc(53," Display Object Property\n"),C.Qb(),C.Rb(54,"description"),C.Sc(55," The input supports objects through the "),C.Rb(56,"code"),C.Sc(57,"displayFn"),C.Qb(),C.Sc(58," input. The way the object is displayed to the user is fully customizable through providing a function that accepts the object and returns the string to be displayed. The example below shows displaying an object field in full uppercase.\n"),C.Qb(),C.Rb(59,"component-example"),C.Mb(60,"fd-multi-input-displaywith-example"),C.Qb(),C.Mb(61,"code-example",1),C.Mb(62,"separator"),C.Rb(63,"fd-docs-section-title",0),C.Sc(64," Return results including search term "),C.Qb(),C.Rb(65,"description"),C.Sc(66," By default, the multi-input will only return results where the result starts with the search term. By setting "),C.Rb(67,"code"),C.Sc(68,'[includes]="true"'),C.Qb(),C.Sc(69,", the multi-input will return results where the result includes the search term at any place in the string.\n"),C.Qb(),C.Rb(70,"component-example"),C.Mb(71,"fd-multi-input-includes-example"),C.Qb(),C.Mb(72,"code-example",1),C.Mb(73,"separator"),C.Rb(74,"fd-docs-section-title",0),C.Sc(75," Custom Filter "),C.Qb(),C.Rb(76,"description"),C.Sc(77," The input supports custom filters through the "),C.Rb(78,"code"),C.Sc(79,"filterFn"),C.Qb(),C.Sc(80," input function. Simply pass a function which accepts an array and a search term, and then returns the desired filtered array. In this example, we are requiring that the search term is case-sensitive.\n"),C.Qb(),C.Rb(81,"component-example"),C.Mb(82,"fd-multi-input-filter-example"),C.Qb(),C.Mb(83,"code-example",1),C.Mb(84,"separator"),C.Rb(85,"fd-docs-section-title",0),C.Sc(86," Observable Async Example\n"),C.Qb(),C.Rb(87,"description"),C.Sc(88," The "),C.Rb(89,"code"),C.Sc(90,"dropdownValues"),C.Qb(),C.Sc(91," input can accept an Observable with the async pipe, which could be useful for autocomplete.\n"),C.Qb(),C.Rb(92,"component-example"),C.Mb(93,"fd-multi-input-async-example"),C.Qb(),C.Mb(94,"code-example",1),C.Mb(95,"separator"),C.Rb(96,"fd-docs-section-title",0),C.Sc(97," Multi Input in Reactive Form\n"),C.Qb(),C.Rb(98,"description"),C.Sc(99,"The multi-input component may also be used within an angular reactive form."),C.Qb(),C.Rb(100,"component-example"),C.Mb(101,"fd-multi-input-form-example"),C.Qb(),C.Mb(102,"code-example",1),C.Mb(103,"separator"),C.Rb(104,"fd-docs-section-title",0),C.Sc(105," Adding New Tokens "),C.Qb(),C.Rb(106,"description"),C.Sc(107," Set "),C.Rb(108,"code"),C.Sc(109,"[allowNewTokens]"),C.Qb(),C.Sc(110,' to "true" to allow the creation of new tokens in the multi-input. Note that if you are populating the multi-input with objects and using a custom '),C.Rb(111,"code"),C.Sc(112,"displayFn"),C.Qb(),C.Sc(113,", you will also need to implement your own "),C.Rb(114,"code"),C.Sc(115,"newTokenParseFn"),C.Qb(),C.Sc(116," so your multi-input knows how to format a new object. This function is not required if your collection is simply an array of strings.\n"),C.Qb(),C.Rb(117,"component-example"),C.Mb(118,"fd-multi-input-new-tokens-example"),C.Qb(),C.Mb(119,"code-example",1)),2&e&&(C.rc("id","simpleMultiInput")("componentName","multi-input"),C.Ab(6),C.rc("exampleFiles",n.multiInputBasic),C.Ab(2),C.rc("id","compactMultiInput")("componentName","multi-input"),C.Ab(6),C.rc("exampleFiles",n.compact),C.Ab(2),C.rc("id","mobileMultiInput")("componentName","multi-input"),C.Ab(29),C.rc("routerLink",C.vc(28,Fe)),C.Ab(5),C.rc("exampleFiles",n.mobile),C.Ab(2),C.rc("id","displayObjectProperty")("componentName","multi-input"),C.Ab(9),C.rc("exampleFiles",n.display),C.Ab(2),C.rc("id","includes")("componentName","multi-input"),C.Ab(9),C.rc("exampleFiles",n.includes),C.Ab(2),C.rc("id","customFilter")("componentName","multi-input"),C.Ab(9),C.rc("exampleFiles",n.filter),C.Ab(2),C.rc("id","observableAsyncExample")("componentName","multi-input"),C.Ab(9),C.rc("exampleFiles",n.async),C.Ab(2),C.rc("id","reactiveForm")("componentName","multi-input"),C.Ab(6),C.rc("exampleFiles",n.form),C.Ab(2),C.rc("id","newTokens")("componentName","multi-input"),C.Ab(15),C.rc("exampleFiles",n.newTokens))},directives:[q.a,V.a,Y.a,ee,ne.a,te.a,oe,y.e,re,pe,se,be,he,xe,Ce],styles:[""]}),e}(),Ae=t("MOJJ"),Qe=[{path:"",component:R,children:[{path:"",component:Ve},{path:"api",component:x.a,data:{content:v.a.multiInput}}]}],Re=function(){function e(){}return e.\u0275mod=C.Jb({type:e}),e.\u0275inj=C.Ib({factory:function(n){return new(n||e)},imports:[[y.f.forChild(Qe),Ae.a,ae.FormModule,ae.MultiInputModule,ae.MultiInputMobileModule],y.f]}),e}()}}]);