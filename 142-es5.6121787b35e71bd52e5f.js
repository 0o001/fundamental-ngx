!function(){function e(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function n(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function t(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{v0Ft:function(n,a,r){"use strict";r.r(a),r.d(a,"PlatformWizardGeneratorDocsModule",function(){return Jn});var i={};r.r(i),r.d(i,"default",function(){return j});var o={};r.r(o),r.d(o,"default",function(){return E});var d={};r.r(d),r.d(d,"default",function(){return A});var s={};r.r(s),r.d(s,"default",function(){return q});var m={};r.r(m),r.d(m,"default",function(){return R});var p={};r.r(p),r.d(p,"default",function(){return L});var l={};r.r(l),r.d(l,"default",function(){return B});var c={};r.r(c),r.d(c,"default",function(){return $});var u={};r.r(u),r.d(u,"default",function(){return O});var f={};r.r(f),r.d(f,"default",function(){return X});var b={};r.r(b),r.d(b,"default",function(){return U});var g={};r.r(g),r.d(g,"default",function(){return K});var y={};r.r(y),r.d(y,"default",function(){return Y});var h={};r.r(h),r.d(h,"default",function(){return J});var v={};r.r(v),r.d(v,"default",function(){return Q});var z={};r.r(z),r.d(z,"default",function(){return H});var V={};r.r(V),r.d(V,"default",function(){return Z});var w={};r.r(w),r.d(w,"default",function(){return ee});var D={};r.r(D),r.d(D,"default",function(){return ne});var S={};r.r(S),r.d(S,"default",function(){return te});var C={};r.r(C),r.d(C,"default",function(){return ae});var W={};r.r(W),r.d(W,"default",function(){return re});var T=r("tyNb"),I=r("IywY"),x=r("jzzn"),k=r("t9W5"),G=r("G+eq"),F=r("YYph"),M=r("eQYQ"),P=r("Ccq/"),N=r("LQg1"),_=r("vTn9"),j='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',E="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-default-example',\n  templateUrl: './wizard-generator-default-example.component.html'\n})\nexport class WizardGeneratorDefaultExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",A='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',q="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WizardGeneratorItem, WizardTitle, WizardDialogGeneratorService, WizardGeneratorFormsValue } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-dialog-example',\n    templateUrl: './wizard-generator-dialog-example.component.html'\n})\nexport class WizardGeneratorDialogExampleComponent implements OnDestroy {\n\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    allowSubscribe = true;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",R='<fdp-button (click)="openDialog()" label="Open customized wizard in dialog"></fdp-button>\n\n<ng-template let-goNext="goNext" #goNextTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="emphasized" label="Custom next button" (click)="goNext()"></fdp-button>\n</ng-template>\n\n<ng-template let-goBack="goBack" #goBackTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="ghost" label="Custom back button" (click)="goBack()"></fdp-button>\n</ng-template>\n\n<ng-template let-finish="finish" #finishTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="emphasized" label="Custom finish button" (click)="finish()"></fdp-button>\n</ng-template>\n\n<ng-template let-cancel="cancel" #cancelTemplate>\n    <fdp-button class="fd-bar__element" contentDensity="condensed" buttonType="ghost" label="Custom cancel button" (click)="cancel()"></fdp-button>\n</ng-template>\n\n<ng-template #summaryStepTemplate let-steps="steps" let-editStep="editStep">\n    <ng-container *ngFor="let step of steps; trackBy: trackFn">\n        <h4 fd-title headerSize="4">{{ step.name }} step</h4>\n        <ng-container *ngFor="let group of step.forms">\n            <h4 fd-title headerSize="6">{{ group.title }} form</h4>\n            <fd-layout-grid style="margin-bottom: 2rem">\n                <div fdLayoutGridCol="4" colMd="4" colLg="4" colXl="4">\n                    <div *ngFor="let item of group.items">\n                        <label fd-form-label> {{ item.label }}: </label>\n                    </div>\n                </div>\n                <div fdLayoutGridCol="4" colMd="5" colLg="5" colXl="5">\n                    <div *ngFor="let item of group.items">\n                        <label fd-form-label>\n                            {{ item.value || \'-\' }}\n                        </label>\n                    </div>\n                </div>\n                <div fdLayoutGridCol="1" colMd="2" colLg="2" colXl="2">\n                    <fdp-link href="#" (click)="_editStep($event, step.id, editStep)">\n                        Edit\n                    </fdp-link>\n                </div>\n            </fd-layout-grid>\n        </ng-container>\n    </ng-container>\n</ng-template>\n\n<ng-template let-dialog let-dialogConfig="dialogConfig" #confirmationDialogTemplate>\n    <fd-dialog [dialogConfig]="dialogConfig" [dialogRef]="dialog">\n        <fd-dialog-header>\n            <button fd-dialog-close-button (click)="dialog.dismiss()"></button>\n        </fd-dialog-header>\n\n        <fd-dialog-body>\n            This is custom confirmation dialog.\n        </fd-dialog-body>\n\n        <fd-dialog-footer>\n            <fd-button-bar\n                    fdType="emphasized"\n                    label="Yes"\n                    type="submit"\n                    (click)="dialog.close(true)">\n            </fd-button-bar>\n            <fd-button-bar\n                    fd-initial-focus\n                    label="No"\n                    (click)="dialog.dismiss()">\n            </fd-button-bar>\n        </fd-dialog-footer>\n    </fd-dialog>\n</ng-template>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',L="import { Component, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-customizable-example',\n  templateUrl: './wizard-generator-customizable-example.component.html'\n})\nexport class WizardGeneratorCustomizableExampleComponent implements OnDestroy {\n\n    @ViewChild('goNextTemplate') goNextTemplate: TemplateRef<any>;\n    @ViewChild('goBackTemplate') goBackTemplate: TemplateRef<any>;\n    @ViewChild('finishTemplate') finishTemplate: TemplateRef<any>;\n    @ViewChild('cancelTemplate') cancelTemplate: TemplateRef<any>;\n    @ViewChild('confirmationDialogTemplate') confirmationDialogTemplate: TemplateRef<any>;\n    @ViewChild('summaryStepTemplate') summaryStepTemplate: TemplateRef<any>;\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle,\n                goNextButtonTemplate: this.goNextTemplate,\n                goBackButtonTemplate: this.goBackTemplate,\n                finishButtonTemplate: this.finishTemplate,\n                cancelButtonTemplate: this.cancelTemplate,\n                confirmationDialogTemplate: this.confirmationDialogTemplate,\n                summaryStepTemplate: this.summaryStepTemplate\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    _editStep(event: MouseEvent, stepId: string, callback: (stepId: string) => void): void {\n        event.preventDefault();\n        callback(stepId);\n    }\n}\n",B='<fdp-wizard-generator\n    [appendToWizard]="false"\n    [items]="stepItems"\n    [title]="wizardTitle"\n    (wizardFinished)="wizardFinished($event)"\n>\n    <ng-template fdp-wizard-generator-go-next-button let-goNext="goNext">\n        <fdp-button\n            contentDensity="condensed"\n            buttonType="emphasized"\n            label="Custom next button"\n            (click)="goNext()"\n        ></fdp-button>\n    </ng-template>\n    <ng-template fdp-wizard-generator-finish-button let-finish="finish">\n        <fdp-button\n            contentDensity="condensed"\n            buttonType="emphasized"\n            label="Custom finish button"\n            (click)="finish()"\n        ></fdp-button>\n    </ng-template>\n    <ng-template fdp-wizard-generator-summary-step let-steps="steps" let-editStep="editStep">\n        <ng-container *ngFor="let step of steps; trackBy: trackFn">\n            <h4 fd-title headerSize="4">{{ step.name }} step</h4>\n            <ng-container *ngFor="let group of step.forms">\n                <h4 fd-title headerSize="6">{{ group.title }} form</h4>\n                <fd-layout-grid style="margin-bottom: 2rem">\n                    <div fdLayoutGridCol="4" colMd="4" colLg="4" colXl="4">\n                        <div *ngFor="let item of group.items">\n                            <label fd-form-label> {{ item.label }}: </label>\n                        </div>\n                    </div>\n                    <div fdLayoutGridCol="4" colMd="5" colLg="5" colXl="5">\n                        <div *ngFor="let item of group.items">\n                            <label fd-form-label>\n                                {{ item.value || \'-\' }}\n                            </label>\n                        </div>\n                    </div>\n                    <div fdLayoutGridCol="1" colMd="2" colLg="2" colXl="2">\n                        <fdp-link href="#" (click)="_editStep($event, step.id, editStep)">\n                            Edit\n                        </fdp-link>\n                    </div>\n                </fd-layout-grid>\n            </ng-container>\n        </ng-container>\n    </ng-template>\n</fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n',$="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { FormattedFormStep, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-customizable-embeded-example',\n  templateUrl: './wizard-generator-customizable-embeded-example.component.html'\n})\nexport class WizardGeneratorCustomizableEmbededExampleComponent {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'summary',\n            summary: true,\n            name: 'Review'\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n    trackFn(_: number, formattedStep: FormattedFormStep): string {\n        return formattedStep.id;\n    }\n\n    _editStep(event: MouseEvent, stepId: string, callback: (stepId: string) => void): void {\n        event.preventDefault();\n        callback(stepId);\n    }\n\n}\n",O='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',X="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-condition-example',\n  templateUrl: './wizard-generator-condition-example.component.html'\n})\nexport class WizardGeneratorConditionExampleComponent implements OnDestroy {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            },\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",U='<fdp-wizard-generator [items]="stepItems" [responsivePaddings]="false" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',K="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-responsive-paddings-example',\n  templateUrl: './wizard-generator-responsive-paddings-example.component.html'\n})\nexport class WizardGeneratorResponsivePaddingsExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",Y='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',J="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WizardGeneratorItem, WizardTitle, WizardDialogGeneratorService, WizardGeneratorFormsValue } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-responsive-dialog-example',\n  templateUrl: './wizard-generator-responsive-dialog-example.component.html'\n})\nexport class WizardGeneratorResponsiveDialogExampleComponent implements OnDestroy {\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService\n    ) { }\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: false,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",Q='<fdp-wizard-generator [items]="stepItems" [responsivePaddings]="true" [displaySummaryStep]="true" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',H="import { Component} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-visible-summary-example',\n  templateUrl: './wizard-generator-visible-summary-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor() { }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n",Z='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',ee="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WizardDialogGeneratorService, WizardGeneratorFormsValue, WizardGeneratorItem, WizardTitle } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n  selector: 'fdp-wizard-generator-visible-summary-branching-example',\n  templateUrl: './wizard-generator-visible-summary-branching-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryBranchingExampleComponent implements OnDestroy {\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) => answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            },\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true,\n            when: (_completedSteps, answers) => {\n                return answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card';\n            }\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService.open({\n            width: '100%',\n            height: '100%',\n            verticalPadding: false,\n            data: {\n                items: this.stepItems,\n                appendToWizard: false,\n                displaySummaryStep: true,\n                responsivePaddings: true,\n                title: this.wizardTitle\n            }\n        }).afterClosed.pipe(takeUntil(this._onDestroy$))\n        .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n            this.wizardValue = wizardValue;\n        }, () => {});\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",ne='<fdp-wizard-generator [appendToWizard]="false" [navigationButtons]="false" [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<div\n    fd-bar\n    *ngIf="stepItems.length > 0 && wizardGenerator?.wizardCreated"\n>\n    <div fd-bar-right>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="ghost"\n            *ngIf="!isFirstStep"\n            contentDensity="condensed"\n            label="Previous step"\n            (click)="goBack()"\n        ></fdp-button>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="emphasized"\n            contentDensity="condensed"\n            *ngIf="!isLastStep"\n            label="Next step"\n            (click)="goNext()"\n        ></fdp-button>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="emphasized"\n            contentDensity="condensed"\n            *ngIf="isLastStep"\n            label="Finish"\n            (click)="finish()"\n        ></fdp-button>\n    </div>\n</div>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n',te="import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport {\n    WizardGeneratorComponent,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-external-navigation-example',\n    templateUrl: './wizard-generator-external-navigation-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardGeneratorExternalNavigationExampleComponent {\n    @ViewChild(WizardGeneratorComponent)\n    wizardGenerator: WizardGeneratorComponent;\n\n    get isFirstStep(): boolean {\n        return this.wizardGenerator?.isFirstStep || false;\n    }\n\n    get isLastStep(): boolean {\n        return this.wizardGenerator?.isLastStep || false;\n    }\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n    goNext(): void {\n        this.wizardGenerator?.goNext();\n    }\n\n    goBack(): void {\n        this.wizardGenerator?.goBack();\n    }\n\n    async finish(): Promise<void> {\n        await this.wizardGenerator?.finish();\n    }\n}\n",ae='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">\n    Wizard value: {{ wizardValue | json }}\n</p>\n',re="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n\n@Component({\n  selector: 'fdp-wizard-generator-summary-objects-example',\n  templateUrl: './wizard-generator-summary-objects-example.component.html'\n})\nexport class WizardGeneratorSummaryObjectsExampleComponent {\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            type: 'checkbox',\n                            name: 'products',\n                            message: 'Select appropriate products',\n                            guiOptions: {\n                                inline: true,\n                                column: 2\n                            },\n                            choices: () => {\n                                return [\n                                    'TV',\n                                    'Console',\n                                    'Laptop'\n                                ];\n                            },\n                            validators: [Validators.required],\n                            validate: (input) => {\n                                return input?.length > 0 ? null : 'You need to select at least one product';\n                            },\n                            valueRenderer: (value: string[]) => {\n                                return value.join(', ');\n                            }\n                        }\n                    ],\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n}\n",ie=r("fXoL"),oe=r("ddaM"),de=r("kt86"),se=r("X1JU"),me=r("3Pt+"),pe=r("RGEq"),le=r("ofXK");function ce(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var ue,fe=((ue=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||ue)},ue.\u0275cmp=ie.Kb({type:ue,selectors:[["fdp-wizard-generator-default-example"]],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Vb(),ie.Tc(1,ce,3,3,"p",1)),2&e&&(ie.vc("items",n.stepItems),ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,le.o],pipes:[le.h],encapsulation:2}),ue),be=r("5HkS"),ge=r("Hxo2"),ye=r("XNiG"),he=r("1G5W"),ve=r("D676");function ze(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var Ve,we=((Ve=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.allowSubscribe=!0,this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ye.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(he.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Ve)(ie.Qb(N.b))},Ve.\u0275cmp=ie.Kb({type:Ve,selectors:[["fdp-wizard-generator-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-button",0),ie.jc("click",function(){return n.openDialog()}),ie.Vb(),ie.Tc(1,ze,3,3,"p",1)),2&e&&(ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[ve.a,le.o],pipes:[le.h],encapsulation:2}),Ve),De=r("Uclp"),Se=r("HOcH"),Ce=r("MgRe"),We=r("UE4l"),Te=r("CeM2"),Ie=r("uAiI"),xe=r("oqgM"),ke=r("Dtj0");function Ge(e,n){1&e&&(ie.Wb(0,"fdp-button",5),ie.jc("click",function(){return(0,n.goNext)()}),ie.Vb())}function Fe(e,n){1&e&&(ie.Wb(0,"fdp-button",6),ie.jc("click",function(){return(0,n.finish)()}),ie.Vb())}function Me(e,n){if(1&e&&(ie.Wb(0,"div"),ie.Wb(1,"label",16),ie.Vc(2),ie.Vb(),ie.Vb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc(" ",t.label,": ")}}function Pe(e,n){if(1&e&&(ie.Wb(0,"div"),ie.Wb(1,"label",16),ie.Vc(2),ie.Vb(),ie.Vb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc(" ",t.value||"-"," ")}}function Ne(e,n){if(1&e){var t=ie.Xb();ie.Ub(0),ie.Wb(1,"h4",10),ie.Vc(2),ie.Vb(),ie.Wb(3,"fd-layout-grid",11),ie.Wb(4,"div",12),ie.Tc(5,Me,3,1,"div",9),ie.Vb(),ie.Wb(6,"div",13),ie.Tc(7,Pe,3,1,"div",9),ie.Vb(),ie.Wb(8,"div",14),ie.Wb(9,"fdp-link",15),ie.jc("click",function(e){ie.Kc(t);var n=ie.nc().$implicit,a=ie.nc().editStep;return ie.nc()._editStep(e,n.id,a)}),ie.Vc(10," Edit "),ie.Vb(),ie.Vb(),ie.Vb(),ie.Tb()}if(2&e){var a=n.$implicit;ie.Db(2),ie.Xc("",a.title," form"),ie.Db(3),ie.vc("ngForOf",a.items),ie.Db(2),ie.vc("ngForOf",a.items)}}function _e(e,n){if(1&e&&(ie.Ub(0),ie.Wb(1,"h4",8),ie.Vc(2),ie.Vb(),ie.Tc(3,Ne,11,3,"ng-container",9),ie.Tb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc("",t.name," step"),ie.Db(1),ie.vc("ngForOf",t.forms)}}function je(e,n){if(1&e&&ie.Tc(0,_e,4,2,"ng-container",7),2&e){var t=n.steps,a=ie.nc();ie.vc("ngForOf",t)("ngForTrackBy",a.trackFn)}}function Ee(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc("Wizard value: ",ie.pc(2,1,t.wizardValue),"")}}var Ae,qe=((Ae=function(){function n(){e(this,n),this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{id:"summary",summary:!0,name:"Review"}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}},{key:"trackFn",value:function(e,n){return n.id}},{key:"_editStep",value:function(e,n,t){e.preventDefault(),t(n)}}]),n}()).\u0275fac=function(e){return new(e||Ae)},Ae.\u0275cmp=ie.Kb({type:Ae,selectors:[["fdp-wizard-generator-customizable-embeded-example"]],decls:5,vars:4,consts:[[3,"appendToWizard","items","title","wizardFinished"],["fdp-wizard-generator-go-next-button",""],["fdp-wizard-generator-finish-button",""],["fdp-wizard-generator-summary-step",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",3,"click"],[4,"ngFor","ngForOf","ngForTrackBy"],["fd-title","","headerSize","4"],[4,"ngFor","ngForOf"],["fd-title","","headerSize","6"],[2,"margin-bottom","2rem"],["fdLayoutGridCol","4","colMd","4","colLg","4","colXl","4"],["fdLayoutGridCol","4","colMd","5","colLg","5","colXl","5"],["fdLayoutGridCol","1","colMd","2","colLg","2","colXl","2"],["href","#",3,"click"],["fd-form-label",""]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Tc(1,Ge,1,0,"ng-template",1),ie.Tc(2,Fe,1,0,"ng-template",2),ie.Tc(3,je,1,2,"ng-template",3),ie.Vb(),ie.Tc(4,Ee,3,3,"p",4)),2&e&&(ie.vc("appendToWizard",!1)("items",n.stepItems)("title",n.wizardTitle),ie.Db(4),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,De.a,Se.a,Ce.a,le.o,ve.a,le.n,We.a,Te.a,Ie.a,xe.a,ke.a],pipes:[le.h],encapsulation:2}),Ae),Re=r("VlTP"),Le=r("z4oC"),Be=r("YnUX"),$e=r("R7Mx"),Oe=r("ZuJN"),Xe=r("8yLD"),Ue=r("ugC7"),Ke=["goNextTemplate"],Ye=["goBackTemplate"],Je=["finishTemplate"],Qe=["cancelTemplate"],He=["confirmationDialogTemplate"],Ze=["summaryStepTemplate"];function en(e,n){1&e&&(ie.Wb(0,"fdp-button",8),ie.jc("click",function(){return(0,n.goNext)()}),ie.Vb())}function nn(e,n){1&e&&(ie.Wb(0,"fdp-button",9),ie.jc("click",function(){return(0,n.goBack)()}),ie.Vb())}function tn(e,n){1&e&&(ie.Wb(0,"fdp-button",10),ie.jc("click",function(){return(0,n.finish)()}),ie.Vb())}function an(e,n){1&e&&(ie.Wb(0,"fdp-button",11),ie.jc("click",function(){return(0,n.cancel)()}),ie.Vb())}function rn(e,n){if(1&e&&(ie.Wb(0,"div"),ie.Wb(1,"label",21),ie.Vc(2),ie.Vb(),ie.Vb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc(" ",t.label,": ")}}function on(e,n){if(1&e&&(ie.Wb(0,"div"),ie.Wb(1,"label",21),ie.Vc(2),ie.Vb(),ie.Vb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc(" ",t.value||"-"," ")}}function dn(e,n){if(1&e){var t=ie.Xb();ie.Ub(0),ie.Wb(1,"h4",15),ie.Vc(2),ie.Vb(),ie.Wb(3,"fd-layout-grid",16),ie.Wb(4,"div",17),ie.Tc(5,rn,3,1,"div",14),ie.Vb(),ie.Wb(6,"div",18),ie.Tc(7,on,3,1,"div",14),ie.Vb(),ie.Wb(8,"div",19),ie.Wb(9,"fdp-link",20),ie.jc("click",function(e){ie.Kc(t);var n=ie.nc().$implicit,a=ie.nc().editStep;return ie.nc()._editStep(e,n.id,a)}),ie.Vc(10," Edit "),ie.Vb(),ie.Vb(),ie.Vb(),ie.Tb()}if(2&e){var a=n.$implicit;ie.Db(2),ie.Xc("",a.title," form"),ie.Db(3),ie.vc("ngForOf",a.items),ie.Db(2),ie.vc("ngForOf",a.items)}}function sn(e,n){if(1&e&&(ie.Ub(0),ie.Wb(1,"h4",13),ie.Vc(2),ie.Vb(),ie.Tc(3,dn,11,3,"ng-container",14),ie.Tb()),2&e){var t=n.$implicit;ie.Db(2),ie.Xc("",t.name," step"),ie.Db(1),ie.vc("ngForOf",t.forms)}}function mn(e,n){if(1&e&&ie.Tc(0,sn,4,2,"ng-container",12),2&e){var t=n.steps,a=ie.nc();ie.vc("ngForOf",t)("ngForTrackBy",a.trackFn)}}function pn(e,n){if(1&e&&(ie.Wb(0,"fd-dialog",22),ie.Wb(1,"fd-dialog-header"),ie.Wb(2,"button",23),ie.jc("click",function(){return n.$implicit.dismiss()}),ie.Vb(),ie.Vb(),ie.Wb(3,"fd-dialog-body"),ie.Vc(4," This is custom confirmation dialog. "),ie.Vb(),ie.Wb(5,"fd-dialog-footer"),ie.Wb(6,"fd-button-bar",24),ie.jc("click",function(){return n.$implicit.close(!0)}),ie.Vb(),ie.Wb(7,"fd-button-bar",25),ie.jc("click",function(){return n.$implicit.dismiss()}),ie.Vb(),ie.Vb(),ie.Vb()),2&e){var t=n.$implicit;ie.vc("dialogConfig",n.dialogConfig)("dialogRef",t)}}function ln(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var cn,un=((cn=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ye.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle,goNextButtonTemplate:this.goNextTemplate,goBackButtonTemplate:this.goBackTemplate,finishButtonTemplate:this.finishTemplate,cancelButtonTemplate:this.cancelTemplate,confirmationDialogTemplate:this.confirmationDialogTemplate,summaryStepTemplate:this.summaryStepTemplate}}).afterClosed.pipe(Object(he.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"_editStep",value:function(e,n,t){e.preventDefault(),t(n)}}]),n}()).\u0275fac=function(e){return new(e||cn)(ie.Qb(N.b))},cn.\u0275cmp=ie.Kb({type:cn,selectors:[["fdp-wizard-generator-customizable-example"]],viewQuery:function(e,n){var t;1&e&&(ie.ad(Ke,1),ie.ad(Ye,1),ie.ad(Je,1),ie.ad(Qe,1),ie.ad(He,1),ie.ad(Ze,1)),2&e&&(ie.Gc(t=ie.kc())&&(n.goNextTemplate=t.first),ie.Gc(t=ie.kc())&&(n.goBackTemplate=t.first),ie.Gc(t=ie.kc())&&(n.finishTemplate=t.first),ie.Gc(t=ie.kc())&&(n.cancelTemplate=t.first),ie.Gc(t=ie.kc())&&(n.confirmationDialogTemplate=t.first),ie.Gc(t=ie.kc())&&(n.summaryStepTemplate=t.first))},decls:14,vars:1,consts:[["label","Open customized wizard in dialog",3,"click"],["goNextTemplate",""],["goBackTemplate",""],["finishTemplate",""],["cancelTemplate",""],["summaryStepTemplate",""],["confirmationDialogTemplate",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom back button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom cancel button",1,"fd-bar__element",3,"click"],[4,"ngFor","ngForOf","ngForTrackBy"],["fd-title","","headerSize","4"],[4,"ngFor","ngForOf"],["fd-title","","headerSize","6"],[2,"margin-bottom","2rem"],["fdLayoutGridCol","4","colMd","4","colLg","4","colXl","4"],["fdLayoutGridCol","4","colMd","5","colLg","5","colXl","5"],["fdLayoutGridCol","1","colMd","2","colLg","2","colXl","2"],["href","#",3,"click"],["fd-form-label",""],[3,"dialogConfig","dialogRef"],["fd-dialog-close-button","",3,"click"],["fdType","emphasized","label","Yes","type","submit",3,"click"],["fd-initial-focus","","label","No",3,"click"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-button",0),ie.jc("click",function(){return n.openDialog()}),ie.Vb(),ie.Tc(1,en,1,0,"ng-template",null,1,ie.Uc),ie.Tc(3,nn,1,0,"ng-template",null,2,ie.Uc),ie.Tc(5,tn,1,0,"ng-template",null,3,ie.Uc),ie.Tc(7,an,1,0,"ng-template",null,4,ie.Uc),ie.Tc(9,mn,1,2,"ng-template",null,5,ie.Uc),ie.Tc(11,pn,8,2,"ng-template",null,6,ie.Uc),ie.Tc(13,ln,3,3,"p",7)),2&e&&(ie.Db(13),ie.vc("ngIf",n.wizardValue))},directives:[ve.a,le.o,le.n,We.a,Te.a,Ie.a,xe.a,ke.a,Re.a,Le.a,Be.a,$e.a,Oe.a,Xe.a,Ue.a],pipes:[le.h],encapsulation:2}),cn);function fn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var bn,gn=((bn=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[me.A.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:function(e,n){var t,a;return"Credit Card"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:function(e,n){var t,a;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ye.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(he.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||bn)(ie.Qb(N.b))},bn.\u0275cmp=ie.Kb({type:bn,selectors:[["fdp-wizard-generator-condition-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-button",0),ie.jc("click",function(){return n.openDialog()}),ie.Vb(),ie.Tc(1,fn,3,3,"p",1)),2&e&&(ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[ve.a,le.o],pipes:[le.h],encapsulation:2}),bn);function yn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var hn,vn=((hn=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||hn)},hn.\u0275cmp=ie.Kb({type:hn,selectors:[["fdp-wizard-generator-responsive-paddings-example"]],decls:2,vars:3,consts:[[3,"items","responsivePaddings","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Vb(),ie.Tc(1,yn,3,3,"p",1)),2&e&&(ie.vc("items",n.stepItems)("responsivePaddings",!1),ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,le.o],pipes:[le.h],encapsulation:2}),hn);function zn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var Vn,wn=((Vn=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Vn)},Vn.\u0275cmp=ie.Kb({type:Vn,selectors:[["fdp-wizard-generator-visible-summary-example"]],decls:2,vars:4,consts:[[3,"items","responsivePaddings","displaySummaryStep","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Vb(),ie.Tc(1,zn,3,3,"p",1)),2&e&&(ie.vc("items",n.stepItems)("responsivePaddings",!0)("displaySummaryStep",!0),ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,le.o],pipes:[le.h],encapsulation:2}),Vn);function Dn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var Sn,Cn=((Sn=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[me.A.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:function(e,n){var t,a;return"Credit Card"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:function(e,n){var t,a;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0,when:function(e,n){var t,a,r,i;return"Bank Transfer"===(null===(a=null===(t=n.paymentMethodStep)||void 0===t?void 0:t.paymentMethodForm)||void 0===a?void 0:a.paymentMethod)||"Credit Card"===(null===(i=null===(r=n.paymentMethodStep)||void 0===r?void 0:r.paymentMethodForm)||void 0===i?void 0:i.paymentMethod)}}],this._onDestroy$=new ye.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe(Object(he.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Sn)(ie.Qb(N.b))},Sn.\u0275cmp=ie.Kb({type:Sn,selectors:[["fdp-wizard-generator-visible-summary-branching-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-button",0),ie.jc("click",function(){return n.openDialog()}),ie.Vb(),ie.Tc(1,Dn,3,3,"p",1)),2&e&&(ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[ve.a,le.o],pipes:[le.h],encapsulation:2}),Sn);function Wn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var Tn,In=((Tn=function(){function n(t){e(this,n),this._wizardDialogService=t,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new ye.a}return t(n,[{key:"ngOnDestroy",value:function(){this._onDestroy$.next(),this._onDestroy$.complete()}},{key:"openDialog",value:function(){var e=this;this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!1,title:this.wizardTitle}}).afterClosed.pipe(Object(he.a)(this._onDestroy$)).subscribe(function(n){e.wizardValue=n},function(){})}},{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||Tn)(ie.Qb(N.b))},Tn.\u0275cmp=ie.Kb({type:Tn,selectors:[["fdp-wizard-generator-responsive-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-button",0),ie.jc("click",function(){return n.openDialog()}),ie.Vb(),ie.Tc(1,Wn,3,3,"p",1)),2&e&&(ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[ve.a,le.o],pipes:[le.h],encapsulation:2}),Tn);function xn(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc(" Wizard value: ",ie.pc(2,1,t.wizardValue),"\n")}}var kn,Gn=((kn=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{type:"checkbox",name:"products",message:"Select appropriate products",guiOptions:{inline:!0,column:2},choices:function(){return["TV","Console","Laptop"]},validators:[me.A.required],validate:function(e){return(null==e?void 0:e.length)>0?null:"You need to select at least one product"},valueRenderer:function(e){return e.join(", ")}}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"wizardFinished",value:function(e){this.wizardValue=e}}]),n}()).\u0275fac=function(e){return new(e||kn)},kn.\u0275cmp=ie.Kb({type:kn,selectors:[["fdp-wizard-generator-summary-objects-example"]],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Vb(),ie.Tc(1,xn,3,3,"p",1)),2&e&&(ie.vc("items",n.stepItems),ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,le.o],pipes:[le.h],encapsulation:2}),kn),Fn=r("mrSG"),Mn=r("NFwf"),Pn=r("GdPf");function Nn(e,n){if(1&e){var t=ie.Xb();ie.Wb(0,"fdp-button",8),ie.jc("click",function(){return ie.Kc(t),ie.nc(2).goBack()}),ie.Vb()}}function _n(e,n){if(1&e){var t=ie.Xb();ie.Wb(0,"fdp-button",9),ie.jc("click",function(){return ie.Kc(t),ie.nc(2).goNext()}),ie.Vb()}}function jn(e,n){if(1&e){var t=ie.Xb();ie.Wb(0,"fdp-button",10),ie.jc("click",function(){return ie.Kc(t),ie.nc(2).finish()}),ie.Vb()}}function En(e,n){if(1&e&&(ie.Wb(0,"div",3),ie.Wb(1,"div",4),ie.Tc(2,Nn,1,0,"fdp-button",5),ie.Tc(3,_n,1,0,"fdp-button",6),ie.Tc(4,jn,1,0,"fdp-button",7),ie.Vb(),ie.Vb()),2&e){var t=ie.nc();ie.Db(2),ie.vc("ngIf",!t.isFirstStep),ie.Db(1),ie.vc("ngIf",!t.isLastStep),ie.Db(1),ie.vc("ngIf",t.isLastStep)}}function An(e,n){if(1&e&&(ie.Wb(0,"p"),ie.Vc(1),ie.oc(2,"json"),ie.Vb()),2&e){var t=ie.nc();ie.Db(1),ie.Xc("Wizard value: ",ie.pc(2,1,t.wizardValue),"")}}var qn,Rn,Ln,Bn,$n=((Rn=function(){function n(){e(this,n),this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[me.A.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[me.A.required]},{name:"address",message:"Address Line 1",type:"input",validators:[me.A.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[me.A.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}return t(n,[{key:"isFirstStep",get:function(){var e;return(null===(e=this.wizardGenerator)||void 0===e?void 0:e.isFirstStep)||!1}},{key:"isLastStep",get:function(){var e;return(null===(e=this.wizardGenerator)||void 0===e?void 0:e.isLastStep)||!1}},{key:"wizardFinished",value:function(e){this.wizardValue=e}},{key:"goNext",value:function(){var e;null===(e=this.wizardGenerator)||void 0===e||e.goNext()}},{key:"goBack",value:function(){var e;null===(e=this.wizardGenerator)||void 0===e||e.goBack()}},{key:"finish",value:function(){var e;return Object(Fn.a)(this,void 0,void 0,regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,null===(e=this.wizardGenerator)||void 0===e?void 0:e.finish();case 2:case"end":return n.stop()}},n,this)}))}}]),n}()).\u0275fac=function(e){return new(e||Rn)},Rn.\u0275cmp=ie.Kb({type:Rn,selectors:[["fdp-wizard-generator-external-navigation-example"]],viewQuery:function(e,n){var t;1&e&&ie.ad(N.c,1),2&e&&ie.Gc(t=ie.kc())&&(n.wizardGenerator=t.first)},decls:3,vars:5,consts:[[3,"appendToWizard","navigationButtons","items","wizardFinished"],["fd-bar","",4,"ngIf"],[4,"ngIf"],["fd-bar",""],["fd-bar-right",""],["class","fd-bar__element","buttonType","ghost","contentDensity","condensed","label","Previous step",3,"click",4,"ngIf"],["class","fd-bar__element","buttonType","emphasized","contentDensity","condensed","label","Next step",3,"click",4,"ngIf"],["class","fd-bar__element","buttonType","emphasized","contentDensity","condensed","label","Finish",3,"click",4,"ngIf"],["buttonType","ghost","contentDensity","condensed","label","Previous step",1,"fd-bar__element",3,"click"],["buttonType","emphasized","contentDensity","condensed","label","Next step",1,"fd-bar__element",3,"click"],["buttonType","emphasized","contentDensity","condensed","label","Finish",1,"fd-bar__element",3,"click"]],template:function(e,n){1&e&&(ie.Wb(0,"fdp-wizard-generator",0),ie.jc("wizardFinished",function(e){return n.wizardFinished(e)}),ie.Vb(),ie.Tc(1,En,5,3,"div",1),ie.Tc(2,An,3,3,"p",2)),2&e&&(ie.vc("appendToWizard",!1)("navigationButtons",!1)("items",n.stepItems),ie.Db(1),ie.vc("ngIf",n.stepItems.length>0&&(null==n.wizardGenerator?null:n.wizardGenerator.wizardCreated)),ie.Db(1),ie.vc("ngIf",n.wizardValue))},directives:[pe.a,le.o,Mn.a,Pn.a,ve.a],pipes:[le.h],encapsulation:2,changeDetection:0}),Rn),On=((qn=function n(){e(this,n),this.defaultExample=[{language:"html",code:i,fileName:"wizard-generator-default-example"},{language:"typescript",code:o,fileName:"wizard-generator-default-example",component:"WizardGeneratorDefaultExampleComponent"}],this.dialogExample=[{language:"html",code:d,fileName:"wizard-generator-dialog-example"},{language:"typescript",code:s,fileName:"wizard-generator-dialog-example",component:"WizardGeneratorDialogExampleComponent"}],this.customizableExample=[{language:"html",code:m,fileName:"wizard-generator-customizable-example"},{language:"typescript",code:p,fileName:"wizard-generator-customizable-example",component:"WizardGeneratorCustomizableExampleComponent"}],this.customizableEmbededExample=[{language:"html",code:l,fileName:"wizard-generator-customizable-embeded-example"},{language:"typescript",code:c,fileName:"wizard-generator-customizable-embeded-example",component:"WizardGeneratorCustomizableEmbededExampleComponent"}],this.branchingExample=[{language:"html",code:b,fileName:"wizard-generator-condition-example"},{language:"typescript",code:f,fileName:"wizard-generator-condition-example",component:"WizardGeneratorConditionExampleComponent"}],this.responsivePaddingsExample=[{language:"html",code:u,fileName:"wizard-generator-responsive-paddings-example"},{language:"typescript",code:g,fileName:"wizard-generator-responsive-paddings-example",component:"WizardGeneratorResponsivePaddingsExampleComponent"}],this.visibleSummaryExample=[{language:"html",code:v,fileName:"wizard-generator-visible-summary-example"},{language:"typescript",code:z,fileName:"wizard-generator-visible-summary-example",component:"WizardGeneratorVisibleSummaryExampleComponent"}],this.visibleBranchingSummaryExample=[{language:"html",code:V,fileName:"wizard-generator-visible-summary-branching-example"},{language:"typescript",code:w,fileName:"wizard-generator-visible-summary-branching-example",component:"WizardGeneratorVisibleSummaryBranchingExampleComponent"}],this.responsiveDialogPaddingsExample=[{language:"html",code:y,fileName:"wizard-generator-responsive-dialog-example"},{language:"typescript",code:h,fileName:"wizard-generator-responsive-dialog-example",component:"WizardGeneratorResponsiveDialogExampleComponent"}],this.summaryObjectsExample=[{language:"html",code:C,fileName:"wizard-generator-summary-objects-example"},{language:"typescript",code:W,fileName:"wizard-generator-summary-objects-example",component:"WizardGeneratorSummaryObjectsExampleComponent"}],this.externalNavigationObjectsExample=[{language:"html",code:D,fileName:"wizard-generator-external-navigation-example"},{language:"typescript",code:S,fileName:"wizard-generator-external-navigation-example",component:"WizardGeneratorExternalNavigationExampleComponent"}]}).\u0275fac=function(e){return new(e||qn)},qn.\u0275cmp=ie.Kb({type:qn,selectors:[["fdp-platform-wizard-generator-docs"]],decls:227,vars:11,consts:[["id","wizard-default-example","componentName","wizard"],[3,"exampleFiles"],["id","in-dialog","componentName","wizard-generator"],["id","customization","componentName","wizard-generator"],["id","dialog-customization","componentName","wizard-generator"],["id","branching","componentName","wizard-generator"],["id","responsive-paddings","componentName","wizard-generator"],[2,"text-align","left"],[2,"margin-left","2rem"],["id","visible-summary","componentName","wizard-generator"],["id","visible-summary-with-branching","componentName","wizard-generator"],["id","responsive-paddings-in-dialog","componentName","wizard-generator"],["id","objects-on-summary-page","componentName","wizard-generator"],["id","external-navigation-buttons","componentName","wizard-generator"]],template:function(e,n){1&e&&(ie.Wb(0,"fd-docs-section-title",0),ie.Vc(1," Default Wizard generator\n"),ie.Vb(),ie.Wb(2,"description"),ie.Vc(3,' The default wizard displays a walkthrough screen with forms split into sections. Once the user fills all of the necessary input fields, and presses the "Next step" button, new step will appear. A summary step can be added by providing additional step with '),ie.Wb(4,"code"),ie.Vc(5,"summary: true"),ie.Vb(),ie.Vc(6," property to the wizard generator metadata.\n"),ie.Vb(),ie.Wb(7,"component-example"),ie.Rb(8,"fdp-wizard-generator-default-example"),ie.Vb(),ie.Rb(9,"code-example",1),ie.Rb(10,"separator"),ie.Wb(11,"fd-docs-section-title",2),ie.Vc(12," Wizard generator in dialog\n"),ie.Vb(),ie.Wb(13,"description"),ie.Vc(14," The wizard generator can also be used within a dialog by calling "),ie.Wb(15,"code"),ie.Vc(16,"open"),ie.Vb(),ie.Vc(17," method from "),ie.Wb(18,"code"),ie.Vc(19,"WizardDialogGeneratorService"),ie.Vb(),ie.Vc(20," A Cancel button is displayed in the footer, so the user can exit the wizard at any point during the process. However, if a user exits the wizard after adding their input, they will receive a warning that their information will be lost.\n"),ie.Vb(),ie.Wb(21,"component-example"),ie.Rb(22,"fdp-wizard-generator-dialog-example"),ie.Vb(),ie.Rb(23,"code-example",1),ie.Rb(24,"separator"),ie.Wb(25,"fd-docs-section-title",3),ie.Vc(26," Customizable Wizard generator\n"),ie.Vb(),ie.Wb(27,"description"),ie.Vc(28," The wizard component can be customized with modifier inputs. Steps can be placed on separate pages, rather than appended to the wizard, by setting the "),ie.Wb(29,"code"),ie.Vc(30,"[appendToWizard]"),ie.Vb(),ie.Vc(31," input to "),ie.Wb(32,"code"),ie.Vc(33,"false"),ie.Vb(),ie.Vc(34,". "),ie.Rb(35,"br"),ie.Rb(36,"br"),ie.Vc(37," You can also use icons for the step indicators by adding "),ie.Wb(38,"code"),ie.Vc(39,"icon"),ie.Vb(),ie.Vc(40," property to the wizard steps object. "),ie.Rb(41,"br"),ie.Rb(42,"br"),ie.Vc(43," Buttons appearance can be changed with "),ie.Wb(44,"code"),ie.Vc(45,"[navigationButtonLabels]"),ie.Vb(),ie.Vc(46," property. "),ie.Rb(47,"br"),ie.Rb(48,"br"),ie.Vc(49," If you want to use completely different style for navigational buttons, you can use special directives: "),ie.Wb(50,"code"),ie.Vc(51,"fdp-wizard-generator-go-next-button, fdp-wizard-generator-finish-button"),ie.Vb(),ie.Vc(52,". "),ie.Rb(53,"br"),ie.Rb(54,"br"),ie.Vc(55," To change Summary step view, you can use "),ie.Wb(56,"code"),ie.Vc(57,"fdp-wizard-generator-summary-step"),ie.Vb(),ie.Vc(58," directive to flag your template as a summary section template. Your template will receive such variables: "),ie.Wb(59,"ul"),ie.Wb(60,"li"),ie.Vc(61,"steps: Array of object that implements "),ie.Wb(62,"code"),ie.Vc(63,"WizardGeneratorSummaryItem"),ie.Vb(),ie.Vc(64," interface"),ie.Vb(),ie.Wb(65,"li"),ie.Vc(66,"editStep: Method to edit defined section step"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(67,"component-example"),ie.Rb(68,"fdp-wizard-generator-customizable-embeded-example"),ie.Vb(),ie.Rb(69,"code-example",1),ie.Rb(70,"separator"),ie.Wb(71,"fd-docs-section-title",4),ie.Vc(72," Customizable Wizard generator in dialog\n"),ie.Vb(),ie.Wb(73,"description"),ie.Vc(74," Dialog close confirmation text can be changed with "),ie.Wb(75,"code"),ie.Vc(76,"confirmationDialogText, confirmationDialogCloseText, confirmationDialogCancelText"),ie.Vb(),ie.Vc(77," properties. "),ie.Rb(78,"br"),ie.Rb(79,"br"),ie.Vc(80," If you want to use completely different style for navigational buttons, you can use "),ie.Wb(81,"code"),ie.Vc(82,"goNextButtonTemplate, goBackButtonTemplate, finishButtonTemplate, cancelButtonTemplate"),ie.Vb(),ie.Vc(83," properties for the dialog wizard. "),ie.Rb(84,"br"),ie.Rb(85,"br"),ie.Vc(86," If you want to use your custom confirmation dialog, you can pass it "),ie.Wb(87,"code"),ie.Vc(88,"confirmationDialogTemplate"),ie.Vb(),ie.Vc(89," property to wizard dialog service.\n"),ie.Vb(),ie.Wb(90,"component-example"),ie.Rb(91,"fdp-wizard-generator-customizable-example"),ie.Vb(),ie.Rb(92,"code-example",1),ie.Rb(93,"separator"),ie.Wb(94,"fd-docs-section-title",5),ie.Vc(95," Branching Wizard\n"),ie.Vb(),ie.Wb(96,"description"),ie.Vc(97," Developers can configure branching behaviour of the wizard by providing "),ie.Wb(98,"code"),ie.Vc(99,"when"),ie.Vb(),ie.Vc(100," property function to the wizard generator step and by specifying "),ie.Wb(101,"code"),ie.Vc(102,"dependencyFields"),ie.Vb(),ie.Vc(103," property of the wizard generator step to reflect which steps are creating branches.\n"),ie.Vb(),ie.Wb(104,"component-example"),ie.Rb(105,"fdp-wizard-generator-condition-example"),ie.Vb(),ie.Rb(106,"code-example",1),ie.Rb(107,"separator"),ie.Wb(108,"fd-docs-section-title",6),ie.Vc(109," Responsive paddings for Wizard generator\n"),ie.Vb(),ie.Wb(110,"description"),ie.Wb(111,"p"),ie.Vc(112,"The default wizard have responsive paddings applied for progress bar and content. To disable responsive paddings, you can use "),ie.Wb(113,"code"),ie.Vc(114,'[responsivePaddings]="false"'),ie.Vb(),ie.Vc(115," input to the wizard generator component."),ie.Vb(),ie.Wb(116,"p"),ie.Vc(117,"Responsive paddings values:"),ie.Vb(),ie.Wb(118,"table"),ie.Wb(119,"thead"),ie.Wb(120,"tr"),ie.Wb(121,"th",7),ie.Wb(122,"strong"),ie.Vc(123,"rem"),ie.Vb(),ie.Vb(),ie.Wb(124,"th",7),ie.Wb(125,"div",8),ie.Wb(126,"p"),ie.Wb(127,"strong"),ie.Vc(128,"Min-width"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(129,"th",7),ie.Wb(130,"div",8),ie.Wb(131,"strong"),ie.Vc(132,"Max-width"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(133,"tbody"),ie.Wb(134,"tr"),ie.Wb(135,"td",7),ie.Vc(136,"1rem"),ie.Vb(),ie.Wb(137,"td",7),ie.Wb(138,"span",8),ie.Wb(139,"em"),ie.Vc(140,"n/a"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(141,"td",7),ie.Wb(142,"span",8),ie.Vc(143,"599px"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(144,"tr"),ie.Wb(145,"td",7),ie.Vc(146,"2rem"),ie.Vb(),ie.Wb(147,"td",7),ie.Wb(148,"span",8),ie.Vc(149,"600px"),ie.Vb(),ie.Vb(),ie.Wb(150,"td",7),ie.Wb(151,"span",8),ie.Vc(152,"1023px"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(153,"tr"),ie.Wb(154,"td",7),ie.Vc(155,"2rem"),ie.Vb(),ie.Wb(156,"td",7),ie.Wb(157,"span",8),ie.Vc(158,"1024px"),ie.Vb(),ie.Vb(),ie.Wb(159,"td",7),ie.Wb(160,"span",8),ie.Vc(161,"1439px"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(162,"tr"),ie.Wb(163,"td",7),ie.Vc(164,"3rem"),ie.Vb(),ie.Wb(165,"td",7),ie.Wb(166,"span",8),ie.Vc(167,"1440px"),ie.Vb(),ie.Vb(),ie.Wb(168,"td",7),ie.Wb(169,"span",8),ie.Wb(170,"em"),ie.Vc(171,"n/a"),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Vb(),ie.Wb(172,"component-example"),ie.Rb(173,"fdp-wizard-generator-responsive-paddings-example"),ie.Vb(),ie.Rb(174,"code-example",1),ie.Rb(175,"separator"),ie.Wb(176,"fd-docs-section-title",9),ie.Vc(177," Visible summary step in progress bar\n"),ie.Vb(),ie.Wb(178,"description"),ie.Vc(179," By default, Wizard generator doesn't show Summary step in the wizard progress bar section. Developers can configure visibility of the summary step by providing "),ie.Wb(180,"code"),ie.Vc(181,'[displaySummaryStep]="true"'),ie.Vb(),ie.Vc(182," property of "),ie.Wb(183,"code"),ie.Vc(184,"<fdp-wizard-generator />"),ie.Vb(),ie.Vc(185,".\n"),ie.Vb(),ie.Wb(186,"component-example"),ie.Rb(187,"fdp-wizard-generator-visible-summary-example"),ie.Vb(),ie.Rb(188,"code-example",1),ie.Rb(189,"separator"),ie.Wb(190,"fd-docs-section-title",10),ie.Vc(191," Visible summary step with branching\n"),ie.Vb(),ie.Wb(192,"description"),ie.Vc(193," As per design specification, no steps should be visible after branching step, until it's completed. This means that developers should configure appropriate condidions for steps visibility. Same applies to the summary step, if it should be visible in wizard progress bar.\n"),ie.Vb(),ie.Wb(194,"component-example"),ie.Rb(195,"fdp-wizard-generator-visible-summary-branching-example"),ie.Vb(),ie.Rb(196,"code-example",1),ie.Rb(197,"separator"),ie.Wb(198,"fd-docs-section-title",11),ie.Vc(199," Responsive paddings for Wizard generator in dialog\n"),ie.Vb(),ie.Wb(200,"description"),ie.Vc(201," Use "),ie.Wb(202,"code"),ie.Vc(203,"responsivePaddings: false"),ie.Vb(),ie.Vc(204," property for dialog config to dosable wizard responsive paddings inside dialog.\n"),ie.Vb(),ie.Wb(205,"component-example"),ie.Rb(206,"fdp-wizard-generator-responsive-dialog-example"),ie.Vb(),ie.Rb(207,"code-example",1),ie.Rb(208,"separator"),ie.Wb(209,"fd-docs-section-title",12),ie.Vc(210," Handling complex objects rendering on Summary page\n"),ie.Vb(),ie.Wb(211,"description"),ie.Vc(212," If your form field contains some complex object and should be rendered with custom function, you can provide "),ie.Wb(213,"code"),ie.Vc(214,"valueRenderer"),ie.Vb(),ie.Vc(215," function for particular form item.\n"),ie.Vb(),ie.Wb(216,"component-example"),ie.Rb(217,"fdp-wizard-generator-summary-objects-example"),ie.Vb(),ie.Rb(218,"code-example",1),ie.Rb(219,"separator"),ie.Wb(220,"fd-docs-section-title",13),ie.Vc(221," External navigation buttons\n"),ie.Vb(),ie.Wb(222,"description"),ie.Vc(223," If you want navigation buttons of the Wizard generator to be outside the component, you can use public methods and properties of the Wizard generator itself to implement desired behaviour.\n"),ie.Vb(),ie.Wb(224,"component-example"),ie.Rb(225,"fdp-wizard-generator-external-navigation-example"),ie.Vb(),ie.Rb(226,"code-example",1)),2&e&&(ie.Db(9),ie.vc("exampleFiles",n.defaultExample),ie.Db(14),ie.vc("exampleFiles",n.dialogExample),ie.Db(46),ie.vc("exampleFiles",n.customizableEmbededExample),ie.Db(23),ie.vc("exampleFiles",n.customizableExample),ie.Db(14),ie.vc("exampleFiles",n.branchingExample),ie.Db(68),ie.vc("exampleFiles",n.responsivePaddingsExample),ie.Db(14),ie.vc("exampleFiles",n.visibleSummaryExample),ie.Db(8),ie.vc("exampleFiles",n.visibleBranchingSummaryExample),ie.Db(11),ie.vc("exampleFiles",n.responsiveDialogPaddingsExample),ie.Db(11),ie.vc("exampleFiles",n.summaryObjectsExample),ie.Db(8),ie.vc("exampleFiles",n.externalNavigationObjectsExample))},directives:[oe.a,de.a,se.a,fe,be.a,ge.a,we,qe,un,gn,vn,wn,Cn,In,Gn,$n],encapsulation:2}),qn),Xn=r("dor/"),Un=r("RJTZ"),Kn=r("Kpas"),Yn=[{path:"",component:(Ln=function n(){e(this,n)},Ln.\u0275fac=function(e){return new(e||Ln)},Ln.\u0275cmp=ie.Kb({type:Ln,selectors:[["fdp-platform-wizard-generator-header"]],decls:22,vars:0,consts:[["routerLink","/core/wizard"],["module","PlatformWizardGeneratorModule","subPackage","wizard-generator"]],template:function(e,n){1&e&&(ie.Wb(0,"header"),ie.Vc(1,"Wizard generator"),ie.Vb(),ie.Wb(2,"description"),ie.Vc(3," This is a wrapper of the Platform component present in "),ie.Wb(4,"a",0),ie.Vc(5,"@fundamental-ngx/core"),ie.Vb(),ie.Vc(6,". "),ie.Rb(7,"br"),ie.Vc(8," It provides ability to dynamically generate Wizard without any user-provided templates. "),ie.Rb(9,"br"),ie.Rb(10,"br"),ie.Wb(11,"h3"),ie.Vc(12,"Platform specific enhancements:"),ie.Vb(),ie.Wb(13,"ul"),ie.Wb(14,"li"),ie.Vc(15," Steps are dynamically rendered based on steps object input. "),ie.Vb(),ie.Wb(16,"li"),ie.Vc(17," Branching logic is based on the steps object input. "),ie.Vb(),ie.Vb(),ie.Vb(),ie.Rb(18,"br"),ie.Rb(19,"import",1),ie.Rb(20,"fd-header-tabs"),ie.Rb(21,"router-outlet"))},directives:[Xn.a,de.a,T.f,Un.a,Kn.a,T.h],encapsulation:2}),Ln),children:[{path:"",component:On},{path:"api",component:x.a,data:{content:I.a.wizardGenerator}}]}],Jn=((Bn=function n(){e(this,n)}).\u0275fac=function(e){return new(e||Bn)},Bn.\u0275mod=ie.Ob({type:Bn}),Bn.\u0275inj=ie.Nb({imports:[[T.g.forChild(Yn),k.a,N.a,P.b,F.i,G.b,M.a,_.a]]}),Bn)}}])}();