"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4249],{36854:(u,y,t)=>{t.d(y,{h:()=>E}),t(77135);var r=t(5e3),v=t(8674),s=t(74042),h=t(69808),m=t(87757),b=t(63043),S=t(50578),M=t(27078),x=t(42437),Z=t(24919);const d=["menu"];function k(T,C){if(1&T&&r._UZ(0,"button",8),2&T){const c=r.oxw(),f=r.MAs(6);r.Q6J("label","Select a file ("+c.files.length+")")("fdMenu",!0)("fdMenuTrigger",f)}}function D(T,C){if(1&T){const c=r.EpF();r.TgZ(0,"li",9),r.NdJ("click",function(){const $=r.CHM(c).$implicit;return r.oxw().getFile($)}),r.TgZ(1,"div",10)(2,"span",11),r._uU(3),r.qZA()()()}if(2&T){const c=C.$implicit,f=r.oxw();r.ekj("is-selected",c===f.activeFile),r.xp6(3),r.Oqu(c)}}let E=(()=>{class T{constructor(c,f){this.route=c,this.apiService=f}ngOnInit(){this.route.snapshot.data&&(this.files=this.route.snapshot.data.content),this.files&&this.files.length>0?(this.files.sort(),this.getFile(this.files[0]),this.activeFile=this.files[0]):this.result="<h2>No API files found.</h2>"}getFile(c){this.apiService.getComponentHtml(c).subscribe(f=>{this.result=f,this.activeFile=c,this.menu.close()},f=>{console.warn("Did not find file "+c+".\nError: "+f)})}}return T.\u0275fac=function(c){return new(c||T)(r.Y36(v.gz),r.Y36(s.S))},T.\u0275cmp=r.Xpm({type:T,selectors:[["fd-api"]],viewQuery:function(c,f){if(1&c&&r.Gf(d,5),2&c){let V;r.iGM(V=r.CRH())&&(f.menu=V.first)}},decls:9,vars:5,consts:[[1,"api-main-container"],[1,"api-main-header"],[2,"display","flex","flex-grow","1"],["fd-button","",3,"label","fdMenu","fdMenuTrigger",4,"ngIf"],["placement","bottom-start",3,"fillControlMode"],["menu",""],["fd-menu-item","",3,"is-selected","click",4,"ngFor","ngForOf"],[3,"innerHTML"],["fd-button","",3,"label","fdMenu","fdMenuTrigger"],["fd-menu-item","",3,"click"],["fd-menu-interactive",""],["fd-menu-title",""]],template:function(c,f){1&c&&(r.TgZ(0,"div",0)(1,"h2",1),r._uU(2),r.qZA(),r._UZ(3,"span",2),r.YNc(4,k,1,3,"button",3),r.TgZ(5,"fd-menu",4,5),r.YNc(7,D,4,3,"li",6),r.qZA()(),r._UZ(8,"div",7)),2&c&&(r.xp6(2),r.Oqu(f.activeFile),r.xp6(2),r.Q6J("ngIf",f.files.length>1),r.xp6(1),r.Q6J("fillControlMode",null),r.xp6(2),r.Q6J("ngForOf",f.files),r.xp6(1),r.Q6J("innerHTML",f.result,r.oJD))},directives:[h.O5,m.r,b.k,S.M,h.sg,M.qv,x.K,Z.h],styles:[".api-main-header[_ngcontent-%COMP%]{margin:0;font-weight:700;text-rendering:optimizeLegibility}.api-main-container[_ngcontent-%COMP%]{margin-top:2em;display:flex;align-items:center;justify-content:flex-start;flex-wrap:wrap}fd-popover[_ngcontent-%COMP%]     .fd-button{margin-right:0}"]}),T})()},63710:(u,y,t)=>{t.d(y,{c:()=>M});var i=t(5e3),r=t(17791),v=t(66997),s=t(8674),h=t(1726),m=t(55124),b=t(33089);const S=function(){return{exact:!0}};let M=(()=>{class x{}return x.\u0275fac=function(d){return new(d||x)},x.\u0275cmp=i.Xpm({type:x,selectors:[["fd-header-tabs"]],decls:12,vars:4,consts:[["fd-tab-nav",""],["fd-tab-item",""],["fd-tab-link","","routerLink","./","routerLinkActive","",3,"active","routerLinkActiveOptions"],["rla1","routerLinkActive"],["fd-tab-tag",""],["fd-tab-link","","routerLink","./api","routerLinkActive","",3,"active"],["rla2","routerLinkActive"],[2,"margin-top","0"]],template:function(d,k){if(1&d&&(i.TgZ(0,"ul",0)(1,"li",1)(2,"a",2,3)(4,"span",4),i._uU(5,"Examples"),i.qZA()()(),i.TgZ(6,"li",1)(7,"a",5,6)(9,"span",4),i._uU(10,"API"),i.qZA()()()(),i._UZ(11,"separator",7)),2&d){const D=i.MAs(3),E=i.MAs(8);i.xp6(2),i.Q6J("active",D.isActive)("routerLinkActiveOptions",i.DdM(3,S)),i.xp6(5),i.Q6J("active",E.isActive)}},directives:[r.d,v.w,s.yS,h.w,s.Od,m.P6,b.N],styles:["[_nghost-%COMP%]{display:block}.fd-tabs[_ngcontent-%COMP%]{margin-bottom:0;margin-top:24px;box-shadow:none}.fd-tabs__item[_ngcontent-%COMP%]{padding:0;margin-right:24px}.fd-tabs__link[_ngcontent-%COMP%]{min-width:60px;padding-right:12px;padding-left:12px;text-align:center}"]}),x})()},24882:(u,y,t)=>{t.d(y,{G:()=>v});var i=t(5e3);const r=["*"];let v=(()=>{class s{}return s.\u0275fac=function(m){return new(m||s)},s.\u0275cmp=i.Xpm({type:s,selectors:[["header"]],ngContentSelectors:r,decls:2,vars:0,consts:[[1,"header"]],template:function(m,b){1&m&&(i.F$t(),i.TgZ(0,"h1",0),i.Hsn(1),i.qZA())},styles:[".header[_ngcontent-%COMP%]{margin-top:2rem;font-size:2.2rem}"]}),s})()},98791:(u,y,t)=>{t.d(y,{k:()=>r});var i=t(5e3);let r=(()=>{class v{constructor(h){this.currentLib=h}ngOnInit(){const h=["@fundamental-ngx",this.currentLib];this.subPackage&&h.push(this.subPackage),this.library=h.join("/")}}return v.\u0275fac=function(h){return new(h||v)(i.Y36("CURRENT_LIB"))},v.\u0275cmp=i.Xpm({type:v,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:9,vars:2,consts:[[2,"color","rgb(0, 0, 136)"],[2,"color","rgb(0, 136, 0)"]],template:function(h,m){1&h&&(i.TgZ(0,"code")(1,"span",0),i._uU(2,"import"),i.qZA(),i._uU(3),i.TgZ(4,"span",0),i._uU(5,"from "),i.qZA(),i.TgZ(6,"span",1),i._uU(7),i.qZA(),i._uU(8,"; "),i.qZA()),2&h&&(i.xp6(3),i.hij(" { ",m.module," } "),i.xp6(4),i.hij("'",m.library,"'"))},encapsulation:2}),v})()},74042:(u,y,t)=>{t.d(y,{S:()=>v});var i=t(5e3),r=t(40520);let v=(()=>{class s{constructor(m,b){this.httpClient=m,this.currentLib=b,this.BASE_URL="assets/typedoc/"}getComponentHtml(m){m=m.toLocaleLowerCase()+".html";const b=this.buildUrl(this.BASE_URL,this.currentLib||"core","classes",m);return this.httpClient.get(b,{responseType:"text"})}buildUrl(...m){return m.join("/").replace(/\/+/g,"/")}}return s.\u0275fac=function(m){return new(m||s)(i.LFG(r.eN),i.LFG("CURRENT_LIB"))},s.\u0275prov=i.Yz7({token:s,factory:s.\u0275fac}),s})()},28674:(u,y,t)=>{t.d(y,{g:()=>f});var i=t(69808),r=t(8674),v=t(52382),s=t(62970),h=t(53732),m=t(74042),b=t(32818),S=t(30825),M=t(90523),x=t(80848),Z=t(31258),d=t(77135),k=t(89282),D=t(95037),E=t(46394),T=t(75394);const C=[E.P4,d.$9,x.Q,D.o,S.hJ,k.H,M.nY,Z.L,T.s];var c=t(5e3);let f=(()=>{class V{}return V.\u0275fac=function(F){return new(F||V)},V.\u0275mod=c.oAB({type:V}),V.\u0275inj=c.cJS({providers:[h.t,m.S],imports:[[v.u5,i.ez,r.Bz,b.f,C,s.JP.forChild()],v.u5,v.UX,b.f,i.ez,E.P4,d.$9,x.Q,D.o,S.hJ,k.H,M.nY,Z.L,T.s]}),V})()},94249:(u,y,t)=>{t.r(y),t.d(y,{PlatformVhdDocsModule:()=>Fe});var i=t(69808),r=t(8674),v=t(45665),s=t(36854),h=t(28674),m=t(30825),b=t(57904),S=t(85403),M=t(85226),x=t(81083),Z=t(21553),d=t(37909),k=t(31917),D=t(30758),E=t(65946),T=t(36187),C=t(47943),c=t(33556),f=t(69157),V=t(99767),$=t(8510),F=t(40025),R=t(98729),z=t(45353),B=t(49997),j=t(73682),e=t(5e3),K=t(93943),N=t(44969),W=t(28595),Y=t(91005),U=t(87757),J=t(96423),q=t(15288),A=t(48577),P=t(27912),O=t(10779);function X(a,o){if(1&a&&(e.TgZ(0,"fd-token",9),e._uU(1),e.qZA()),2&a){const n=o.$implicit;e.Q6J("compact",!0)("readOnly",!0),e.xp6(1),e.Oqu(n)}}function G(a,o){if(1&a&&(e.TgZ(0,"div",6)(1,"fd-tokenizer",7),e.YNc(2,X,2,3,"fd-token",8),e.qZA()()),2&a){const n=e.oxw();e.xp6(1),e.Q6J("compact",!0),e.xp6(1),e.Q6J("ngForOf",n.actualItems)}}function ee(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",10),2&a){const n=o.$implicit,l=o.index;e.Q6J("main",l<2)("key",n.key)("label",n.label)("advanced",0!==l)}}const H=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();let ne=(()=>{class a{constructor(){this.filters=H.filters,this.dataSource=new d.Ht(new ae(H.dataSource)),this.actualValue={},this.actualItems=[],this.formatTokenFn=(n=>{this.actualItems=[...(n.selected||[]).map(l=>l.name),...(n.conditions||[]).map(l=>this.conditionDisplayFn(l))]}).bind(this),this.conditionDisplayFn=n=>{let l=(()=>{switch(n.strategy){case d.hj.empty:case d.Sq.not_empty:return null;case d.hj.between:return`${n.value}...${n.valueTo}`;case d.hj.contains:return`*${n.value}*`;case d.hj.equalTo:return`=${n.value}`;case d.hj.startsWith:return`${n.value}*`;case d.hj.endsWith:return`*${n.value}`;case d.hj.greaterThan:return`>${n.value}`;case d.hj.greaterThanEqual:return`>=${n.value}`;case d.hj.lessThan:return`<${n.value}`;case d.hj.lessThanEqual:return`<=${n.value}`;case d.Sq.not_equalTo:return`!(=${n.value})`}})();return l&&"exclude"===n.type&&(l=`!(${l})`),l}}valueChange(n){this.actualValue=Object.assign({},n)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-basic-example"]],decls:7,vars:4,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["fd-form-item","",4,"ngIf"],["dialogTitle","Simple value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions","headerId","fdp-vhd-header-1",3,"formatToken","dataSource","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-form-item",""],[3,"compact"],[3,"compact","readOnly",4,"ngFor","ngForOf"],[3,"compact","readOnly"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){return e.CHM(_),e.MAs(4).open()}),e.qZA(),e._UZ(1,"br"),e.YNc(2,G,3,2,"div",1),e.TgZ(3,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(p){return l.valueChange(p)}),e._UZ(5,"fdp-value-help-dialog-search",4),e.YNc(6,ee,1,4,"fdp-value-help-dialog-filter",5),e.qZA()}2&n&&(e.xp6(2),e.Q6J("ngIf",l.actualItems.length),e.xp6(1),e.Q6J("formatToken",l.formatTokenFn)("dataSource",l.dataSource),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[U.r,i.O5,J.O,i.sg,q.q,A._,P.I,O.E],encapsulation:2}),a})();class ae extends d.mB{fetch(o){return super.fetch(o).pipe((0,Y.g)(300))}}var te=t(29871),le=t(33089);function oe(a,o){if(1&a&&(e.TgZ(0,"fd-token",9),e._uU(1),e.qZA()),2&a){const n=o.$implicit;e.Q6J("compact",!0)("readOnly",!0),e.xp6(1),e.Oqu(n)}}function ie(a,o){if(1&a&&(e.TgZ(0,"div",6)(1,"fd-tokenizer",7),e.YNc(2,oe,2,3,"fd-token",8),e.qZA()()),2&a){const n=e.oxw();e.xp6(1),e.Q6J("compact",!0),e.xp6(1),e.Q6J("ngForOf",n.actualItems)}}function re(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",10),2&a){const n=o.$implicit,l=o.index;e.Q6J("main",l<2)("key",n.key)("label",n.label)("advanced",0!==l)}}let ue=(()=>{class a{constructor(){this.actualValue={},this.actualItems=[],this.customStrategyLabels={equalTo:"ilingana ne-",between:"FROM...TO"},this.formatTokenFn=(n=>{this.actualItems=[...(n.selected||[]).map(l=>l.name),...(n.conditions||[]).map(l=>this.conditionDisplayFn(l))]}).bind(this),this.conditionDisplayFn=n=>(()=>{switch(n.strategy){case d.hj.empty:case d.Sq.not_empty:return null;case d.hj.between:return`${n.value}...${n.valueTo}`;case d.hj.contains:return`*${n.value}*`;case d.hj.equalTo:return`=${n.value}`;case d.hj.startsWith:return`${n.value}*`;case d.hj.endsWith:return`*${n.value}`;case d.hj.greaterThan:return`>${n.value}`;case d.hj.greaterThanEqual:return`>=${n.value}`;case d.hj.lessThan:return`<${n.value}`;case d.hj.lessThanEqual:return`<=${n.value}`;case d.Sq.not_equalTo:return`!(=${n.value})`}})()}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.actualValue=Object.assign({},n)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-strategy-labels-example"]],decls:7,vars:4,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["fd-form-item","",4,"ngIf"],["dialogTitle","Custom strategy labels","defineTabTitle","Define Conditions","tabs","define","headerId","fdp-vhd-header-2",3,"defineStrategyLabels","formatToken","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-form-item",""],[3,"compact"],[3,"compact","readOnly",4,"ngFor","ngForOf"],[3,"compact","readOnly"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){return e.CHM(_),e.MAs(4).open()}),e.qZA(),e._UZ(1,"br"),e.YNc(2,ie,3,2,"div",1),e.TgZ(3,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(p){return l.valueChange(p)}),e._UZ(5,"fdp-value-help-dialog-search",4),e.YNc(6,re,1,4,"fdp-value-help-dialog-filter",5),e.qZA()}2&n&&(e.xp6(2),e.Q6J("ngIf",l.actualItems.length),e.xp6(1),e.Q6J("defineStrategyLabels",l.customStrategyLabels)("formatToken",l.formatTokenFn),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[U.r,i.O5,J.O,i.sg,q.q,A._,P.I,O.E],encapsulation:2}),a})();function pe(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",5),2&a){const n=o.$implicit,l=o.index,_=e.oxw();e.Q6J("main",l<2)("key",n.key)("label",n.label)("advanced",n.advanced||_.hasAdvanced)}}let se=(()=>{class a{constructor(){this.hasAdvanced=!1,this.selectedValue=[],this.currentValue={},this.tokenizerFn=n=>`${n.name} (Id: ${n.id})`}ngOnInit(){const n=(()=>{const a=Array(100).fill(null).map((o,n)=>({id:n+1,name:`Name ${n}`,code:Math.floor(99999*Math.random()),city:`City ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,label:`Product ${o}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){console.log(n),this.currentValue=n,this.selectedValue=[...n.selected||[]]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-token-example"]],decls:5,vars:3,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Custom token function","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions","headerId","fdp-vhd-header-3",3,"dataSource","tokenizerFn","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){return e.CHM(_),e.MAs(2).open()}),e.qZA(),e.TgZ(1,"fdp-value-help-dialog",1,2),e.NdJ("valueChange",function(p){return l.valueChange(p)}),e._UZ(3,"fdp-value-help-dialog-search",3),e.YNc(4,pe,1,4,"fdp-value-help-dialog-filter",4),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dataSource",l.dataSource)("tokenizerFn",l.tokenizerFn),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[U.r,A._,P.I,i.sg,O.E],encapsulation:2}),a})();var me=t(68226),w=t(65791),I=t(2711),he=t(70363);function fe(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",19),2&a){const n=o.$implicit;e.Q6J("main",o.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}function ge(a,o){if(1&a&&(e.TgZ(0,"fd-token",20),e._uU(1),e.qZA()),2&a){const n=o.$implicit;e.Q6J("compact",!0)("readOnly",!0),e.xp6(1),e.hij(" ",n.name," ")}}function ve(a,o){1&a&&e._UZ(0,"br")}function _e(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",19),2&a){const n=o.$implicit;e.Q6J("main",o.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}function Te(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",19),2&a){const n=o.$implicit;e.Q6J("main",o.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let be=(()=>{class a{constructor(){this.values={single:null,multi:null,once:null},this.currentValue={}}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.currentValue=n,this.selectedValue=n.selected[0]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-input-example"]],decls:34,vars:15,consts:[["fd-form-item",""],["fd-form-label","","for","test-selection-type-single"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-single",3,"value"],["fd-input-group-addon","",3,"button"],["fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"compact","click"],["dialogTitle","Single select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","single","tabs","select","headerId","fdp-vhd-header-4",3,"dataSource","valueChange"],["vhd1",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-toolbar-item","",3,"compact","readOnly",4,"ngFor","ngForOf"],[4,"ngIf"],["fd-button","","aria-label","Open value help dialog","label","Open and select",3,"compact","click"],["dialogTitle","Multi select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","multi","tabs","select","headerId","fdp-vhd-header-5",3,"dataSource","valueChange"],["vhd2",""],["fd-form-label","","for","test-selection-type-once"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-once",3,"value"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"compact","click"],["dialogTitle","Once select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","once","tabs","select","headerId","fdp-vhd-header-6",3,"dataSource","valueChange"],["vhd3",""],[3,"main","key","label","advanced"],["fd-toolbar-item","",3,"compact","readOnly"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"div",0)(1,"label",1),e._uU(2,"Selection type: single"),e.qZA(),e.TgZ(3,"fd-input-group"),e._UZ(4,"input",2),e.TgZ(5,"span",3)(6,"button",4),e.NdJ("click",function(){return e.CHM(_),e.MAs(8).open()}),e.qZA()()()(),e.TgZ(7,"fdp-value-help-dialog",5,6),e.NdJ("valueChange",function(p){return l.values.single=p.selected[0]}),e._UZ(9,"fdp-value-help-dialog-search",7),e.YNc(10,fe,1,4,"fdp-value-help-dialog-filter",8),e.qZA(),e._UZ(11,"br"),e.TgZ(12,"div",0)(13,"label",1),e._uU(14,"Selection type: multi"),e.qZA(),e.YNc(15,ge,2,3,"fd-token",9),e.YNc(16,ve,1,0,"br",10),e.TgZ(17,"button",11),e.NdJ("click",function(){return e.CHM(_),e.MAs(19).open()}),e.qZA()(),e.TgZ(18,"fdp-value-help-dialog",12,13),e.NdJ("valueChange",function(p){return l.values.multi=p.selected}),e._UZ(20,"fdp-value-help-dialog-search",7),e.YNc(21,_e,1,4,"fdp-value-help-dialog-filter",8),e.qZA(),e._UZ(22,"br"),e.TgZ(23,"div",0)(24,"label",14),e._uU(25,"Selection type: once"),e.qZA(),e.TgZ(26,"fd-input-group"),e._UZ(27,"input",15),e.TgZ(28,"span",3)(29,"button",16),e.NdJ("click",function(){return e.CHM(_),e.MAs(31).open()}),e.qZA()()()(),e.TgZ(30,"fdp-value-help-dialog",17,18),e.NdJ("valueChange",function(p){return l.values.once=p.selected[0]}),e._UZ(32,"fdp-value-help-dialog-search",7),e.YNc(33,Te,1,4,"fdp-value-help-dialog-filter",8),e.qZA()}2&n&&(e.xp6(4),e.Q6J("value",null==l.values.single?null:l.values.single.name),e.xp6(1),e.Q6J("button",!0),e.xp6(1),e.Q6J("compact",!0),e.xp6(1),e.Q6J("dataSource",l.dataSource),e.xp6(3),e.Q6J("ngForOf",l.filters),e.xp6(5),e.Q6J("ngForOf",l.values.multi),e.xp6(1),e.Q6J("ngIf",null==l.values.multi?null:l.values.multi.length),e.xp6(1),e.Q6J("compact",!0),e.xp6(1),e.Q6J("dataSource",l.dataSource),e.xp6(3),e.Q6J("ngForOf",l.filters),e.xp6(6),e.Q6J("value",null==l.values.once?null:l.values.once.name),e.xp6(1),e.Q6J("button",!0),e.xp6(1),e.Q6J("compact",!0),e.xp6(1),e.Q6J("dataSource",l.dataSource),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[me.h,w.g,I.cS,I.Bv,U.r,A._,P.I,i.sg,O.E,q.q,he.Q,i.O5],encapsulation:2}),a})();var xe=t(62828),L=t(52382);function Ve(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",6),2&a){const n=o.$implicit;e.Q6J("main",o.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let Ze=(()=>{class a{constructor(n){this._changeDetectorRef=n,this.currentValue={},this.selected=[]}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();this.filters=n.filters,this.originalData=n.dataSource,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.selected=[...n.selected],this._changeDetectorRef.detectChanges()}displayFunc(n){return n.name.toLocaleUpperCase()}multiSelectChange(){this.currentValue.selected=this.selected,this._changeDetectorRef.detectChanges()}parseFunc(n){if(n&&n.length)return{name:n,id:Date.now()}}}return a.\u0275fac=function(n){return new(n||a)(e.Y36(e.sBO))},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-multi-input-example"]],decls:8,vars:8,consts:[["placeholder","Search here",3,"dropdownValues","displayFn","allowNewTokens","newTokenParseFn","ngModel","ngModelChange","selectedChange"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Multiple selection","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions","headerId","fdp-vhd-header-7",3,"dataSource","value","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"div")(1,"fd-multi-input",0),e.NdJ("ngModelChange",function(p){return l.selected=p})("selectedChange",function(){return l.multiSelectChange()}),e.qZA(),e._UZ(2,"br"),e.TgZ(3,"button",1),e.NdJ("click",function(){return e.CHM(_),e.MAs(5).open()}),e.qZA()(),e.TgZ(4,"fdp-value-help-dialog",2,3),e.NdJ("valueChange",function(p){return l.valueChange(p)}),e._UZ(6,"fdp-value-help-dialog-search",4),e.YNc(7,Ve,1,4,"fdp-value-help-dialog-filter",5),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dropdownValues",l.originalData)("displayFn",l.displayFunc)("allowNewTokens",!0)("newTokenParseFn",l.parseFunc)("ngModel",l.selected),e.xp6(3),e.Q6J("dataSource",l.dataSource)("value",l.currentValue),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[xe.L,L.JJ,L.On,U.r,A._,P.I,i.sg,O.E],encapsulation:2}),a})();function Se(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",7),2&a){const n=o.$implicit;e.Q6J("main",o.index<2)("key",n.key)("label",n.label)("advanced",n.advanced)}}let De=(()=>{class a{constructor(){this.currentValue={}}ngOnInit(){const n=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();this.filters=n.filters,this.dataSource=new d.Ht(new d.mB(n.dataSource))}valueChange(n){this.currentValue=n,this.selectedValue=n.selected[0]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-mobile-example"]],decls:9,vars:6,consts:[["fd-input-group-input","","fd-form-control","",3,"value"],["fd-input-group-addon","",3,"button"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"click"],["dialogTitle","Mobile value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions","headerId","fdp-vhd-header-8",3,"mobile","dataSource","value","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"div")(1,"fd-input-group"),e._UZ(2,"input",0),e.TgZ(3,"span",1)(4,"button",2),e.NdJ("click",function(){return e.CHM(_),e.MAs(6).open()}),e.qZA()()()(),e.TgZ(5,"fdp-value-help-dialog",3,4),e.NdJ("valueChange",function(p){return l.valueChange(p)}),e._UZ(7,"fdp-value-help-dialog-search",5),e.YNc(8,Se,1,4,"fdp-value-help-dialog-filter",6),e.qZA()}2&n&&(e.xp6(2),e.Q6J("value",(null==l.selectedValue?null:l.selectedValue.name)||""),e.xp6(1),e.Q6J("button",!0),e.xp6(2),e.Q6J("mobile",!0)("dataSource",l.dataSource)("value",l.currentValue),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[w.g,I.cS,I.Bv,U.r,A._,P.I,i.sg,O.E],encapsulation:2}),a})();function Ee(a,o){if(1&a&&e._UZ(0,"fdp-value-help-dialog-filter",5),2&a){const n=o.$implicit,l=o.index,_=e.oxw();e.Q6J("main",l<2)("key",n.key)("label",n.label)("advanced",n.advanced||_.hasAdvanced)}}const Q=(()=>{const a=Array(137).fill(null).map((o,n)=>({id:n+1,name:`Name ${n+1}`,code:`${Math.floor(99999*Math.random())}`,city:`City ${Math.floor(Math.random()*n)}`,zipcode:`zipcode ${Math.floor(Math.random()*n)}`,address:`Address ${Math.floor(Math.random()*n)}`,nickname:`Nickname ${Math.floor(Math.random()*n)}`}));return{dataSource:a,filters:Object.keys(a[0]).map((o,n)=>({key:o,name:`${o}`,label:`Product ${o}`,advanced:n>0}))}})();let ke=(()=>{class a{constructor(){this.filters=Q.filters,this.dataSource=new d.Ht(new d.mB(Q.dataSource)),this.value={},this.loading=!1}valueChange(n){this.value=Object.assign({},n)}onDataRequested(){this.loading=!0}onDataReceived(){setTimeout(()=>{this.loading=!1},300)}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["fdp-platform-vhd-loading-example"]],decls:5,vars:3,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Custom token function","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions","headerId","fdp-vhd-header-3",3,"dataSource","loading","valueChange","onDataRequested","onDataReceived"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(n,l){if(1&n){const _=e.EpF();e.TgZ(0,"button",0),e.NdJ("click",function(){return e.CHM(_),e.MAs(2).open()}),e.qZA(),e.TgZ(1,"fdp-value-help-dialog",1,2),e.NdJ("valueChange",function(p){return l.valueChange(p)})("onDataRequested",function(){return l.onDataRequested()})("onDataReceived",function(){return l.onDataReceived()}),e._UZ(3,"fdp-value-help-dialog-search",3),e.YNc(4,Ee,1,4,"fdp-value-help-dialog-filter",4),e.qZA()}2&n&&(e.xp6(1),e.Q6J("dataSource",l.dataSource)("loading",l.loading),e.xp6(3),e.Q6J("ngForOf",l.filters))},directives:[U.r,A._,P.I,i.sg,O.E],encapsulation:2}),a})(),Ue=(()=>{class a{constructor(){this.basicValueHelpDialog=[{language:"html",code:k,fileName:"platform-vhd-basic-example"},{language:"typescript",component:"PlatformVhdBasicExampleComponent",code:D,fileName:"platform-vhd-basic-example"}],this.strategyLabelValueHelpDialog=[{language:"html",code:E,fileName:"platform-vhd-strategy-labels-example"},{language:"typescript",component:"PlatformVhdStrategyLabelExampleComponent",code:T,fileName:"platform-vhd-strategy-labels-example"}],this.tokenValueHelpDialog=[{language:"html",code:C,fileName:"platform-vhd-token-example"},{language:"typescript",component:"PlatformVhdTokenExampleComponent",code:c,fileName:"platform-vhd-token-example"}],this.inputValueHelpDialog=[{language:"html",code:f,fileName:"platform-vhd-input-example"},{language:"typescript",component:"PlatformVhdInputExampleComponent",code:V,fileName:"platform-vhd-input-example"}],this.multiInputValueHelpDialog=[{language:"html",code:$,fileName:"platform-vhd-multi-input-example"},{language:"typescript",component:"PlatformVhdMultiInputExampleComponent",code:F,fileName:"platform-vhd-multi-input-example"}],this.mobileValueHelpDialog=[{language:"html",code:R,fileName:"platform-vhd-mobile-example"},{language:"typescript",component:"PlatformVhdMobileExampleComponent",code:z,fileName:"platform-vhd-mobile-example"}],this.loadingValueHelpDialog=[{language:"html",code:B,fileName:"platform-vhd-loading-example"},{language:"typescript",component:"PlatformVhdLoadingExampleComponent",code:j,fileName:"platform-vhd-loading-example"}]}}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["app-platform-vhd"]],decls:260,vars:7,consts:[["id","basic","componentName","value-help-dialog"],[3,"exampleFiles"],["id","strategy-label","componentName","value-help-dialog"],["id","token-display","componentName","value-help-dialog"],["id","selection","componentName","value-help-dialog"],["id","multi-input","componentName","value-help-dialog"],["id","mobile","componentName","value-help-dialog"],["id","loading","componentName","value-help-dialog"]],template:function(n,l){1&n&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Basic Value Help Dialog. "),e.qZA(),e.TgZ(2,"description")(3,"p"),e._uU(4,"Example to demonstrate the basic call Value Help Dialog."),e.qZA(),e.TgZ(5,"p"),e._uU(6,"Basic setup"),e.qZA(),e.TgZ(7,"strong"),e._uU(8,"fdp-value-help-dialog"),e.qZA(),e.TgZ(9,"ul")(10,"li"),e._uU(11," Set "),e.TgZ(12,"code"),e._uU(13,"[dialogTitle]"),e.qZA(),e._uU(14,", it should be string. It will show as header's title of the dialog window. "),e.qZA(),e.TgZ(15,"li"),e._uU(16," Set "),e.TgZ(17,"code"),e._uU(18,"[uniqueKey]"),e.qZA(),e._uU(19," it should be uniq field from data source. "),e.TgZ(20,"em"),e._uU(21,"Required field for `selected from list` tab"),e.qZA()(),e.TgZ(22,"li"),e._uU(23," Set "),e.TgZ(24,"code"),e._uU(25,"[tokenViewField]"),e.qZA(),e._uU(26," or "),e.TgZ(27,"code"),e._uU(28,"[tokenizerFn]"),e.qZA(),e._uU(29," property to render selected item token. "),e.TgZ(30,"em"),e._uU(31,"Required field for `selected from list` tab"),e.qZA(),e.TgZ(32,"code"),e._uU(33,"[tokenViewField]"),e.qZA(),e._uU(34," should be a string equal key from data source. Need to render selected token. "),e._UZ(35,"br"),e.TgZ(36,"code"),e._uU(37,"[tokenizerFn]"),e.qZA(),e._uU(38," should be a function. "),e.TgZ(39,"em"),e._uU(40,"It has higher prio that `tokenViewField`"),e.qZA()(),e.TgZ(41,"li"),e._uU(42," Set "),e.TgZ(43,"code"),e._uU(44,"[dataSource]"),e.qZA(),e._uU(45," property to your data source. "),e.TgZ(46,"em"),e._uU(47,"Required field for `selected from list` tab"),e.qZA()()(),e.TgZ(48,"strong"),e._uU(49,"fdp-value-help-dialog-filter"),e.qZA(),e.TgZ(50,"ul")(51,"li"),e._uU(52," Set "),e.TgZ(53,"code"),e._uU(54,"[key]"),e.qZA(),e._uU(55," property to string, should be equal to field from data source. "),e.TgZ(56,"em"),e._uU(57,"Required field."),e.qZA()(),e.TgZ(58,"li"),e._uU(59," Set "),e.TgZ(60,"code"),e._uU(61,"[label]"),e.qZA(),e._uU(62," property to string, it will show as header in search table. If you skip this field, key will appear instead label. "),e.qZA()()(),e.TgZ(63,"component-example"),e._UZ(64,"fdp-platform-vhd-basic-example"),e.qZA(),e._UZ(65,"code-example",1)(66,"separator"),e.TgZ(67,"fd-docs-section-title",2),e._uU(68," Custom strategy labels.\n"),e.qZA(),e.TgZ(69,"description")(70,"p"),e._uU(71,"Example to demonstrate custom strategy labels for Define Conditions tab"),e.qZA(),e.TgZ(72,"p"),e._uU(73,"By default we're using strategy labels:"),e.qZA(),e.TgZ(74,"ul")(75,"li")(76,"code"),e._uU(77,"contains = 'contains'"),e.qZA()(),e.TgZ(78,"li")(79,"code"),e._uU(80,"equalTo = 'equal to'"),e.qZA()(),e.TgZ(81,"li")(82,"code"),e._uU(83,"between = 'between'"),e.qZA()(),e.TgZ(84,"li")(85,"code"),e._uU(86,"startsWith = 'starts with'"),e.qZA()(),e.TgZ(87,"li")(88,"code"),e._uU(89,"endsWith = 'ends with'"),e.qZA()(),e.TgZ(90,"li")(91,"code"),e._uU(92,"lessThan = 'less than'"),e.qZA()(),e.TgZ(93,"li")(94,"code"),e._uU(95,"lessThanEqual = 'less than or equal to'"),e.qZA()(),e.TgZ(96,"li")(97,"code"),e._uU(98,"greaterThan = 'greater than'"),e.qZA()(),e.TgZ(99,"li")(100,"code"),e._uU(101,"greaterThanEqual = 'greater than or equal to'"),e.qZA()(),e.TgZ(102,"li")(103,"code"),e._uU(104," empty = 'empty'"),e.qZA()()(),e.TgZ(105,"p"),e._uU(106,"Set "),e.TgZ(107,"code"),e._uU(108,"[defineStrategyLabels]"),e.qZA(),e._uU(109," for you custom strategy label. All keys are optional"),e.qZA(),e.TgZ(110,"ul")(111,"li"),e._uU(112," Allowed keys: "),e.TgZ(113,"code"),e._uU(114,"contains"),e.qZA(),e._uU(115,", "),e.TgZ(116,"code"),e._uU(117,"equalTo"),e.qZA(),e._uU(118,", "),e.TgZ(119,"code"),e._uU(120,"between"),e.qZA(),e._uU(121,", "),e.TgZ(122,"code"),e._uU(123,"startsWith"),e.qZA(),e._uU(124,", "),e.TgZ(125,"code"),e._uU(126,"endsWith"),e.qZA(),e._uU(127,", "),e.TgZ(128,"code"),e._uU(129,"lessThan"),e.qZA(),e._uU(130,", "),e.TgZ(131,"code"),e._uU(132,"lessThanEqual"),e.qZA(),e._uU(133,", "),e.TgZ(134,"code"),e._uU(135,"greaterThan"),e.qZA(),e._uU(136,", "),e.TgZ(137,"code"),e._uU(138,"greaterThanEqual"),e.qZA(),e._uU(139,", "),e.TgZ(140,"code"),e._uU(141,"empty"),e.qZA()()()(),e.TgZ(142,"component-example"),e._UZ(143,"fdp-platform-vhd-strategy-labels-example"),e.qZA(),e._UZ(144,"code-example",1)(145,"separator"),e.TgZ(146,"fd-docs-section-title",3),e._uU(147," Token display function for the Value Help Dialog.\n"),e.qZA(),e.TgZ(148,"description")(149,"ul")(150,"li"),e._uU(151," Set "),e.TgZ(152,"code"),e._uU(153,"[tokenViewField]"),e.qZA(),e._uU(154," property to name from data source fields. It'll use for render custom token in selection panel. "),e.qZA(),e.TgZ(155,"li"),e._uU(156," Set "),e.TgZ(157,"code"),e._uU(158,"[tokenizerFn]"),e.qZA(),e._uU(159," property to your function. It'll use for render custom token in selection panel. "),e.qZA()(),e.TgZ(160,"p")(161,"code"),e._uU(162,"[tokenizerFn]"),e.qZA(),e._uU(163," has higher priority than "),e.TgZ(164,"code"),e._uU(165,"[tokenViewField]"),e.qZA()(),e.TgZ(166,"p"),e._uU(167," Example to demonstrate the token display function for selected items panel in the footer of the Value Help Dialog. "),e.qZA()(),e.TgZ(168,"component-example"),e._UZ(169,"fdp-platform-vhd-token-example"),e.qZA(),e._UZ(170,"code-example",1)(171,"separator"),e.TgZ(172,"fd-docs-section-title",4),e._uU(173," Selection in Value Help Dialog.\n"),e.qZA(),e.TgZ(174,"description")(175,"ul")(176,"li"),e._uU(177," Set "),e.TgZ(178,"code"),e._uU(179,"[searchSelection]"),e.qZA(),e._uU(180," property to "),e.TgZ(181,"strong"),e._uU(182,"multi"),e.qZA(),e._uU(183,", if you want to select multiple rows from search table "),e.qZA(),e.TgZ(184,"li"),e._uU(185," Set "),e.TgZ(186,"code"),e._uU(187,"[searchSelection]"),e.qZA(),e._uU(188," property to "),e.TgZ(189,"strong"),e._uU(190,"single"),e.qZA(),e._uU(191,", if you want to select single row from search table without close dialog "),e.qZA(),e.TgZ(192,"li"),e._uU(193," Set "),e.TgZ(194,"code"),e._uU(195,"[searchSelection]"),e.qZA(),e._uU(196," property to "),e.TgZ(197,"strong"),e._uU(198,"once"),e.qZA(),e._uU(199,", if you want to select single row from search table and success dialog with this value "),e.qZA()(),e.TgZ(200,"p"),e._uU(201,"Example to demonstrate using Value Help Dialog with input field and single selection."),e.qZA()(),e.TgZ(202,"component-example"),e._UZ(203,"fdp-platform-vhd-input-example"),e.qZA(),e._UZ(204,"code-example",1)(205,"separator"),e.TgZ(206,"fd-docs-section-title",5),e._uU(207," Multi Input field with Value Help Dialog.\n"),e.qZA(),e.TgZ(208,"description")(209,"p"),e._uU(210,"Example to demonstrate using Value Help Dialog with multi input field."),e.qZA()(),e.TgZ(211,"component-example"),e._UZ(212,"fdp-platform-vhd-multi-input-example"),e.qZA(),e._UZ(213,"code-example",1)(214,"separator"),e.TgZ(215,"fd-docs-section-title",6),e._uU(216," Mobile version "),e.qZA(),e.TgZ(217,"description")(218,"p"),e._uU(219,"Example to demonstrate mobile view for Value Help Dialog."),e.qZA(),e.TgZ(220,"ul")(221,"li"),e._uU(222,"Set "),e.TgZ(223,"code"),e._uU(224,"[mobile]"),e.qZA(),e._uU(225," property to "),e.TgZ(226,"strong"),e._uU(227,"true"),e.qZA(),e._uU(228," on "),e.TgZ(229,"strong"),e._uU(230,"fdp-value-help-dialog"),e.qZA()()()(),e.TgZ(231,"component-example"),e._UZ(232,"fdp-platform-vhd-mobile-example"),e.qZA(),e._UZ(233,"code-example",1)(234,"separator"),e.TgZ(235,"fd-docs-section-title",7),e._uU(236," Loading "),e.qZA(),e.TgZ(237,"description")(238,"p"),e._uU(239," Value Help Dialog exposes "),e.TgZ(240,"code"),e._uU(241,"onDataRequested"),e.qZA(),e._uU(242," and "),e.TgZ(243,"code"),e._uU(244,"onDataReceived"),e.qZA(),e._uU(245," outputs, that can be used to implement external loading logic. These events are tied to the querying process through dataSource. "),e.qZA(),e.TgZ(246,"p"),e._uU(247," By default, Value Help Dialog tracks these loading events and apply loading state to the table internally. However, you can modify this logic by using "),e.TgZ(248,"code"),e._uU(249,"onDataRequested"),e.qZA(),e._uU(250," and "),e.TgZ(251,"code"),e._uU(252,"onDataReceived"),e.qZA(),e._uU(253," methods and "),e.TgZ(254,"code"),e._uU(255,"loading"),e.qZA(),e._uU(256," input on the component "),e.qZA()(),e.TgZ(257,"component-example"),e._UZ(258,"fdp-platform-vhd-loading-example"),e.qZA(),e._UZ(259,"code-example",1)),2&n&&(e.xp6(65),e.Q6J("exampleFiles",l.basicValueHelpDialog),e.xp6(79),e.Q6J("exampleFiles",l.strategyLabelValueHelpDialog),e.xp6(26),e.Q6J("exampleFiles",l.basicValueHelpDialog),e.xp6(34),e.Q6J("exampleFiles",l.inputValueHelpDialog),e.xp6(9),e.Q6J("exampleFiles",l.multiInputValueHelpDialog),e.xp6(20),e.Q6J("exampleFiles",l.multiInputValueHelpDialog),e.xp6(26),e.Q6J("exampleFiles",l.loadingValueHelpDialog))},directives:[K.k,N.w,W.O,ne,te.E,le.N,ue,se,be,Ze,De,ke],encapsulation:2}),a})();var Ae=t(24882),Pe=t(98791),Oe=t(63710);const $e=[{path:"",component:(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=e.Xpm({type:a,selectors:[["app-vhd-header"]],decls:10,vars:0,consts:[["module","PlatformValueHelpDialogModule","subPackage","value-help-dialog"]],template:function(n,l){1&n&&(e.TgZ(0,"header"),e._uU(1,"Value Help Dialog"),e.qZA(),e.TgZ(2,"description"),e._uU(3," The value help dialog is a UI pattern that helps the user find and select single and multiple values. "),e._UZ(4,"br"),e._uU(5," The user can also define and select multiple ranges. The value help dialog is generally called from an input field or a multi-input field by clicking the selection icon (value help icon) of the input field.\n"),e.qZA(),e._UZ(6,"br")(7,"import",0)(8,"fd-header-tabs")(9,"router-outlet"))},directives:[Ae.G,N.w,Pe.k,Oe.c,r.lC],encapsulation:2}),a})(),children:[{path:"",component:Ue},{path:"api",component:s.h,data:{content:v.X.valueHelpDialog}}]}];let Fe=(()=>{class a{}return a.\u0275fac=function(n){return new(n||a)},a.\u0275mod=e.oAB({type:a}),a.\u0275inj=e.cJS({imports:[[r.Bz.forChild($e),i.ez,h.g,m.hJ,b.ne,S.Qj,M.Wh,Z.V_,d.T2,x.nD],r.Bz]}),a})()},31917:u=>{u.exports='<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n<br />\n<div fd-form-item *ngIf="actualItems.length">\n    <fd-tokenizer [compact]="true">\n        <fd-token *ngFor="let token of actualItems" [compact]="true" [readOnly]="true">{{ token }}</fd-token>\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Simple value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [formatToken]="formatTokenFn"\n    [dataSource]="dataSource"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-1"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},30758:u=>{u.exports="import { Component } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource,\n    VhdIncludedEntity,\n    VhdExcludedEntity,\n    VhdDefineIncludeStrategy,\n    VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform/value-help-dialog';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\nconst data = exampleDataSource();\n\n@Component({\n    selector: 'fdp-platform-vhd-basic-example',\n    templateUrl: './platform-vhd-basic-example.component.html'\n})\nexport class PlatformVhdBasicExampleComponent {\n    filters = data.filters;\n    dataSource = new ValueHelpDialogDataSource(new DelayedVhdDataProvider(data.dataSource));\n\n    actualValue: Partial<VhdValue<ExampleTestModel[]>> = {};\n\n    actualItems = [];\n    formatTokenFn = ((value: Partial<VhdValue<ExampleTestModel[]>>) => {\n        this.actualItems = [\n            ...(value.selected || []).map((item) => item.name),\n            ...(value.conditions || []).map((item) => this.conditionDisplayFn(item))\n        ];\n    }).bind(this);\n    conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity): string => {\n        let value = (() => {\n            switch (item.strategy) {\n                case VhdDefineIncludeStrategy.empty:\n                case VhdDefineExcludeStrategy.not_empty:\n                    return null;\n                case VhdDefineIncludeStrategy.between:\n                    return `${item.value}...${item.valueTo}`;\n                case VhdDefineIncludeStrategy.contains:\n                    return `*${item.value}*`;\n                case VhdDefineIncludeStrategy.equalTo:\n                    return `=${item.value}`;\n                case VhdDefineIncludeStrategy.startsWith:\n                    return `${item.value}*`;\n                case VhdDefineIncludeStrategy.endsWith:\n                    return `*${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThan:\n                    return `>${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThanEqual:\n                    return `>=${item.value}`;\n                case VhdDefineIncludeStrategy.lessThan:\n                    return `<${item.value}`;\n                case VhdDefineIncludeStrategy.lessThanEqual:\n                    return `<=${item.value}`;\n                case VhdDefineExcludeStrategy.not_equalTo:\n                    return `!(=${item.value})`;\n            }\n        })();\n        if (value && item.type === 'exclude') {\n            value = `!(${value})`;\n        }\n\n        return value;\n    };\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.actualValue = { ...$event };\n    }\n}\n\n// Simulating real http request by adding 300ms delay to the DataProvider's \"fetch\" method\nclass DelayedVhdDataProvider<T> extends VhdDataProvider<T> {\n    fetch(params: Map<string, string>): Observable<T[]> {\n        return super.fetch(params).pipe(delay(300));\n    }\n}\n"},69157:u=>{u.exports='<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: single</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-single" [value]="values.single?.name" />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                [compact]="true"\n                fdType="transparent"\n                (click)="vhd1.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog\n    #vhd1\n    dialogTitle="Single select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="single"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.single = $event.selected[0]"\n    headerId="fdp-vhd-header-4"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: multi</label>\n    <fd-token fd-toolbar-item *ngFor="let item of values.multi" [compact]="true" [readOnly]="true">\n        {{ item.name }}\n    </fd-token>\n    <br *ngIf="values.multi?.length" />\n    <button\n        fd-button\n        [compact]="true"\n        (click)="vhd2.open()"\n        aria-label="Open value help dialog"\n        label="Open and select"\n    ></button>\n</div>\n<fdp-value-help-dialog\n    #vhd2\n    dialogTitle="Multi select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="multi"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.multi = $event.selected"\n    headerId="fdp-vhd-header-5"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-once">Selection type: once</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-once" [value]="values.once?.name" />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                [compact]="true"\n                fdType="transparent"\n                (click)="vhd3.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog\n    #vhd3\n    dialogTitle="Once select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="once"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.once = $event.selected[0]"\n    headerId="fdp-vhd-header-6"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},99767:u=>{u.exports="import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-input-example',\n    templateUrl: './platform-vhd-input-example.component.html'\n})\nexport class PlatformVhdInputExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n    values = {\n        single: null,\n        multi: null,\n        once: null\n    };\n    selectedValue: ExampleTestModel;\n    currentValue: VhdValue = {};\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.currentValue = $event;\n        this.selectedValue = $event.selected[0];\n    }\n}\n"},49997:u=>{u.exports='<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom token function"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [dataSource]="dataSource"\n    [loading]="loading"\n    (valueChange)="valueChange($event)"\n    (onDataRequested)="onDataRequested()"\n    (onDataReceived)="onDataReceived()"\n    headerId="fdp-vhd-header-3"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced || hasAdvanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},73682:u=>{u.exports="import { Component } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\nconst data = exampleDataSource();\n\n@Component({\n    selector: 'fdp-platform-vhd-loading-example',\n    templateUrl: './platform-vhd-loading-example.component.html'\n})\nexport class PlatformVhdLoadingExampleComponent {\n    filters = data.filters;\n    dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n\n    value: Partial<VhdValue<ExampleTestModel[]>> = {};\n    loading = false;\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.value = { ...$event };\n    }\n\n    onDataRequested(): void {\n        // apply some custom logic here if needed\n        this.loading = true;\n    }\n\n    onDataReceived(): void {\n        // since working with syncronous data, \"onDataReceived\" is invoked instantly\n        // just for demo purpose increasing the time before loading overlay is dismissed\n        setTimeout(() => {\n            this.loading = false;\n        }, 300);\n    }\n}\n"},98729:u=>{u.exports='<div>\n    <fd-input-group>\n        <input [value]="selectedValue?.name || \'\'" fd-input-group-input fd-form-control />\n        <span fd-input-group-addon [button]="true">\n            <button\n                fd-button\n                fd-button\n                aria-label="Open value help dialog"\n                title="Open value help dialog"\n                glyph="value-help"\n                fdType="transparent"\n                (click)="vhd.open()"\n            ></button>\n        </span>\n    </fd-input-group>\n</div>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Mobile value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [mobile]="true"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-8"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},45353:u=>{u.exports="import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-mobile-example',\n    templateUrl: './platform-vhd-mobile-example.component.html'\n})\nexport class PlatformVhdMobileExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    selectedValue: ExampleTestModel;\n    currentValue: Partial<VhdValue> = {};\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.currentValue = $event;\n        this.selectedValue = $event.selected[0];\n    }\n}\n"},8510:u=>{u.exports='<div>\n    <fd-multi-input\n        [dropdownValues]="originalData"\n        placeholder="Search here"\n        [displayFn]="displayFunc"\n        [allowNewTokens]="true"\n        [newTokenParseFn]="parseFunc"\n        [(ngModel)]="selected"\n        (selectedChange)="multiSelectChange()"\n    >\n    </fd-multi-input>\n    <br />\n    <button\n        fd-button\n        fd-button\n        aria-label="Open value help dialog"\n        title="Open value help dialog"\n        glyph="value-help"\n        (click)="vhd.open()"\n        label="Open value help dialog"\n    ></button>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Multiple selection"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-7"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},40025:u=>{u.exports="import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-multi-input-example',\n    templateUrl: './platform-vhd-multi-input-example.component.html'\n})\nexport class PlatformVhdMultiInputExampleComponent implements OnInit {\n    filters: FilterData[];\n    originalData: ExampleTestModel[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    currentValue: Partial<VhdValue> = {};\n    selected: ExampleTestModel[] = [];\n\n    constructor(private readonly _changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.originalData = data.dataSource;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.selected = [...$event.selected];\n        this._changeDetectorRef.detectChanges();\n    }\n\n    displayFunc(obj: any): string {\n        return obj.name.toLocaleUpperCase();\n    }\n\n    multiSelectChange(): void {\n        this.currentValue.selected = this.selected;\n        this._changeDetectorRef.detectChanges();\n    }\n\n    parseFunc(value: string): Record<string, any> {\n        if (value && value.length) {\n            return { name: value, id: Date.now() };\n        }\n    }\n}\n"},65946:u=>{u.exports='<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n<br />\n<div fd-form-item *ngIf="actualItems.length">\n    <fd-tokenizer [compact]="true">\n        <fd-token *ngFor="let token of actualItems" [compact]="true" [readOnly]="true">{{ token }}</fd-token>\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom strategy labels"\n    defineTabTitle="Define Conditions"\n    tabs="define"\n    [defineStrategyLabels]="customStrategyLabels"\n    [formatToken]="formatTokenFn"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-2"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},36187:u=>{u.exports="import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource,\n    VhdIncludedEntity,\n    VhdExcludedEntity,\n    VhdDefineIncludeStrategy,\n    VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: string;\n    city: string;\n    zipcode: string;\n    address: string;\n    nickname: string;\n}\n\ninterface FilterData {\n    key: string;\n    name: string;\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(137)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index + 1}`,\n            code: `${Math.floor(Math.random() * 99999)}`,\n            city: `City ${Math.floor(Math.random() * index)}`,\n            zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n            address: `Address ${Math.floor(Math.random() * index)}`,\n            nickname: `Nickname ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            name: `${value}`,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-strategy-labels-example',\n    templateUrl: './platform-vhd-strategy-labels-example.component.html'\n})\nexport class PlatformVhdStrategyLabelExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n    actualValue: Partial<VhdValue<ExampleTestModel[]>> = {};\n    actualItems = [];\n\n    customStrategyLabels: {\n        [key in keyof (typeof VhdDefineIncludeStrategy | typeof VhdDefineExcludeStrategy)]?: string;\n    } = {\n        equalTo: 'ilingana ne-',\n        between: 'FROM...TO'\n    };\n    formatTokenFn = ((value: Partial<VhdValue<ExampleTestModel[]>>) => {\n        this.actualItems = [\n            ...(value.selected || []).map((item) => item.name),\n            ...(value.conditions || []).map((item) => this.conditionDisplayFn(item))\n        ];\n    }).bind(this);\n\n    conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity): string => {\n        const value = (() => {\n            switch (item.strategy) {\n                case VhdDefineIncludeStrategy.empty:\n                case VhdDefineExcludeStrategy.not_empty:\n                    return null;\n                case VhdDefineIncludeStrategy.between:\n                    return `${item.value}...${item.valueTo}`;\n                case VhdDefineIncludeStrategy.contains:\n                    return `*${item.value}*`;\n                case VhdDefineIncludeStrategy.equalTo:\n                    return `=${item.value}`;\n                case VhdDefineIncludeStrategy.startsWith:\n                    return `${item.value}*`;\n                case VhdDefineIncludeStrategy.endsWith:\n                    return `*${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThan:\n                    return `>${item.value}`;\n                case VhdDefineIncludeStrategy.greaterThanEqual:\n                    return `>=${item.value}`;\n                case VhdDefineIncludeStrategy.lessThan:\n                    return `<${item.value}`;\n                case VhdDefineIncludeStrategy.lessThanEqual:\n                    return `<=${item.value}`;\n                case VhdDefineExcludeStrategy.not_equalTo:\n                    return `!(=${item.value})`;\n            }\n        })();\n\n        return value;\n    };\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        this.actualValue = { ...$event };\n    }\n}\n"},47943:u=>{u.exports='<button\n    fd-button\n    fd-button\n    aria-label="Open value help dialog"\n    title="Open value help dialog"\n    glyph="value-help"\n    (click)="vhd.open()"\n    label="Open value help dialog"\n></button>\n\n<fdp-value-help-dialog\n    #vhd\n    dialogTitle="Custom token function"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [dataSource]="dataSource"\n    [tokenizerFn]="tokenizerFn"\n    (valueChange)="valueChange($event)"\n    headerId="fdp-vhd-header-3"\n>\n    <fdp-value-help-dialog-search placeholder="Search..."></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced || hasAdvanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n'},33556:u=>{u.exports="import { Component, OnInit } from '@angular/core';\n\nimport {\n    VhdDataProvider,\n    VhdValue,\n    VhdValueChangeEvent,\n    ValueHelpDialogDataSource\n} from '@fundamental-ngx/platform/value-help-dialog';\n\ninterface ExampleTestModel {\n    id: number;\n    name: string;\n    code: number;\n    city: string;\n}\n\ninterface FilterData {\n    key: string;\n    // name: string,\n    label: string;\n    advanced: boolean;\n}\n\nconst exampleDataSource = (): { dataSource: ExampleTestModel[]; filters: FilterData[] } => {\n    const dataSource = Array(100)\n        .fill(null)\n        .map((_value, index) => ({\n            id: index + 1,\n            name: `Name ${index}`,\n            code: Math.floor(Math.random() * 99999),\n            city: `City ${Math.floor(Math.random() * index)}`\n        }));\n    return {\n        dataSource,\n        filters: Object.keys(dataSource[0]).map((value, index) => ({\n            key: value,\n            label: `Product ${value}`,\n            advanced: index > 0\n        }))\n    };\n};\n\n@Component({\n    selector: 'fdp-platform-vhd-token-example',\n    templateUrl: './platform-vhd-token-example.component.html'\n})\nexport class PlatformVhdTokenExampleComponent implements OnInit {\n    filters: FilterData[];\n    dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n    hasAdvanced = false;\n    selectedValue = [];\n    currentValue: Partial<VhdValue> = {};\n\n    ngOnInit(): void {\n        const data = exampleDataSource();\n        this.filters = data.filters;\n        this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n    }\n\n    tokenizerFn = (row: ExampleTestModel): string => `${row.name} (Id: ${row.id})`;\n\n    valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n        console.log($event);\n        this.currentValue = $event;\n        this.selectedValue = [...($event.selected || [])];\n    }\n}\n"}}]);