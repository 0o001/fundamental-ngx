"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6346],{16346:(ce,x,a)=>{a.r(x),a.d(x,{PlatformMultiComboboxDocsModule:()=>pe});var b=a(7912),C=a(60515),f=a(21803),S=a(77822),h=a(69979),_=a(58027),e=a(70074),T=a(11825),I=a(92178),Z=a(80320),g=a(38276),M=a(10990);let v=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fd-platform-multi-combobox-header"]],decls:7,vars:1,consts:[["module","PlatformMultiComboboxModule","subPackage","form"],[3,"hasI18n"]],template:function(t,o){1&t&&(e.TgZ(0,"fd-doc-page")(1,"header"),e._uU(2,"Multi-Combobox"),e.qZA(),e.TgZ(3,"description"),e._uU(4," The multi-combo box control is commonly used to enable users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to open the list of available options. The select options in the list have checkboxes that permit multi-selection. "),e.qZA(),e._UZ(5,"import",0)(6,"fd-header-tabs",1),e.qZA()),2&t&&(e.xp6(6),e.Q6J("hasI18n",!0))},dependencies:[T.k,I.G,Z.c,g.w,M.i],encapsulation:2}),n})();var O=a(86950),K=a(41767),N=a(8317),Q=a(80528),G=a(9237),i=a(99916),z=a(29928),r=a(66763),p=a(70151),c=a(38469),u=a(10210);let X=(()=>{class n{constructor(){this.isLimitless=!0,this.dataSourceStrings=["Apple","Banana","Pineapple","Strawberry","Broccoli","Carrot","Jalape\xf1o","Spinach"],this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"},{name:"Ukraine",type:"Countries"},{name:"Georgia",type:"Countries"},{name:"Poland",type:"Countries"},{name:"Finland",type:"Countries"},{name:"Denmark",type:"Countries"},{name:"Sweden",type:"Countries"},{name:"Lietuva",type:"Countries"},{name:"Latvia",type:"Countries"},{name:"Spain",type:"Countries"},{name:"Switzerland",type:"Countries"},{name:"USA",type:"Countries"},{name:"Turkey",type:"Countries"},{name:"Italy",type:"Countries"},{name:"Azerbaijan",type:"Countries"},{name:"Germany",type:"Countries"},{name:"Audi",type:"Cars"},{name:"Mercedes",type:"Cars"},{name:"Tesla",type:"Cars"},{name:"Porsche",type:"Cars"},{name:"Toyota",type:"Cars"},{name:"Ford",type:"Cars"}],this.dataSourceOf=(0,G.of)(this.dataSource),this.ds=new i.Pp(this.dataSource),this.dsl=new i.Pp(this.dataSource),this.selectedItems1=[this.dataSourceStrings[1]],this.selectedItems2=[this.dataSource[1]],this.selectedItems3=[],this.selectedItems4=[],this.selectedItems5=[this.dataSourceStrings[1],this.dataSourceStrings[2],this.dataSourceStrings[3],this.dataSourceStrings[4]],this.selectedItems6=[]}onSelect1(t){this.selectedItems1=t.selectedItems}onSelect2(t){this.selectedItems2=t.selectedItems}onSelect3(t){this.selectedItems3=t.selectedItems}onSelect4(t){this.selectedItems4=t.selectedItems}onSelect5(t){this.selectedItems5=t.selectedItems}onSelect6(t){this.selectedItems6=t.selectedItems}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-datasource-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:34,vars:36,consts:[[3,"noLabelLayout"],["id","array-of-strings","label","Array of Strings"],["name","array-of-strings","placeholder","Type some text...",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","array-of-objects","label","Array of Objects"],["name","array-of-objects","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","observable","label","Observable"],["name","observable","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","ds","label","Data Source"],["name","ds","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","selectionChange"],["id","ds-limitless","label","Data Source (Limitless)"],["name","dsLimitless","placeholder","Type some text...","displayKey","name","lookupKey","name",3,"autoResize","dataSource","selectedItems","limitless","selectionChange"],["fd-button","",3,"click"],["columnLayout","XL1-L2-M1-S1",3,"noLabelLayout"],["id","standard","label","Example with 'N more' label",3,"column"],["name","standard","placeholder","Type some text...",3,"dataSource","selectedItems","selectionChange"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-multi-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelect1(l)}),e.qZA(),e.TgZ(3,"p"),e._uU(4),e.qZA()(),e.TgZ(5,"fdp-form-field",3)(6,"fdp-multi-combobox",4),e.NdJ("selectionChange",function(l){return o.onSelect2(l)}),e.qZA(),e.TgZ(7,"p"),e._uU(8),e.ALo(9,"json"),e.qZA()(),e.TgZ(10,"fdp-form-field",5)(11,"fdp-multi-combobox",6),e.NdJ("selectionChange",function(l){return o.onSelect3(l)}),e.qZA(),e.TgZ(12,"p"),e._uU(13),e.ALo(14,"json"),e.qZA()(),e.TgZ(15,"fdp-form-field",7)(16,"fdp-multi-combobox",8),e.NdJ("selectionChange",function(l){return o.onSelect4(l)}),e.qZA(),e.TgZ(17,"p"),e._uU(18),e.ALo(19,"json"),e.qZA()(),e.TgZ(20,"fdp-form-field",9)(21,"fdp-multi-combobox",10),e.NdJ("selectionChange",function(l){return o.onSelect6(l)}),e.qZA(),e.TgZ(22,"p"),e._uU(23),e.qZA(),e.TgZ(24,"p"),e._uU(25),e.ALo(26,"json"),e.qZA(),e.TgZ(27,"button",11),e.NdJ("click",function(){return o.isLimitless=!o.isLimitless}),e._uU(28,"Toggle Limitless"),e.qZA()()(),e.TgZ(29,"fdp-form-group",12)(30,"fdp-form-field",13)(31,"fdp-multi-combobox",14),e.NdJ("selectionChange",function(l){return o.onSelect5(l)}),e.qZA(),e.TgZ(32,"p"),e._uU(33),e.qZA()()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(2),e.Q6J("autoResize",!0)("dataSource",o.dataSourceStrings)("selectedItems",o.selectedItems1),e.xp6(2),e.hij("Selected: ",o.selectedItems1,""),e.xp6(2),e.Q6J("autoResize",!0)("dataSource",o.dataSource)("selectedItems",o.selectedItems2),e.xp6(2),e.hij("Selected: ",e.lcZ(9,28,o.selectedItems2),""),e.xp6(3),e.Q6J("autoResize",!0)("dataSource",o.dataSourceOf)("selectedItems",o.selectedItems3),e.xp6(2),e.hij("Selected: ",e.lcZ(14,30,o.selectedItems3),""),e.xp6(3),e.Q6J("autoResize",!0)("dataSource",o.ds)("selectedItems",o.selectedItems4),e.xp6(2),e.hij("Selected: ",e.lcZ(19,32,o.selectedItems4),""),e.xp6(3),e.Q6J("autoResize",!0)("dataSource",o.dsl)("selectedItems",o.selectedItems6)("limitless",o.isLimitless),e.xp6(2),e.hij("Limitless: ",o.isLimitless,""),e.xp6(2),e.hij("Selected: ",e.lcZ(26,34,o.selectedItems6),""),e.xp6(4),e.Q6J("noLabelLayout",!1),e.xp6(1),e.Q6J("column",1),e.xp6(1),e.Q6J("dataSource",o.dataSourceStrings)("selectedItems",o.selectedItems5),e.xp6(2),e.hij("Selected: ",o.selectedItems5,""))},dependencies:[z.r,r.H,p.h,c.m,u.Ts],encapsulation:2,changeDetection:0}),n})(),$=(()=>{class n{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=[],this.mobileConfig={title:"Title",approveButtonText:"Save",cancelButtonText:"Cancel",hasCloseButton:!0}}onSelect(t){this.selectedItems=t.selectedItems}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-mobile-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:6,vars:8,consts:[[3,"noLabelLayout"],["id","mobile","label","Mobile Mode Combobox"],["name","mobile","placeholder","Type some text...","displayKey","name",3,"dataSource","mobile","mobileConfig","selectedItems","selectionChange"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-multi-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelect(l)}),e.qZA(),e.TgZ(3,"p"),e._uU(4),e.ALo(5,"json"),e.qZA()()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(2),e.Q6J("dataSource",o.dataSource)("mobile",!0)("mobileConfig",o.mobileConfig)("selectedItems",o.selectedItems),e.xp6(2),e.hij("Selected: ",e.lcZ(5,6,o.selectedItems),""))},dependencies:[r.H,p.h,c.m,u.Ts],encapsulation:2,changeDetection:0}),n})(),H=(()=>{class n{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=[this.dataSource[1]],this.selectedItems1=[]}onSelect(t){this.selectedItems=t.selectedItems}onSelect1(t){this.selectedItems1=t.selectedItems}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-group-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:11,vars:13,consts:[[3,"noLabelLayout"],["id","group","label","Group with Key"],["name","group","placeholder","Type some text...","displayKey","name","groupKey","type",3,"dataSource","group","selectedItems","selectionChange"],["id","group-without-key","label","Group without Key"],["name","group-without-key","placeholder","Type some text...","displayKey","name",3,"dataSource","group","selectedItems","selectionChange"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-multi-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelect(l)}),e.qZA(),e.TgZ(3,"p"),e._uU(4),e.ALo(5,"json"),e.qZA()(),e.TgZ(6,"fdp-form-field",3)(7,"fdp-multi-combobox",4),e.NdJ("selectionChange",function(l){return o.onSelect1(l)}),e.qZA(),e.TgZ(8,"p"),e._uU(9),e.ALo(10,"json"),e.qZA()()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(2),e.Q6J("dataSource",o.dataSource)("group",!0)("selectedItems",o.selectedItems),e.xp6(2),e.hij("Selected: ",e.lcZ(5,9,o.selectedItems),""),e.xp6(3),e.Q6J("dataSource",o.dataSource)("group",!0)("selectedItems",o.selectedItems1),e.xp6(2),e.hij("Selected: ",e.lcZ(10,11,o.selectedItems1),""))},dependencies:[r.H,p.h,c.m,u.Ts],encapsulation:2,changeDetection:0}),n})(),W=(()=>{class n{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Florida Evergreen Blueberry",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.selectedItems=[]}onSelect(t){this.selectedItems=t.selectedItems}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-columns-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:6,vars:9,consts:[[3,"noLabelLayout"],["id","columns","label","Two Columns",3,"required"],["name","columns","placeholder","Type some text...","displayKey","name","secondaryKey","type","secondaryTextAlignment","right",3,"autoResize","dataSource","showSecondaryText","selectedItems","selectionChange"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-multi-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelect(l)}),e.qZA(),e.TgZ(3,"p"),e._uU(4),e.ALo(5,"json"),e.qZA()()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(1),e.Q6J("required",!0),e.xp6(1),e.Q6J("autoResize",!0)("dataSource",o.dataSource)("showSecondaryText",!0)("selectedItems",o.selectedItems),e.xp6(2),e.hij("Selected Item: ",e.lcZ(5,7,o.selectedItems),""))},dependencies:[r.H,p.h,c.m,u.Ts],encapsulation:2,changeDetection:0}),n})();var d=a(85756);let k=(()=>{class n{constructor(){this.dataSource=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}],this.customForm=new d.cw({field:new d.NI(this.dataSource[3])}),this.selectedItems=[this.dataSource[3]]}onSelect(t){this.selectedItems=t.selectedItems}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-forms-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:9,vars:10,consts:[[3,"noLabelLayout","formGroup"],["id","field","label","Array of Strings"],["name","field","placeholder","Type some text...","displayKey","name","formControlName","field",3,"dataSource","selectedItems","selectionChange"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-multi-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelect(l)}),e.qZA(),e.TgZ(3,"p"),e._uU(4),e.ALo(5,"json"),e.qZA(),e.TgZ(6,"p"),e._uU(7),e.ALo(8,"json"),e.qZA()()()),2&t&&(e.Q6J("noLabelLayout",!1)("formGroup",o.customForm),e.xp6(2),e.Q6J("dataSource",o.dataSource)("selectedItems",o.selectedItems),e.xp6(2),e.hij("Selected Item: ",e.lcZ(5,6,o.selectedItems),""),e.xp6(3),e.hij("Form Selected Item: ",e.lcZ(8,8,o.customForm.getRawValue()),""))},dependencies:[d.JJ,d.JL,d.sg,d.u,r.H,p.h,c.m,u.Ts],encapsulation:2,changeDetection:0}),n})();var Y=a(10937);let ee=(()=>{class n{constructor(){this.dataSource=[{name:"Apple"},{name:"Banana"},{name:"Pineapple"},{name:"Strawberry"},{name:"Broccoli"},{name:"Carrot"},{name:"Jalape\xf1o"},{name:"Spinach"}],this.states=["default","success","error","warning","information"],this.selectedState=this.states[0]}onSelectState(t){this.selectedState=t.payload}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-states-example"]],features:[e._Bn([{provide:i.Or,useValue:new Map}])],decls:14,vars:16,consts:[["mainTitle","Playground","columnLayout","XL2-L2-M1-S1",3,"noLabelLayout"],["id","multi-combobox-states","label","Select state",3,"column"],["name","multi-combobox-states","placeholder","Select state",3,"dataSource","value","selectionChange"],["id","multi-combobox-state-1","label","Selected state",3,"column"],["name","multi-combobox-state-1","placeholder","Type some text...","displayKey","name",3,"state","stateMessage","dataSource"],["mainTitle","States","columnLayout","XL2-L2-M1-S1"],["id","multi-combobox-state-success","label","Success state",3,"column"],["name","multi-combobox-state-success","placeholder","Type some text...","state","success","stateMessage","Success state message","displayKey","name",3,"dataSource"],["id","multi-combobox-state-error","label","Error state",3,"column"],["name","multi-combobox-error-state","placeholder","Type some text...","state","error","stateMessage","Error state message","displayKey","name",3,"dataSource"],["id","multi-combobox-state-warning","label","Warning state",3,"column"],["name","multi-combobox-warning-state","placeholder","Type some text...","state","warning","stateMessage","Warning state message","displayKey","name",3,"dataSource"],["id","multi-combobox-state-info","label","Information state",3,"column"],["name","multi-combobox-information-state","placeholder","Type some text...","state","information","stateMessage","Information state message","displayKey","name",3,"dataSource"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fdp-combobox",2),e.NdJ("selectionChange",function(l){return o.onSelectState(l)}),e.qZA()(),e.TgZ(3,"fdp-form-field",3),e._UZ(4,"fdp-multi-combobox",4),e.qZA()(),e.TgZ(5,"fdp-form-group",5)(6,"fdp-form-field",6),e._UZ(7,"fdp-multi-combobox",7),e.qZA(),e.TgZ(8,"fdp-form-field",8),e._UZ(9,"fdp-multi-combobox",9),e.qZA(),e.TgZ(10,"fdp-form-field",10),e._UZ(11,"fdp-multi-combobox",11),e.qZA(),e.TgZ(12,"fdp-form-field",12),e._UZ(13,"fdp-multi-combobox",13),e.qZA()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(1),e.Q6J("column",1),e.xp6(1),e.Q6J("dataSource",o.states)("value",o.selectedState),e.xp6(1),e.Q6J("column",2),e.xp6(1),e.Q6J("state",o.selectedState)("stateMessage",o.selectedState+" state message")("dataSource",o.dataSource),e.xp6(2),e.Q6J("column",1),e.xp6(1),e.Q6J("dataSource",o.dataSource),e.xp6(1),e.Q6J("column",2),e.xp6(1),e.Q6J("dataSource",o.dataSource),e.xp6(1),e.Q6J("column",1),e.xp6(1),e.Q6J("dataSource",o.dataSource),e.xp6(1),e.Q6J("column",2),e.xp6(1),e.Q6J("dataSource",o.dataSource))},dependencies:[r.H,p.h,Y.S,c.m],styles:["fdp-form-group .fd-row__form-item>.fd-col:first-child{margin-bottom:1rem}\n"],encapsulation:2,changeDetection:0}),n})();var oe=a(86667),te=a(20937);const ne=[{name:"Apple",type:"Fruits"},{name:"Banana",type:"Fruits"},{name:"Pineapple",type:"Fruits"},{name:"Strawberry",type:"Fruits"},{name:"Broccoli",type:"Vegetables"},{name:"Carrot",type:"Vegetables"},{name:"Jalape\xf1o",type:"Vegetables"},{name:"Spinach",type:"Vegetables"}];let ae=(()=>{class n{constructor(){this.dataSource=new i.AZ(new me(ne)),this.selectedItems=[],this.loading=!1}onSelect(t){this.selectedItems=t.selectedItems}onDataRequested(){this.loading=!0}onDataReceived(){this.loading=!1}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["fdp-multi-combobox-loading-example"]],decls:7,vars:7,consts:[[3,"noLabelLayout"],["id","combobox-loading","label","Combobox with loading"],["ariaLabel","loading","title","Please Wait",3,"loading"],["name","loading","placeholder","Type some text...","displayKey","name",3,"dataSource","selectedItems","selectionChange","onDataRequested","onDataReceived"]],template:function(t,o){1&t&&(e.TgZ(0,"fdp-form-group",0)(1,"fdp-form-field",1)(2,"fd-busy-indicator",2)(3,"fdp-multi-combobox",3),e.NdJ("selectionChange",function(l){return o.onSelect(l)})("onDataRequested",function(){return o.onDataRequested()})("onDataReceived",function(){return o.onDataReceived()}),e.qZA(),e.TgZ(4,"p"),e._uU(5),e.ALo(6,"json"),e.qZA()()()()),2&t&&(e.Q6J("noLabelLayout",!1),e.xp6(2),e.Q6J("loading",o.loading),e.xp6(1),e.Q6J("dataSource",o.dataSource)("selectedItems",o.selectedItems),e.xp6(2),e.hij("Selected: ",e.lcZ(6,5,o.selectedItems),""))},dependencies:[r.H,p.h,c.m,te.B,u.Ts],encapsulation:2,changeDetection:0}),n})();class me extends i.Ll{fetch(m){return super.fetch(m).pipe((0,oe.g)(300))}}let le=(()=>{class n{constructor(){this.multiComboboxDatasourceExample=[{language:"html",fileName:"multi-combobox-datasource-example",code:'<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="array-of-strings" label="Array of Strings">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-strings"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            [selectedItems]="selectedItems1"\n            (selectionChange)="onSelect1($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="array-of-objects" label="Array of Objects">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="array-of-objects"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            lookupKey="name"\n            [selectedItems]="selectedItems2"\n            (selectionChange)="onSelect2($event)"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems2 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="observable" label="Observable">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="observable"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceOf"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect3($event)"\n            [selectedItems]="selectedItems3"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems3 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="ds" label="Data Source">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="ds"\n            placeholder="Type some text..."\n            [dataSource]="ds"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect4($event)"\n            [selectedItems]="selectedItems4"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems4 | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="ds-limitless" label="Data Source (Limitless)">\n        <fdp-multi-combobox\n            [autoResize]="true"\n            name="dsLimitless"\n            placeholder="Type some text..."\n            [dataSource]="dsl"\n            displayKey="name"\n            lookupKey="name"\n            (selectionChange)="onSelect6($event)"\n            [selectedItems]="selectedItems6"\n            [limitless]="isLimitless"\n        ></fdp-multi-combobox>\n        <p>Limitless: {{ isLimitless }}</p>\n        <p>Selected: {{ selectedItems6 | json }}</p>\n        <button fd-button (click)="isLimitless = !isLimitless">Toggle Limitless</button>\n    </fdp-form-field>\n</fdp-form-group>\n\n<fdp-form-group [noLabelLayout]="false" columnLayout="XL1-L2-M1-S1">\n    <fdp-form-field id="standard" label="Example with \'N more\' label" [column]="1">\n        <fdp-multi-combobox\n            name="standard"\n            placeholder="Type some text..."\n            [dataSource]="dataSourceStrings"\n            (selectionChange)="onSelect5($event)"\n            [selectedItems]="selectedItems5"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems5 }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-datasource-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { DATA_PROVIDERS, ArrayComboBoxDataSource } from '@fundamental-ngx/platform/shared';\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-multi-combobox-datasource-example',\n    templateUrl: './multi-combobox-datasource-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxDatasourceExampleComponent {\n    isLimitless = true;\n\n    dataSourceStrings = ['Apple', 'Banana', 'Pineapple', 'Strawberry', 'Broccoli', 'Carrot', 'Jalape\xf1o', 'Spinach'];\n\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' },\n        { name: 'Ukraine', type: 'Countries' },\n        { name: 'Georgia', type: 'Countries' },\n        { name: 'Poland', type: 'Countries' },\n        { name: 'Finland', type: 'Countries' },\n        { name: 'Denmark', type: 'Countries' },\n        { name: 'Sweden', type: 'Countries' },\n        { name: 'Lietuva', type: 'Countries' },\n        { name: 'Latvia', type: 'Countries' },\n        { name: 'Spain', type: 'Countries' },\n        { name: 'Switzerland', type: 'Countries' },\n        { name: 'USA', type: 'Countries' },\n        { name: 'Turkey', type: 'Countries' },\n        { name: 'Italy', type: 'Countries' },\n        { name: 'Azerbaijan', type: 'Countries' },\n        { name: 'Germany', type: 'Countries' },\n        { name: 'Audi', type: 'Cars' },\n        { name: 'Mercedes', type: 'Cars' },\n        { name: 'Tesla', type: 'Cars' },\n        { name: 'Porsche', type: 'Cars' },\n        { name: 'Toyota', type: 'Cars' },\n        { name: 'Ford', type: 'Cars' }\n    ];\n\n    dataSourceOf = of(this.dataSource);\n    ds = new ArrayComboBoxDataSource(this.dataSource);\n    dsl = new ArrayComboBoxDataSource(this.dataSource);\n\n    selectedItems1 = [this.dataSourceStrings[1]];\n    selectedItems2 = [this.dataSource[1]];\n    selectedItems3 = [];\n    selectedItems4 = [];\n    selectedItems5 = [\n        this.dataSourceStrings[1],\n        this.dataSourceStrings[2],\n        this.dataSourceStrings[3],\n        this.dataSourceStrings[4]\n    ];\n    selectedItems6 = [];\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n\n    onSelect2(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems2 = item.selectedItems;\n    }\n\n    onSelect3(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems3 = item.selectedItems;\n    }\n\n    onSelect4(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems4 = item.selectedItems;\n    }\n\n    onSelect5(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems5 = item.selectedItems;\n    }\n\n    onSelect6(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems6 = item.selectedItems;\n    }\n}\n",component:"MultiComboboxDatasourceExampleComponent"}],this.multiComboboxMobileExample=[{language:"html",fileName:"multi-combobox-mobile-example",code:'<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="mobile" label="Mobile Mode Combobox">\n        <fdp-multi-combobox\n            name="mobile"\n            placeholder="Type some text..."\n            displayKey="name"\n            [dataSource]="dataSource"\n            [mobile]="true"\n            [mobileConfig]="mobileConfig"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-mobile-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { MobileModeConfig } from '@fundamental-ngx/core/mobile-mode';\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-multi-combobox-mobile-example',\n    templateUrl: './multi-combobox-mobile-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxMobileExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = [];\n\n    mobileConfig: MobileModeConfig = {\n        title: 'Title',\n        approveButtonText: 'Save',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true\n    };\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",component:"MultiComboboxMobileExampleComponent"}],this.multiComboboxGroupExample=[{language:"html",fileName:"multi-combobox-group-example",code:'<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="group" label="Group with Key">\n        <fdp-multi-combobox\n            name="group"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            [group]="true"\n            groupKey="type"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n\n    <fdp-form-field id="group-without-key" label="Group without Key">\n        <fdp-multi-combobox\n            name="group-without-key"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            [group]="true"\n            (selectionChange)="onSelect1($event)"\n            [selectedItems]="selectedItems1"\n        ></fdp-multi-combobox>\n        <p>Selected: {{ selectedItems1 | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-group-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-multi-combobox-group-example',\n    templateUrl: './multi-combobox-group-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxGroupExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = [this.dataSource[1]];\n    selectedItems1 = [];\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n\n    onSelect1(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems1 = item.selectedItems;\n    }\n}\n",component:"MultiComboboxGroupExampleComponent"}],this.multiComboboxColumnsExample=[{language:"html",fileName:"multi-combobox-columns-example",code:'<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="columns" label="Two Columns" [required]="true">\n        <fdp-multi-combobox\n            name="columns"\n            placeholder="Type some text..."\n            [autoResize]="true"\n            [dataSource]="dataSource"\n            displayKey="name"\n            secondaryKey="type"\n            [showSecondaryText]="true"\n            secondaryTextAlignment="right"\n            (selectionChange)="onSelect($event)"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-columns-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-multi-combobox-columns-example',\n    templateUrl: './multi-combobox-columns-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxColumnsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Florida Evergreen Blueberry', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    selectedItems = [];\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",component:"MultiComboboxColumnsExampleComponent"}],this.multiComboboxFormExample=[{language:"html",fileName:"multi-combobox-forms-example",code:'<fdp-form-group [noLabelLayout]="false" [formGroup]="customForm">\n    <fdp-form-field id="field" label="Array of Strings">\n        <fdp-multi-combobox\n            name="field"\n            placeholder="Type some text..."\n            [dataSource]="dataSource"\n            displayKey="name"\n            (selectionChange)="onSelect($event)"\n            formControlName="field"\n            [selectedItems]="selectedItems"\n        ></fdp-multi-combobox>\n        <p>Selected Item: {{ selectedItems | json }}</p>\n        <p>Form Selected Item: {{ customForm.getRawValue() | json }}</p>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-forms-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\n@Component({\n    selector: 'fdp-multi-combobox-forms-example',\n    templateUrl: './multi-combobox-forms-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }]\n})\nexport class MultiComboboxFormsExampleComponent {\n    dataSource = [\n        { name: 'Apple', type: 'Fruits' },\n        { name: 'Banana', type: 'Fruits' },\n        { name: 'Pineapple', type: 'Fruits' },\n        { name: 'Strawberry', type: 'Fruits' },\n        { name: 'Broccoli', type: 'Vegetables' },\n        { name: 'Carrot', type: 'Vegetables' },\n        { name: 'Jalape\xf1o', type: 'Vegetables' },\n        { name: 'Spinach', type: 'Vegetables' }\n    ];\n\n    customForm = new FormGroup({\n        field: new FormControl(this.dataSource[3])\n    });\n\n    selectedItems = [this.dataSource[3]];\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n}\n",component:"MultiComboboxFormsExampleComponent"}],this.multiComboboxStatesExample=[{language:"html",fileName:"multi-combobox-states-example",code:'<fdp-form-group [noLabelLayout]="false" mainTitle="Playground" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="multi-combobox-states" label="Select state" [column]="1">\n        <fdp-combobox\n            name="multi-combobox-states"\n            placeholder="Select state"\n            [dataSource]="states"\n            [value]="selectedState"\n            (selectionChange)="onSelectState($event)"\n        ></fdp-combobox>\n    </fdp-form-field>\n    <fdp-form-field id="multi-combobox-state-1" label="Selected state" [column]="2">\n        <fdp-multi-combobox\n            name="multi-combobox-state-1"\n            placeholder="Type some text..."\n            displayKey="name"\n            [state]="selectedState"\n            [stateMessage]="selectedState + \' state message\'"\n            [dataSource]="dataSource"\n        >\n        </fdp-multi-combobox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<fdp-form-group mainTitle="States" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="multi-combobox-state-success" label="Success state" [column]="1">\n        <fdp-multi-combobox\n            name="multi-combobox-state-success"\n            placeholder="Type some text..."\n            state="success"\n            stateMessage="Success state message"\n            displayKey="name"\n            [dataSource]="dataSource"\n        ></fdp-multi-combobox>\n    </fdp-form-field>\n\n    <fdp-form-field id="multi-combobox-state-error" label="Error state" [column]="2">\n        <fdp-multi-combobox\n            name="multi-combobox-error-state"\n            placeholder="Type some text..."\n            state="error"\n            stateMessage="Error state message"\n            displayKey="name"\n            [dataSource]="dataSource"\n        ></fdp-multi-combobox>\n    </fdp-form-field>\n\n    <fdp-form-field id="multi-combobox-state-warning" label="Warning state" [column]="1">\n        <fdp-multi-combobox\n            name="multi-combobox-warning-state"\n            placeholder="Type some text..."\n            state="warning"\n            stateMessage="Warning state message"\n            displayKey="name"\n            [dataSource]="dataSource"\n        ></fdp-multi-combobox>\n    </fdp-form-field>\n\n    <fdp-form-field id="multi-combobox-state-info" label="Information state" [column]="2">\n        <fdp-multi-combobox\n            name="multi-combobox-information-state"\n            placeholder="Type some text..."\n            state="information"\n            stateMessage="Information state message"\n            displayKey="name"\n            [dataSource]="dataSource"\n        ></fdp-multi-combobox>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-states-example",code:"import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormStates } from '@fundamental-ngx/core/shared';\nimport { ComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\n\nimport { DATA_PROVIDERS } from '@fundamental-ngx/platform/shared';\n\n@Component({\n    selector: 'fdp-multi-combobox-states-example',\n    templateUrl: './multi-combobox-states-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: DATA_PROVIDERS, useValue: new Map() }],\n    styles: [\n        `\n            fdp-form-group .fd-row__form-item > .fd-col:first-child {\n                margin-bottom: 1rem;\n            }\n        `\n    ]\n})\nexport class MultiComboboxStatesExampleComponent {\n    dataSource = [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Pineapple' },\n        { name: 'Strawberry' },\n        { name: 'Broccoli' },\n        { name: 'Carrot' },\n        { name: 'Jalape\xf1o' },\n        { name: 'Spinach' }\n    ];\n\n    states: FormStates[] = ['default', 'success', 'error', 'warning', 'information'];\n    selectedState: FormStates = this.states[0];\n\n    onSelectState(item: ComboboxSelectionChangeEvent): void {\n        this.selectedState = item.payload;\n    }\n}\n",component:"MultiComboboxStatesExampleComponent"}],this.multiComboboxLoadingExample=[{language:"html",fileName:"multi-combobox-loading-example",code:'<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="combobox-loading" label="Combobox with loading">\n        <fd-busy-indicator [loading]="loading" ariaLabel="loading" title="Please Wait">\n            <fdp-multi-combobox\n                name="loading"\n                placeholder="Type some text..."\n                displayKey="name"\n                [dataSource]="dataSource"\n                (selectionChange)="onSelect($event)"\n                (onDataRequested)="onDataRequested()"\n                (onDataReceived)="onDataReceived()"\n                [selectedItems]="selectedItems"\n            ></fdp-multi-combobox>\n            <p>Selected: {{ selectedItems | json }}</p>\n        </fd-busy-indicator>\n    </fdp-form-field>\n</fdp-form-group>\n'},{language:"typescript",fileName:"multi-combobox-loading-example",code:"import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BaseDataProvider, MultiComboBoxDataSource } from '@fundamental-ngx/platform/shared';\n\nimport { MultiComboboxSelectionChangeEvent } from '@fundamental-ngx/platform/form';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nconst OPTIONS = [\n    { name: 'Apple', type: 'Fruits' },\n    { name: 'Banana', type: 'Fruits' },\n    { name: 'Pineapple', type: 'Fruits' },\n    { name: 'Strawberry', type: 'Fruits' },\n    { name: 'Broccoli', type: 'Vegetables' },\n    { name: 'Carrot', type: 'Vegetables' },\n    { name: 'Jalape\xf1o', type: 'Vegetables' },\n    { name: 'Spinach', type: 'Vegetables' }\n];\n\n@Component({\n    selector: 'fdp-multi-combobox-loading-example',\n    templateUrl: './multi-combobox-loading-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultiComboboxLoadingExampleComponent {\n    dataSource = new MultiComboBoxDataSource(new DelayedBaseDataProvider(OPTIONS));\n\n    selectedItems = [];\n    loading = false;\n\n    onSelect(item: MultiComboboxSelectionChangeEvent): void {\n        this.selectedItems = item.selectedItems;\n    }\n\n    onDataRequested(): void {\n        this.loading = true;\n    }\n    onDataReceived(): void {\n        this.loading = false;\n    }\n}\n\n// Simulating real http request by adding 300ms delay to the DataProvider's \"fetch\" method\nclass DelayedBaseDataProvider<T> extends BaseDataProvider<T> {\n    fetch(params: Map<string, any>): Observable<T[]> {\n        return super.fetch(params).pipe(delay(300));\n    }\n}\n",component:"MultiComboboxLoadingExampleComponent"}]}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["platform-multi-combobox-docs"]],decls:114,vars:7,consts:[["id","data-source","componentName","multi-combobox"],[3,"exampleFiles"],["id","mobile","componentName","multi-combobox"],["routerLink","/core/global-config","fragment","mobile-mode-config"],["id","group","componentName","multi-combobox"],["id","columns","componentName","multi-combobox"],["id","states","componentName","multi-combobox"],["id","reactive-form","componentName","multi-combobox"],["id","loading","componentName","multi-combobox"]],template:function(t,o){1&t&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1,"DataSource"),e.qZA(),e.TgZ(2,"description"),e._uU(3," Input "),e.TgZ(4,"code"),e._uU(5,"[dataSource]"),e.qZA(),e._uU(6," has this type "),e.TgZ(7,"code"),e._uU(8," type FdpMultiComboboxDataSource<T> = MultiComboBoxDataSource<T> | Observable<T[]> | T[] "),e.qZA()(),e.TgZ(9,"component-example"),e._UZ(10,"fdp-multi-combobox-datasource-example"),e.qZA(),e._UZ(11,"code-example",1)(12,"separator"),e.TgZ(13,"fd-docs-section-title",2),e._uU(14,"Multi-Combobox Mobile Mode"),e.qZA(),e.TgZ(15,"description"),e._uU(16," To use Multi-Combobox in mobile mode: "),e.TgZ(17,"ul")(18,"li"),e._uU(19,"import "),e.TgZ(20,"code"),e._uU(21,"MultiComboboxMobileModule"),e.qZA()(),e.TgZ(22,"li"),e._uU(23,"Set "),e.TgZ(24,"code"),e._uU(25,"[mobile]"),e.qZA(),e._uU(26," property to true"),e.qZA(),e.TgZ(27,"li"),e._uU(28," Set "),e.TgZ(29,"code"),e._uU(30,"[mobileConfig]"),e.qZA(),e._uU(31," with "),e.TgZ(32,"code"),e._uU(33,"MobileModeConfig"),e.qZA(),e._uU(34," configuration object to customize the look of the control "),e.qZA()(),e._uU(35," Multi-Combobox Mobile Mode can be configured "),e.TgZ(36,"strong"),e._uU(37,"globally"),e.qZA(),e._uU(38," by providing "),e.TgZ(39,"code"),e._uU(40,"MOBILE_MODE_CONFIG"),e.qZA(),e._uU(41," token. Check "),e.TgZ(42,"a",3),e._uU(43,"Global Configuration page"),e.qZA(),e._uU(44," for more information.\n"),e.qZA(),e.TgZ(45,"component-example"),e._UZ(46,"fdp-multi-combobox-mobile-example"),e.qZA(),e._UZ(47,"code-example",1)(48,"separator"),e.TgZ(49,"fd-docs-section-title",4),e._uU(50," Multi-Combobox with Groups "),e.qZA(),e.TgZ(51,"description"),e._uU(52," Multi-Combobox with Groups. Note that a "),e.TgZ(53,"code"),e._uU(54,"group"),e.qZA(),e._uU(55," and "),e.TgZ(56,"code"),e._uU(57,"groupKey"),e.qZA(),e._uU(58," is required\n"),e.qZA(),e.TgZ(59,"component-example"),e._UZ(60,"fdp-multi-combobox-group-example"),e.qZA(),e._UZ(61,"code-example",1)(62,"separator"),e.TgZ(63,"fd-docs-section-title",5),e._uU(64," Multi-Combobox with Two Columns\n"),e.qZA(),e.TgZ(65,"description"),e._uU(66," Multi-Combobox with two columns of information. Note that a "),e.TgZ(67,"code"),e._uU(68,"secondaryKey"),e.qZA(),e._uU(69," and "),e.TgZ(70,"code"),e._uU(71,"showSecondaryText"),e.qZA(),e._uU(72," is required\n"),e.qZA(),e.TgZ(73,"component-example"),e._UZ(74,"fdp-multi-combobox-columns-example"),e.qZA(),e._UZ(75,"code-example",1)(76,"separator"),e.TgZ(77,"fd-docs-section-title",6),e._uU(78," Multi Combobox states. "),e.qZA(),e.TgZ(79,"description"),e._uU(80," The Multi Combobox component with states. "),e.TgZ(81,"ul")(82,"li"),e._uU(83,"Set "),e.TgZ(84,"code"),e._uU(85,"[state]"),e.qZA(),e._uU(86,"property to: "),e.TgZ(87,"code"),e._uU(88,"'success' | 'error' | 'warning' | 'information'"),e.qZA()()()(),e.TgZ(89,"component-example"),e._UZ(90,"fdp-multi-combobox-states-example"),e.qZA(),e._UZ(91,"code-example",1)(92,"separator"),e.TgZ(93,"fd-docs-section-title",7),e._uU(94," Reactive Form "),e.qZA(),e.TgZ(95,"description"),e._uU(96," The Multi-Combobox component may also be used within Angular Reactive Forms. "),e.qZA(),e.TgZ(97,"component-example"),e._UZ(98,"fdp-multi-combobox-forms-example"),e.qZA(),e._UZ(99,"code-example",1)(100,"separator"),e.TgZ(101,"fd-docs-section-title",8),e._uU(102," Loading "),e.qZA(),e.TgZ(103,"description"),e._uU(104," Combobox exposes "),e.TgZ(105,"code"),e._uU(106,"onDataRequested"),e.qZA(),e._uU(107," and "),e.TgZ(108,"code"),e._uU(109,"onDataReceived"),e.qZA(),e._uU(110," outputs, that can be used to implement external loading logic. These events are tied to the querying process through dataSource.\n"),e.qZA(),e.TgZ(111,"component-example"),e._UZ(112,"fdp-multi-combobox-loading-example"),e.qZA(),e._UZ(113,"code-example",1)),2&t&&(e.xp6(11),e.Q6J("exampleFiles",o.multiComboboxDatasourceExample),e.xp6(36),e.Q6J("exampleFiles",o.multiComboboxMobileExample),e.xp6(14),e.Q6J("exampleFiles",o.multiComboboxGroupExample),e.xp6(14),e.Q6J("exampleFiles",o.multiComboboxColumnsExample),e.xp6(16),e.Q6J("exampleFiles",o.multiComboboxStatesExample),e.xp6(8),e.Q6J("exampleFiles",o.multiComboboxFormExample),e.xp6(14),e.Q6J("exampleFiles",o.multiComboboxLoadingExample))},dependencies:[b.yS,O.N,K.E,g.w,N.k,Q.O,X,$,H,W,k,ee,ae],encapsulation:2}),n})();var se=a(19262),ie=a(67949),y=a(61830);const re=[{path:"",component:v,children:[{path:"",component:le},{path:"api",component:h.h,data:{content:_.X.multiCombobox}},{path:"i18n",component:y.P,data:(0,y.G)("platformMultiCombobox")}]}];let pe=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({providers:[{provide:C.jq,useValue:se.s8,multi:!0},(0,i.PP)("fdp-multi-combobox")],imports:[b.Bz.forChild(re),ie.g,f.Mk,f.gK,f.ry,S.UH,b.Bz]}),n})()}}]);