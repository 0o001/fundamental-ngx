(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{U9Co:function(e,l,n){"use strict";n.r(l),n.d(l,"PlatformFileUploaderDocsModule",function(){return De});var i={};n.r(i),n.d(i,"default",function(){return U});var a={};n.r(a),n.d(a,"default",function(){return D});var o={};n.r(o),n.d(o,"default",function(){return W});var t={};n.r(t),n.d(t,"default",function(){return R});var r={};n.r(r),n.d(r,"default",function(){return z});var p={};n.r(p),n.d(p,"default",function(){return L});var d={};n.r(d),n.d(d,"default",function(){return M});var f={};n.r(f),n.d(f,"default",function(){return I});var s={};n.r(s),n.d(s,"default",function(){return w});var c={};n.r(c),n.d(c,"default",function(){return B});var m={};n.r(m),n.d(m,"default",function(){return O});var u={};n.r(u),n.d(u,"default",function(){return E});var b={};n.r(b),n.d(b,"default",function(){return T});var h={};n.r(h),n.d(h,"default",function(){return P});var g={};n.r(g),n.d(g,"default",function(){return N});var F={};n.r(F),n.d(F,"default",function(){return k});var v={};n.r(v),n.d(v,"default",function(){return $});var C={};n.r(C),n.d(C,"default",function(){return j});var y=n("ofXK"),V=n("tyNb"),x=n("3Pt+"),S=n("XaOr"),U='<fdp-form-group #fg>\n    <fdp-form-field\n        #ffl1\n        label="File Uploader Example"\n        id="input1"\n        name="defaultFileUploaderSample"\n        zone="zLeft"\n        rank="1"\n        placeholder="Choose file to upload"\n        required="true"\n    >\n        <fdp-file-uploader\n            ariaLabel="Choose file"\n            ariaLabelledBy="input1"\n            id="input1"\n            name="defaultFileUploaderSample"\n            placeholder="Choose file to upload"\n            buttonLabel="Browse"\n            buttonAriaLabel="browse file"\n            accept=".png,.jpg"\n            [(ngModel)]="files"\n            multiple="true"\n            (selectionChange)="handleFileSelection($event)"\n            (invalidFileChange)="handleInvalidFileSelection($event)"\n        ></fdp-file-uploader>\n    </fdp-form-field>\n</fdp-form-group>\n\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n\n\n<br />\n\nInvalid Files:\n<br />\n<span *ngFor="let file of invalidFiles">\n    <span class="red">{{ file.name }} </span><br />\n</span>\n',D=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",W="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { FileUploaderSelectionChangeEvent, FileUploaderInvalidChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-example',\n    templateUrl: './platform-file-uploader-example.component.html',\n    styleUrls: ['platform-file-uploader-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderExampleComponent {\n    files: File[];\n    invalidFiles: File[];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n\n    handleInvalidFileSelection(files: FileUploaderInvalidChangeEvent): void {\n        this.invalidFiles = files.payload;\n        if (this.invalidFiles.length > 0) {\n            alert('Invalid file ' + this.invalidFiles.length);\n        }\n    }\n\n}\n",R='<fdp-form-group #fg>\n    <fdp-form-field\n        #ffl1\n        label="File Uploader Compact"\n        id="input2"\n        name="compactFileUploader"\n        zone="zLeft"\n        rank="1"\n        placeholder="Field placeholder text"\n    >\n        <fdp-file-uploader\n            id="input1-compact"\n            name="compactFileUploader"\n            ariaLabel="Choose file"\n            ariaLabelledBy="input2"\n            placeholder="Choose File to upload"\n            buttonLabel="Browse"\n            buttonAriaLabel="browse file"\n            accept=".png,.jpg,.jpeg"\n            [(ngModel)]="files"\n            multiple="true"\n            contentDensity="compact"\n            (selectionChange)="handleFileSelection($event)"\n        ></fdp-file-uploader>\n    </fdp-form-field>\n</fdp-form-group>\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n\n<br />\n',z=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",L="import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FileUploaderSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-compact-example',\n    templateUrl: './platform-file-uploader-compact-example.component.html',\n    styleUrls: ['platform-file-uploader-compact-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderCompactExampleComponent {\n    files: File[];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n}\n",M='<fdp-form-group #fg>\n    <fdp-form-field\n        #ffl1\n        label="File Uploader Maximium"\n        id="input1-max-file"\n        name="fileUploader-max"\n        zone="zLeft"\n        rank="1"\n        placeholder="Field placeholder text"\n    >\n        <fdp-file-uploader\n            id="input1-max-file"\n            name="fileUploader-max"\n            ariaLabel="Choose file"\n            ariaLabelledBy="input1"\n            placeholder="Choose File to upload"\n            buttonLabel="Browse"\n            buttonAriaLabel="browse file"\n            maxFileSize="1MB"\n            multiple="true"\n            [(ngModel)]="files"\n            (selectionChange)="handleFileSelection($event)"\n            (invalidFileChange)="handleInvalidFileSelection($event)"\n        ></fdp-file-uploader>\n    </fdp-form-field>\n</fdp-form-group>\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n\n<br />\n\nInvalid Files:\n<br />\n<span *ngFor="let file of invalidFiles">\n    <span class="red">{{ file.name }} </span><br />\n</span>\n',I=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",w="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { FileUploaderInvalidChangeEvent, FileUploaderSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-max-file-size-example',\n    templateUrl: './platform-file-uploader-max-file-size-example.component.html',\n    styleUrls: ['./platform-file-uploader-max-file-size-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderMaxFileSizeExampleComponent {\n    files: File[];\n    invalidFiles: File[];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n\n    handleInvalidFileSelection(files: FileUploaderInvalidChangeEvent): void {\n        this.invalidFiles = files.payload;\n        if (this.invalidFiles.length > 0) {\n            alert('file invalid uploaded' + this.invalidFiles.length);\n        }\n    }\n}\n",B='<fdp-form-group #fg>\n    <fdp-form-field\n        #ffl1\n        label="File Uploader Minimium"\n        id="input1-min-file"\n        name="fileUploader-min"\n        zone="zLeft"\n        rank="1"\n        placeholder="Field placeholder text"\n    >\n        <fdp-file-uploader\n            id="input1-min-file"\n            name="fileUploader-min"\n            ariaLabel="Choose file"\n            ariaLabelledBy="input1"\n            placeholder="Choose File to upload"\n            buttonLabel="Browse"\n            buttonAriaLabel="browse file"\n            minFileSize="20KB"\n            multiple="true"\n            [(ngModel)]="files"\n            (selectionChange)="handleFileSelection($event)"\n            (invalidFileChange)="handleInvalidFileSelection($event)"\n        ></fdp-file-uploader>\n    </fdp-form-field>\n</fdp-form-group>\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n\n<br />\n\nInvalid Files:\n<br />\n<span *ngFor="let file of invalidFiles">\n    <span class="red">{{ file.name }} </span><br />\n</span>\n',O=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",E="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { FileUploaderInvalidChangeEvent, FileUploaderSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-min-file-size-example',\n    templateUrl: './platform-file-uploader-min-file-size-example.component.html',\n    styleUrls: ['./platform-file-uploader-min-file-size-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderMinFileSizeExampleComponent {\n    files: File[];\n    invalidFiles: File[];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n\n    handleInvalidFileSelection(files: FileUploaderInvalidChangeEvent): void {\n        this.invalidFiles = files.payload;\n        if (this.invalidFiles.length > 0) {\n            alert('file invalid uploaded' + this.invalidFiles.length);\n        }\n    }\n}\n",T='<fdp-form-group #fg>\n    <fdp-form-field\n        #ffl1\n        label="File Uploader Types"\n        id="input1-types"\n        name="fileUploader-types"\n        zone="zLeft"\n        rank="1"\n        placeholder="Field placeholder text"\n    >\n        <fdp-file-uploader\n            id="input1-types"\n            name="fileUploader-types"\n            ariaLabel="Choose file"\n            ariaLabelledBy="input1-types"\n            placeholder="Choose File to upload"\n            buttonLabel="Drag a .png file on me!"\n            buttonAriaLabel="Drag a .png file on me!"\n            accept=".png"\n            [(ngModel)]="files"\n            multiple="true"\n            (selectionChange)="handleFileSelection($event)"\n            (invalidFileChange)="handleInvalidFileSelection($event)"\n        ></fdp-file-uploader>\n    </fdp-form-field>\n</fdp-form-group>\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n\n<br />\n\nInvalid Files:\n<br />\n<span *ngFor="let file of invalidFiles">\n    <span class="red">{{ file.name }} </span><br />\n</span>\n',P="import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { FileUploaderInvalidChangeEvent, FileUploaderSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-file-types-example',\n    templateUrl: './platform-file-uploader-file-types-example.component.html',\n    styleUrls: ['platform-file-uploader-file-types-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderFileTypesExampleComponent {\n    files: File[];\n    invalidFiles: File[];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n    handleInvalidFileSelection(files: FileUploaderInvalidChangeEvent): void {\n        this.invalidFiles = files.payload;\n        if (this.invalidFiles.length > 0) {\n            alert('file invalid uploaded' + this.invalidFiles.length);\n        }\n    }\n}\n",N=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",k='<form #upload="ngForm" (ngSubmit)="onSubmit(upload)">\n    <fdp-form-group [formGroup]="customForm">\n        <fdp-form-field\n            #ffl1\n            label="File Uploader Reactive"\n            id="input1"\n            name="reactiveFormInput"\n            zone="zLeft"\n            rank="1"\n            required="true"\n            placeholder="Choose file to upload"\n        >\n            <fdp-file-uploader\n                id="input1"\n                name="reactiveFormInput"\n                [formControl]="ffl1.formControl"\n                ariaLabel="Choose file"\n                ariaLabelledBy="input1"\n                placeholder="Choose file to upload"\n                buttonLabel="Browse"\n                buttonAriaLabel="browse file"\n                accept=".png,.jpg"\n                value="files"\n                multiple="true"\n                minFileSize="200KB"\n                (selectionChange)="handleFileSelection($event)"\n            ></fdp-file-uploader>\n        </fdp-form-field>\n        <ng-template #i18n let-errors>\n            <span *ngIf="errors.required">File required</span>\n        </ng-template>\n    </fdp-form-group>\n    <fdp-button contentDensity="compact" type="submit" style="margin-left: 2rem" label="Submit"></fdp-button>\n</form>\n<br /><br />\n\nFiles Selected:\n<br />\n<span *ngFor="let file of this.files">\n    <span class="green">{{ file.name }} </span><br\n/></span>\n',$=".red {\n    color: red;\n}\n.green {\n    color: seagreen;\n}\n",j="import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormGroup, NgForm, ValidatorFn, Validators } from '@angular/forms';\n\nimport { FileUploaderInvalidChangeEvent, FileUploaderSelectionChangeEvent } from '@fundamental-ngx/platform';\n\n@Component({\n    selector: 'fdp-platform-file-uploader-reactive-example',\n    templateUrl: './platform-file-uploader-reactive-example.component.html',\n    styleUrls: ['platform-file-uploader-reactive-example.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformFileUploaderReactiveExampleComponent {\n    files: File[];\n    invalidFiles: File[];\n    customForm: FormGroup = new FormGroup({});\n    requiredDateValidator: ValidatorFn[] = [Validators.required];\n\n    handleFileSelection(files: FileUploaderSelectionChangeEvent): void {\n        this.files = files.payload;\n        console.log(this.customForm);\n        if (this.files.length > 0) {\n            alert('file uploaded' + this.files.length);\n        }\n    }\n    handleInvalidFileSelection(files: FileUploaderInvalidChangeEvent): void {\n        this.invalidFiles = files.payload;\n        if (this.invalidFiles.length > 0) {\n            alert('file invalid uploaded' + this.invalidFiles.length);\n        }\n    }\n\n    onSubmit(form: NgForm): void {\n        if (this.customForm.valid) {\n            alert('form file Uploaded successfully');\n        }\n    }\n}\n",q=n("fXoL"),K=n("ddaM"),A=n("kt86"),X=n("X1JU"),_=n("I7mx"),G=n("npbV"),J=n("N9Oq");function H(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",5),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}function Y(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",6),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let Z=(()=>{class e{handleFileSelection(e){this.files=e.payload,this.files.length>0&&alert("file uploaded"+this.files.length)}handleInvalidFileSelection(e){this.invalidFiles=e.payload,this.invalidFiles.length>0&&alert("Invalid file "+this.invalidFiles.length)}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-example"]],decls:14,vars:3,consts:[["fg",""],["label","File Uploader Example","id","input1","name","defaultFileUploaderSample","zone","zLeft","rank","1","placeholder","Choose file to upload","required","true"],["ffl1",""],["ariaLabel","Choose file","ariaLabelledBy","input1","id","input1","name","defaultFileUploaderSample","placeholder","Choose file to upload","buttonLabel","Browse","buttonAriaLabel","browse file","accept",".png,.jpg","multiple","true",3,"ngModel","ngModelChange","selectionChange","invalidFileChange"],[4,"ngFor","ngForOf"],[1,"green"],[1,"red"]],template:function(e,l){1&e&&(q.Wb(0,"fdp-form-group",null,0),q.Wb(2,"fdp-form-field",1,2),q.Wb(4,"fdp-file-uploader",3),q.jc("ngModelChange",function(e){return l.files=e})("selectionChange",function(e){return l.handleFileSelection(e)})("invalidFileChange",function(e){return l.handleInvalidFileSelection(e)}),q.Vb(),q.Vb(),q.Vb(),q.Rb(5,"br"),q.Rb(6,"br"),q.Vc(7," Files Selected:\n"),q.Rb(8,"br"),q.Tc(9,H,4,1,"span",4),q.Rb(10,"br"),q.Vc(11," Invalid Files:\n"),q.Rb(12,"br"),q.Tc(13,Y,4,1,"span",4)),2&e&&(q.Db(4),q.vc("ngModel",l.files),q.Db(5),q.vc("ngForOf",l.files),q.Db(4),q.vc("ngForOf",l.invalidFiles))},directives:[_.a,G.a,J.a,x.q,x.t,y.n],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})();var Q=n("5HkS"),ee=n("Hxo2");function le(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",5),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let ne=(()=>{class e{handleFileSelection(e){this.files=e.payload,this.files.length>0&&alert("file uploaded"+this.files.length)}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-compact-example"]],decls:11,vars:2,consts:[["fg",""],["label","File Uploader Compact","id","input2","name","compactFileUploader","zone","zLeft","rank","1","placeholder","Field placeholder text"],["ffl1",""],["id","input1-compact","name","compactFileUploader","ariaLabel","Choose file","ariaLabelledBy","input2","placeholder","Choose File to upload","buttonLabel","Browse","buttonAriaLabel","browse file","accept",".png,.jpg,.jpeg","multiple","true","contentDensity","compact",3,"ngModel","ngModelChange","selectionChange"],[4,"ngFor","ngForOf"],[1,"green"]],template:function(e,l){1&e&&(q.Wb(0,"fdp-form-group",null,0),q.Wb(2,"fdp-form-field",1,2),q.Wb(4,"fdp-file-uploader",3),q.jc("ngModelChange",function(e){return l.files=e})("selectionChange",function(e){return l.handleFileSelection(e)}),q.Vb(),q.Vb(),q.Vb(),q.Rb(5,"br"),q.Rb(6,"br"),q.Vc(7," Files Selected:\n"),q.Rb(8,"br"),q.Tc(9,le,4,1,"span",4),q.Rb(10,"br")),2&e&&(q.Db(4),q.vc("ngModel",l.files),q.Db(5),q.vc("ngForOf",l.files))},directives:[_.a,G.a,J.a,x.q,x.t,y.n],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})();function ie(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",5),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}function ae(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",6),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let oe=(()=>{class e{handleFileSelection(e){this.files=e.payload,this.files.length>0&&alert("file uploaded"+this.files.length)}handleInvalidFileSelection(e){this.invalidFiles=e.payload,this.invalidFiles.length>0&&alert("file invalid uploaded"+this.invalidFiles.length)}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-max-file-size-example"]],decls:14,vars:3,consts:[["fg",""],["label","File Uploader Maximium","id","input1-max-file","name","fileUploader-max","zone","zLeft","rank","1","placeholder","Field placeholder text"],["ffl1",""],["id","input1-max-file","name","fileUploader-max","ariaLabel","Choose file","ariaLabelledBy","input1","placeholder","Choose File to upload","buttonLabel","Browse","buttonAriaLabel","browse file","maxFileSize","1MB","multiple","true",3,"ngModel","ngModelChange","selectionChange","invalidFileChange"],[4,"ngFor","ngForOf"],[1,"green"],[1,"red"]],template:function(e,l){1&e&&(q.Wb(0,"fdp-form-group",null,0),q.Wb(2,"fdp-form-field",1,2),q.Wb(4,"fdp-file-uploader",3),q.jc("ngModelChange",function(e){return l.files=e})("selectionChange",function(e){return l.handleFileSelection(e)})("invalidFileChange",function(e){return l.handleInvalidFileSelection(e)}),q.Vb(),q.Vb(),q.Vb(),q.Rb(5,"br"),q.Rb(6,"br"),q.Vc(7," Files Selected:\n"),q.Rb(8,"br"),q.Tc(9,ie,4,1,"span",4),q.Rb(10,"br"),q.Vc(11," Invalid Files:\n"),q.Rb(12,"br"),q.Tc(13,ae,4,1,"span",4)),2&e&&(q.Db(4),q.vc("ngModel",l.files),q.Db(5),q.vc("ngForOf",l.files),q.Db(4),q.vc("ngForOf",l.invalidFiles))},directives:[_.a,G.a,J.a,x.q,x.t,y.n],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})();function te(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",5),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}function re(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",6),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let pe=(()=>{class e{handleFileSelection(e){this.files=e.payload,this.files.length>0&&alert("file uploaded"+this.files.length)}handleInvalidFileSelection(e){this.invalidFiles=e.payload,this.invalidFiles.length>0&&alert("file invalid uploaded"+this.invalidFiles.length)}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-min-file-size-example"]],decls:14,vars:3,consts:[["fg",""],["label","File Uploader Minimium","id","input1-min-file","name","fileUploader-min","zone","zLeft","rank","1","placeholder","Field placeholder text"],["ffl1",""],["id","input1-min-file","name","fileUploader-min","ariaLabel","Choose file","ariaLabelledBy","input1","placeholder","Choose File to upload","buttonLabel","Browse","buttonAriaLabel","browse file","minFileSize","20KB","multiple","true",3,"ngModel","ngModelChange","selectionChange","invalidFileChange"],[4,"ngFor","ngForOf"],[1,"green"],[1,"red"]],template:function(e,l){1&e&&(q.Wb(0,"fdp-form-group",null,0),q.Wb(2,"fdp-form-field",1,2),q.Wb(4,"fdp-file-uploader",3),q.jc("ngModelChange",function(e){return l.files=e})("selectionChange",function(e){return l.handleFileSelection(e)})("invalidFileChange",function(e){return l.handleInvalidFileSelection(e)}),q.Vb(),q.Vb(),q.Vb(),q.Rb(5,"br"),q.Rb(6,"br"),q.Vc(7," Files Selected:\n"),q.Rb(8,"br"),q.Tc(9,te,4,1,"span",4),q.Rb(10,"br"),q.Vc(11," Invalid Files:\n"),q.Rb(12,"br"),q.Tc(13,re,4,1,"span",4)),2&e&&(q.Db(4),q.vc("ngModel",l.files),q.Db(5),q.vc("ngForOf",l.files),q.Db(4),q.vc("ngForOf",l.invalidFiles))},directives:[_.a,G.a,J.a,x.q,x.t,y.n],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})();function de(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",5),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}function fe(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",6),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let se=(()=>{class e{handleFileSelection(e){this.files=e.payload,this.files.length>0&&alert("file uploaded"+this.files.length)}handleInvalidFileSelection(e){this.invalidFiles=e.payload,this.invalidFiles.length>0&&alert("file invalid uploaded"+this.invalidFiles.length)}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-file-types-example"]],decls:14,vars:3,consts:[["fg",""],["label","File Uploader Types","id","input1-types","name","fileUploader-types","zone","zLeft","rank","1","placeholder","Field placeholder text"],["ffl1",""],["id","input1-types","name","fileUploader-types","ariaLabel","Choose file","ariaLabelledBy","input1-types","placeholder","Choose File to upload","buttonLabel","Drag a .png file on me!","buttonAriaLabel","Drag a .png file on me!","accept",".png","multiple","true",3,"ngModel","ngModelChange","selectionChange","invalidFileChange"],[4,"ngFor","ngForOf"],[1,"green"],[1,"red"]],template:function(e,l){1&e&&(q.Wb(0,"fdp-form-group",null,0),q.Wb(2,"fdp-form-field",1,2),q.Wb(4,"fdp-file-uploader",3),q.jc("ngModelChange",function(e){return l.files=e})("selectionChange",function(e){return l.handleFileSelection(e)})("invalidFileChange",function(e){return l.handleInvalidFileSelection(e)}),q.Vb(),q.Vb(),q.Vb(),q.Rb(5,"br"),q.Rb(6,"br"),q.Vc(7," Files Selected:\n"),q.Rb(8,"br"),q.Tc(9,de,4,1,"span",4),q.Rb(10,"br"),q.Vc(11," Invalid Files:\n"),q.Rb(12,"br"),q.Tc(13,fe,4,1,"span",4)),2&e&&(q.Db(4),q.vc("ngModel",l.files),q.Db(5),q.vc("ngForOf",l.files),q.Db(4),q.vc("ngForOf",l.invalidFiles))},directives:[_.a,G.a,J.a,x.q,x.t,y.n],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})();var ce=n("oxJj");function me(e,l){1&e&&(q.Wb(0,"span"),q.Vc(1,"File required"),q.Vb())}function ue(e,l){1&e&&q.Tc(0,me,2,0,"span",9),2&e&&q.vc("ngIf",l.$implicit.required)}function be(e,l){if(1&e&&(q.Wb(0,"span"),q.Wb(1,"span",10),q.Vc(2),q.Vb(),q.Rb(3,"br"),q.Vb()),2&e){const e=l.$implicit;q.Db(2),q.Xc("",e.name," ")}}let he=(()=>{class e{constructor(){this.customForm=new x.i({}),this.requiredDateValidator=[x.A.required]}handleFileSelection(e){this.files=e.payload,console.log(this.customForm),this.files.length>0&&alert("file uploaded"+this.files.length)}handleInvalidFileSelection(e){this.invalidFiles=e.payload,this.invalidFiles.length>0&&alert("file invalid uploaded"+this.invalidFiles.length)}onSubmit(e){this.customForm.valid&&alert("form file Uploaded successfully")}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-reactive-example"]],decls:14,vars:3,consts:[[3,"ngSubmit"],["upload","ngForm"],[3,"formGroup"],["label","File Uploader Reactive","id","input1","name","reactiveFormInput","zone","zLeft","rank","1","required","true","placeholder","Choose file to upload"],["ffl1",""],["id","input1","name","reactiveFormInput","ariaLabel","Choose file","ariaLabelledBy","input1","placeholder","Choose file to upload","buttonLabel","Browse","buttonAriaLabel","browse file","accept",".png,.jpg","value","files","multiple","true","minFileSize","200KB",3,"formControl","selectionChange"],["i18n",""],["contentDensity","compact","type","submit","label","Submit",2,"margin-left","2rem"],[4,"ngFor","ngForOf"],[4,"ngIf"],[1,"green"]],template:function(e,l){if(1&e){const e=q.Xb();q.Wb(0,"form",0,1),q.jc("ngSubmit",function(){q.Kc(e);const n=q.Hc(1);return l.onSubmit(n)}),q.Wb(2,"fdp-form-group",2),q.Wb(3,"fdp-form-field",3,4),q.Wb(5,"fdp-file-uploader",5),q.jc("selectionChange",function(e){return l.handleFileSelection(e)}),q.Vb(),q.Vb(),q.Tc(6,ue,1,1,"ng-template",null,6,q.Uc),q.Vb(),q.Rb(8,"fdp-button",7),q.Vb(),q.Rb(9,"br"),q.Rb(10,"br"),q.Vc(11," Files Selected:\n"),q.Rb(12,"br"),q.Tc(13,be,4,1,"span",8)}if(2&e){const e=q.Hc(4);q.Db(2),q.vc("formGroup",l.customForm),q.Db(3),q.vc("formControl",e.formControl),q.Db(8),q.vc("ngForOf",l.files)}},directives:[x.B,x.r,x.s,_.a,x.j,G.a,J.a,x.q,x.g,ce.a,y.n,y.o],styles:[".red[_ngcontent-%COMP%]{color:red}.green[_ngcontent-%COMP%]{color:#2e8b57}"],changeDetection:0}),e})(),ge=(()=>{class e{constructor(){this.defaultFileUploadType=[{language:"html",code:i,fileName:"platform-file-uploader-example",scssFileCode:a},{language:"typescript",code:o,fileName:"platform-file-uploader-example",component:"PlatformFileUploaderExampleComponent"}],this.defaultFileUploadCompactType=[{language:"html",code:t,fileName:"platform-file-uploader-compact-example",scssFileCode:r},{language:"typescript",code:p,fileName:"platform-file-uploader-compact-example",component:"PlatformFileUploaderCompactExampleComponent"}],this.defaultFileUploadMaxFileSizeType=[{language:"html",code:d,fileName:"platform-file-uploader-max-file-size-example",scssFileCode:f},{language:"typescript",code:s,fileName:"platform-file-uploader-max-file-size-example",component:"PlatformFileUploaderMaxFileSizeExampleComponent"}],this.defaultFileUploadMinFileSizeType=[{language:"html",code:c,fileName:"platform-file-uploader-min-file-size-example",scssFileCode:m},{language:"typescript",code:u,fileName:"platform-file-uploader-min-file-size-example",component:"PlatformFileUploaderMinFileSizeExampleComponent"}],this.defaultFileUploadFileType=[{language:"html",code:b,fileName:"platform-file-uploader-file-types-example",scssFileCode:g},{language:"typescript",code:h,fileName:"platform-file-uploader-file-types-example",component:"PlatformFileUploaderFileTypesExampleComponent"}],this.defaultFileUploadDisabled=[{language:"html",code:F,fileName:"platform-file-uploader-reactive-example",scssFileCode:v},{language:"typescript",code:C,fileName:"platform-file-uploader-reactive-example",component:"PlatformFileUploaderReactiveExampleComponent"}]}}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fd-platform-file-uploader-docs"]],decls:73,vars:6,consts:[["id","file-uploader-simple","componentName","file-uploader"],[3,"exampleFiles"],["id","file-uploader-compact","componentName","file-uploader"],["id","file-uploader-max-file-size","componentName","file-uploader"],["id","file-uploader-min-file-size","componentName","file-uploader"],["id","file-uploader-file-type","componentName","file-uploader"],["id","file-uploader-reactive","componentName","file-uploader"]],template:function(e,l){1&e&&(q.Wb(0,"fd-docs-section-title",0),q.Vc(1," Simple File Upload\n"),q.Vb(),q.Wb(2,"description"),q.Vc(3,"Used in this context, it will only allow a set of extensions to be added."),q.Vb(),q.Wb(4,"component-example"),q.Rb(5,"fdp-platform-file-uploader-example"),q.Vb(),q.Rb(6,"code-example",1),q.Rb(7,"separator"),q.Wb(8,"fd-docs-section-title",2),q.Vc(9," Compact File Upload\n"),q.Vb(),q.Wb(10,"description"),q.Vc(11,"Example to demonstrate the compact file uploader. Set type "),q.Wb(12,"code"),q.Vc(13,"contentDensity"),q.Vb(),q.Vc(14," property to "),q.Wb(15,"code"),q.Vc(16,"compact"),q.Vb(),q.Vc(17," to achieve the compact file uploader. By default "),q.Wb(18,"code"),q.Vc(19,"contentDensity"),q.Vb(),q.Vc(20," property is set to "),q.Wb(21,"code"),q.Vc(22,"cozy"),q.Vb(),q.Vb(),q.Wb(23,"component-example"),q.Rb(24,"fdp-platform-file-uploader-compact-example"),q.Vb(),q.Rb(25,"code-example",1),q.Rb(26,"separator"),q.Wb(27,"fd-docs-section-title",3),q.Vc(28," Max File Size\n"),q.Vb(),q.Wb(29,"description"),q.Vc(30," It is possible to control the size of the file through the input "),q.Wb(31,"code"),q.Vc(32,"maxFileSize"),q.Vb(),q.Vc(33,". he size you can specify in Byte, KB, MB, GB, TB. eg 20Byte, 2KB, 1MB etc... This feature will keep casual users from entering larger files, but someone knowledgeable enough could potentially bypass this. "),q.Rb(34,"br"),q.Rb(35,"br"),q.Wb(36,"strong"),q.Vc(37,"NOTE: It is possible to bypass this client-side limit so a server-side check is still necessary."),q.Vb(),q.Vb(),q.Wb(38,"component-example"),q.Rb(39,"fdp-platform-file-uploader-max-file-size-example"),q.Vb(),q.Rb(40,"code-example",1),q.Rb(41,"separator"),q.Wb(42,"fd-docs-section-title",4),q.Vc(43," Min File Size\n"),q.Vb(),q.Wb(44,"description"),q.Vc(45," It is possible to control the size of the file through the input "),q.Wb(46,"code"),q.Vc(47,"minFileSize"),q.Vb(),q.Vc(48,". The size you can specify in Byte, KB, MB, GB, TB. eg 20Byte, 2KB, 1MB etc... This feature will keep casual users from entering smaller files to reduce network traffic, but someone knowledgeable enough could potentially bypass this. "),q.Rb(49,"br"),q.Rb(50,"br"),q.Wb(51,"strong"),q.Vc(52,"NOTE: It is possible to bypass this client-side limit so a server-side check is still necessary."),q.Vb(),q.Vb(),q.Wb(53,"component-example"),q.Rb(54,"fdp-platform-file-uploader-min-file-size-example"),q.Vb(),q.Rb(55,"code-example",1),q.Rb(56,"separator"),q.Wb(57,"fd-docs-section-title",5),q.Vc(58," Invalid File Upload\n"),q.Vb(),q.Wb(59,"description"),q.Vc(60," An event is fired when invalid files are added through the drag and drop feature. These files can be retrieved and displayed to the user at will.\n"),q.Vb(),q.Wb(61,"component-example"),q.Rb(62,"fdp-platform-file-uploader-file-types-example"),q.Vb(),q.Rb(63,"code-example",1),q.Rb(64,"separator"),q.Wb(65,"fd-docs-section-title",6),q.Vc(66," File Uploader Reactive example\n"),q.Vb(),q.Wb(67,"description"),q.Vc(68," Usage of File Uploader with Platform Forms using Reactive Forms. "),q.Vb(),q.Wb(69,"component-example"),q.Rb(70,"fdp-platform-file-uploader-reactive-example"),q.Vb(),q.Rb(71,"code-example",1),q.Rb(72,"separator")),2&e&&(q.Db(6),q.vc("exampleFiles",l.defaultFileUploadType),q.Db(19),q.vc("exampleFiles",l.defaultFileUploadCompactType),q.Db(15),q.vc("exampleFiles",l.defaultFileUploadMaxFileSizeType),q.Db(15),q.vc("exampleFiles",l.defaultFileUploadMinFileSizeType),q.Db(8),q.vc("exampleFiles",l.defaultFileUploadFileType),q.Db(8),q.vc("exampleFiles",l.defaultFileUploadDisabled))},directives:[K.a,A.a,X.a,Z,Q.a,ee.a,ne,oe,pe,se,he],encapsulation:2}),e})();var Fe=n("IywY"),ve=n("jzzn"),Ce=n("dor/"),ye=n("RJTZ"),Ve=n("Kpas");let xe=(()=>{class e{}return e.\u0275fac=function(l){return new(l||e)},e.\u0275cmp=q.Kb({type:e,selectors:[["fdp-platform-file-uploader-header"]],decls:16,vars:0,consts:[["module","PlatformFileUploaderModule"]],template:function(e,l){1&e&&(q.Wb(0,"header"),q.Vc(1,"File Uploader"),q.Vb(),q.Wb(2,"description"),q.Vc(3," A very flexible component that prompts the user for a file. Supports multiple selection, accept only certain extensions, and more. The aim is to facilitate the use and styling of the native file input. The projected content can have a file dragged and dropped over. "),q.Wb(4,"h3"),q.Vc(5,"Platform specific enhancements:"),q.Vb(),q.Vc(6," File upload component can be implemented along side of "),q.Wb(7,"code"),q.Vc(8,"fdp-form-field"),q.Vb(),q.Vc(9," and "),q.Wb(10,"code"),q.Vc(11,"fdp-form-group"),q.Vb(),q.Vc(12," components.\n"),q.Vb(),q.Rb(13,"import",0),q.Rb(14,"fd-header-tabs"),q.Rb(15,"router-outlet"))},directives:[Ce.a,A.a,ye.a,Ve.a,V.h],encapsulation:2}),e})();var Se=n("t9W5");const Ue=[{path:"",component:xe,children:[{path:"",component:ge},{path:"api",component:ve.a,data:{content:Fe.a.fileUploader}}]}];let De=(()=>{class e{}return e.\u0275fac=function(l){return new(l||e)},e.\u0275mod=q.Ob({type:e}),e.\u0275inj=q.Nb({imports:[[y.c,V.g.forChild(Ue),Se.a,S.B,S.h,S.r,x.l],V.g]}),e})()}}]);