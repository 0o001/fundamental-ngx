(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{guV6:function(e,n,t){"use strict";t.r(n),t.d(n,"MultiInputDocsModule",(function(){return ve}));var l={};t.r(l),t.d(l,"default",(function(){return A}));var o={};t.r(o),t.d(o,"default",(function(){return I}));var a={};t.r(a),t.d(a,"default",(function(){return Q}));var i={};t.r(i),t.d(i,"default",(function(){return T}));var r={};t.r(r),t.d(r,"default",(function(){return B}));var p={};t.r(p),t.d(p,"default",(function(){return N}));var c={};t.r(c),t.d(c,"default",(function(){return k}));var u={};t.r(u),t.d(u,"default",(function(){return P}));var d={};t.r(d),t.d(d,"default",(function(){return O}));var s={};t.r(s),t.d(s,"default",(function(){return L}));var m={};t.r(m),t.d(m,"default",(function(){return j}));var b={};t.r(b),t.d(b,"default",(function(){return E}));var f={};t.r(f),t.d(f,"default",(function(){return K}));var h={};t.r(h),t.d(h,"default",(function(){return D}));var g={};t.r(g),t.d(g,"default",(function(){return J}));var w={};t.r(w),t.d(w,"default",(function(){return U}));var M=t("sEIs"),y=t("eCHz"),R=t("uYCi"),x=t("EM62"),v=t("P+xO"),S=t("Zn6N"),C=t("7o9V"),F=t("h8DJ"),V=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["app-multi-input-header"]],decls:7,vars:0,consts:[["module","MultiInputModule"]],template:function(e,n){1&e&&(x.Rb(0,"header"),x.Rc(1,"Multi Input"),x.Qb(),x.Rb(2,"description"),x.Rc(3," Input field with multiple selection enabled. Should be used when a user can select between a limited number of pre-defined options with a filter-enabled context.\n"),x.Qb(),x.Mb(4,"import",0),x.Mb(5,"fd-header-tabs"),x.Mb(6,"router-outlet"))},directives:[v.a,S.a,C.a,F.a,M.g],styles:[""]}),e}(),A="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange']\"\n    [placeholder]=\"'Search here...'\"\n    [(ngModel)]=\"selected\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n\n<br /><br />\n\n<label fd-label for=\"disabledMultiInput1\">Disabled Multi Input</label>\n<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    [disabled]=\"true\"\n    id=\"disabledMultiInput1\"\n    [(ngModel)]=\"secondSelected\"\n></fd-multi-input>\n\nSelected: [{{ secondSelected.toLocaleString() }}]\n\n<br /><br />\n\n<label fd-label for=\"noAddonMultiInput1\">Hidden Addon Button</label>\n<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    id=\"noAddonMultiInput1\"\n    [(ngModel)]=\"thirdSelected\"\n    [displayAddonButton]=\"false\"\n></fd-multi-input>\n\nSelected: [{{ thirdSelected.toLocaleString() }}]\n",I="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-example',\n    templateUrl: './multi-input-example.component.html'\n})\nexport class MultiInputExampleComponent {\n    selected = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry'];\n    secondSelected = ['Pineapple'];\n    thirdSelected = ['Kiwi'];\n}\n",Q='<fd-multi-input\n    [dropdownValues]="values"\n    [placeholder]="\'Search here...\'"\n    [(ngModel)]="selected"\n    [displayFn]="displayFunc"\n></fd-multi-input>\n\nSelected: [<span *ngFor="let item of selected; let i = index">{{\n    i === selected.length - 1 ? item.name : item.name + \',\'\n}}</span\n>]\n',T="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-displaywith-example',\n    templateUrl: './multi-input-displaywith-example.component.html'\n})\nexport class MultiInputDisplaywithExampleComponent {\n    values = [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Pineapple' },\n        { name: 'Tomato' },\n        { name: 'Kiwi' },\n        { name: 'Strawberry' },\n        { name: 'Blueberry' },\n        { name: 'Orange' }\n    ];\n\n    selected = [];\n\n    displayFunc(obj: any): string {\n        return obj.name.toLocaleUpperCase();\n    }\n}\n",B="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n    [placeholder]=\"'Search here...'\"\n    [(ngModel)]=\"selected\"\n    [filterFn]=\"customFilter\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n",N="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-filter-example',\n    templateUrl: './multi-input-filter-example.component.html'\n})\nexport class MultiInputFilterExampleComponent {\n    selected = [];\n\n    customFilter(content: any[], searchTerm: string): any[] {\n        if (!searchTerm) {\n            return content;\n        }\n        const search = searchTerm.toLocaleLowerCase();\n        return content.filter((item) => item.toLocaleLowerCase().startsWith(search));\n    }\n}\n",k='<fd-multi-input\n    [dropdownValues]="dropdownValues | async"\n    [placeholder]="\'Search here...\'"\n    [(ngModel)]="selected"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n',P="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'fd-multi-input-async-example',\n    templateUrl: './multi-input-async-example.component.html'\n})\nexport class MultiInputAsyncExampleComponent implements OnInit {\n    selected = [];\n\n    dropdownValues;\n\n    getDropdownValues(): Observable<string[]> {\n        return this.http.get<string[]>('./assets/multi-input-values.json');\n    }\n\n    constructor(private http: HttpClient) {}\n\n    ngOnInit(): void {\n        this.dropdownValues = this.getDropdownValues();\n    }\n}\n",O="<fd-multi-input\n    [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange']\"\n    [placeholder]=\"'Search here...'\"\n    [compact]=\"true\"\n    [(ngModel)]=\"selected\"\n></fd-multi-input>\n\nSelected: [{{ selected.toLocaleString() }}]\n",L="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-compact-example',\n    templateUrl: './multi-input-compact-example.component.html'\n})\nexport class MultiInputCompactExampleComponent {\n    selected = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange'];\n}\n",j="<form [formGroup]=\"customForm\">\n    <fieldset fd-fieldset>\n        <div fd-form-item>\n            <label fd-form-label>Valid Multi Input</label>\n            <fd-multi-input\n                [state]=\"isValid() ? 'success' : 'error'\"\n                formControlName=\"selectedValues\"\n                [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n                [placeholder]=\"'Search Here...'\"\n            >\n            </fd-multi-input>\n        </div>\n        <div fd-form-item>\n            <label fd-form-label>Disabled Multi Input</label>\n            <fd-multi-input\n                formControlName=\"disabledSelectedValues\"\n                [dropdownValues]=\"['Apple', 'Banana', 'Pineapple', 'Tomato']\"\n                [placeholder]=\"'Search Here...'\"\n                [state]=\"'information'\"\n            >\n            </fd-multi-input>\n        </div>\n    </fieldset>\n</form>\n\nSelected Values:\n<span *ngIf=\"customForm.controls.selectedValues.value\">\n    {{ customForm.controls.selectedValues.value | json }}\n</span>\n\nSelected Values:\n<span *ngIf=\"customForm.controls.disabledSelectedValues.value\">\n    {{ customForm.controls.disabledSelectedValues.value | json }}\n</span>\n",E="import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'fd-multi-input-form-example',\n    templateUrl: './multi-input-form-example.component.html'\n})\nexport class MultiInputFormExampleComponent {\n    customForm = new FormGroup({\n        selectedValues: new FormControl({ value: ['Apple', 'Banana'], disabled: false }),\n        disabledSelectedValues: new FormControl({ value: ['Pineapple', 'Tomato'], disabled: true })\n    });\n\n    isValid(): boolean {\n        return this.customForm.get('selectedValues').value && this.customForm.get('selectedValues').value.length > 0;\n    }\n}\n",K='<fd-multi-input\n    [dropdownValues]="values"\n    [allowNewTokens]="true"\n    [displayFn]="displayFunc"\n    [newTokenParseFn]="parseFunc"\n    [(ngModel)]="selected"\n></fd-multi-input>\n\nSelected: [<span *ngFor="let item of selected; let i = index">{{\n    i === selected.length - 1 ? item.name : item.name + \',\'\n}}</span\n>]\n',D="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-multi-input-new-tokens-example',\n    templateUrl: './multi-input-new-tokens-example.component.html'\n})\nexport class MultiInputNewTokensExampleComponent {\n    values = [\n        { name: 'Apple' },\n        { name: 'Banana' },\n        { name: 'Pineapple' },\n        { name: 'Tomato' },\n        { name: 'Kiwi' },\n        { name: 'Strawberry' },\n        { name: 'Blueberry' },\n        { name: 'Orange' }\n    ];\n\n    selected = [];\n\n    displayFunc(obj: any): string {\n        return obj.name;\n    }\n\n    parseFunc(value: string): object {\n        if (value && value.length) {\n            return { name: value };\n        }\n    }\n}\n",J='<label fd-form-label>Mobile Mode Multi Input</label>\n<fd-multi-input [mobile]="true"\n                [dropdownValues]="values"\n                [showAllButton]="false"\n                placeholder="Search here..."\n                [mobileConfig]="secondConfig"\n                [(ngModel)]="selectedValues"\n></fd-multi-input>\n',U="import { Component } from '@angular/core';\nimport { DialogConfig, MobileModeConfig } from '@fundamental-ngx/core';\n\n@Component({\n    selector: 'fd-multi-input-mobile-example',\n    templateUrl: './multi-input-mobile-example.component.html'\n})\nexport class MultiInputMobileExampleComponent {\n    selectedValues: any[] = [];\n\n    secondConfig: MobileModeConfig = {\n        approveButtonText: 'Approve',\n        cancelButtonText: 'Cancel',\n        hasCloseButton: true,\n        dialogConfig: {\n            ariaLabel: 'Select fruits dialog'\n        }\n    };\n\n    values: any[] = ['Apple', 'Banana', 'Pineapple', 'Tomato', 'Kiwi', 'Strawberry', 'Blueberry', 'Orange'];\n}\n",H=t("9Cr2"),G=t("dB5E"),z=t("usa9"),W=t("nIj0"),Y=function(){return["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]},$=function(){return["Apple","Banana","Pineapple","Tomato"]},_=function(){function e(){this.selected=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry"],this.secondSelected=["Pineapple"],this.thirdSelected=["Kiwi"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-example"]],decls:14,vars:17,consts:[[3,"dropdownValues","placeholder","ngModel","ngModelChange"],["fd-label","","for","disabledMultiInput1"],["id","disabledMultiInput1",3,"dropdownValues","placeholder","disabled","ngModel","ngModelChange"],["fd-label","","for","noAddonMultiInput1"],["id","noAddonMultiInput1",3,"dropdownValues","placeholder","ngModel","displayAddonButton","ngModelChange"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.Qb(),x.Rc(1),x.Mb(2,"br"),x.Mb(3,"br"),x.Rb(4,"label",1),x.Rc(5,"Disabled Multi Input"),x.Qb(),x.Rb(6,"fd-multi-input",2),x.dc("ngModelChange",(function(e){return n.secondSelected=e})),x.Qb(),x.Rc(7),x.Mb(8,"br"),x.Mb(9,"br"),x.Rb(10,"label",3),x.Rc(11,"Hidden Addon Button"),x.Qb(),x.Rb(12,"fd-multi-input",4),x.dc("ngModelChange",(function(e){return n.thirdSelected=e})),x.Qb(),x.Rc(13)),2&e&&(x.pc("dropdownValues",x.tc(14,Y))("placeholder","Search here...")("ngModel",n.selected),x.Ab(1),x.Tc(" Selected: [",n.selected.toLocaleString(),"] "),x.Ab(5),x.pc("dropdownValues",x.tc(15,$))("placeholder","Search here...")("disabled",!0)("ngModel",n.secondSelected),x.Ab(1),x.Tc(" Selected: [",n.secondSelected.toLocaleString(),"] "),x.Ab(5),x.pc("dropdownValues",x.tc(16,$))("placeholder","Search here...")("ngModel",n.thirdSelected)("displayAddonButton",!1),x.Ab(1),x.Tc(" Selected: [",n.thirdSelected.toLocaleString(),"]\n"))},directives:[z.a,W.t,W.w],encapsulation:2}),e}(),q=t("gJWE"),X=t("ekBi"),Z=function(){return["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]},ee=function(){function e(){this.selected=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-compact-example"]],decls:2,vars:6,consts:[[3,"dropdownValues","placeholder","compact","ngModel","ngModelChange"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.Qb(),x.Rc(1)),2&e&&(x.pc("dropdownValues",x.tc(5,Z))("placeholder","Search here...")("compact",!0)("ngModel",n.selected),x.Ab(1),x.Tc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[z.a,W.t,W.w],encapsulation:2}),e}(),ne=t("LTOS"),te=t("aNX7"),le=function(){function e(){this.selectedValues=[],this.secondConfig={approveButtonText:"Approve",cancelButtonText:"Cancel",hasCloseButton:!0,dialogConfig:{ariaLabel:"Select fruits dialog"}},this.values=["Apple","Banana","Pineapple","Tomato","Kiwi","Strawberry","Blueberry","Orange"]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-mobile-example"]],decls:3,vars:5,consts:[["fd-form-label",""],["placeholder","Search here...",3,"mobile","dropdownValues","showAllButton","mobileConfig","ngModel","ngModelChange"]],template:function(e,n){1&e&&(x.Rb(0,"label",0),x.Rc(1,"Mobile Mode Multi Input"),x.Qb(),x.Rb(2,"fd-multi-input",1),x.dc("ngModelChange",(function(e){return n.selectedValues=e})),x.Qb()),2&e&&(x.Ab(2),x.pc("mobile",!0)("dropdownValues",n.values)("showAllButton",!1)("mobileConfig",n.secondConfig)("ngModel",n.selectedValues))},directives:[te.a,z.a,W.t,W.w],encapsulation:2}),e}(),oe=t("2kYt");function ae(e,n){if(1&e&&(x.Rb(0,"span"),x.Rc(1),x.Qb()),2&e){var t=n.$implicit,l=n.index,o=x.hc();x.Ab(1),x.Sc(l===o.selected.length-1?t.name:t.name+",")}}var ie=function(){function e(){this.values=[{name:"Apple"},{name:"Banana"},{name:"Pineapple"},{name:"Tomato"},{name:"Kiwi"},{name:"Strawberry"},{name:"Blueberry"},{name:"Orange"}],this.selected=[]}return e.prototype.displayFunc=function(e){return e.name.toLocaleUpperCase()},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-displaywith-example"]],decls:4,vars:5,consts:[[3,"dropdownValues","placeholder","ngModel","displayFn","ngModelChange"],[4,"ngFor","ngForOf"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.Qb(),x.Rc(1," Selected: ["),x.Pc(2,ae,2,1,"span",1),x.Rc(3,"]\n")),2&e&&(x.pc("dropdownValues",n.values)("placeholder","Search here...")("ngModel",n.selected)("displayFn",n.displayFunc),x.Ab(2),x.pc("ngForOf",n.selected))},directives:[z.a,W.t,W.w,oe.s],encapsulation:2}),e}(),re=function(){return["Apple","Banana","Pineapple","Tomato"]},pe=function(){function e(){this.selected=[]}return e.prototype.customFilter=function(e,n){if(!n)return e;var t=n.toLocaleLowerCase();return e.filter((function(e){return e.toLocaleLowerCase().startsWith(t)}))},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-filter-example"]],decls:2,vars:6,consts:[[3,"dropdownValues","placeholder","ngModel","filterFn","ngModelChange"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.Qb(),x.Rc(1)),2&e&&(x.pc("dropdownValues",x.tc(5,re))("placeholder","Search here...")("ngModel",n.selected)("filterFn",n.customFilter),x.Ab(1),x.Tc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[z.a,W.t,W.w],encapsulation:2}),e}(),ce=t("vobO"),ue=function(){function e(e){this.http=e,this.selected=[]}return e.prototype.getDropdownValues=function(){return this.http.get("./assets/multi-input-values.json")},e.prototype.ngOnInit=function(){this.dropdownValues=this.getDropdownValues()},e.\u0275fac=function(n){return new(n||e)(x.Lb(ce.a))},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-async-example"]],decls:3,vars:6,consts:[[3,"dropdownValues","placeholder","ngModel","ngModelChange"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.ic(1,"async"),x.Qb(),x.Rc(2)),2&e&&(x.pc("dropdownValues",x.jc(1,4,n.dropdownValues))("placeholder","Search here...")("ngModel",n.selected),x.Ab(2),x.Tc(" Selected: [",n.selected.toLocaleString(),"]\n"))},directives:[z.a,W.t,W.w],pipes:[oe.b],encapsulation:2}),e}(),de=t("OJJ1"),se=t("QkpV");function me(e,n){if(1&e&&(x.Rb(0,"span"),x.Rc(1),x.ic(2,"json"),x.Qb()),2&e){var t=x.hc();x.Ab(1),x.Tc(" ",x.jc(2,1,t.customForm.controls.selectedValues.value),"\n")}}function be(e,n){if(1&e&&(x.Rb(0,"span"),x.Rc(1),x.ic(2,"json"),x.Qb()),2&e){var t=x.hc();x.Ab(1),x.Tc(" ",x.jc(2,1,t.customForm.controls.disabledSelectedValues.value),"\n")}}var fe=function(){return["Apple","Banana","Pineapple","Tomato"]},he=function(){function e(){this.customForm=new W.k({selectedValues:new W.h({value:["Apple","Banana"],disabled:!1}),disabledSelectedValues:new W.h({value:["Pineapple","Tomato"],disabled:!0})})}return e.prototype.isValid=function(){return this.customForm.get("selectedValues").value&&this.customForm.get("selectedValues").value.length>0},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-form-example"]],decls:14,vars:11,consts:[[3,"formGroup"],["fd-fieldset",""],["fd-form-item",""],["fd-form-label",""],["formControlName","selectedValues",3,"state","dropdownValues","placeholder"],["formControlName","disabledSelectedValues",3,"dropdownValues","placeholder","state"],[4,"ngIf"]],template:function(e,n){1&e&&(x.Rb(0,"form",0),x.Rb(1,"fieldset",1),x.Rb(2,"div",2),x.Rb(3,"label",3),x.Rc(4,"Valid Multi Input"),x.Qb(),x.Mb(5,"fd-multi-input",4),x.Qb(),x.Rb(6,"div",2),x.Rb(7,"label",3),x.Rc(8,"Disabled Multi Input"),x.Qb(),x.Mb(9,"fd-multi-input",5),x.Qb(),x.Qb(),x.Qb(),x.Rc(10," Selected Values:\n"),x.Pc(11,me,3,3,"span",6),x.Rc(12," Selected Values:\n"),x.Pc(13,be,3,3,"span",6)),2&e&&(x.pc("formGroup",n.customForm),x.Ab(5),x.pc("state",n.isValid()?"success":"error")("dropdownValues",x.tc(9,fe))("placeholder","Search Here..."),x.Ab(4),x.pc("dropdownValues",x.tc(10,fe))("placeholder","Search Here...")("state","information"),x.Ab(2),x.pc("ngIf",n.customForm.controls.selectedValues.value),x.Ab(2),x.pc("ngIf",n.customForm.controls.disabledSelectedValues.value))},directives:[W.J,W.u,W.l,de.a,se.a,te.a,z.a,W.t,W.j,oe.t],pipes:[oe.k],encapsulation:2}),e}();function ge(e,n){if(1&e&&(x.Rb(0,"span"),x.Rc(1),x.Qb()),2&e){var t=n.$implicit,l=n.index,o=x.hc();x.Ab(1),x.Sc(l===o.selected.length-1?t.name:t.name+",")}}var we=function(){function e(){this.values=[{name:"Apple"},{name:"Banana"},{name:"Pineapple"},{name:"Tomato"},{name:"Kiwi"},{name:"Strawberry"},{name:"Blueberry"},{name:"Orange"}],this.selected=[]}return e.prototype.displayFunc=function(e){return e.name},e.prototype.parseFunc=function(e){if(e&&e.length)return{name:e}},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["fd-multi-input-new-tokens-example"]],decls:4,vars:6,consts:[[3,"dropdownValues","allowNewTokens","displayFn","newTokenParseFn","ngModel","ngModelChange"],[4,"ngFor","ngForOf"]],template:function(e,n){1&e&&(x.Rb(0,"fd-multi-input",0),x.dc("ngModelChange",(function(e){return n.selected=e})),x.Qb(),x.Rc(1," Selected: ["),x.Pc(2,ge,2,1,"span",1),x.Rc(3,"]\n")),2&e&&(x.pc("dropdownValues",n.values)("allowNewTokens",!0)("displayFn",n.displayFunc)("newTokenParseFn",n.parseFunc)("ngModel",n.selected),x.Ab(2),x.pc("ngForOf",n.selected))},directives:[z.a,W.t,W.w,oe.s],encapsulation:2}),e}(),Me=function(){return["/core/global-config"]},ye=function(){function e(){this.multiInputBasic=[{language:"html",code:l,fileName:"multi-input-example"},{language:"typescript",component:"MultiInputExampleComponent",code:o,fileName:"multi-input-example"}],this.display=[{language:"html",code:a,fileName:"multi-input-displaywith-example"},{language:"typescript",component:"MultiInputDisplaywithExampleComponent",code:i,fileName:"multi-input-displaywith-example"}],this.filter=[{language:"html",code:r,fileName:"multi-input-filter-example"},{language:"typescript",component:"MultiInputFilterExampleComponent",code:p,fileName:"multi-input-filter-example"}],this.async=[{language:"html",code:c,fileName:"multi-input-async-example"},{language:"typescript",component:"MultiInputAsyncExampleComponent",code:u,fileName:"multi-input-async-example"}],this.compact=[{language:"html",code:d,fileName:"multi-input-compact-example"},{language:"typescript",component:"MultiInputCompactExampleComponent",code:s,fileName:"multi-input-compact-example"}],this.form=[{language:"html",code:m,fileName:"multi-input-form-example"},{language:"typescript",component:"MultiInputFormExampleComponent",code:b,fileName:"multi-input-form-example"}],this.mobile=[{language:"html",code:g,fileName:"multi-input-mobile-example"},{language:"typescript",component:"MultiInputMobileExampleComponent",code:w,fileName:"multi-input-mobile-example"}],this.newTokens=[{language:"html",code:f,fileName:"multi-input-new-tokens-example"},{language:"typescript",component:"MultiInputNewTokensExampleComponent",code:h,fileName:"multi-input-new-tokens-example"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=x.Fb({type:e,selectors:[["app-multi-input-docs"]],decls:109,vars:26,consts:[[3,"id","componentName"],[3,"exampleFiles"],["fragment","mobile-mode-config",3,"routerLink"]],template:function(e,n){1&e&&(x.Rb(0,"fd-docs-section-title",0),x.Rc(1," Simple Multi Input\n"),x.Qb(),x.Rb(2,"description"),x.Rc(3," The standard version of the component that most people will use regularly. Width of the input can be controlled simply through the top-level component element sizing. Overflowing tokens can be reviewed by swiping the tokens left and right.\n"),x.Qb(),x.Rb(4,"component-example"),x.Mb(5,"fd-multi-input-example"),x.Qb(),x.Mb(6,"code-example",1),x.Mb(7,"separator"),x.Rb(8,"fd-docs-section-title",0),x.Rc(9," Compact Multi Input\n"),x.Qb(),x.Rb(10,"description"),x.Rc(11," The compact Multi Input is for large screens. The user can review tokens by pressing the right or left arrows on the keyboard.\n"),x.Qb(),x.Rb(12,"component-example"),x.Mb(13,"fd-multi-input-compact-example"),x.Qb(),x.Mb(14,"code-example",1),x.Mb(15,"separator"),x.Rb(16,"fd-docs-section-title",0),x.Rc(17," Mobile Mode Multi Input\n"),x.Qb(),x.Rb(18,"description"),x.Rc(19," To use Multi Input in mobile mode: "),x.Rb(20,"ul"),x.Rb(21,"li"),x.Rc(22,"import "),x.Rb(23,"code"),x.Rc(24,"MultiInputMobileModule"),x.Qb(),x.Qb(),x.Rb(25,"li"),x.Rc(26,"Set "),x.Rb(27,"code"),x.Rc(28,"[mobile]"),x.Qb(),x.Rc(29," property to true"),x.Qb(),x.Rb(30,"li"),x.Rc(31,"Set "),x.Rb(32,"code"),x.Rc(33,"[mobileConfig]"),x.Qb(),x.Rc(34," with "),x.Rb(35,"code"),x.Rc(36,"MobileModeConfig"),x.Qb(),x.Rc(37," configuration object to customize the look of the control "),x.Qb(),x.Qb(),x.Rc(38," Multi Input Mobile Mode can be configured "),x.Rb(39,"strong"),x.Rc(40,"globally"),x.Qb(),x.Rc(41," by providing "),x.Rb(42,"code"),x.Rc(43,"MOBILE_MODE_CONFIG"),x.Qb(),x.Rc(44," token. Check "),x.Rb(45,"a",2),x.Rc(46,"Global Configuration page"),x.Qb(),x.Rc(47," for more information.\n"),x.Qb(),x.Rb(48,"component-example"),x.Mb(49,"fd-multi-input-mobile-example"),x.Qb(),x.Mb(50,"code-example",1),x.Mb(51,"separator"),x.Rb(52,"fd-docs-section-title",0),x.Rc(53," Display Object Property\n"),x.Qb(),x.Rb(54,"description"),x.Rc(55," The input supports objects through the "),x.Rb(56,"code"),x.Rc(57,"displayFn"),x.Qb(),x.Rc(58," input. The way the object is displayed to the user is fully customizable through providing a function that accepts the object and returns the string to be displayed. The example below shows displaying an object field in full uppercase.\n"),x.Qb(),x.Rb(59,"component-example"),x.Mb(60,"fd-multi-input-displaywith-example"),x.Qb(),x.Mb(61,"code-example",1),x.Mb(62,"separator"),x.Rb(63,"fd-docs-section-title",0),x.Rc(64," Custom Filter\n"),x.Qb(),x.Rb(65,"description"),x.Rc(66," The input supports custom filters through the "),x.Rb(67,"code"),x.Rc(68,"filterFn"),x.Qb(),x.Rc(69," input function. Simply pass a function which accepts an array and a search term, and then returns the desired filtered array.\n"),x.Qb(),x.Rb(70,"component-example"),x.Mb(71,"fd-multi-input-filter-example"),x.Qb(),x.Mb(72,"code-example",1),x.Mb(73,"separator"),x.Rb(74,"fd-docs-section-title",0),x.Rc(75," Observable Async Example\n"),x.Qb(),x.Rb(76,"description"),x.Rc(77," The "),x.Rb(78,"code"),x.Rc(79,"dropdownValues"),x.Qb(),x.Rc(80," input can accept an Observable with the async pipe, which could be useful for autocomplete.\n"),x.Qb(),x.Rb(81,"component-example"),x.Mb(82,"fd-multi-input-async-example"),x.Qb(),x.Mb(83,"code-example",1),x.Mb(84,"separator"),x.Rb(85,"fd-docs-section-title",0),x.Rc(86," Multi Input in Reactive Form\n"),x.Qb(),x.Rb(87,"description"),x.Rc(88,"The multi-input component may also be used within an angular reactive form."),x.Qb(),x.Rb(89,"component-example"),x.Mb(90,"fd-multi-input-form-example"),x.Qb(),x.Mb(91,"code-example",1),x.Mb(92,"separator"),x.Rb(93,"fd-docs-section-title",0),x.Rc(94," Adding New Tokens\n"),x.Qb(),x.Rb(95,"description"),x.Rc(96," Set "),x.Rb(97,"code"),x.Rc(98,"[allowNewTokens]"),x.Qb(),x.Rc(99,' to "true" to allow the creation of new tokens in the multi-input. Note that if you are populating the multi-input with objects and using a custom '),x.Rb(100,"code"),x.Rc(101,"displayFn"),x.Qb(),x.Rc(102,", you will also need to implement your own "),x.Rb(103,"code"),x.Rc(104,"newTokenParseFn"),x.Qb(),x.Rc(105," so your multi-input knows how to format a new object. This function is not required if your collection is simply an array of strings.\n"),x.Qb(),x.Rb(106,"component-example"),x.Mb(107,"fd-multi-input-new-tokens-example"),x.Qb(),x.Mb(108,"code-example",1)),2&e&&(x.pc("id","simpleMultiInput")("componentName","multi-input"),x.Ab(6),x.pc("exampleFiles",n.multiInputBasic),x.Ab(2),x.pc("id","compactMultiInput")("componentName","multi-input"),x.Ab(6),x.pc("exampleFiles",n.compact),x.Ab(2),x.pc("id","mobileMultiInput")("componentName","multi-input"),x.Ab(29),x.pc("routerLink",x.tc(25,Me)),x.Ab(5),x.pc("exampleFiles",n.mobile),x.Ab(2),x.pc("id","displayObjectProperty")("componentName","multi-input"),x.Ab(9),x.pc("exampleFiles",n.display),x.Ab(2),x.pc("id","customFilter")("componentName","multi-input"),x.Ab(9),x.pc("exampleFiles",n.filter),x.Ab(2),x.pc("id","observableAsyncExample")("componentName","multi-input"),x.Ab(9),x.pc("exampleFiles",n.async),x.Ab(2),x.pc("id","reactiveForm")("componentName","multi-input"),x.Ab(6),x.pc("exampleFiles",n.form),x.Ab(2),x.pc("id","newTokens")("componentName","multi-input"),x.Ab(15),x.pc("exampleFiles",n.newTokens))},directives:[H.a,S.a,G.a,_,q.a,X.a,ee,M.e,le,ie,pe,ue,he,we],styles:[""]}),e}(),Re=t("MOJJ"),xe=[{path:"",component:V,children:[{path:"",component:ye},{path:"api",component:y.a,data:{content:R.a.multiInput}}]}],ve=function(){function e(){}return e.\u0275mod=x.Jb({type:e}),e.\u0275inj=x.Ib({factory:function(n){return new(n||e)},imports:[[M.f.forChild(xe),Re.a,ne.FormModule,ne.MultiInputModule,ne.MultiInputMobileModule],M.f]}),e}()}}]);