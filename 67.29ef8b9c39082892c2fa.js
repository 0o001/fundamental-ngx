(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{"0krV":function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var o=t("EM62"),i=t("vobO"),a=t("sEIs"),r=function(){function e(e,n){this.httpClient=e,this.router=n,this.BASE_URL="assets/typedoc/"}return e.prototype.getComponentHtml=function(e){var n=/(\/[^\/\s]+\/)/.exec(this.router.url)[0];return e=e.toLocaleLowerCase()+".html",this.httpClient.get(null!==n?this.BASE_URL+n+"classes/"+e:this.BASE_URL+"/core/classes/"+e,{responseType:"text"})},e.\u0275fac=function(n){return new(n||e)(o.ac(i.a),o.ac(a.c))},e.\u0275prov=o.Hb({token:e,factory:e.\u0275fac}),e}()},"7o9V":function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var o=t("EM62"),i=function(){function e(e){switch(this.currentLib=e,this.currentLib){case"core":this.library="@fundamental-ngx/core";break;case"platform":this.library="@fundamental-ngx/platform"}}return e.\u0275fac=function(n){return new(n||e)(o.Lb("CURRENT_LIB"))},e.\u0275cmp=o.Fb({type:e,selectors:[["import"]],inputs:{module:"module"},decls:9,vars:2,consts:[[2,"color","rgb(0, 0, 136)"],[2,"color","rgb(0, 136, 0)"]],template:function(e,n){1&e&&(o.Rb(0,"code"),o.Rb(1,"span",0),o.Pc(2,"import"),o.Qb(),o.Pc(3),o.Rb(4,"span",0),o.Pc(5,"from "),o.Qb(),o.Rb(6,"span",1),o.Pc(7),o.Qb(),o.Pc(8,"; "),o.Qb()),2&e&&(o.Ab(3),o.Rc(" { ",n.module," } "),o.Ab(4),o.Rc("'",n.library,"'"))},encapsulation:2}),e}()},MOJJ:function(e,n,t){"use strict";t.d(n,"a",(function(){return s}));var o=t("2kYt"),i=t("nIj0"),a=t("DgXe"),r=t("6wld"),c=t("0krV"),l=t("Uduu"),b=t("LTOS"),d=[b.TabsModule,b.MenuModule,b.IconModule,b.SwitchModule,b.ButtonModule,b.MessageStripModule,b.FormLabelModule,b.LinkModule],f=t("sEIs"),u=t("EM62"),s=function(){function e(){}return e.\u0275mod=u.Jb({type:e}),e.\u0275inj=u.Ib({factory:function(n){return new(n||e)},providers:[r.a,c.a],imports:[[i.n,o.c,f.f,l.a,d,a.b.forChild()],i.n,i.D,l.a,o.c,b.TabsModule,b.MenuModule,b.IconModule,b.SwitchModule,b.ButtonModule,b.MessageStripModule,b.FormLabelModule,b.LinkModule]}),e}()},"P+xO":function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var o=t("EM62"),i=["*"],a=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["header"]],ngContentSelectors:i,decls:2,vars:0,consts:[[1,"header"]],template:function(e,n){1&e&&(o.oc(),o.Rb(0,"h1",0),o.nc(1),o.Qb())},styles:[".header[_ngcontent-%COMP%] {\n                margin-top: 2rem;\n                font-size: 2.2rem;\n            }"]}),e}()},eCHz:function(e,n,t){"use strict";t.d(n,"a",(function(){return g}));var o=t("0krV"),i=(t("LTOS"),t("EM62")),a=t("sEIs"),r=t("2kYt"),c=t("4C0c"),l=t("0b/r"),b=t("LyOV"),d=t("pmyj"),f=t("CE3v"),u=t("zege"),s=["menu"];function p(e,n){if(1&e&&i.Mb(0,"button",8),2&e){var t=i.hc(),o=i.Ac(6);i.pc("label","Select a file ("+t.files.length+")")("fdMenu",!0)("fdMenuTrigger",o)}}var m=function(e){return{"is-selected":e}};function h(e,n){if(1&e){var t=i.Sb();i.Rb(0,"li",9),i.dc("click",(function(){i.Dc(t);var e=n.$implicit;return i.hc().getFile(e)})),i.Rb(1,"div",10),i.Rb(2,"span",11),i.Pc(3),i.Qb(),i.Qb(),i.Qb()}if(2&e){var o=n.$implicit,a=i.hc();i.pc("ngClass",i.tc(2,m,o===a.activeFile)),i.Ab(3),i.Qc(o)}}var g=function(){function e(e,n){this.route=e,this.apiService=n}return e.prototype.ngOnInit=function(){this.route.snapshot.data&&(this.files=this.route.snapshot.data.content),this.files&&this.files.length>0?(this.files.sort(),this.getFile(this.files[0]),this.activeFile=this.files[0]):this.result="<h2>No API files found.</h2>"},e.prototype.getFile=function(e){var n=this;this.apiService.getComponentHtml(e).subscribe((function(t){n.result=t,n.activeFile=e,n.menu.close()}),(function(n){console.warn("Did not find file "+e+".\nError: "+n)}))},e.\u0275fac=function(n){return new(n||e)(i.Lb(a.a),i.Lb(o.a))},e.\u0275cmp=i.Fb({type:e,selectors:[["fd-api"]],viewQuery:function(e,n){var t;1&e&&i.Uc(s,!0),2&e&&i.zc(t=i.ec())&&(n.menu=t.first)},decls:9,vars:5,consts:[[1,"api-main-container"],[1,"api-main-header"],[2,"display","flex","flex-grow","1"],["fd-button","",3,"label","fdMenu","fdMenuTrigger",4,"ngIf"],["placement","bottom-start",3,"fillControlMode"],["menu",""],["fd-menu-item","",3,"ngClass","click",4,"ngFor","ngForOf"],[3,"innerHTML"],["fd-button","",3,"label","fdMenu","fdMenuTrigger"],["fd-menu-item","",3,"ngClass","click"],["fd-menu-interactive",""],["fd-menu-title",""]],template:function(e,n){1&e&&(i.Rb(0,"div",0),i.Rb(1,"h2",1),i.Pc(2),i.Qb(),i.Mb(3,"span",2),i.Nc(4,p,1,3,"button",3),i.Rb(5,"fd-menu",4,5),i.Nc(7,h,4,4,"li",6),i.Qb(),i.Qb(),i.Mb(8,"div",7)),2&e&&(i.Ab(2),i.Qc(n.activeFile),i.Ab(2),i.pc("ngIf",n.files.length>1),i.Ab(1),i.pc("fillControlMode",null),i.Ab(2),i.pc("ngForOf",n.files),i.Ab(1),i.pc("innerHTML",n.result,i.Ec))},directives:[r.u,c.a,r.t,l.a,b.a,d.a,r.r,f.a,u.a],styles:[".api-main-header[_ngcontent-%COMP%]{margin:0;font-weight:700;text-rendering:optimizeLegibility}.api-main-container[_ngcontent-%COMP%]{margin-top:2em;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap}fd-popover[_ngcontent-%COMP%]     .fd-button{margin-right:0}"]}),e}()},h8DJ:function(e,n,t){"use strict";t.d(n,"a",(function(){return f}));var o=t("EM62"),i=t("Rb7q"),a=t("Nyd4"),r=t("sEIs"),c=t("34dh"),l=t("JSov"),b=t("ekBi"),d=function(){return{exact:!0}},f=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["fd-header-tabs"]],decls:12,vars:4,consts:[["fd-tab-nav",""],["fd-tab-item",""],["fd-tab-link","","routerLink","./","routerLinkActive","",3,"active","routerLinkActiveOptions"],["rla1","routerLinkActive"],["fd-tab-tag",""],["fd-tab-link","","routerLink","./api","routerLinkActive","",3,"active"],["rla2","routerLinkActive"],[2,"margin-top","0"]],template:function(e,n){if(1&e&&(o.Rb(0,"ul",0),o.Rb(1,"li",1),o.Rb(2,"a",2,3),o.Rb(4,"span",4),o.Pc(5,"Examples"),o.Qb(),o.Qb(),o.Qb(),o.Rb(6,"li",1),o.Rb(7,"a",5,6),o.Rb(9,"span",4),o.Pc(10,"API"),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Mb(11,"separator",7)),2&e){var t=o.Ac(3),i=o.Ac(8);o.Ab(2),o.pc("active",t.isActive)("routerLinkActiveOptions",o.sc(3,d)),o.Ab(5),o.pc("active",i.isActive)}},directives:[i.a,a.a,r.e,c.a,r.d,l.j,b.a],styles:["[_nghost-%COMP%]{display:block}.fd-tabs[_ngcontent-%COMP%]{margin-bottom:0;margin-top:24px}.fd-tabs__item[_ngcontent-%COMP%]{padding:0;margin-right:24px}.fd-tabs__link[_ngcontent-%COMP%]{min-width:60px;padding-right:12px;padding-left:12px;text-align:center}"]}),e}()},qOWU:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var o={actionbar:["actionbarcomponent"],button:["ButtonComponent"],checkbox:["CheckboxComponent"],checkboxGroup:["CheckboxGroupComponent"],infoLabel:["InfoLabelComponent"],input:["InputComponent"],link:["LinkComponent"],menu:["MenuComponent","MenuItemComponent","MenuTriggerDirective"],menuButton:["MenuButtonComponent"],objectStatus:["ObjectStatusComponent"],radioGroup:["RadioGroupComponent"],searchField:["SearchFieldComponent"],select:["SelectPlatformComponent"],splitMenuButton:["SplitMenuButtonComponent"],textarea:["TextAreaComponent"],panel:["PlatformPanelComponent","PlatformPanelContentComponent","PlatformPanelActionsComponent","PlatformPanelConfig"],switch:["SwitchComponent"],stepInput:["NumberStepInputComponent","StepInputComponent","StepInputConfig"],inputGroup:["InputGroupConfig","InputGroupComponent","InputGroupAddonComponent","InputGroupInputComponent"],combobox:["ComboboxComponent","BaseCombobox","ComboboxConfig"],list:["ListComponent","StandardListItemComponent","ListFooter","ListGroupHeader","ListConfig"],standardlistitem:["ListComponent","StandardListItemComponent","ListFooter","ListGroupHeader","ListConfig"],thumbnail:["ThumbnailComponent"]}},sUgf:function(e,n,t){"use strict";t.r(n),t.d(n,"CheckboxDocsModule",(function(){return se}));var o={};t.r(o),t.d(o,"default",(function(){return C}));var i={};t.r(i),t.d(i,"default",(function(){return v}));var a={};t.r(a),t.d(a,"default",(function(){return y}));var r={};t.r(r),t.d(r,"default",(function(){return x}));var c={};t.r(c),t.d(c,"default",(function(){return A}));var l={};t.r(l),t.d(l,"default",(function(){return R}));var b={};t.r(b),t.d(b,"default",(function(){return M}));var d={};t.r(d),t.d(d,"default",(function(){return F}));var f={};t.r(f),t.d(f,"default",(function(){return Q}));var u={};t.r(u),t.d(u,"default",(function(){return w}));var s={};t.r(s),t.d(s,"default",(function(){return L}));var p={};t.r(p),t.d(p,"default",(function(){return P}));var m=t("sEIs"),h=t("eCHz"),g=t("qOWU"),k=t("MOJJ"),C='<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'sirius\'" [label]="\'Sirius\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'sirius-cb\'" [value]="\'sirius\'" title="sirius" [(ngModel)]="field1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'vega\'" [label]="\'Vega\'" zone="zRight" rank="1">\n        <fdp-checkbox [name]="\'vega-cb\'" [value]="\'vega\'" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem;">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [multiLayout]="true" [formGroup]="form1" [object]="form1Data">\n    <fdp-form-field #rfield1 [id]="\'einstein\'" [label]="\'Einstein\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'einstein-cb\'" [value]="\'einstein\'" [contentDensity]="\'compact\'" title="Albert Einstein"\n            [formControl]="rfield1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 [id]="\'newton\'" [label]="\'Newton\'" zone="zRight" rank="1">\n        <fdp-checkbox [name]="\'newton-cb\'" [value]="\'newton\'" [contentDensity]="\'compact\'" title="Issac Newton"\n            [formControl]="rfield2.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">form value: {{ form1.getRawValue() | json }}</div>\n',v="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n    field3: string[] = [];\n    field4: string[] = ['altair', 'deneb'];\n\n    form1 = new FormGroup({});\n    form1Data = new Form1data([], ['newton']);\n\n    form2 = new FormGroup({});\n\n    form3 = new FormGroup({});\n    form3data = new Form3data(['faraday', 'edison']);\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n\nclass Form3data {\n    constructor(public scientists: string[]) {}\n}\n",y='<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [multiLayout]="true" [noLabelLayout]="false">\n    <fdp-form-field [id]="\'yellow\'" [label]="\'Yellow\'" [noLabelLayout]="true" zone="zLeft" rank="4" [editable]="true">\n        <fdp-checkbox [name]="\'yellow-cb\'" [isBinary]="true" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'white\'" zone="zLeft" rank="4" [label]="\'White\'">\n        <fdp-checkbox [name]="\'white-cb\'" [isBinary]="true" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'violet\'" [label]="\'Violet\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'violet-cb\'" [isBinary]="true" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [multiLayout]="true" [formGroup]="customForm" [object]="data">\n    <fdp-form-field #red [id]="\'red\'" [label]="\'Red\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'red-cb\'" [isBinary]="true" title="Red" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [contentDensity]="\'compact\'" [formControl]="red.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue [id]="\'blue\'" [label]="\'Blue\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'blue-cb\'" [isBinary]="true" title="Blue" [contentDensity]="\'compact\'"\n            [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green [id]="\'green\'" [label]="\'Green\'" zone="zLeft" rank="4">\n        <fdp-checkbox [name]="\'green-cb\'" [isBinary]="true" title="Green" [contentDensity]="\'compact\'"\n            [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem;">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field #disabled [id]="\'disabled\'" [label]="\'Red\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'disabled-cb\'" [isBinary]="true" title="Red"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [contentDensity]="\'compact\'" [disabled]="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',x="import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, Optional } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({});\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, @Optional() public green?: boolean) {}\n}\n",A='<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg [hintPlacement]="\'left\'" [multiLayout]="true" [formGroup]="customForm" [object]="data">\n    <fdp-form-field #ffr1 [id]="\'presence\'" [validators]="validators" [label]="\'Your presence is necessary\'"\n        [hint]="\'presence is necessary\'" [hintPlacement]="\'left\'" [rank]="10" zone="zLeft">\n        <fdp-checkbox [name]="\'presence-cb\'" [isBinary]="true" title="Your presence is necessary" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 [id]="\'aggrement\'" [validators]="validators" [hint]="\'this selection is mandatory\'"\n        [hintPlacement]="\'left\'" [rank]="15" zone="zRight">\n        <fdp-checkbox [name]="\'aggrement-cb\'" [isBinary]="true" title="Agree with terms" [formControl]="ffr2.formControl">\n            Do you Agree with <a href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'button-1\'" [rank]="20" zone="zRight">\n        <fdp-button [buttonType]="\'emphasized\'" (click)="onSubmit()">Submit</fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid">\n            Value is invalid\n        </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',R="import { FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm: FormGroup;\n    data: SomeObject;\n    validators: ValidatorFn[];\n\n    constructor() {\n        this.customForm = new FormGroup({});\n        this.validators = [Validators.requiredTrue];\n\n        this.data = new SomeObject(true, true);\n    }\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",M='<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" [value]="\'orion\'" title="Orion" [(checked)]="orion"\n    (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n    (change)="changeFunction($event)">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox [name]="\'cygnus\'" [isBinary]="true" [label]="\'Cygnus\'" title="Cygnus" [value]="\'cygnus\'"\n    [(checked)]="cygnus">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox [name]="\'lyra\'" [isBinary]="true" [label]="\'Lyra\'" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox [name]="\'gemini\'" [isBinary]="true" [label]="\'Gemini\'" title="Gemini" [(checked)]="gemini">\n</fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" title="Orion" [(checked)]="orion" [disabled]="true">\n</fdp-checkbox>\n',F="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n",Q='<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [multiLayout]="true" [formGroup]="cities" [object]="citiesData">\n    <fdp-form-field #paris [id]="\'paris\'" [label]="\'Paris\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'paris-cb\'" [value]="\'Yes\'" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [formControl]="paris.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha [id]="\'doha\'" [label]="\'Doha\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'doha-cb\'" [value]="\'Yes\'" [tristate]="true" [formControl]="doha.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam [id]="\'amsterdam\'" [label]="\'Amsterdam\'" zone="zLeft" rank="5">\n        <fdp-checkbox [name]="\'amsterdam-cb\'" [value]="\'Yes\'" [tristate]="true" [formControl]="amsterdam.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice [id]="\'venice\'" [label]="\'Venice\'" zone="zRight" rank="2">\n        <fdp-checkbox [name]="\'venice-cb\'" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [tristate]="true" [formControl]="venice.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto [id]="\'kyoto\'" [label]="\'Kyoto\'" zone="zRight" rank="4">\n        <fdp-checkbox [name]="\'kyoto-cb\'" [tristate]="true" [formControl]="kyoto.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona [id]="\'barcelona\'" [label]="\'Barcelona\'" zone="zRight" rank="6">\n        <fdp-checkbox [name]="\'barcelona-cb\'" [tristate]="true" [formControl]="barcelona.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens [id]="\'athens\'" [label]="\'athens: tristateSelectable false\'" zone="zLeft" rank="7">\n        <fdp-checkbox [name]="\'athens-cb\'" [value]="\'Yes\'" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="athens.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney [id]="\'sydney\'" [label]="\'Sydney: tristateSelectable false\'" zone="zRight" rank="8">\n        <fdp-checkbox [name]="\'sydney-cb\'" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="sydney.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'havana\'" [label]="\'Havana\'" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'havana-cb\'" [value]="\'Yes\'" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [(ngModel)]="havana"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'beirut\'" [label]="\'Beirut\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'beirut-cb\'" [value]="\'Yes\'" [tristate]="true" [(ngModel)]="beirut"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'budapest\'" [label]="\'Budapest\'" zone="zLeft" rank="5">\n        <fdp-checkbox [name]="\'budapest-cb\'" [value]="\'Yes\'" [tristate]="true" [(ngModel)]="budapest"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'lisbon\'" [label]="\'Lisbon\'" zone="zRight" rank="2">\n        <fdp-checkbox [name]="\'lisbon-cb\'" [tristate]="true" [(ngModel)]="lisbon"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'istanbul\'" [label]="\'Istanbul\'" zone="zRight" rank="4">\n        <fdp-checkbox [name]="\'istanbul-cb\'" [tristate]="true" [(ngModel)]="istanbul"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'busan\'" [label]="\'Busan\'" zone="zRight" rank="6">\n        <fdp-checkbox [name]="\'busan-cb\'" [tristate]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'dubrovnik\'" [label]="\'Dubrovnik: tristateSelectable false\'" zone="zLeft" rank="7">\n        <fdp-checkbox [name]="\'dubrovnik-cb\'" [value]="\'Yes\'" [tristate]="true" [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'jaipur\'" [label]="\'Jaipur: tristateSelectable false\'" zone="zRight" rank="7">\n        <fdp-checkbox [name]="\'jaipur-cb\'" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field zone="zLeft">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field zone="zRight">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [multiLayout]="true" [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 [id]="\'acceptAll\'" [label]="\'Accept All\'" zone="zLeft" rank="1">\n            <fdp-checkbox [name]="\'all\'" [tristate]="true" [tristateSelectable]="false" [value]="false"\n                [formControl]="ffr1.formControl"></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid;">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="registrationForm.get(\'agreements\')"\n            [object]="choices">\n            <fdp-form-field #ffr2 [id]="\'termsAndConditions\'" [label]="\'I accept Terms and Conditions\'" zone="zLeft"\n                rank="3">\n                <fdp-checkbox [name]="\'termsAndConditions-cb\'" [isBinary]="true" [formControl]="ffr2.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 [id]="\'marketing\'" [label]="\'I want to receive Marketing Materials\'" zone="zLeft"\n                rank="3">\n                <fdp-checkbox [name]="\'marketing-cb\'" [isBinary]="true" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 [id]="\'newsletter\'" [label]="\'I want want to sign for a Newsletter\'" zone="zLeft"\n                rank="4">\n                <fdp-checkbox [name]="\'newsletter-cb\'" [isBinary]="true" [formControl]="ffr4.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required">\n                    value is required\n                </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>',w="import { Component, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean = null;\n    public busan = true;\n    public dubrovnik: boolean = null;\n    public jaipur: boolean = null;\n\n    public cities = new FormGroup({});\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public registrationForm = new FormGroup({\n        agreements: new FormGroup({})\n    });\n\n    public choices: Object = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements').patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean,\n        public athens: string | boolean,\n        public sydney: string | boolean\n    ) {}\n}\n",L='<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group [multiLayout]="true">\n    <fdp-form-field [id]="\'a11y1\'" [noLabelLayout]="true" zone="zLeft" rank="1">\n        <fdp-checkbox [name]="\'checkboxA11y1\'" [isBinary]="true" ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'a11y2\'" zone="zLeft" rank="2">\n        <fdp-checkbox [name]="\'checkboxA11y2\'" [isBinary]="true" ariaLabelledBy="checkboxLable"\n            [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field [id]="\'a11y3\'" [label]="\'Disabled checkbox using aria-disabled\'" zone="zLeft" rank="3">\n        <fdp-checkbox [name]="\'checkboxA11y3\'" [isBinary]="true" title="It is a disabled checkbox" disabled="true"\n            [(ngModel)]="checkboxA11y3"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',P="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",z=t("EM62"),B=t("9Cr2"),S=t("Zn6N"),j=t("dB5E"),V=t("nIj0"),D=t("+lTP"),O=t("twBq"),I=t("j6Nu"),G=t("2kYt"),T=function(){function e(){this.customForm=new V.k({}),this.data=new E(!1,!0),this.yellow=!1,this.white=!0}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:53,consts:[[3,"multiLayout","noLabelLayout"],["zone","zLeft","rank","4",3,"id","label","noLabelLayout","editable"],[3,"name","isBinary","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["zone","zLeft","rank","4",3,"id","label"],["title","White",3,"name","isBinary","ngModel","ngModelChange"],["title","Violet",3,"name","isBinary","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"multiLayout","formGroup","object"],["red",""],["title","Red",3,"name","isBinary","contentDensity","formControl","checkedChange","indeterminateChange","change"],["blue",""],["title","Blue",3,"name","isBinary","contentDensity","formControl"],["green",""],["title","Green",3,"name","isBinary","contentDensity","formControl"],[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","label"],["disabled",""],["title","Red",3,"name","isBinary","contentDensity","disabled","checkedChange","indeterminateChange","change"]],template:function(e,n){if(1&e&&(z.Rb(0,"h3"),z.Pc(1,"Binary Checkbox in Template Driven Form"),z.Qb(),z.Rb(2,"fdp-form-group",0),z.Rb(3,"fdp-form-field",1),z.Rb(4,"fdp-checkbox",2),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)}))("ngModelChange",(function(e){return n.yellow=e})),z.Qb(),z.Qb(),z.Rb(5,"fdp-form-field",3),z.Rb(6,"fdp-checkbox",4),z.dc("ngModelChange",(function(e){return n.white=e})),z.Qb(),z.Qb(),z.Rb(7,"fdp-form-field",3),z.Rb(8,"fdp-checkbox",5),z.dc("ngModelChange",(function(e){return n.violet=e})),z.Qb(),z.Qb(),z.Qb(),z.Rb(9,"div",6),z.Rb(10,"div"),z.Pc(11),z.Qb(),z.Rb(12,"div"),z.Pc(13),z.Qb(),z.Rb(14,"div"),z.Pc(15),z.Qb(),z.Qb(),z.Mb(16,"br"),z.Mb(17,"br"),z.Rb(18,"h3"),z.Pc(19,"Binary Checkbox in Reactive/Model Driven Form"),z.Qb(),z.Rb(20,"fdp-form-group",7),z.Rb(21,"fdp-form-field",3,8),z.Rb(23,"fdp-checkbox",9),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Qb(),z.Rb(24,"fdp-form-field",3,10),z.Mb(26,"fdp-checkbox",11),z.Qb(),z.Rb(27,"fdp-form-field",3,12),z.Mb(29,"fdp-checkbox",13),z.Qb(),z.Qb(),z.Rb(30,"div",6),z.Pc(31),z.ic(32,"json"),z.Qb(),z.Rb(33,"h3"),z.Pc(34,"Disabled Checkbox"),z.Qb(),z.Rb(35,"fdp-form-group",14),z.Rb(36,"fdp-form-field",15,16),z.Rb(38,"fdp-checkbox",17),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Qb(),z.Qb()),2&e){var t=z.Ac(22),o=z.Ac(25),i=z.Ac(28);z.Ab(2),z.pc("multiLayout",!0)("noLabelLayout",!1),z.Ab(1),z.pc("id","yellow")("label","Yellow")("noLabelLayout",!0)("editable",!0),z.Ab(1),z.pc("name","yellow-cb")("isBinary",!0)("ngModel",n.yellow),z.Ab(1),z.pc("id","white")("label","White"),z.Ab(1),z.pc("name","white-cb")("isBinary",!0)("ngModel",n.white),z.Ab(1),z.pc("id","violet")("label","Violet"),z.Ab(1),z.pc("name","violet-cb")("isBinary",!0)("ngModel",n.violet),z.Ab(3),z.Rc("Yellow: ",n.yellow,""),z.Ab(2),z.Rc("White: ",n.white,""),z.Ab(2),z.Rc("Violet: ",n.violet,""),z.Ab(5),z.pc("multiLayout",!0)("formGroup",n.customForm)("object",n.data),z.Ab(1),z.pc("id","red")("label","Red"),z.Ab(2),z.pc("name","red-cb")("isBinary",!0)("contentDensity","compact")("formControl",t.formControl),z.Ab(1),z.pc("id","blue")("label","Blue"),z.Ab(2),z.pc("name","blue-cb")("isBinary",!0)("contentDensity","compact")("formControl",o.formControl),z.Ab(1),z.pc("id","green")("label","Green"),z.Ab(2),z.pc("name","green-cb")("isBinary",!0)("contentDensity","compact")("formControl",i.formControl),z.Ab(2),z.Rc("form value: ",z.jc(32,51,n.customForm.getRawValue()),""),z.Ab(4),z.pc("multiLayout",!0),z.Ab(1),z.pc("id","disabled")("label","Red"),z.Ab(2),z.pc("name","disabled-cb")("isBinary",!0)("contentDensity","compact")("disabled",!0)}},directives:[D.a,O.a,I.a,V.t,V.w,V.u,V.l,V.i],pipes:[G.l],encapsulation:2}),e}(),E=function(){return function(e,n,t){this.red=e,this.blue=n,this.green=t}}(),N=t("gJWE"),Y=t("ekBi"),W=function(){function e(){this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:27,consts:[["title","Orion",3,"name","isBinary","label","value","checked","checkedChange","indeterminateChange","change"],["title","Cygnus",3,"name","isBinary","label","value","checked","checkedChange"],["title","Lyra",3,"name","isBinary","label","checked","checkedChange"],["title","Gemini",3,"name","isBinary","label","checked","checkedChange"],["title","Orion",3,"name","isBinary","label","checked","disabled","checkedChange"]],template:function(e,n){1&e&&(z.Rb(0,"h3"),z.Pc(1,"Binary Checkbox With Value"),z.Qb(),z.Rb(2,"fdp-checkbox",0),z.dc("checkedChange",(function(e){return n.orion=e}))("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Rb(3,"div"),z.Pc(4),z.Qb(),z.Rb(5,"fdp-checkbox",1),z.dc("checkedChange",(function(e){return n.cygnus=e})),z.Qb(),z.Rb(6,"div"),z.Pc(7),z.Qb(),z.Mb(8,"br"),z.Mb(9,"br"),z.Rb(10,"h3"),z.Pc(11,"Binary Checkbox Without Value"),z.Qb(),z.Rb(12,"fdp-checkbox",2),z.dc("checkedChange",(function(e){return n.lyra=e})),z.Qb(),z.Rb(13,"div"),z.Pc(14),z.Qb(),z.Rb(15,"fdp-checkbox",3),z.dc("checkedChange",(function(e){return n.gemini=e})),z.Qb(),z.Rb(16,"div"),z.Pc(17),z.Qb(),z.Rb(18,"h3"),z.Pc(19,"Disabled Checkbox"),z.Qb(),z.Rb(20,"fdp-checkbox",4),z.dc("checkedChange",(function(e){return n.orion=e})),z.Qb()),2&e&&(z.Ab(2),z.pc("name","orion")("isBinary",!0)("label","Orion")("value","orion")("checked",n.orion),z.Ab(2),z.Rc("value: ",n.orion,""),z.Ab(1),z.pc("name","cygnus")("isBinary",!0)("label","Cygnus")("value","cygnus")("checked",n.cygnus),z.Ab(2),z.Rc("value: ",n.cygnus,""),z.Ab(5),z.pc("name","lyra")("isBinary",!0)("label","Lyra")("checked",n.lyra),z.Ab(2),z.Rc("value: ",n.lyra,""),z.Ab(1),z.pc("name","gemini")("isBinary",!0)("label","Gemini")("checked",n.gemini),z.Ab(2),z.Rc("value: ",n.gemini,""),z.Ab(3),z.pc("name","orion")("isBinary",!0)("label","Orion")("checked",n.orion)("disabled",!0))},directives:[I.a],encapsulation:2}),e}(),$=function(){function e(){this.field1=[],this.field2=["vega"],this.field3=[],this.field4=["altair","deneb"],this.form1=new V.k({}),this.form1Data=new U([],["newton"]),this.form2=new V.k({}),this.form3=new V.k({}),this.form3data=new J(["faraday","edison"])}return e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:31,consts:[[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","label"],["title","sirius",3,"name","value","ngModel","ngModelChange"],["zone","zRight","rank","1",3,"id","label"],["title","Vega",3,"name","value","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"multiLayout","formGroup","object"],["rmsfg",""],["rfield1",""],["title","Albert Einstein",3,"name","value","contentDensity","formControl"],["rfield2",""],["title","Issac Newton",3,"name","value","contentDensity","formControl"]],template:function(e,n){if(1&e&&(z.Rb(0,"h3"),z.Pc(1,"Template Driven Form"),z.Qb(),z.Rb(2,"p"),z.Pc(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),z.Qb(),z.Rb(4,"fdp-form-group",0),z.Rb(5,"fdp-form-field",1),z.Rb(6,"fdp-checkbox",2),z.dc("ngModelChange",(function(e){return n.field1=e})),z.Qb(),z.Qb(),z.Rb(7,"fdp-form-field",3),z.Rb(8,"fdp-checkbox",4),z.dc("ngModelChange",(function(e){return n.field2=e})),z.Qb(),z.Qb(),z.Qb(),z.Rb(9,"div",5),z.Pc(10),z.Qb(),z.Rb(11,"div",5),z.Pc(12),z.Qb(),z.Mb(13,"br"),z.Mb(14,"br"),z.Rb(15,"h3"),z.Pc(16,"Reactive/Model Driven Form"),z.Qb(),z.Rb(17,"p"),z.Pc(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),z.Qb(),z.Rb(19,"fdp-form-group",6,7),z.Rb(21,"fdp-form-field",1,8),z.Mb(23,"fdp-checkbox",9),z.Qb(),z.Rb(24,"fdp-form-field",3,10),z.Mb(26,"fdp-checkbox",11),z.Qb(),z.Qb(),z.Rb(27,"div",5),z.Pc(28),z.ic(29,"json"),z.Qb()),2&e){var t=z.Ac(22),o=z.Ac(25);z.Ab(4),z.pc("multiLayout",!0),z.Ab(1),z.pc("id","sirius")("label","Sirius"),z.Ab(1),z.pc("name","sirius-cb")("value","sirius")("ngModel",n.field1),z.Ab(1),z.pc("id","vega")("label","Vega"),z.Ab(1),z.pc("name","vega-cb")("value","vega")("ngModel",n.field2),z.Ab(2),z.Rc("field1: ",n.field1,""),z.Ab(2),z.Rc("field2: ",n.field2,""),z.Ab(7),z.pc("multiLayout",!0)("formGroup",n.form1)("object",n.form1Data),z.Ab(2),z.pc("id","einstein")("label","Einstein"),z.Ab(2),z.pc("name","einstein-cb")("value","einstein")("contentDensity","compact")("formControl",t.formControl),z.Ab(1),z.pc("id","newton")("label","Newton"),z.Ab(2),z.pc("name","newton-cb")("value","newton")("contentDensity","compact")("formControl",o.formControl),z.Ab(2),z.Rc("form value: ",z.jc(29,29,n.form1.getRawValue()),"")}},directives:[D.a,O.a,I.a,V.t,V.w,V.u,V.l,V.i],pipes:[G.l],encapsulation:2}),e}(),U=function(){return function(e,n){this.einstein=e,this.newton=n}}(),J=function(){return function(e){this.scientists=e}}(),H=t("YtkY");function _(e,n){1&e&&(z.Pb(0),z.Pc(1," value is required "),z.Ob())}function q(e,n){1&e&&z.Nc(0,_,2,0,"ng-container",48),2&e&&z.pc("ngIf",n.$implicit.required)}var K=function(){function e(){this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new V.k({}),this.citiesData=new X(!1,"Yes",null,!1,!0,null,null,!1),this.registrationForm=new V.k({agreements:new V.k({})}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}return e.prototype.ngAfterViewInit=function(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()},e.prototype.checkedChangeFunction=function(e){},e.prototype.indeterminateChangeFunction=function(e){},e.prototype.changeFunction=function(e){},e.prototype.setAgreementsOnAcceptAllChange=function(){var e=this;this.registrationForm.get("acceptAll").valueChanges.subscribe((function(n){return e.acceptAll(n)}))},e.prototype.setControlOnAgreementsChange=function(){var e=this;this.registrationForm.get("agreements").valueChanges.pipe(Object(H.a)((function(n){return e.getValuesFromObject(n)})),Object(H.a)((function(e){var n=e.reduce((function(e,n){return n&&e}),!0),t=e.reduce((function(e,n){return!n&&e}),!0);return!!n||!t&&null}))).subscribe((function(n){return e.setAcceptAll(n)}))},e.prototype.acceptAll=function(e){null!==e&&this.registrationForm.get("agreements").patchValue({marketing:e,newsletter:e,termsAndConditions:e},{emitEvent:!1})},e.prototype.setAcceptAll=function(e){var n;(null===(n=this.registrationForm.get("acceptAll"))||void 0===n?void 0:n.value)!==e&&this.registrationForm.patchValue({acceptAll:e},{emitEvent:!1})},e.prototype.getValuesFromObject=function(e){return Object.keys(e).map((function(n){return e[n]}))},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:134,consts:[[3,"multiLayout","formGroup","object"],["zone","zLeft","rank","1",3,"id","label"],["paris",""],[3,"name","value","tristate","formControl","checkedChange","indeterminateChange","change"],["zone","zLeft","rank","3",3,"id","label"],["doha",""],[3,"name","value","tristate","formControl"],["zone","zLeft","rank","5",3,"id","label"],["amsterdam",""],["zone","zRight","rank","2",3,"id","label"],["venice",""],[3,"name","tristate","formControl","checkedChange","indeterminateChange","change"],["zone","zRight","rank","4",3,"id","label"],["kyoto",""],[3,"name","tristate","formControl"],["zone","zRight","rank","6",3,"id","label"],["barcelona",""],["zone","zLeft","rank","7",3,"id","label"],["athens",""],[3,"name","value","tristate","tristateSelectable","formControl"],["zone","zRight","rank","8",3,"id","label"],["sydney",""],[3,"name","tristate","tristateSelectable","formControl"],[3,"multiLayout"],[3,"name","value","tristate","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],[3,"name","value","tristate","ngModel","ngModelChange"],[3,"name","tristate","ngModel","ngModelChange","checkedChange","indeterminateChange","change"],[3,"name","tristate","ngModel","ngModelChange"],[3,"name","value","tristate","tristateSelectable","ngModel","ngModelChange"],["zone","zRight","rank","7",3,"id","label"],[3,"name","tristate","tristateSelectable","ngModel","ngModelChange"],["zone","zLeft"],["zone","zRight"],[3,"formGroup"],["form","ngForm"],[3,"multiLayout","formGroup"],["fgtristate",""],["ffr1",""],[3,"name","tristate","tristateSelectable","value","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["ffr2",""],[3,"name","isBinary","formControl"],["ffr3",""],["zone","zLeft","rank","4",3,"id","label"],["ffr4",""],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(z.Rb(0,"h3"),z.Pc(1,"Reactive Form: TriState Checkbox With Value and Without Value"),z.Qb(),z.Rb(2,"fdp-form-group",0),z.Rb(3,"fdp-form-field",1,2),z.Rb(5,"fdp-checkbox",3),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Qb(),z.Rb(6,"fdp-form-field",4,5),z.Mb(8,"fdp-checkbox",6),z.Qb(),z.Rb(9,"fdp-form-field",7,8),z.Mb(11,"fdp-checkbox",6),z.Qb(),z.Rb(12,"fdp-form-field",9,10),z.Rb(14,"fdp-checkbox",11),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Qb(),z.Rb(15,"fdp-form-field",12,13),z.Mb(17,"fdp-checkbox",14),z.Qb(),z.Rb(18,"fdp-form-field",15,16),z.Mb(20,"fdp-checkbox",14),z.Qb(),z.Rb(21,"fdp-form-field",17,18),z.Mb(23,"fdp-checkbox",19),z.Qb(),z.Rb(24,"fdp-form-field",20,21),z.Mb(26,"fdp-checkbox",22),z.Qb(),z.Qb(),z.Rb(27,"div"),z.Pc(28),z.ic(29,"json"),z.Qb(),z.Mb(30,"br"),z.Mb(31,"br"),z.Rb(32,"h3"),z.Pc(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),z.Qb(),z.Rb(34,"fdp-form-group",23),z.Rb(35,"fdp-form-field",1),z.Rb(36,"fdp-checkbox",24),z.dc("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)}))("ngModelChange",(function(e){return n.havana=e})),z.Qb(),z.Qb(),z.Rb(37,"fdp-form-field",4),z.Rb(38,"fdp-checkbox",25),z.dc("ngModelChange",(function(e){return n.beirut=e})),z.Qb(),z.Qb(),z.Rb(39,"fdp-form-field",7),z.Rb(40,"fdp-checkbox",25),z.dc("ngModelChange",(function(e){return n.budapest=e})),z.Qb(),z.Qb(),z.Rb(41,"fdp-form-field",9),z.Rb(42,"fdp-checkbox",26),z.dc("ngModelChange",(function(e){return n.lisbon=e}))("checkedChange",(function(e){return n.checkedChangeFunction(e)}))("indeterminateChange",(function(e){return n.indeterminateChangeFunction(e)}))("change",(function(e){return n.changeFunction(e)})),z.Qb(),z.Qb(),z.Rb(43,"fdp-form-field",12),z.Rb(44,"fdp-checkbox",27),z.dc("ngModelChange",(function(e){return n.istanbul=e})),z.Qb(),z.Qb(),z.Rb(45,"fdp-form-field",15),z.Rb(46,"fdp-checkbox",27),z.dc("ngModelChange",(function(e){return n.busan=e})),z.Qb(),z.Qb(),z.Rb(47,"fdp-form-field",17),z.Rb(48,"fdp-checkbox",28),z.dc("ngModelChange",(function(e){return n.dubrovnik=e})),z.Qb(),z.Qb(),z.Rb(49,"fdp-form-field",29),z.Rb(50,"fdp-checkbox",30),z.dc("ngModelChange",(function(e){return n.jaipur=e})),z.Qb(),z.Qb(),z.Rb(51,"fdp-form-field",31),z.Rb(52,"div"),z.Pc(53),z.Qb(),z.Rb(54,"div"),z.Pc(55),z.Qb(),z.Rb(56,"div"),z.Pc(57),z.Qb(),z.Rb(58,"div"),z.Pc(59),z.Qb(),z.Qb(),z.Rb(60,"fdp-form-field",32),z.Rb(61,"div"),z.Pc(62),z.Qb(),z.Rb(63,"div"),z.Pc(64),z.Qb(),z.Rb(65,"div"),z.Pc(66),z.Qb(),z.Rb(67,"div"),z.Pc(68),z.Qb(),z.Qb(),z.Qb(),z.Rb(69,"h3"),z.Pc(70,"TriState Checkbox Used with Multiple checkboxes"),z.Qb(),z.Rb(71,"form",33,34),z.Rb(73,"fdp-form-group",35,36),z.Rb(75,"fdp-form-field",1,37),z.Mb(77,"fdp-checkbox",38),z.Qb(),z.Qb(),z.Rb(78,"div",39),z.Rb(79,"fdp-form-group",40,41),z.Rb(81,"fdp-form-field",4,42),z.Mb(83,"fdp-checkbox",43),z.Qb(),z.Rb(84,"fdp-form-field",4,44),z.Mb(86,"fdp-checkbox",43),z.Qb(),z.Rb(87,"fdp-form-field",45,46),z.Mb(89,"fdp-checkbox",43),z.Qb(),z.Nc(90,q,1,1,"ng-template",null,47,z.Oc),z.Qb(),z.Qb(),z.Qb()),2&e){var t=z.Ac(4),o=z.Ac(7),i=z.Ac(10),a=z.Ac(13),r=z.Ac(16),c=z.Ac(19),l=z.Ac(22),b=z.Ac(25),d=z.Ac(76),f=z.Ac(82),u=z.Ac(85),s=z.Ac(88);z.Ab(2),z.pc("multiLayout",!0)("formGroup",n.cities)("object",n.citiesData),z.Ab(1),z.pc("id","paris")("label","Paris"),z.Ab(2),z.pc("name","paris-cb")("value","Yes")("tristate",!0)("formControl",t.formControl),z.Ab(1),z.pc("id","doha")("label","Doha"),z.Ab(2),z.pc("name","doha-cb")("value","Yes")("tristate",!0)("formControl",o.formControl),z.Ab(1),z.pc("id","amsterdam")("label","Amsterdam"),z.Ab(2),z.pc("name","amsterdam-cb")("value","Yes")("tristate",!0)("formControl",i.formControl),z.Ab(1),z.pc("id","venice")("label","Venice"),z.Ab(2),z.pc("name","venice-cb")("tristate",!0)("formControl",a.formControl),z.Ab(1),z.pc("id","kyoto")("label","Kyoto"),z.Ab(2),z.pc("name","kyoto-cb")("tristate",!0)("formControl",r.formControl),z.Ab(1),z.pc("id","barcelona")("label","Barcelona"),z.Ab(2),z.pc("name","barcelona-cb")("tristate",!0)("formControl",c.formControl),z.Ab(1),z.pc("id","athens")("label","athens: tristateSelectable false"),z.Ab(2),z.pc("name","athens-cb")("value","Yes")("tristate",!0)("tristateSelectable",!1)("formControl",l.formControl),z.Ab(1),z.pc("id","sydney")("label","Sydney: tristateSelectable false"),z.Ab(2),z.pc("name","sydney-cb")("tristate",!0)("tristateSelectable",!1)("formControl",b.formControl),z.Ab(2),z.Rc("form value: ",z.jc(29,132,n.cities.getRawValue()),""),z.Ab(6),z.pc("multiLayout",!0),z.Ab(1),z.pc("id","havana")("label","Havana"),z.Ab(1),z.pc("name","havana-cb")("value","Yes")("tristate",!0)("ngModel",n.havana),z.Ab(1),z.pc("id","beirut")("label","Beirut"),z.Ab(1),z.pc("name","beirut-cb")("value","Yes")("tristate",!0)("ngModel",n.beirut),z.Ab(1),z.pc("id","budapest")("label","Budapest"),z.Ab(1),z.pc("name","budapest-cb")("value","Yes")("tristate",!0)("ngModel",n.budapest),z.Ab(1),z.pc("id","lisbon")("label","Lisbon"),z.Ab(1),z.pc("name","lisbon-cb")("tristate",!0)("ngModel",n.lisbon),z.Ab(1),z.pc("id","istanbul")("label","Istanbul"),z.Ab(1),z.pc("name","istanbul-cb")("tristate",!0)("ngModel",n.istanbul),z.Ab(1),z.pc("id","busan")("label","Busan"),z.Ab(1),z.pc("name","busan-cb")("tristate",!0)("ngModel",n.busan),z.Ab(1),z.pc("id","dubrovnik")("label","Dubrovnik: tristateSelectable false"),z.Ab(1),z.pc("name","dubrovnik-cb")("value","Yes")("tristate",!0)("tristateSelectable",!1)("ngModel",n.dubrovnik),z.Ab(1),z.pc("id","jaipur")("label","Jaipur: tristateSelectable false"),z.Ab(1),z.pc("name","jaipur-cb")("tristate",!0)("tristateSelectable",!1)("ngModel",n.jaipur),z.Ab(3),z.Rc("Havana: ",n.havana,""),z.Ab(2),z.Rc("Beirut: ",n.beirut,""),z.Ab(2),z.Rc("Budapest: ",n.budapest,""),z.Ab(2),z.Rc("Dubrovnik: ",n.dubrovnik,""),z.Ab(3),z.Rc("Lisbon: ",n.lisbon,""),z.Ab(2),z.Rc("Istanbul: ",n.istanbul,""),z.Ab(2),z.Rc("Busan: ",n.busan,""),z.Ab(2),z.Rc("Jaipur: ",n.jaipur,""),z.Ab(3),z.pc("formGroup",n.registrationForm),z.Ab(2),z.pc("multiLayout",!0)("formGroup",n.registrationForm),z.Ab(2),z.pc("id","acceptAll")("label","Accept All"),z.Ab(2),z.pc("name","all")("tristate",!0)("tristateSelectable",!1)("value",!1)("formControl",d.formControl),z.Ab(2),z.pc("formGroup",n.registrationForm.get("agreements"))("object",n.choices),z.Ab(2),z.pc("id","termsAndConditions")("label","I accept Terms and Conditions"),z.Ab(2),z.pc("name","termsAndConditions-cb")("isBinary",!0)("formControl",f.formControl),z.Ab(1),z.pc("id","marketing")("label","I want to receive Marketing Materials"),z.Ab(2),z.pc("name","marketing-cb")("isBinary",!0)("formControl",u.formControl),z.Ab(1),z.pc("id","newsletter")("label","I want want to sign for a Newsletter"),z.Ab(2),z.pc("name","newsletter-cb")("isBinary",!0)("formControl",s.formControl)}},directives:[D.a,V.u,V.l,O.a,I.a,V.t,V.i,V.w,V.J,G.u],pipes:[G.l],encapsulation:2}),e}(),X=function(){return function(e,n,t,o,i,a,r,c){this.paris=e,this.doha=n,this.amsterdam=t,this.venice=o,this.kyoto=i,this.barcelona=a,this.athens=r,this.sydney=c}}(),Z=t("GY/j");function ee(e,n){1&e&&(z.Rb(0,"span"),z.Pc(1," Value is required "),z.Qb())}function ne(e,n){1&e&&(z.Rb(0,"span"),z.Pc(1," Value is invalid "),z.Qb())}function te(e,n){if(1&e&&(z.Nc(0,ee,2,0,"span",12),z.Nc(1,ne,2,0,"span",12)),2&e){var t=n.$implicit;z.pc("ngIf",t.required),z.Ab(1),z.pc("ngIf",t.invalid)}}var oe=function(){function e(){this.customForm=new V.k({}),this.validators=[V.H.requiredTrue],this.data=new ie(!0,!0)}return e.prototype.onSubmit=function(){alert("Status: "+this.customForm.status)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-checkbox-error-handling"]],decls:25,vars:30,consts:[[3,"hintPlacement","multiLayout","formGroup","object"],["fg",""],["zone","zLeft",3,"id","validators","label","hint","hintPlacement","rank"],["ffr1",""],["title","Your presence is necessary",3,"name","isBinary","formControl"],["zone","zRight",3,"id","validators","hint","hintPlacement","rank"],["ffr2",""],["title","Agree with terms",3,"name","isBinary","formControl"],["href","#"],["zone","zRight",3,"id","rank"],[3,"buttonType","click"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(z.Rb(0,"h3"),z.Pc(1,"Checkbox Error Handling"),z.Qb(),z.Rb(2,"fdp-form-group",0,1),z.Rb(4,"fdp-form-field",2,3),z.Mb(6,"fdp-checkbox",4),z.Qb(),z.Rb(7,"fdp-form-field",5,6),z.Rb(9,"fdp-checkbox",7),z.Pc(10," Do you Agree with "),z.Rb(11,"a",8),z.Pc(12," Terms and Conditions"),z.Qb(),z.Pc(13,"? "),z.Qb(),z.Qb(),z.Rb(14,"fdp-form-field",9),z.Rb(15,"fdp-button",10),z.dc("click",(function(){return n.onSubmit()})),z.Pc(16,"Submit"),z.Qb(),z.Qb(),z.Nc(17,te,2,2,"ng-template",null,11,z.Oc),z.Qb(),z.Rb(19,"p"),z.Pc(20),z.ic(21,"json"),z.Qb(),z.Rb(22,"p"),z.Pc(23),z.ic(24,"json"),z.Qb()),2&e){var t=z.Ac(5),o=z.Ac(8);z.Ab(2),z.pc("hintPlacement","left")("multiLayout",!0)("formGroup",n.customForm)("object",n.data),z.Ab(2),z.pc("id","presence")("validators",n.validators)("label","Your presence is necessary")("hint","presence is necessary")("hintPlacement","left")("rank",10),z.Ab(2),z.pc("name","presence-cb")("isBinary",!0)("formControl",t.formControl),z.Ab(1),z.pc("id","aggrement")("validators",n.validators)("hint","this selection is mandatory")("hintPlacement","left")("rank",15),z.Ab(2),z.pc("name","aggrement-cb")("isBinary",!0)("formControl",o.formControl),z.Ab(5),z.pc("id","button-1")("rank",20),z.Ab(1),z.pc("buttonType","emphasized"),z.Ab(5),z.Rc("Form value: ",z.jc(21,26,n.customForm.getRawValue()),""),z.Ab(3),z.Rc("Form Status: ",z.jc(24,28,n.customForm.status),"")}},directives:[D.a,V.u,V.l,O.a,I.a,V.t,V.i,Z.a,G.u],pipes:[G.l],encapsulation:2}),e}(),ie=function(){return function(e,n){this.presence=e,this.aggrement=n}}(),ae=function(){function e(){this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:15,consts:[["id","checkboxLable"],[3,"multiLayout"],["zone","zLeft","rank","1",3,"id","noLabelLayout"],["ariaLabel","checkbox using aria-label",3,"name","isBinary","ngModel","ngModelChange"],["zone","zLeft","rank","2",3,"id"],["ariaLabelledBy","checkboxLable",3,"name","isBinary","ngModel","ngModelChange"],["zone","zLeft","rank","3",3,"id","label"],["title","It is a disabled checkbox","disabled","true",3,"name","isBinary","ngModel","ngModelChange"]],template:function(e,n){1&e&&(z.Rb(0,"h3"),z.Pc(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),z.Qb(),z.Rb(2,"p",0),z.Pc(3,"checkbox using aria-labelledby"),z.Qb(),z.Rb(4,"fdp-form-group",1),z.Rb(5,"fdp-form-field",2),z.Rb(6,"fdp-checkbox",3),z.dc("ngModelChange",(function(e){return n.checkboxA11y1=e})),z.Qb(),z.Qb(),z.Rb(7,"fdp-form-field",4),z.Rb(8,"fdp-checkbox",5),z.dc("ngModelChange",(function(e){return n.checkboxA11y2=e})),z.Qb(),z.Qb(),z.Rb(9,"fdp-form-field",6),z.Rb(10,"fdp-checkbox",7),z.dc("ngModelChange",(function(e){return n.checkboxA11y3=e})),z.Qb(),z.Qb(),z.Qb()),2&e&&(z.Ab(4),z.pc("multiLayout",!0),z.Ab(1),z.pc("id","a11y1")("noLabelLayout",!0),z.Ab(1),z.pc("name","checkboxA11y1")("isBinary",!0)("ngModel",n.checkboxA11y1),z.Ab(1),z.pc("id","a11y2"),z.Ab(1),z.pc("name","checkboxA11y2")("isBinary",!0)("ngModel",n.checkboxA11y2),z.Ab(1),z.pc("id","a11y3")("label","Disabled checkbox using aria-disabled"),z.Ab(1),z.pc("name","checkboxA11y3")("isBinary",!0)("ngModel",n.checkboxA11y3))},directives:[D.a,O.a,I.a,V.t,V.w],encapsulation:2}),e}(),re=function(){function e(){this.multiselectCheckbox=[{language:"html",code:o,fileName:"platform-multiselect-checkbox"},{language:"typescript",code:i,fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:a,fileName:"platform-binary-checkbox"},{language:"typescript",code:r,fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:c,fileName:"platform-checkbox-error-handling"},{language:"typescript",code:l,fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:b,fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:d,fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:f,fileName:"platform-tristate-checkbox"},{language:"typescript",code:u,fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:s,fileName:"platform-checkbox-a11y"},{language:"typescript",code:p,fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["app-checkbox"]],decls:57,vars:18,consts:[[3,"id","componentName"],[3,"exampleFiles"],[2,"list-style-type","circle"]],template:function(e,n){1&e&&(z.Rb(0,"fd-docs-section-title",0),z.Pc(1," Binary Checkbox Used With Form\n"),z.Qb(),z.Rb(2,"description"),z.Pc(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),z.Qb(),z.Rb(4,"component-example"),z.Mb(5,"fdp-platform-binary-checkbox"),z.Qb(),z.Mb(6,"code-example",1),z.Mb(7,"separator"),z.Rb(8,"fd-docs-section-title",0),z.Pc(9," Checkbox Used Without Form\n"),z.Qb(),z.Rb(10,"description"),z.Pc(11," This example shows Binary Checkbox without form "),z.Rb(12,"ul",2),z.Rb(13,"li"),z.Pc(14,"checkbox with value property"),z.Qb(),z.Rb(15,"li"),z.Pc(16,"checkbox without value property"),z.Qb(),z.Qb(),z.Qb(),z.Rb(17,"component-example"),z.Mb(18,"fdp-platform-binary-checkbox-no-form"),z.Qb(),z.Mb(19,"code-example",1),z.Mb(20,"separator"),z.Rb(21,"fd-docs-section-title",0),z.Pc(22," Checkboxes With Value Property\n"),z.Qb(),z.Rb(23,"description"),z.Pc(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),z.Qb(),z.Rb(25,"component-example"),z.Mb(26,"fdp-platform-multiselect-checkbox"),z.Qb(),z.Mb(27,"code-example",1),z.Mb(28,"separator"),z.Rb(29,"fd-docs-section-title",0),z.Pc(30," Tistate Checkbox With Value Property and Without Value Property\n"),z.Qb(),z.Rb(31,"description"),z.Pc(32," This example shows tristate checkbox in Reactive form and Template driven form "),z.Rb(33,"ul",2),z.Rb(34,"li"),z.Pc(35,"Tristate checkbox with value property"),z.Qb(),z.Rb(36,"li"),z.Pc(37,"Tristate checkbox without value property"),z.Qb(),z.Qb(),z.Qb(),z.Rb(38,"component-example"),z.Mb(39,"fdp-platform-tristate-checkbox"),z.Qb(),z.Mb(40,"code-example",1),z.Mb(41,"separator"),z.Rb(42,"fd-docs-section-title",0),z.Pc(43," Checkbox With Form and State Change on Error\n"),z.Qb(),z.Rb(44,"description"),z.Pc(45,"This example shows Checkbox Error state, when form has error "),z.Qb(),z.Rb(46,"component-example"),z.Mb(47,"fdp-platform-checkbox-error-handling"),z.Qb(),z.Mb(48,"code-example",1),z.Mb(49,"separator"),z.Rb(50,"fd-docs-section-title",0),z.Pc(51," Accessibility on checkbox\n"),z.Qb(),z.Rb(52,"description"),z.Pc(53,"This example shows Checkbox accessibility"),z.Qb(),z.Rb(54,"component-example"),z.Mb(55,"fdp-platform-checkbox-a11y"),z.Qb(),z.Mb(56,"code-example",1)),2&e&&(z.pc("id","def1")("componentName","CheckboxComponent"),z.Ab(6),z.pc("exampleFiles",n.binaryCheckbox),z.Ab(2),z.pc("id","def5")("componentName","CheckboxComponent"),z.Ab(11),z.pc("exampleFiles",n.noFormCheckbox),z.Ab(2),z.pc("id","def2")("componentName","CheckboxComponent"),z.Ab(6),z.pc("exampleFiles",n.multiselectCheckbox),z.Ab(2),z.pc("id","def3")("componentName","CheckboxComponent"),z.Ab(11),z.pc("exampleFiles",n.triCheckbox),z.Ab(2),z.pc("id","def4")("componentName","CheckboxComponent"),z.Ab(6),z.pc("exampleFiles",n.errorCheckbox),z.Ab(2),z.pc("id","a1yExample")("componentName","PlatformCheckboxA11yComponent"),z.Ab(6),z.pc("exampleFiles",n.a11yCheckbox))},directives:[B.a,S.a,j.a,T,N.a,Y.a,W,$,K,oe,ae],encapsulation:2}),e}(),ce=t("P+xO"),le=t("7o9V"),be=t("h8DJ"),de=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=z.Fb({type:e,selectors:[["app-checkbox-header"]],decls:22,vars:2,consts:[[3,"routerLink"],["module","PlatformCheckboxModule"]],template:function(e,n){1&e&&(z.Rb(0,"header"),z.Pc(1,"Checkbox"),z.Qb(),z.Rb(2,"description"),z.Pc(3," This is an extension of the Checkbox component present in "),z.Rb(4,"a",0),z.Pc(5,"ngx-core"),z.Qb(),z.Pc(6,". "),z.Mb(7,"br"),z.Pc(8," For usecase of Multiple checkboxes selection, please see "),z.Rb(9,"a",0),z.Pc(10,"Checkbox Group"),z.Qb(),z.Pc(11,". "),z.Rb(12,"h3"),z.Pc(13,"Platform specific enhancements:"),z.Qb(),z.Rb(14,"ul"),z.Rb(15,"li"),z.Pc(16," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),z.Qb(),z.Rb(17,"li"),z.Pc(18,'Platform checkbox can be used outside form using "checked" property two way binding.'),z.Qb(),z.Qb(),z.Qb(),z.Mb(19,"import",1),z.Mb(20,"fd-header-tabs"),z.Mb(21,"router-outlet")),2&e&&(z.Ab(4),z.pc("routerLink","/core/checkbox"),z.Ab(5),z.pc("routerLink","/platform/checkbox"))},directives:[ce.a,S.a,m.e,le.a,be.a,m.g],encapsulation:2}),e}(),fe=t("63W6"),ue=[{path:"",component:de,children:[{path:"",component:re},{path:"api",component:h.a,data:{content:g.a.checkbox}}]}],se=function(){function e(){}return e.\u0275mod=z.Jb({type:e}),e.\u0275inj=z.Ib({factory:function(n){return new(n||e)},imports:[[m.f.forChild(ue),k.a,fe.PlatformCheckboxModule,fe.FdpFormGroupModule,fe.PlatformButtonModule],m.f]}),e}()}}]);