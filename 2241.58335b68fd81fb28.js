"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2241],{42241:(p,s,o)=>{o.r(s),o.d(s,{InputDocsModule:()=>B});var m=o(8674),d=o(36854),h=o(31768),n=o(5e3),b=o(24882),c=o(44969),x=o(98791),g=o(63710);let Z=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Xpm({type:e,selectors:[["app-select-header"]],decls:19,vars:0,consts:[["module","FormModule","subPackage","form"]],template:function(t,a){1&t&&(n.TgZ(0,"header"),n._uU(1,"Input"),n.qZA(),n.TgZ(2,"description")(3,"p"),n._uU(4,"A text input field allows users to enter and edit text or numeric values in one line."),n.qZA(),n.TgZ(5,"p"),n._uU(6,"It's used in the following cases:"),n.qZA(),n.TgZ(7,"ul")(8,"li"),n._uU(9,"The user needs to enter a short, single-line text or number."),n.qZA(),n.TgZ(10,"li"),n._uU(11,"The user needs to enter a password, URL, phone number, or email address."),n.qZA(),n.TgZ(12,"li"),n._uU(13,"The user needs to select a single item from a large amount of data."),n.qZA(),n.TgZ(14,"li"),n._uU(15," The user needs to find an object by searching for more than one attribute, such as an ID, city, and customer name. Use this control in combination with the autocomplete suggestion feature and value help option. "),n.qZA()()(),n._UZ(16,"import",0)(17,"fd-header-tabs")(18,"router-outlet"))},directives:[b.G,c.w,x.k,g.c,m.lC],encapsulation:2}),e})();var I=o(66779),v=o(65996),F=o(73825),y=o(29579),U=o(99483),A=o(93943),C=o(28595),i=o(6417),u=o(29145),f=o(44066);let T=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Xpm({type:e,selectors:[["fd-input-example"]],decls:12,vars:0,consts:[["fn-form-label","","for","fn-input"],["fn-form-control","","type","text","id","fn-input","placeholder","Field placeholder text"],["fn-form-label","","for","fn-input-0"],["fn-form-control","","type","password","id","fn-input-0","placeholder","Field placeholder text","aria-required","true"]],template:function(t,a){1&t&&(n.TgZ(0,"fn-form-item")(1,"label",0),n._uU(2,"Default Input"),n.qZA(),n._UZ(3,"input",1),n.qZA(),n._UZ(4,"br")(5,"br"),n.TgZ(6,"fn-form-item")(7,"label",2),n._uU(8,"Password"),n.qZA(),n._UZ(9,"input",3),n.qZA(),n._UZ(10,"br")(11,"br"))},directives:[i.J,u.h,f.A],encapsulation:2}),e})(),E=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Xpm({type:e,selectors:[["fd-input-state-example"]],decls:39,vars:2,consts:[["fn-form-label","","for","fn-input-1"],["fn-form-control","","type","text","id","fn-input-1","value","Success","placeholder","Field placeholder text","state","success"],["fn-form-label","","for","fn-input-2"],["fn-form-control","","type","text","id","fn-input-2","value","Warning","placeholder","Field placeholder text","state","warning"],["fn-form-label","","for","fn-input-3"],["fn-form-control","","type","text","id","ifn-input-3","value","Error","placeholder","Field placeholder text","state","error"],["fn-form-label","","for","fn-input-4"],["fn-form-control","","type","text","id","fn-input-4","value","Information","placeholder","Field placeholder text","state","information"],["fn-form-label","","for","fn-input-5"],["fn-form-control","","type","text","id","fn-input-5","placeholder","Field placeholder text",3,"disabled"],["fn-form-label","","for","fn-input-6"],["fn-form-control","","type","text","id","fn-input-6","placeholder","Field placeholder text",3,"readonly"]],template:function(t,a){1&t&&(n.TgZ(0,"fn-form-item")(1,"label",0),n._uU(2," Valid(Success) Input "),n.qZA(),n._UZ(3,"input",1),n.qZA(),n._UZ(4,"br")(5,"br")(6,"br"),n.TgZ(7,"fn-form-item")(8,"label",2),n._uU(9," Warning Input "),n.qZA(),n._UZ(10,"input",3),n.qZA(),n._UZ(11,"br")(12,"br")(13,"br"),n.TgZ(14,"fn-form-item")(15,"label",4),n._uU(16," Error Input "),n.qZA(),n._UZ(17,"input",5),n.qZA(),n._UZ(18,"br")(19,"br")(20,"br"),n.TgZ(21,"fn-form-item")(22,"label",6),n._uU(23," Information Input "),n.qZA(),n._UZ(24,"input",7),n.qZA(),n._UZ(25,"br")(26,"br")(27,"br"),n.TgZ(28,"fn-form-item")(29,"label",8),n._uU(30," Disabled Input "),n.qZA(),n._UZ(31,"input",9),n.qZA(),n._UZ(32,"br")(33,"br")(34,"br"),n.TgZ(35,"fn-form-item")(36,"label",10),n._uU(37," Readonly Input "),n.qZA(),n._UZ(38,"input",11),n.qZA()),2&t&&(n.xp6(31),n.Q6J("disabled",!0),n.xp6(7),n.Q6J("readonly",!0))},directives:[i.J,u.h,f.A],encapsulation:2}),e})();var S=o(29871),q=o(33089),l=o(52382);let J=(()=>{class e{constructor(t){this.fb=t}ngOnInit(){this.myForm=this.fb.group({inputControl:new l.NI("",l.kI.required),disabledInputControl:new l.NI({value:"initial value",disabled:!0},l.kI.required),arr:this.fb.array([this.createItem()])})}createItem(){return this.fb.group({primaryInput:[""],secondaryInput:[""]})}addItem(){this.arr=this.myForm.get("arr"),this.arr.push(this.createItem())}onSubmit(){this.formValue=this.myForm.value}}return e.\u0275fac=function(t){return new(t||e)(n.Y36(l.qu))},e.\u0275cmp=n.Xpm({type:e,selectors:[["fd-input-form-group-example"]],decls:11,vars:2,consts:[[3,"formGroup","ngSubmit"],["fd-form-set",""],["fn-form-label","","for","fn-input-7"],["formControlName","inputControl","fn-form-control","","type","text","id","fn-input-7","placeholder","Field placeholder text"]],template:function(t,a){1&t&&(n.TgZ(0,"form",0),n.NdJ("ngSubmit",function(){return a.onSubmit()}),n.TgZ(1,"div",1)(2,"fn-form-item")(3,"label",2),n._uU(4,"Default Input"),n.qZA(),n._UZ(5,"input",3),n.qZA(),n._UZ(6,"br")(7,"br"),n.TgZ(8,"p")(9,"i"),n._uU(10),n.qZA()()()()),2&t&&(n.Q6J("formGroup",a.myForm),n.xp6(10),n.hij("Input Value: ",a.myForm.get("inputControl").value,""))},directives:[l._Y,l.JL,l.sg,i.J,u.h,l.Fj,l.JJ,l.u,f.A],styles:["input[_ngcontent-%COMP%]{margin-bottom:10px}"]}),e})(),D=(()=>{class e{constructor(){this.inputsFormHtml=[{language:"html",code:I,fileName:"input-example"}],this.inputStatesFormHtml=[{language:"html",code:v,fileName:"input-state-example"}],this.formGroupInput=[{language:"html",code:F,fileName:"input-form-group-example",scssFileCode:U},{language:"typescript",code:y,fileName:"input-form-group-example",component:"InputFormGroupExampleComponent"}]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Xpm({type:e,selectors:[["app-input"]],decls:24,vars:6,consts:[["id","basic","componentName","input"],[3,"hasBackground"],[3,"exampleFiles"],["id","states","componentName","input"],["id","reactive-form","componentName","input"]],template:function(t,a){1&t&&(n.TgZ(0,"fd-docs-section-title",0),n._uU(1," Default Input "),n.qZA(),n.TgZ(2,"component-example",1),n._UZ(3,"fd-input-example"),n.qZA(),n._UZ(4,"code-example",2)(5,"separator"),n.TgZ(6,"fd-docs-section-title",3),n._uU(7," Input States "),n.qZA(),n.TgZ(8,"description"),n._uU(9,"Use the "),n.TgZ(10,"code"),n._uU(11,"state"),n.qZA(),n._uU(12," property to set the state of the input. Options include: succes, warning, error and information."),n.qZA(),n.TgZ(13,"component-example",1),n._UZ(14,"fd-input-state-example"),n.qZA(),n._UZ(15,"code-example",2)(16,"separator"),n.TgZ(17,"fd-docs-section-title",4),n._uU(18," Reactive Form Input "),n.qZA(),n.TgZ(19,"description"),n._uU(20," The input element, like several other native html elements, support Angular reactive forms. Using the input within the form element greatly simplifies input value access and validation.\n"),n.qZA(),n.TgZ(21,"component-example",1),n._UZ(22,"fd-input-form-group-example"),n.qZA(),n._UZ(23,"code-example",2)),2&t&&(n.xp6(2),n.Q6J("hasBackground",!1),n.xp6(2),n.Q6J("exampleFiles",a.inputsFormHtml),n.xp6(9),n.Q6J("hasBackground",!1),n.xp6(2),n.Q6J("exampleFiles",a.inputStatesFormHtml),n.xp6(6),n.Q6J("hasBackground",!1),n.xp6(2),n.Q6J("exampleFiles",a.formGroupInput))},directives:[A.k,C.O,T,S.E,q.N,c.w,E,J],encapsulation:2}),e})();var G=o(28674),N=o(77562);const V=[{path:"",component:Z,children:[{path:"",component:D},{path:"api",component:d.h,data:{content:h.X.input}}]}];let B=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=n.oAB({type:e}),e.\u0275inj=n.cJS({imports:[[m.Bz.forChild(V),G.g,N.ej],m.Bz]}),e})()},66779:p=>{p.exports='<fn-form-item>\n    <label fn-form-label for="fn-input">Default Input</label>\n    <input fn-form-control type="text" id="fn-input" placeholder="Field placeholder text" />\n</fn-form-item>\n<br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-0">Password</label>\n    <input fn-form-control type="password" id="fn-input-0" placeholder="Field placeholder text" aria-required="true" />\n</fn-form-item>\n<br /><br />\n'},73825:p=>{p.exports='<form [formGroup]="myForm" (ngSubmit)="onSubmit()">\n    <div fd-form-set>\n        <fn-form-item>\n            <label fn-form-label for="fn-input-7">Default Input</label>\n            <input\n                formControlName="inputControl"\n                fn-form-control\n                type="text"\n                id="fn-input-7"\n                placeholder="Field placeholder text"\n            />\n        </fn-form-item>\n        <br /><br />\n        <p>\n            <i>Input Value: {{ myForm.get(\'inputControl\').value }}</i>\n        </p>\n    </div>\n</form>\n'},99483:p=>{p.exports="input {\n    margin-bottom: 10px;\n}\n"},29579:p=>{p.exports="import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'fd-input-form-group-example',\n    templateUrl: './input-form-group-example.component.html',\n    styleUrls: ['input-form-group-example.component.scss']\n})\nexport class InputFormGroupExampleComponent implements OnInit {\n    myForm: FormGroup;\n    arr: FormArray;\n    formValue: any;\n\n    constructor(private fb: FormBuilder) {}\n\n    ngOnInit(): void {\n        this.myForm = this.fb.group({\n            inputControl: new FormControl('', Validators.required),\n            disabledInputControl: new FormControl({ value: 'initial value', disabled: true }, Validators.required),\n            arr: this.fb.array([this.createItem()])\n        });\n    }\n\n    createItem(): FormGroup {\n        return this.fb.group({\n            primaryInput: [''],\n            secondaryInput: ['']\n        });\n    }\n\n    addItem(): void {\n        this.arr = this.myForm.get('arr') as FormArray;\n        this.arr.push(this.createItem());\n    }\n\n    onSubmit(): void {\n        this.formValue = this.myForm.value;\n    }\n}\n"},65996:p=>{p.exports='<fn-form-item>\n    <label fn-form-label for="fn-input-1"> Valid(Success) Input </label>\n    <input\n        fn-form-control\n        type="text"\n        id="fn-input-1"\n        value="Success"\n        placeholder="Field placeholder text"\n        state="success"\n    />\n</fn-form-item>\n<br /><br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-2"> Warning Input </label>\n    <input\n        fn-form-control\n        type="text"\n        id="fn-input-2"\n        value="Warning"\n        placeholder="Field placeholder text"\n        state="warning"\n    />\n</fn-form-item>\n<br /><br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-3"> Error Input </label>\n    <input\n        fn-form-control\n        type="text"\n        id="ifn-input-3"\n        value="Error"\n        placeholder="Field placeholder text"\n        state="error"\n    />\n</fn-form-item>\n<br /><br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-4"> Information Input </label>\n    <input\n        fn-form-control\n        type="text"\n        id="fn-input-4"\n        value="Information"\n        placeholder="Field placeholder text"\n        state="information"\n    />\n</fn-form-item>\n<br /><br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-5"> Disabled Input </label>\n    <input fn-form-control type="text" id="fn-input-5" placeholder="Field placeholder text" [disabled]="true" />\n</fn-form-item>\n<br /><br /><br />\n<fn-form-item>\n    <label fn-form-label for="fn-input-6"> Readonly Input </label>\n    <input fn-form-control type="text" id="fn-input-6" placeholder="Field placeholder text" [readonly]="true" />\n</fn-form-item>\n'}}]);