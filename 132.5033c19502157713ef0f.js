(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{"Me/J":function(e,n,a){"use strict";a.r(n),a.d(n,"PlatformVhdDocsModule",function(){return De});var t={};a.r(t),a.d(t,"default",function(){return V});var l={};a.r(l),a.d(l,"default",function(){return y});var o={};a.r(o),a.d(o,"default",function(){return T});var i={};a.r(i),a.d(i,"default",function(){return S});var r={};a.r(r),a.d(r,"default",function(){return k});var d={};a.r(d),a.d(d,"default",function(){return x});var c={};a.r(c),a.d(c,"default",function(){return C});var u={};a.r(u),a.d(u,"default",function(){return U});var p={};a.r(p),a.d(p,"default",function(){return M});var s={};a.r(s),a.d(s,"default",function(){return D});var f={};a.r(f),a.d(f,"default",function(){return O});var m={};a.r(m),a.d(m,"default",function(){return w});var h=a("ofXK"),b=a("tyNb"),v=a("Huv7"),g=a("XaOr"),V='<button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" (click)="vhd.open()" label="Open value help dialog"></button>\n<br />\n<div fd-form-item *ngIf="actualItems.length">\n    <fd-tokenizer [compact]="true">\n        <fd-token\n            *ngFor="let token of actualItems"\n            [compact]="true"\n            [readOnly]="true"\n            >{{ token }}</fd-token\n        >\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog #vhd\n    dialogTitle="Simple value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [formatToken]="formatTokenFn"\n    [dataSource]="dataSource"\n    (valueChange)="valueChange($event)"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',y="import { Component } from '@angular/core';\n\nimport {\n  VhdDataProvider,\n  VhdValue,\n  VhdValueChangeEvent,\n  ValueHelpDialogDataSource,\n  VhdIncludedEntity,\n  VhdExcludedEntity,\n  VhdDefineIncludeStrategy,\n  VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: string;\n  city: string;\n  zipcode: string;\n  address: string;\n  nickname: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(137).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index + 1}`,\n      code: `${Math.floor(Math.random() * 99999)}`,\n      city: `City ${Math.floor(Math.random() * index)}`,\n      zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n      address: `Address ${Math.floor(Math.random() * index)}`,\n      nickname: `Nickname ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        name: `${value}`,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\nconst data = exampleDataSource();\n\n@Component({\n  selector: 'fdp-platform-vhd-basic-example',\n  templateUrl: './platform-vhd-basic-example.component.html'\n})\nexport class PlatformVhdBasicExampleComponent {\n  filters = data.filters;\n  dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n\n  actualValue: Partial<VhdValue<ExampleTestModel[]>> = {};\n\n  actualItems = [];\n  formatTokenFn = ((value: Partial<VhdValue<ExampleTestModel[]>>) => {\n    this.actualItems = [\n      ...(value.selected || []).map(item => item.name),\n      ...(value.conditions || []).map(item => this.conditionDisplayFn(item))\n    ];\n  }).bind(this);\n  conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity) => {\n    let value = (() => {\n      switch (item.strategy) {\n        case VhdDefineIncludeStrategy.empty:\n        case VhdDefineExcludeStrategy.not_empty:\n          return null;\n        case VhdDefineIncludeStrategy.between:\n          return `${item.value}...${item.valueTo}`;\n        case VhdDefineIncludeStrategy.contains:\n          return `*${item.value}*`;\n        case VhdDefineIncludeStrategy.equalTo:\n          return `=${item.value}`;\n        case VhdDefineIncludeStrategy.startsWith:\n          return `${item.value}*`;\n        case VhdDefineIncludeStrategy.endsWith:\n          return `*${item.value}`;\n        case VhdDefineIncludeStrategy.greaterThan:\n          return `>${item.value}`;\n        case VhdDefineIncludeStrategy.greaterThanEqual:\n          return `>=${item.value}`;\n        case VhdDefineIncludeStrategy.lessThan:\n          return `<${item.value}`;\n        case VhdDefineIncludeStrategy.lessThanEqual:\n          return `<=${item.value}`;\n        case VhdDefineExcludeStrategy.not_equalTo:\n          return `!(=${item.value})`;\n      }\n    })();\n    if (value && item.type === 'exclude') {\n      value = `!(${value})`;\n    }\n\n    return value;\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    this.actualValue = {...$event};\n  }\n}\n",T='<button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" (click)="vhd.open()" label="Open value help dialog"></button>\n<br />\n<div fd-form-item *ngIf="actualItems.length">\n    <fd-tokenizer [compact]="true">\n        <fd-token\n            *ngFor="let token of actualItems"\n            [compact]="true"\n            [readOnly]="true"\n            >{{ token }}</fd-token\n        >\n    </fd-tokenizer>\n</div>\n<fdp-value-help-dialog #vhd\n    dialogTitle="Custom strategy labels"\n    defineTabTitle="Define Conditions"\n    tabs="define"\n    [defineStrategyLabels]="customStrategyLabels"\n    [formatToken]="formatTokenFn"\n    (valueChange)="valueChange($event)"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="i !== 0"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',S="import { Component, OnInit } from '@angular/core';\n\nimport {\n  VhdDataProvider,\n  VhdValue,\n  VhdValueChangeEvent,\n  ValueHelpDialogDataSource,\n  VhdIncludedEntity,\n  VhdExcludedEntity,\n  VhdDefineIncludeStrategy,\n  VhdDefineExcludeStrategy\n} from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: string;\n  city: string;\n  zipcode: string;\n  address: string;\n  nickname: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(137).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index + 1}`,\n      code: `${Math.floor(Math.random() * 99999)}`,\n      city: `City ${Math.floor(Math.random() * index)}`,\n      zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n      address: `Address ${Math.floor(Math.random() * index)}`,\n      nickname: `Nickname ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        name: `${value}`,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\n@Component({\n  selector: 'fdp-platform-vhd-strategy-labels-example',\n  templateUrl: './platform-vhd-strategy-labels-example.component.html'\n})\nexport class PlatformVhdStrategyLabelExampleComponent implements OnInit {\n  filters: any;\n  dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n  actualValue: Partial<VhdValue<ExampleTestModel[]>> = {};\n  actualItems = [];\n\n  customStrategyLabels: {[key in keyof (typeof VhdDefineIncludeStrategy | typeof VhdDefineExcludeStrategy)]?: string} = {\n    equalTo: 'ilingana ne-',\n    between: 'FROM...TO'\n  };\n  formatTokenFn = ((value: Partial<VhdValue<ExampleTestModel[]>>) => {\n    this.actualItems = [\n      ...(value.selected || []).map(item => item.name),\n      ...(value.conditions || []).map(item => this.conditionDisplayFn(item)),\n    ];\n  }).bind(this);\n  \n  conditionDisplayFn = (item: VhdIncludedEntity | VhdExcludedEntity) => {\n    const value = (() => {\n      switch (item.strategy) {\n        case VhdDefineIncludeStrategy.empty:\n        case VhdDefineExcludeStrategy.not_empty:\n          return null;\n        case VhdDefineIncludeStrategy.between:\n          return `${item.value}...${item.valueTo}`;\n        case VhdDefineIncludeStrategy.contains:\n          return `*${item.value}*`;\n        case VhdDefineIncludeStrategy.equalTo:\n          return `=${item.value}`;\n        case VhdDefineIncludeStrategy.startsWith:\n          return `${item.value}*`;\n        case VhdDefineIncludeStrategy.endsWith:\n          return `*${item.value}`;\n        case VhdDefineIncludeStrategy.greaterThan:\n          return `>${item.value}`;\n        case VhdDefineIncludeStrategy.greaterThanEqual:\n          return `>=${item.value}`;\n        case VhdDefineIncludeStrategy.lessThan:\n          return `<${item.value}`;\n        case VhdDefineIncludeStrategy.lessThanEqual:\n          return `<=${item.value}`;\n        case VhdDefineExcludeStrategy.not_equalTo:\n          return `!(=${item.value})`;\n      }\n    })();\n\n    return value;\n  }\n\n  ngOnInit(): void {\n    const data = exampleDataSource();\n    this.filters = data.filters;\n    this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    this.actualValue = {...$event};\n  }\n}\n",k='<button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" (click)="vhd.open()" label="Open value help dialog"></button>\n\n<fdp-value-help-dialog #vhd\n    dialogTitle="Custom token function"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [dataSource]="dataSource"\n    [tokenizerFn]="tokenizerFn"\n    (valueChange)="valueChange($event)"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced || hasAdvanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',x="import { Component, OnInit } from '@angular/core';\n\nimport { VhdDataProvider, VhdValue, VhdValueChangeEvent, ValueHelpDialogDataSource } from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: number;\n  city: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(100).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index}`,\n      code: Math.floor(Math.random() * 99999),\n      city: `City ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\n@Component({\n  selector: 'fdp-platform-vhd-token-example',\n  templateUrl: './platform-vhd-token-example.component.html'\n})\nexport class PlatformVhdTokenExampleComponent implements OnInit {\n  filters: any;\n  dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n  hasAdvanced = false;\n  selectedValue = [];\n  currentValue: Partial<VhdValue> = {};\n\n  ngOnInit(): void {\n    const data = exampleDataSource();\n    this.filters = data.filters;\n    this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n  }\n\n  tokenizerFn = (row: ExampleTestModel) => {\n    return `${row.name} (Id: ${row.id})`;\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    console.log($event);\n    this.currentValue = $event;\n    this.selectedValue = [...($event.selected || [])];\n  }\n}\n",C='<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: single</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-single" [value]="values.single?.name"/>\n        <span fd-input-group-addon button="true">\n            <button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" [compact]="true" fdType="transparent" (click)="vhd1.open()"></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog #vhd1\n    dialogTitle="Single select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="single"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.single = $event.selected[0]"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-single">Selection type: multi</label>\n    <div style="overflow: auto;">\n        <ng-container *ngIf="values.multi">\n            <fd-token\n                fd-toolbar-item\n                *ngFor="let item of values.multi"\n                [compact]="true"\n                [readOnly]="true"\n            >{{ item.name }}</fd-token>\n        </ng-container>\n        <button fd-toolbar-item fdOverflowPriority="never" [compact]="true" fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" label="Open and select" glyph="value-help" (click)="vhd2.open()"></button>\n    </div>\n</div>\n<fdp-value-help-dialog #vhd2\n    dialogTitle="Multi select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="multi"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.multi = $event.selected"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n<br />\n<div fd-form-item>\n    <label fd-form-label for="test-selection-type-once">Selection type: once</label>\n    <fd-input-group>\n        <input fd-input-group-input fd-form-control id="test-selection-type-once" [value]="values.once?.name"/>\n        <span fd-input-group-addon button="true">\n            <button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" [compact]="true" fdType="transparent" (click)="vhd3.open()"></button>\n        </span>\n    </fd-input-group>\n</div>\n<fdp-value-help-dialog #vhd3\n    dialogTitle="Once select value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    searchSelection="once"\n    tabs="select"\n    [dataSource]="dataSource"\n    (valueChange)="values.once = $event.selected[0]"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>',U="import { Component, OnInit } from '@angular/core';\n\nimport { VhdDataProvider, VhdValue, VhdValueChangeEvent, ValueHelpDialogDataSource } from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: string;\n  city: string;\n  zipcode: string;\n  address: string;\n  nickname: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(137).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index + 1}`,\n      code: `${Math.floor(Math.random() * 99999)}`,\n      city: `City ${Math.floor(Math.random() * index)}`,\n      zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n      address: `Address ${Math.floor(Math.random() * index)}`,\n      nickname: `Nickname ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        name: `${value}`,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\n@Component({\n  selector: 'fdp-platform-vhd-input-example',\n  templateUrl: './platform-vhd-input-example.component.html'\n})\nexport class PlatformVhdInputExampleComponent implements OnInit {\n  filters: any;\n  dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n\n  values = {\n    single: null,\n    multi: null,\n    once: null\n  };\n  selectedValue: ExampleTestModel;\n  currentValue: VhdValue = {};\n\n  ngOnInit(): void {\n    const data = exampleDataSource();\n    this.filters = data.filters;\n    this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    this.currentValue = $event;\n    this.selectedValue = $event.selected[0];\n  }\n\n}\n",M='<div>\n    <fd-multi-input\n        [dropdownValues]="originalData"\n        placeholder="Search here"\n        [displayFn]="displayFunc"\n        [allowNewTokens]="true"\n        [newTokenParseFn]="parseFunc"\n        [(ngModel)]="selected"\n        (selectedChange)="multiSelectChange()"\n    >\n    </fd-multi-input>\n    <br />\n    <button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" (click)="vhd.open()" label="Open value help dialog"></button>\n</div>\n\n<fdp-value-help-dialog #vhd\n    dialogTitle="Multiple selection"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',D="import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { VhdDataProvider, VhdValue, VhdValueChangeEvent, ValueHelpDialogDataSource } from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: string;\n  city: string;\n  zipcode: string;\n  address: string;\n  nickname: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(137).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index + 1}`,\n      code: `${Math.floor(Math.random() * 99999)}`,\n      city: `City ${Math.floor(Math.random() * index)}`,\n      zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n      address: `Address ${Math.floor(Math.random() * index)}`,\n      nickname: `Nickname ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        name: `${value}`,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\n@Component({\n  selector: 'fdp-platform-vhd-multi-input-example',\n  templateUrl: './platform-vhd-multi-input-example.component.html'\n})\nexport class PlatformVhdMultiInputExampleComponent implements OnInit {\n  filters: any;\n  originalData: ExampleTestModel[];\n  dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n  currentValue: Partial<VhdValue> = {};\n  selected: ExampleTestModel[] = [];\n\n  constructor(private readonly _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    const data = exampleDataSource();\n    this.filters = data.filters;\n    this.originalData = data.dataSource;\n    this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    this.selected = [...$event.selected];\n    this._changeDetectorRef.detectChanges();\n  }\n\n  displayFunc(obj: any): string {\n    return obj.name.toLocaleUpperCase();\n  }\n\n  multiSelectChange(): void {\n    this.currentValue.selected = this.selected;\n    this._changeDetectorRef.detectChanges();\n  }\n\n  parseFunc(value: string): object {\n    if (value && value.length) {\n        return { name: value, id: Date.now() };\n    }\n  }\n}\n",O='<div>\n    <fd-input-group>\n        <input [value]="selectedValue?.name || \'\'" fd-input-group-input fd-form-control/>\n        <span fd-input-group-addon button="true">\n            <button fd-button fd-button aria-label="Open value help dialog" title="Open value help dialog" glyph="value-help" fdType="transparent" (click)="vhd.open()"></button>\n        </span>\n    </fd-input-group>\n</div>\n\n<fdp-value-help-dialog #vhd\n    dialogTitle="Mobile value help dialog"\n    uniqueKey="id"\n    tokenViewField="name"\n    selectTabTitle="Select from list"\n    defineTabTitle="Define Conditions"\n    [mobile]="true"\n    [dataSource]="dataSource"\n    [value]="currentValue"\n    (valueChange)="valueChange($event)"\n>\n    <fdp-value-help-dialog-search\n        placeholder="Search..."\n    ></fdp-value-help-dialog-search>\n    <fdp-value-help-dialog-filter\n        *ngFor="let filter of filters; index as i"\n        [main]="i < 2"\n        [key]="filter.key"\n        [label]="filter.label"\n        [advanced]="filter.advanced"\n    ></fdp-value-help-dialog-filter>\n</fdp-value-help-dialog>\n',w="import { Component, OnInit } from '@angular/core';\n\nimport { VhdDataProvider, VhdValue, VhdValueChangeEvent, ValueHelpDialogDataSource } from '@fundamental-ngx/platform';\n\ninterface ExampleTestModel {\n  id: number;\n  name: string;\n  code: string;\n  city: string;\n  zipcode: string;\n  address: string;\n  nickname: string;\n}\n\nconst exampleDataSource = () => {\n  const dataSource = Array(137).fill(null).map((_value, index) => {\n    return {\n      id: index + 1,\n      name: `Name ${index + 1}`,\n      code: `${Math.floor(Math.random() * 99999)}`,\n      city: `City ${Math.floor(Math.random() * index)}`,\n      zipcode: `zipcode ${Math.floor(Math.random() * index)}`,\n      address: `Address ${Math.floor(Math.random() * index)}`,\n      nickname: `Nickname ${Math.floor(Math.random() * index)}`\n    }\n  })\n  return {\n    dataSource: dataSource,\n    filters: Object.keys(dataSource[0]).map((value, index) => {\n      return {\n        key: value,\n        name: `${value}`,\n        label: `Product ${value}`,\n        advanced: index > 0\n      }\n    })\n  }\n}\n\n@Component({\n  selector: 'fdp-platform-vhd-mobile-example',\n  templateUrl: './platform-vhd-mobile-example.component.html'\n})\nexport class PlatformVhdMobileExampleComponent implements OnInit {\n  filters: any;\n  dataSource: ValueHelpDialogDataSource<ExampleTestModel>;\n  selectedValue: ExampleTestModel;\n  currentValue: Partial<VhdValue> = {};\n\n  ngOnInit(): void {\n    const data = exampleDataSource();\n    this.filters = data.filters;\n    this.dataSource = new ValueHelpDialogDataSource(new VhdDataProvider(data.dataSource));\n  }\n\n  valueChange($event: VhdValueChangeEvent<ExampleTestModel[]>): void {\n    this.currentValue = $event;\n    this.selectedValue = $event.selected[0];\n  }\n\n}\n",F=a("fXoL"),$=a("ddaM"),I=a("kt86"),E=a("X1JU"),P=a("mrSG"),q=a("rp8N"),Q=a("JnS7"),H=a("I/CE"),z=a("y2Sw"),N=a("HTz5"),j=a("+Xsg");function R(e,n){if(1&e&&(F.Vb(0,"fd-token",9),F.Tc(1),F.Ub()),2&e){var a=n.$implicit;F.uc("compact",!0)("readOnly",!0),F.Cb(1),F.Uc(a)}}function A(e,n){if(1&e&&(F.Vb(0,"div",6),F.Vb(1,"fd-tokenizer",7),F.Rc(2,R,2,3,"fd-token",8),F.Ub(),F.Ub()),2&e){var a=F.mc();F.Cb(1),F.uc("compact",!0),F.Cb(1),F.uc("ngForOf",a.actualItems)}}function _(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",10),2&e){var a=n.$implicit,t=n.index;F.uc("main",t<2)("key",a.key)("label",a.label)("advanced",0!==t)}}var W,K={dataSource:W=Array(137).fill(null).map(function(e,n){return{id:n+1,name:"Name "+(n+1),code:""+Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n),zipcode:"zipcode "+Math.floor(Math.random()*n),address:"Address "+Math.floor(Math.random()*n),nickname:"Nickname "+Math.floor(Math.random()*n)}}),filters:Object.keys(W[0]).map(function(e,n){return{key:e,name:""+e,label:"Product "+e,advanced:n>0}})},L=function(){function e(){var e=this;this.filters=K.filters,this.dataSource=new g.ib(new g.jb(K.dataSource)),this.actualValue={},this.actualItems=[],this.formatTokenFn=(function(n){e.actualItems=Object(P.g)((n.selected||[]).map(function(e){return e.name}),(n.conditions||[]).map(function(n){return e.conditionDisplayFn(n)}))}).bind(this),this.conditionDisplayFn=function(e){var n=function(){switch(e.strategy){case g.lb.empty:case g.kb.not_empty:return null;case g.lb.between:return e.value+"..."+e.valueTo;case g.lb.contains:return"*"+e.value+"*";case g.lb.equalTo:return"="+e.value;case g.lb.startsWith:return e.value+"*";case g.lb.endsWith:return"*"+e.value;case g.lb.greaterThan:return">"+e.value;case g.lb.greaterThanEqual:return">="+e.value;case g.lb.lessThan:return"<"+e.value;case g.lb.lessThanEqual:return"<="+e.value;case g.kb.not_equalTo:return"!(="+e.value+")"}}();return n&&"exclude"===e.type&&(n="!("+n+")"),n}}return e.prototype.valueChange=function(e){this.actualValue=Object(P.a)({},e)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-basic-example"]],decls:7,vars:4,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["fd-form-item","",4,"ngIf"],["dialogTitle","Simple value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions",3,"formatToken","dataSource","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-form-item",""],[3,"compact"],[3,"compact","readOnly",4,"ngFor","ngForOf"],[3,"compact","readOnly"],[3,"main","key","label","advanced"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"button",0),F.ic("click",function(){return F.Ic(a),F.Gc(4).open()}),F.Ub(),F.Qb(1,"br"),F.Rc(2,A,3,2,"div",1),F.Vb(3,"fdp-value-help-dialog",2,3),F.ic("valueChange",function(e){return n.valueChange(e)}),F.Qb(5,"fdp-value-help-dialog-search",4),F.Rc(6,_,1,4,"fdp-value-help-dialog-filter",5),F.Ub()}2&e&&(F.Cb(2),F.uc("ngIf",n.actualItems.length),F.Cb(1),F.uc("formatToken",n.formatTokenFn)("dataSource",n.dataSource),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[q.a,h.o,Q.a,H.a,h.n,z.a,N.a,j.a],encapsulation:2}),e}(),J=a("5HkS"),G=a("Hxo2");function X(e,n){if(1&e&&(F.Vb(0,"fd-token",9),F.Tc(1),F.Ub()),2&e){var a=n.$implicit;F.uc("compact",!0)("readOnly",!0),F.Cb(1),F.Uc(a)}}function B(e,n){if(1&e&&(F.Vb(0,"div",6),F.Vb(1,"fd-tokenizer",7),F.Rc(2,X,2,3,"fd-token",8),F.Ub(),F.Ub()),2&e){var a=F.mc();F.Cb(1),F.uc("compact",!0),F.Cb(1),F.uc("ngForOf",a.actualItems)}}function Y(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",10),2&e){var a=n.$implicit,t=n.index;F.uc("main",t<2)("key",a.key)("label",a.label)("advanced",0!==t)}}var Z=function(){function e(){var e=this;this.actualValue={},this.actualItems=[],this.customStrategyLabels={equalTo:"ilingana ne-",between:"FROM...TO"},this.formatTokenFn=(function(n){e.actualItems=Object(P.g)((n.selected||[]).map(function(e){return e.name}),(n.conditions||[]).map(function(n){return e.conditionDisplayFn(n)}))}).bind(this),this.conditionDisplayFn=function(e){return function(){switch(e.strategy){case g.lb.empty:case g.kb.not_empty:return null;case g.lb.between:return e.value+"..."+e.valueTo;case g.lb.contains:return"*"+e.value+"*";case g.lb.equalTo:return"="+e.value;case g.lb.startsWith:return e.value+"*";case g.lb.endsWith:return"*"+e.value;case g.lb.greaterThan:return">"+e.value;case g.lb.greaterThanEqual:return">="+e.value;case g.lb.lessThan:return"<"+e.value;case g.lb.lessThanEqual:return"<="+e.value;case g.kb.not_equalTo:return"!(="+e.value+")"}}()}}return e.prototype.ngOnInit=function(){var e=function(){var e=Array(137).fill(null).map(function(e,n){return{id:n+1,name:"Name "+(n+1),code:""+Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n),zipcode:"zipcode "+Math.floor(Math.random()*n),address:"Address "+Math.floor(Math.random()*n),nickname:"Nickname "+Math.floor(Math.random()*n)}});return{dataSource:e,filters:Object.keys(e[0]).map(function(e,n){return{key:e,name:""+e,label:"Product "+e,advanced:n>0}})}}();this.filters=e.filters,this.dataSource=new g.ib(new g.jb(e.dataSource))},e.prototype.valueChange=function(e){this.actualValue=Object(P.a)({},e)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-strategy-labels-example"]],decls:7,vars:4,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["fd-form-item","",4,"ngIf"],["dialogTitle","Custom strategy labels","defineTabTitle","Define Conditions","tabs","define",3,"defineStrategyLabels","formatToken","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],["fd-form-item",""],[3,"compact"],[3,"compact","readOnly",4,"ngFor","ngForOf"],[3,"compact","readOnly"],[3,"main","key","label","advanced"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"button",0),F.ic("click",function(){return F.Ic(a),F.Gc(4).open()}),F.Ub(),F.Qb(1,"br"),F.Rc(2,B,3,2,"div",1),F.Vb(3,"fdp-value-help-dialog",2,3),F.ic("valueChange",function(e){return n.valueChange(e)}),F.Qb(5,"fdp-value-help-dialog-search",4),F.Rc(6,Y,1,4,"fdp-value-help-dialog-filter",5),F.Ub()}2&e&&(F.Cb(2),F.uc("ngIf",n.actualItems.length),F.Cb(1),F.uc("defineStrategyLabels",n.customStrategyLabels)("formatToken",n.formatTokenFn),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[q.a,h.o,Q.a,H.a,h.n,z.a,N.a,j.a],encapsulation:2}),e}();function ee(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",5),2&e){var a=n.$implicit,t=n.index,l=F.mc();F.uc("main",t<2)("key",a.key)("label",a.label)("advanced",a.advanced||l.hasAdvanced)}}var ne=function(){function e(){this.hasAdvanced=!1,this.selectedValue=[],this.currentValue={},this.tokenizerFn=function(e){return e.name+" (Id: "+e.id+")"}}return e.prototype.ngOnInit=function(){var e=function(){var e=Array(100).fill(null).map(function(e,n){return{id:n+1,name:"Name "+n,code:Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n)}});return{dataSource:e,filters:Object.keys(e[0]).map(function(e,n){return{key:e,label:"Product "+e,advanced:n>0}})}}();this.filters=e.filters,this.dataSource=new g.ib(new g.jb(e.dataSource))},e.prototype.valueChange=function(e){console.log(e),this.currentValue=e,this.selectedValue=Object(P.g)(e.selected||[])},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-token-example"]],decls:5,vars:3,consts:[["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Custom token function","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions",3,"dataSource","tokenizerFn","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"button",0),F.ic("click",function(){return F.Ic(a),F.Gc(2).open()}),F.Ub(),F.Vb(1,"fdp-value-help-dialog",1,2),F.ic("valueChange",function(e){return n.valueChange(e)}),F.Qb(3,"fdp-value-help-dialog-search",3),F.Rc(4,ee,1,4,"fdp-value-help-dialog-filter",4),F.Ub()}2&e&&(F.Cb(1),F.uc("dataSource",n.dataSource)("tokenizerFn",n.tokenizerFn),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[q.a,Q.a,H.a,h.n,j.a],encapsulation:2}),e}(),ae=a("Dtj0"),te=a("fb1j"),le=a("Hyky"),oe=a("1aDH"),ie=a("PtXP");function re(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",19),2&e){var a=n.$implicit;F.uc("main",n.index<2)("key",a.key)("label",a.label)("advanced",a.advanced)}}function de(e,n){if(1&e&&(F.Vb(0,"fd-token",21),F.Tc(1),F.Ub()),2&e){var a=n.$implicit;F.uc("compact",!0)("readOnly",!0),F.Cb(1),F.Uc(a.name)}}function ce(e,n){if(1&e&&(F.Tb(0),F.Rc(1,de,2,3,"fd-token",20),F.Sb()),2&e){var a=F.mc();F.Cb(1),F.uc("ngForOf",a.values.multi)}}function ue(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",19),2&e){var a=n.$implicit;F.uc("main",n.index<2)("key",a.key)("label",a.label)("advanced",a.advanced)}}function pe(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",19),2&e){var a=n.$implicit;F.uc("main",n.index<2)("key",a.key)("label",a.label)("advanced",a.advanced)}}var se=function(){function e(){this.values={single:null,multi:null,once:null},this.currentValue={}}return e.prototype.ngOnInit=function(){var e=function(){var e=Array(137).fill(null).map(function(e,n){return{id:n+1,name:"Name "+(n+1),code:""+Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n),zipcode:"zipcode "+Math.floor(Math.random()*n),address:"Address "+Math.floor(Math.random()*n),nickname:"Nickname "+Math.floor(Math.random()*n)}});return{dataSource:e,filters:Object.keys(e[0]).map(function(e,n){return{key:e,name:""+e,label:"Product "+e,advanced:n>0}})}}();this.filters=e.filters,this.dataSource=new g.ib(new g.jb(e.dataSource))},e.prototype.valueChange=function(e){this.currentValue=e,this.selectedValue=e.selected[0]},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-input-example"]],decls:34,vars:12,consts:[["fd-form-item",""],["fd-form-label","","for","test-selection-type-single"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-single",3,"value"],["fd-input-group-addon","","button","true"],["fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"compact","click"],["dialogTitle","Single select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","single","tabs","select",3,"dataSource","valueChange"],["vhd1",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[2,"overflow","auto"],[4,"ngIf"],["fd-toolbar-item","","fdOverflowPriority","never","fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","label","Open and select","glyph","value-help",3,"compact","click"],["dialogTitle","Multi select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","multi","tabs","select",3,"dataSource","valueChange"],["vhd2",""],["fd-form-label","","for","test-selection-type-once"],["fd-input-group-input","","fd-form-control","","id","test-selection-type-once",3,"value"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"compact","click"],["dialogTitle","Once select value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","searchSelection","once","tabs","select",3,"dataSource","valueChange"],["vhd3",""],[3,"main","key","label","advanced"],["fd-toolbar-item","",3,"compact","readOnly",4,"ngFor","ngForOf"],["fd-toolbar-item","",3,"compact","readOnly"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"div",0),F.Vb(1,"label",1),F.Tc(2,"Selection type: single"),F.Ub(),F.Vb(3,"fd-input-group"),F.Qb(4,"input",2),F.Vb(5,"span",3),F.Vb(6,"button",4),F.ic("click",function(){return F.Ic(a),F.Gc(8).open()}),F.Ub(),F.Ub(),F.Ub(),F.Ub(),F.Vb(7,"fdp-value-help-dialog",5,6),F.ic("valueChange",function(e){return n.values.single=e.selected[0]}),F.Qb(9,"fdp-value-help-dialog-search",7),F.Rc(10,re,1,4,"fdp-value-help-dialog-filter",8),F.Ub(),F.Qb(11,"br"),F.Vb(12,"div",0),F.Vb(13,"label",1),F.Tc(14,"Selection type: multi"),F.Ub(),F.Vb(15,"div",9),F.Rc(16,ce,2,1,"ng-container",10),F.Vb(17,"button",11),F.ic("click",function(){return F.Ic(a),F.Gc(19).open()}),F.Ub(),F.Ub(),F.Ub(),F.Vb(18,"fdp-value-help-dialog",12,13),F.ic("valueChange",function(e){return n.values.multi=e.selected}),F.Qb(20,"fdp-value-help-dialog-search",7),F.Rc(21,ue,1,4,"fdp-value-help-dialog-filter",8),F.Ub(),F.Qb(22,"br"),F.Vb(23,"div",0),F.Vb(24,"label",14),F.Tc(25,"Selection type: once"),F.Ub(),F.Vb(26,"fd-input-group"),F.Qb(27,"input",15),F.Vb(28,"span",3),F.Vb(29,"button",16),F.ic("click",function(){return F.Ic(a),F.Gc(31).open()}),F.Ub(),F.Ub(),F.Ub(),F.Ub(),F.Vb(30,"fdp-value-help-dialog",17,18),F.ic("valueChange",function(e){return n.values.once=e.selected[0]}),F.Qb(32,"fdp-value-help-dialog-search",7),F.Rc(33,pe,1,4,"fdp-value-help-dialog-filter",8),F.Ub()}2&e&&(F.Cb(4),F.uc("value",null==n.values.single?null:n.values.single.name),F.Cb(2),F.uc("compact",!0),F.Cb(1),F.uc("dataSource",n.dataSource),F.Cb(3),F.uc("ngForOf",n.filters),F.Cb(6),F.uc("ngIf",n.values.multi),F.Cb(1),F.uc("compact",!0),F.Cb(1),F.uc("dataSource",n.dataSource),F.Cb(3),F.uc("ngForOf",n.filters),F.Cb(6),F.uc("value",null==n.values.once?null:n.values.once.name),F.Cb(2),F.uc("compact",!0),F.Cb(1),F.uc("dataSource",n.dataSource),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[ae.a,te.a,le.b,le.a,q.a,Q.a,H.a,h.n,h.o,oe.a,ie.a,j.a,N.a],encapsulation:2}),e}(),fe=a("9FxG"),me=a("3Pt+");function he(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",6),2&e){var a=n.$implicit;F.uc("main",n.index<2)("key",a.key)("label",a.label)("advanced",a.advanced)}}var be=function(){function e(e){this._changeDetectorRef=e,this.currentValue={},this.selected=[]}return e.prototype.ngOnInit=function(){var e=function(){var e=Array(137).fill(null).map(function(e,n){return{id:n+1,name:"Name "+(n+1),code:""+Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n),zipcode:"zipcode "+Math.floor(Math.random()*n),address:"Address "+Math.floor(Math.random()*n),nickname:"Nickname "+Math.floor(Math.random()*n)}});return{dataSource:e,filters:Object.keys(e[0]).map(function(e,n){return{key:e,name:""+e,label:"Product "+e,advanced:n>0}})}}();this.filters=e.filters,this.originalData=e.dataSource,this.dataSource=new g.ib(new g.jb(e.dataSource))},e.prototype.valueChange=function(e){this.selected=Object(P.g)(e.selected),this._changeDetectorRef.detectChanges()},e.prototype.displayFunc=function(e){return e.name.toLocaleUpperCase()},e.prototype.multiSelectChange=function(){this.currentValue.selected=this.selected,this._changeDetectorRef.detectChanges()},e.prototype.parseFunc=function(e){if(e&&e.length)return{name:e,id:Date.now()}},e.\u0275fac=function(n){return new(n||e)(F.Pb(F.h))},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-multi-input-example"]],decls:8,vars:8,consts:[["placeholder","Search here",3,"dropdownValues","displayFn","allowNewTokens","newTokenParseFn","ngModel","ngModelChange","selectedChange"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","label","Open value help dialog",3,"click"],["dialogTitle","Multiple selection","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions",3,"dataSource","value","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"div"),F.Vb(1,"fd-multi-input",0),F.ic("ngModelChange",function(e){return n.selected=e})("selectedChange",function(){return n.multiSelectChange()}),F.Ub(),F.Qb(2,"br"),F.Vb(3,"button",1),F.ic("click",function(){return F.Ic(a),F.Gc(5).open()}),F.Ub(),F.Ub(),F.Vb(4,"fdp-value-help-dialog",2,3),F.ic("valueChange",function(e){return n.valueChange(e)}),F.Qb(6,"fdp-value-help-dialog-search",4),F.Rc(7,he,1,4,"fdp-value-help-dialog-filter",5),F.Ub()}2&e&&(F.Cb(1),F.uc("dropdownValues",n.originalData)("displayFn",n.displayFunc)("allowNewTokens",!0)("newTokenParseFn",n.parseFunc)("ngModel",n.selected),F.Cb(3),F.uc("dataSource",n.dataSource)("value",n.currentValue),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[fe.a,me.q,me.t,q.a,Q.a,H.a,h.n,j.a],encapsulation:2}),e}();function ve(e,n){if(1&e&&F.Qb(0,"fdp-value-help-dialog-filter",7),2&e){var a=n.$implicit;F.uc("main",n.index<2)("key",a.key)("label",a.label)("advanced",a.advanced)}}var ge=function(){function e(){this.currentValue={}}return e.prototype.ngOnInit=function(){var e=function(){var e=Array(137).fill(null).map(function(e,n){return{id:n+1,name:"Name "+(n+1),code:""+Math.floor(99999*Math.random()),city:"City "+Math.floor(Math.random()*n),zipcode:"zipcode "+Math.floor(Math.random()*n),address:"Address "+Math.floor(Math.random()*n),nickname:"Nickname "+Math.floor(Math.random()*n)}});return{dataSource:e,filters:Object.keys(e[0]).map(function(e,n){return{key:e,name:""+e,label:"Product "+e,advanced:n>0}})}}();this.filters=e.filters,this.dataSource=new g.ib(new g.jb(e.dataSource))},e.prototype.valueChange=function(e){this.currentValue=e,this.selectedValue=e.selected[0]},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["fdp-platform-vhd-mobile-example"]],decls:9,vars:5,consts:[["fd-input-group-input","","fd-form-control","",3,"value"],["fd-input-group-addon","","button","true"],["fd-button","","fd-button","","aria-label","Open value help dialog","title","Open value help dialog","glyph","value-help","fdType","transparent",3,"click"],["dialogTitle","Mobile value help dialog","uniqueKey","id","tokenViewField","name","selectTabTitle","Select from list","defineTabTitle","Define Conditions",3,"mobile","dataSource","value","valueChange"],["vhd",""],["placeholder","Search..."],[3,"main","key","label","advanced",4,"ngFor","ngForOf"],[3,"main","key","label","advanced"]],template:function(e,n){if(1&e){var a=F.Wb();F.Vb(0,"div"),F.Vb(1,"fd-input-group"),F.Qb(2,"input",0),F.Vb(3,"span",1),F.Vb(4,"button",2),F.ic("click",function(){return F.Ic(a),F.Gc(6).open()}),F.Ub(),F.Ub(),F.Ub(),F.Ub(),F.Vb(5,"fdp-value-help-dialog",3,4),F.ic("valueChange",function(e){return n.valueChange(e)}),F.Qb(7,"fdp-value-help-dialog-search",5),F.Rc(8,ve,1,4,"fdp-value-help-dialog-filter",6),F.Ub()}2&e&&(F.Cb(2),F.uc("value",(null==n.selectedValue?null:n.selectedValue.name)||""),F.Cb(3),F.uc("mobile",!0)("dataSource",n.dataSource)("value",n.currentValue),F.Cb(3),F.uc("ngForOf",n.filters))},directives:[te.a,le.b,le.a,q.a,Q.a,H.a,h.n,j.a],encapsulation:2}),e}(),Ve=function(){function e(){this.basicValueHelpDialog=[{language:"html",code:t,fileName:"platform-vhd-basic-example"},{language:"typescript",component:"PlatformVhdBasicExampleComponent",code:l,fileName:"platform-vhd-basic-example"}],this.strategyLabelValueHelpDialog=[{language:"html",code:o,fileName:"platform-vhd-strategy-labels-example"},{language:"typescript",component:"PlatformVhdStrategyLabelExampleComponent",code:i,fileName:"platform-vhd-strategy-labels-example"}],this.tokenValueHelpDialog=[{language:"html",code:r,fileName:"platform-vhd-token-example"},{language:"typescript",component:"PlatformVhdTokenExampleComponent",code:d,fileName:"platform-vhd-token-example"}],this.inputValueHelpDialog=[{language:"html",code:c,fileName:"platform-vhd-input-example"},{language:"typescript",component:"PlatformVhdInputExampleComponent",code:u,fileName:"platform-vhd-input-example"}],this.multiInputValueHelpDialog=[{language:"html",code:p,fileName:"platform-vhd-multi-input-example"},{language:"typescript",component:"PlatformVhdMultiInputExampleComponent",code:s,fileName:"platform-vhd-multi-input-example"}],this.mobileValueHelpDialog=[{language:"html",code:f,fileName:"platform-vhd-mobile-example"},{language:"typescript",component:"PlatformVhdMobileExampleComponent",code:m,fileName:"platform-vhd-mobile-example"}]}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["app-platform-vhd"]],decls:235,vars:6,consts:[["id","vhd-basic","componentName","value-help-dialog"],[3,"exampleFiles"],["id","vhd-strategy-label","componentName","value-help-dialog"],["id","vhd-selection-token","componentName","value-help-dialog"],["id","vhd-selection-mobile","componentName","value-help-dialog"]],template:function(e,n){1&e&&(F.Vb(0,"fd-docs-section-title",0),F.Tc(1," Basic Value Help Dialog.\n"),F.Ub(),F.Vb(2,"description"),F.Vb(3,"p"),F.Tc(4,"Example to demonstrate the basic call Value Help Dialog."),F.Ub(),F.Vb(5,"p"),F.Tc(6,"Basic setup"),F.Ub(),F.Vb(7,"strong"),F.Tc(8,"fdp-value-help-dialog"),F.Ub(),F.Vb(9,"ul"),F.Vb(10,"li"),F.Tc(11,"Set "),F.Vb(12,"code"),F.Tc(13,"[dialogTitle]"),F.Ub(),F.Tc(14,", it should be string. It will show as header's title of the dialog window."),F.Ub(),F.Vb(15,"li"),F.Tc(16,"Set "),F.Vb(17,"code"),F.Tc(18,"[uniqueKey]"),F.Ub(),F.Tc(19," it should be uniq field from data source. "),F.Vb(20,"em"),F.Tc(21,"Required field for `selected from list` tab"),F.Ub(),F.Ub(),F.Vb(22,"li"),F.Tc(23," Set "),F.Vb(24,"code"),F.Tc(25,"[tokenViewField]"),F.Ub(),F.Tc(26," or "),F.Vb(27,"code"),F.Tc(28,"[tokenizerFn]"),F.Ub(),F.Tc(29," property to render selected item token. "),F.Vb(30,"em"),F.Tc(31,"Required field for `selected from list` tab"),F.Ub(),F.Vb(32,"code"),F.Tc(33,"[tokenViewField]"),F.Ub(),F.Tc(34," should be a string equal key from data source. Need to render selected token. "),F.Qb(35,"br"),F.Vb(36,"code"),F.Tc(37,"[tokenizerFn]"),F.Ub(),F.Tc(38," should be a function. "),F.Vb(39,"em"),F.Tc(40,"It has higher prio that `tokenViewField`"),F.Ub(),F.Ub(),F.Vb(41,"li"),F.Tc(42,"Set "),F.Vb(43,"code"),F.Tc(44,"[dataSource]"),F.Ub(),F.Tc(45," property to your data source. "),F.Vb(46,"em"),F.Tc(47,"Required field for `selected from list` tab"),F.Ub(),F.Ub(),F.Ub(),F.Vb(48,"strong"),F.Tc(49,"fdp-value-help-dialog-filter"),F.Ub(),F.Vb(50,"ul"),F.Vb(51,"li"),F.Tc(52," Set "),F.Vb(53,"code"),F.Tc(54,"[key]"),F.Ub(),F.Tc(55," property to string, should be equal to field from data source. "),F.Vb(56,"em"),F.Tc(57,"Required field."),F.Ub(),F.Ub(),F.Vb(58,"li"),F.Tc(59," Set "),F.Vb(60,"code"),F.Tc(61,"[label]"),F.Ub(),F.Tc(62," property to string, it will show as header in search table. If you skip this field, key will appear instead label. "),F.Ub(),F.Ub(),F.Ub(),F.Vb(63,"component-example"),F.Qb(64,"fdp-platform-vhd-basic-example"),F.Ub(),F.Qb(65,"code-example",1),F.Qb(66,"separator"),F.Vb(67,"fd-docs-section-title",2),F.Tc(68," Custom strategy labels.\n"),F.Ub(),F.Vb(69,"description"),F.Vb(70,"p"),F.Tc(71,"Example to demonstrate custom strategy labels for Define Conditions tab"),F.Ub(),F.Vb(72,"p"),F.Tc(73,"By default we're using strategy labels:"),F.Ub(),F.Vb(74,"ul"),F.Vb(75,"li"),F.Vb(76,"code"),F.Tc(77,"contains = 'contains'"),F.Ub(),F.Ub(),F.Vb(78,"li"),F.Vb(79,"code"),F.Tc(80,"equalTo = 'equal to'"),F.Ub(),F.Ub(),F.Vb(81,"li"),F.Vb(82,"code"),F.Tc(83,"between = 'between'"),F.Ub(),F.Ub(),F.Vb(84,"li"),F.Vb(85,"code"),F.Tc(86,"startsWith = 'starts with'"),F.Ub(),F.Ub(),F.Vb(87,"li"),F.Vb(88,"code"),F.Tc(89,"endsWith = 'ends with'"),F.Ub(),F.Ub(),F.Vb(90,"li"),F.Vb(91,"code"),F.Tc(92,"lessThan = 'less than'"),F.Ub(),F.Ub(),F.Vb(93,"li"),F.Vb(94,"code"),F.Tc(95,"lessThanEqual = 'less than or equal to'"),F.Ub(),F.Ub(),F.Vb(96,"li"),F.Vb(97,"code"),F.Tc(98,"greaterThan = 'greater than'"),F.Ub(),F.Ub(),F.Vb(99,"li"),F.Vb(100,"code"),F.Tc(101,"greaterThanEqual = 'greater than or equal to'"),F.Ub(),F.Ub(),F.Vb(102,"li"),F.Vb(103,"code"),F.Tc(104," empty = 'empty'"),F.Ub(),F.Ub(),F.Ub(),F.Vb(105,"p"),F.Tc(106,"Set "),F.Vb(107,"code"),F.Tc(108,"[defineStrategyLabels]"),F.Ub(),F.Tc(109," for you custom strategy label. All keys are optional"),F.Ub(),F.Vb(110,"ul"),F.Vb(111,"li"),F.Tc(112,"Allowed keys: "),F.Vb(113,"code"),F.Tc(114,"contains"),F.Ub(),F.Tc(115,", "),F.Vb(116,"code"),F.Tc(117,"equalTo"),F.Ub(),F.Tc(118,", "),F.Vb(119,"code"),F.Tc(120,"between"),F.Ub(),F.Tc(121,", "),F.Vb(122,"code"),F.Tc(123,"startsWith"),F.Ub(),F.Tc(124,", "),F.Vb(125,"code"),F.Tc(126,"endsWith"),F.Ub(),F.Tc(127,", "),F.Vb(128,"code"),F.Tc(129,"lessThan"),F.Ub(),F.Tc(130,", "),F.Vb(131,"code"),F.Tc(132,"lessThanEqual"),F.Ub(),F.Tc(133,", "),F.Vb(134,"code"),F.Tc(135,"greaterThan"),F.Ub(),F.Tc(136,", "),F.Vb(137,"code"),F.Tc(138,"greaterThanEqual"),F.Ub(),F.Tc(139,", "),F.Vb(140,"code"),F.Tc(141,"empty"),F.Ub(),F.Ub(),F.Ub(),F.Ub(),F.Vb(142,"component-example"),F.Qb(143,"fdp-platform-vhd-strategy-labels-example"),F.Ub(),F.Qb(144,"code-example",1),F.Qb(145,"separator"),F.Vb(146,"fd-docs-section-title",3),F.Tc(147," Token display function for the Value Help Dialog.\n"),F.Ub(),F.Vb(148,"description"),F.Vb(149,"ul"),F.Vb(150,"li"),F.Tc(151,"Set "),F.Vb(152,"code"),F.Tc(153,"[tokenViewField]"),F.Ub(),F.Tc(154," property to name from data source fields. It'll use for render custom token in selection panel."),F.Ub(),F.Vb(155,"li"),F.Tc(156,"Set "),F.Vb(157,"code"),F.Tc(158,"[tokenizerFn]"),F.Ub(),F.Tc(159," property to your function. It'll use for render custom token in selection panel."),F.Ub(),F.Ub(),F.Vb(160,"p"),F.Vb(161,"code"),F.Tc(162,"[tokenizerFn]"),F.Ub(),F.Tc(163," has higher priority than "),F.Vb(164,"code"),F.Tc(165,"[tokenViewField]"),F.Ub(),F.Ub(),F.Vb(166,"p"),F.Tc(167,"Example to demonstrate the token display function for selected items panel in the footer of the Value Help Dialog."),F.Ub(),F.Ub(),F.Vb(168,"component-example"),F.Qb(169,"fdp-platform-vhd-token-example"),F.Ub(),F.Qb(170,"code-example",1),F.Qb(171,"separator"),F.Vb(172,"fd-docs-section-title",3),F.Tc(173," Selection in Value Help Dialog.\n"),F.Ub(),F.Vb(174,"description"),F.Vb(175,"ul"),F.Vb(176,"li"),F.Tc(177,"Set "),F.Vb(178,"code"),F.Tc(179,"[searchSelection]"),F.Ub(),F.Tc(180," property to "),F.Vb(181,"strong"),F.Tc(182,"multi"),F.Ub(),F.Tc(183,", if you want to select multiple rows from search table"),F.Ub(),F.Vb(184,"li"),F.Tc(185,"Set "),F.Vb(186,"code"),F.Tc(187,"[searchSelection]"),F.Ub(),F.Tc(188," property to "),F.Vb(189,"strong"),F.Tc(190,"single"),F.Ub(),F.Tc(191,", if you want to select single row from search table without close dialog"),F.Ub(),F.Vb(192,"li"),F.Tc(193,"Set "),F.Vb(194,"code"),F.Tc(195,"[searchSelection]"),F.Ub(),F.Tc(196," property to "),F.Vb(197,"strong"),F.Tc(198,"once"),F.Ub(),F.Tc(199,", if you want to select single row from search table and success dialog with this value"),F.Ub(),F.Ub(),F.Vb(200,"p"),F.Tc(201,"Example to demonstrate using Value Help Dialog with input field and single selection."),F.Ub(),F.Ub(),F.Vb(202,"component-example"),F.Qb(203,"fdp-platform-vhd-input-example"),F.Ub(),F.Qb(204,"code-example",1),F.Qb(205,"separator"),F.Vb(206,"fd-docs-section-title",3),F.Tc(207," Multi Input field with Value Help Dialog.\n"),F.Ub(),F.Vb(208,"description"),F.Vb(209,"p"),F.Tc(210,"Example to demonstrate using Value Help Dialog with multi input field."),F.Ub(),F.Ub(),F.Vb(211,"component-example"),F.Qb(212,"fdp-platform-vhd-multi-input-example"),F.Ub(),F.Qb(213,"code-example",1),F.Qb(214,"separator"),F.Vb(215,"fd-docs-section-title",4),F.Tc(216," Mobile version\n"),F.Ub(),F.Vb(217,"description"),F.Vb(218,"p"),F.Tc(219,"Example to demonstrate mobile view for Value Help Dialog."),F.Ub(),F.Vb(220,"ul"),F.Vb(221,"li"),F.Tc(222,"Set "),F.Vb(223,"code"),F.Tc(224,"[mobile]"),F.Ub(),F.Tc(225," property to "),F.Vb(226,"strong"),F.Tc(227,"true"),F.Ub(),F.Tc(228," on "),F.Vb(229,"strong"),F.Tc(230,"fdp-value-help-dialog"),F.Ub(),F.Ub(),F.Ub(),F.Qb(231,"p"),F.Ub(),F.Vb(232,"component-example"),F.Qb(233,"fdp-platform-vhd-mobile-example"),F.Ub(),F.Qb(234,"code-example",1)),2&e&&(F.Cb(65),F.uc("exampleFiles",n.basicValueHelpDialog),F.Cb(79),F.uc("exampleFiles",n.strategyLabelValueHelpDialog),F.Cb(26),F.uc("exampleFiles",n.basicValueHelpDialog),F.Cb(34),F.uc("exampleFiles",n.inputValueHelpDialog),F.Cb(9),F.uc("exampleFiles",n.multiInputValueHelpDialog),F.Cb(21),F.uc("exampleFiles",n.multiInputValueHelpDialog))},directives:[$.a,I.a,E.a,L,J.a,G.a,Z,ne,se,be,ge],encapsulation:2}),e}(),ye=a("dor/"),Te=a("RJTZ"),Se=a("Kpas"),ke=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=F.Jb({type:e,selectors:[["app-vhd-header"]],decls:10,vars:0,consts:[["module","PlatformValueHelpDialogModule"]],template:function(e,n){1&e&&(F.Vb(0,"header"),F.Tc(1,"Value Help Dialog"),F.Ub(),F.Vb(2,"description"),F.Tc(3," The value help dialog is a UI pattern that helps the user find and select single and multiple values. "),F.Qb(4,"br"),F.Tc(5," The user can also define and select multiple ranges. The value help dialog is generally called from an input field or a multi-input field by clicking the selection icon (value help icon) of the input field.\n"),F.Ub(),F.Qb(6,"br"),F.Qb(7,"import",0),F.Qb(8,"fd-header-tabs"),F.Qb(9,"router-outlet"))},directives:[ye.a,I.a,Te.a,Se.a,b.h],encapsulation:2}),e}(),xe=a("jzzn"),Ce=a("IywY"),Ue=a("t9W5"),Me=[{path:"",component:ke,children:[{path:"",component:Ve},{path:"api",component:xe.a,data:{content:Ce.a.valueHelpDialog}}]}],De=function(){function e(){}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=F.Nb({type:e}),e.\u0275inj=F.Mb({imports:[[b.g.forChild(Me),h.c,Ue.a,v.m,v.mb,v.Ib,v.Ec,v.Gc,g.Y],b.g]}),e}()}}]);