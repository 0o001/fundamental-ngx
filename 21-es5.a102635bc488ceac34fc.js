!function(){function e(e,n){for(var t=0;t<n.length;t++){var c=n[t];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function n(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"d+7B":function(t,c,o){"use strict";o.r(c),o.d(c,"CheckboxDocsModule",function(){return ce});var a={};o.r(a),o.d(a,"default",function(){return F});var l={};o.r(l),o.d(l,"default",function(){return j});var r={};o.r(r),o.d(r,"default",function(){return D});var b={};o.r(b),o.d(b,"default",function(){return N});var s={};o.r(s),o.d(s,"default",function(){return O});var i={};o.r(i),o.d(i,"default",function(){return S});var u,d,h,m,p,f,x,V,k,g=o("tyNb"),v=o("jzzn"),C=o("PzQJ"),M=o("fXoL"),W=o("dor/"),w=o("kt86"),y=o("RJTZ"),A=o("Kpas"),R=((u=function e(){n(this,e)}).\u0275fac=function(e){return new(e||u)},u.\u0275cmp=M.Kb({type:u,selectors:[["app-select-header"]],decls:10,vars:0,consts:[["module","CheckboxModule","subPackage","checkbox"]],template:function(e,n){1&e&&(M.Wb(0,"header"),M.Vc(1,"Checkbox"),M.Vb(),M.Wb(2,"description"),M.Vc(3," With checkboxes, all options are visible and the user can make one or more selections. This component can be set disabled and also displayed in a row. "),M.Rb(4,"br"),M.Vc(5,"Checkboxes are keyboard navigable via the tab key and selected with the space bar."),M.Rb(6,"br"),M.Vb(),M.Rb(7,"import",0),M.Rb(8,"fd-header-tabs"),M.Rb(9,"router-outlet"))},directives:[W.a,w.a,y.a,A.a,g.h],encapsulation:2}),u),F='import { Component } from \'@angular/core\';\n\n@Component({\n    selector: \'fd-checkbox-default-example\',\n    template: `\n        <fd-checkbox label="Option 1" [(ngModel)]="checkboxValue" required="true"></fd-checkbox>\n        Value: {{ checkboxValue }}\n    `\n})\nexport class CheckboxDefaultExampleComponent {\n    checkboxValue = false;\n}\n',j='import { Component } from \'@angular/core\';\n\n@Component({\n    selector: \'fd-checkbox-tristate-example\',\n    template: `\n        <div>\n            Third state selectable:\n            <fd-checkbox label="Option 1"\n                         tristate="true"\n                         [(ngModel)]="checkboxValue1">\n            </fd-checkbox>\n            Value: {{ checkboxValue1 | json }}\n        </div>\n\n        <br />\n\n        <div>\n            Third state unselectable:\n            <fd-checkbox label="Option 2"\n                         tristate="true"\n                         [tristateSelectable]="false"\n                         [(ngModel)]="checkboxValue2">\n            </fd-checkbox>\n            Value: {{ checkboxValue2 | json }}\n        </div>\n    `\n})\nexport class CheckboxTristateExampleComponent {\n    checkboxValue1 = false;\n    checkboxValue2 = null;\n}\n',D="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-checkbox-custom-values-example',\n    template: `\n        <fd-checkbox\n            label=\"I accept the new Terms of Service\"\n            [values]=\"{ trueValue: 'Yes', falseValue: 'No' }\"\n            [(ngModel)]=\"checkboxValue1\"\n        >\n        </fd-checkbox>\n        Value: {{ checkboxValue1 }}\n\n        <fd-checkbox\n            label=\"Banana is the best fruit\"\n            tristate=\"true\"\n            [values]=\"{ trueValue: 'Yes', falseValue: 'No', thirdStateValue: 'I dont have an opinion' }\"\n            [(ngModel)]=\"checkboxValue2\"\n        >\n        </fd-checkbox>\n        Value: {{ checkboxValue2 }}\n    `\n})\nexport class CheckboxCustomValuesExampleComponent {\n    checkboxValue1 = 'Yes';\n    checkboxValue2 = 'Yes';\n}\n",N='import { Component, OnInit } from \'@angular/core\';\nimport { FormControl, FormGroup } from \'@angular/forms\';\nimport { map } from \'rxjs/operators\';\n\n@Component({\n    selector: \'fd-checkbox-reactive-forms-example\',\n    template: `\n        <form [formGroup]="registrationForm">\n            <fd-checkbox\n                formControlName="acceptAll"\n                label="Accept all"\n                tristate="true"\n                [tristateSelectable]="false"\n            ></fd-checkbox>\n            <fieldset formGroupName="agreements">\n                <fd-checkbox formControlName="termsAndConditions" label="I accept Terms and Conditions"></fd-checkbox>\n                <fd-checkbox formControlName="marketing" label="I want to receive Marketing Materials"></fd-checkbox>\n                <fd-checkbox formControlName="newsletter" label="I want want to sign for a Newsletter"></fd-checkbox>\n            </fieldset>\n        </form>\n\n        <br />\n\n        Form value: {{ registrationForm.getRawValue() | json }}\n    `\n})\nexport class CheckboxReactiveFormsExampleComponent implements OnInit {\n    public registrationForm = new FormGroup({\n        acceptAll: new FormControl(false),\n        agreements: new FormGroup({\n            marketing: new FormControl(undefined),\n            newsletter: new FormControl(false),\n            termsAndConditions: new FormControl(false)\n        })\n    });\n\n    ngOnInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    private acceptAll(accept: boolean): void {\n        this.registrationForm.get(\'agreements\').setValue({\n            marketing: accept,\n            newsletter: accept,\n            termsAndConditions: accept\n        });\n    }\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get(\'acceptAll\').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get(\'agreements\')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) =>\n                this.registrationForm.get(\'acceptAll\').setValue(acceptAllValue, { emitEvent: false })\n            );\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n',O='import { Component } from \'@angular/core\';\n\n@Component({\n    selector: \'fd-checkbox-states-example\',\n    template: `\n        <h4 fd-form-header>Checkbox States Examples</h4>\n        <div>\n            States:\n            <fd-checkbox [(ngModel)]="checkboxValue1" label="No state"></fd-checkbox>\n            <fd-checkbox [(ngModel)]="checkboxValue2" state="information" label="Info state"></fd-checkbox>\n            <fd-checkbox [(ngModel)]="checkboxValue3" state="success" label="Success state"></fd-checkbox>\n            <fd-checkbox [(ngModel)]="checkboxValue4" state="warning" label="Warning state"></fd-checkbox>\n            <fd-checkbox [(ngModel)]="checkboxValue5" state="error" label="Error state"></fd-checkbox>\n        </div>\n        <div>\n            Disabled:\n            <fd-checkbox [(ngModel)]="checkboxValue6" disabled="true" label="Disabled label"></fd-checkbox>\n        </div>\n        <div>\n            Compact:\n            <fd-checkbox [(ngModel)]="checkboxValue7" compact="true" label="Compact label"></fd-checkbox>\n        </div>\n    `\n})\nexport class CheckboxStatesExampleComponent {\n    public checkboxValue1 = false;\n    public checkboxValue2 = false;\n    public checkboxValue3 = false;\n    public checkboxValue4 = false;\n    public checkboxValue5 = false;\n    public checkboxValue6 = false;\n    public checkboxValue7 = false;\n}\n',S="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fd-checkbox-custom-label-example',\n    template: `\n        <fd-checkbox [(ngModel)]=\"checkboxValue\"> I accept&nbsp;<a href=\"#\">Terms and conditions</a> </fd-checkbox>\n        Value: {{ checkboxValue }}\n    `\n})\nexport class CheckboxCustomLabelExampleComponent {\n    checkboxValue = false;\n}\n",I=o("ddaM"),T=o("X1JU"),E=o("YIcY"),K=o("3Pt+"),X=((d=function e(){n(this,e),this.checkboxValue=!1}).\u0275fac=function(e){return new(e||d)},d.\u0275cmp=M.Kb({type:d,selectors:[["fd-checkbox-default-example"]],decls:2,vars:2,consts:[["label","Option 1","required","true",3,"ngModel","ngModelChange"]],template:function(e,n){1&e&&(M.Wb(0,"fd-checkbox",0),M.jc("ngModelChange",function(e){return n.checkboxValue=e}),M.Vb(),M.Vc(1)),2&e&&(M.vc("ngModel",n.checkboxValue),M.Db(1),M.Xc(" Value: ",n.checkboxValue," "))},directives:[E.a,K.y,K.q,K.t],encapsulation:2}),d),q=o("5HkS"),Y=o("Hxo2"),G=o("ofXK"),z=((h=function e(){n(this,e),this.checkboxValue1=!1,this.checkboxValue2=null}).\u0275fac=function(e){return new(e||h)},h.\u0275cmp=M.Kb({type:h,selectors:[["fd-checkbox-tristate-example"]],decls:11,vars:9,consts:[["label","Option 1","tristate","true",3,"ngModel","ngModelChange"],["label","Option 2","tristate","true",3,"tristateSelectable","ngModel","ngModelChange"]],template:function(e,n){1&e&&(M.Wb(0,"div"),M.Vc(1," Third state selectable: "),M.Wb(2,"fd-checkbox",0),M.jc("ngModelChange",function(e){return n.checkboxValue1=e}),M.Vb(),M.Vc(3),M.oc(4,"json"),M.Vb(),M.Rb(5,"br"),M.Wb(6,"div"),M.Vc(7," Third state unselectable: "),M.Wb(8,"fd-checkbox",1),M.jc("ngModelChange",function(e){return n.checkboxValue2=e}),M.Vb(),M.Vc(9),M.oc(10,"json"),M.Vb()),2&e&&(M.Db(2),M.vc("ngModel",n.checkboxValue1),M.Db(1),M.Xc(" Value: ",M.pc(4,5,n.checkboxValue1)," "),M.Db(5),M.vc("tristateSelectable",!1)("ngModel",n.checkboxValue2),M.Db(1),M.Xc(" Value: ",M.pc(10,7,n.checkboxValue2)," "))},directives:[E.a,K.q,K.t],pipes:[G.h],encapsulation:2}),h),J=function(){return{trueValue:"Yes",falseValue:"No"}},B=function(){return{trueValue:"Yes",falseValue:"No",thirdStateValue:"I dont have an opinion"}},L=((m=function e(){n(this,e),this.checkboxValue1="Yes",this.checkboxValue2="Yes"}).\u0275fac=function(e){return new(e||m)},m.\u0275cmp=M.Kb({type:m,selectors:[["fd-checkbox-custom-values-example"]],decls:4,vars:8,consts:[["label","I accept the new Terms of Service",3,"values","ngModel","ngModelChange"],["label","Banana is the best fruit","tristate","true",3,"values","ngModel","ngModelChange"]],template:function(e,n){1&e&&(M.Wb(0,"fd-checkbox",0),M.jc("ngModelChange",function(e){return n.checkboxValue1=e}),M.Vb(),M.Vc(1),M.Wb(2,"fd-checkbox",1),M.jc("ngModelChange",function(e){return n.checkboxValue2=e}),M.Vb(),M.Vc(3)),2&e&&(M.vc("values",M.zc(6,J))("ngModel",n.checkboxValue1),M.Db(1),M.Xc(" Value: ",n.checkboxValue1," "),M.Db(1),M.vc("values",M.zc(7,B))("ngModel",n.checkboxValue2),M.Db(1),M.Xc(" Value: ",n.checkboxValue2," "))},directives:[E.a,K.q,K.t],encapsulation:2}),m),P=o("lJxs"),Z=((f=function(){function t(){n(this,t),this.registrationForm=new K.i({acceptAll:new K.f(!1),agreements:new K.i({marketing:new K.f(void 0),newsletter:new K.f(!1),termsAndConditions:new K.f(!1)})})}var c,o,a;return c=t,(o=[{key:"ngOnInit",value:function(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()}},{key:"acceptAll",value:function(e){this.registrationForm.get("agreements").setValue({marketing:e,newsletter:e,termsAndConditions:e})}},{key:"setAgreementsOnAcceptAllChange",value:function(){var e=this;this.registrationForm.get("acceptAll").valueChanges.subscribe(function(n){return e.acceptAll(n)})}},{key:"setControlOnAgreementsChange",value:function(){var e=this;this.registrationForm.get("agreements").valueChanges.pipe(Object(P.a)(function(n){return e.getValuesFromObject(n)}),Object(P.a)(function(e){var n=e.reduce(function(e,n){return n&&e},!0),t=e.reduce(function(e,n){return!n&&e},!0);return!!n||!t&&null})).subscribe(function(n){return e.registrationForm.get("acceptAll").setValue(n,{emitEvent:!1})})}},{key:"getValuesFromObject",value:function(e){return Object.keys(e).map(function(n){return e[n]})}}])&&e(c.prototype,o),a&&e(c,a),t}()).\u0275fac=function(e){return new(e||f)},f.\u0275cmp=M.Kb({type:f,selectors:[["fd-checkbox-reactive-forms-example"]],decls:9,vars:5,consts:[[3,"formGroup"],["formControlName","acceptAll","label","Accept all","tristate","true",3,"tristateSelectable"],["formGroupName","agreements"],["formControlName","termsAndConditions","label","I accept Terms and Conditions"],["formControlName","marketing","label","I want to receive Marketing Materials"],["formControlName","newsletter","label","I want want to sign for a Newsletter"]],template:function(e,n){1&e&&(M.Wb(0,"form",0),M.Rb(1,"fd-checkbox",1),M.Wb(2,"fieldset",2),M.Rb(3,"fd-checkbox",3),M.Rb(4,"fd-checkbox",4),M.Rb(5,"fd-checkbox",5),M.Vb(),M.Vb(),M.Rb(6,"br"),M.Vc(7),M.oc(8,"json")),2&e&&(M.vc("formGroup",n.registrationForm),M.Db(1),M.vc("tristateSelectable",!1),M.Db(6),M.Xc(" Form value: ",M.pc(8,3,n.registrationForm.getRawValue())," "))},directives:[K.B,K.r,K.j,E.a,K.q,K.h,K.k],pipes:[G.h],encapsulation:2}),f),H=((p=function e(){n(this,e),this.checkboxValue=!1}).\u0275fac=function(e){return new(e||p)},p.\u0275cmp=M.Kb({type:p,selectors:[["fd-checkbox-custom-label-example"]],decls:5,vars:2,consts:[[3,"ngModel","ngModelChange"],["href","#"]],template:function(e,n){1&e&&(M.Wb(0,"fd-checkbox",0),M.jc("ngModelChange",function(e){return n.checkboxValue=e}),M.Vc(1," I accept\xa0"),M.Wb(2,"a",1),M.Vc(3,"Terms and conditions"),M.Vb(),M.Vb(),M.Vc(4)),2&e&&(M.vc("ngModel",n.checkboxValue),M.Db(4),M.Xc(" Value: ",n.checkboxValue," "))},directives:[E.a,K.q,K.t],encapsulation:2}),p),U=o("XVd1"),Q=((V=function e(){n(this,e),this.checkboxValue1=!1,this.checkboxValue2=!1,this.checkboxValue3=!1,this.checkboxValue4=!1,this.checkboxValue5=!1,this.checkboxValue6=!1,this.checkboxValue7=!1}).\u0275fac=function(e){return new(e||V)},V.\u0275cmp=M.Kb({type:V,selectors:[["fd-checkbox-states-example"]],decls:15,vars:7,consts:[["fd-form-header",""],["label","No state",3,"ngModel","ngModelChange"],["state","information","label","Info state",3,"ngModel","ngModelChange"],["state","success","label","Success state",3,"ngModel","ngModelChange"],["state","warning","label","Warning state",3,"ngModel","ngModelChange"],["state","error","label","Error state",3,"ngModel","ngModelChange"],["disabled","true","label","Disabled label",3,"ngModel","ngModelChange"],["compact","true","label","Compact label",3,"ngModel","ngModelChange"]],template:function(e,n){1&e&&(M.Wb(0,"h4",0),M.Vc(1,"Checkbox States Examples"),M.Vb(),M.Wb(2,"div"),M.Vc(3," States: "),M.Wb(4,"fd-checkbox",1),M.jc("ngModelChange",function(e){return n.checkboxValue1=e}),M.Vb(),M.Wb(5,"fd-checkbox",2),M.jc("ngModelChange",function(e){return n.checkboxValue2=e}),M.Vb(),M.Wb(6,"fd-checkbox",3),M.jc("ngModelChange",function(e){return n.checkboxValue3=e}),M.Vb(),M.Wb(7,"fd-checkbox",4),M.jc("ngModelChange",function(e){return n.checkboxValue4=e}),M.Vb(),M.Wb(8,"fd-checkbox",5),M.jc("ngModelChange",function(e){return n.checkboxValue5=e}),M.Vb(),M.Vb(),M.Wb(9,"div"),M.Vc(10," Disabled: "),M.Wb(11,"fd-checkbox",6),M.jc("ngModelChange",function(e){return n.checkboxValue6=e}),M.Vb(),M.Vb(),M.Wb(12,"div"),M.Vc(13," Compact: "),M.Wb(14,"fd-checkbox",7),M.jc("ngModelChange",function(e){return n.checkboxValue7=e}),M.Vb(),M.Vb()),2&e&&(M.Db(4),M.vc("ngModel",n.checkboxValue1),M.Db(1),M.vc("ngModel",n.checkboxValue2),M.Db(1),M.vc("ngModel",n.checkboxValue3),M.Db(1),M.vc("ngModel",n.checkboxValue4),M.Db(1),M.vc("ngModel",n.checkboxValue5),M.Db(3),M.vc("ngModel",n.checkboxValue6),M.Db(3),M.vc("ngModel",n.checkboxValue7))},directives:[U.a,E.a,K.q,K.t],encapsulation:2}),V),$=((x=function e(){n(this,e),this.checkboxDefault=[{language:"typescript",fileName:"checkbox-default-example",component:"CheckboxDefaultExampleComponent",code:a}],this.checkboxTristate=[{language:"typescript",fileName:"checkbox-tristate-example",component:"CheckboxTristateExampleComponent",code:l}],this.checkboxCustomValues=[{language:"typescript",fileName:"checkbox-custom-values-example",component:"CheckboxCustomValuesExampleComponent",code:r}],this.checkboxReactiveForms=[{language:"typescript",fileName:"checkbox-reactive-forms-example",component:"CheckboxReactiveFormsExampleComponent",code:b}],this.checkboxStates=[{language:"typescript",fileName:"checkbox-states-example",component:"CheckboxStatesExampleComponent",code:s}],this.checkboxCustomLabel=[{language:"typescript",fileName:"checkbox-custom-label-example",component:"CheckboxCustomLabelExampleComponent",code:i}]}).\u0275fac=function(e){return new(e||x)},x.\u0275cmp=M.Kb({type:x,selectors:[["app-input"]],decls:102,vars:8,consts:[["id","default","componentName","checkbox"],[3,"exampleFiles"],["id","tristate","componentName","checkbox"],["id","custom-values","componentName","checkbox"],[2,"margin-bottom","0.5rem"],["id","reactive-forms","componentName","checkbox"],["id","custom-label","componentName","checkbox"],["id","states","componentName","checkbox"]],template:function(e,n){1&e&&(M.Wb(0,"fd-docs-section-title",0),M.Vc(1," Standard Checkbox\n"),M.Vb(),M.Wb(2,"description"),M.Vc(3," By default fd-checkbox component is binary, returning "),M.Wb(4,"code"),M.Vc(5,"true"),M.Vb(),M.Vc(6," and "),M.Wb(7,"code"),M.Vc(8,"false"),M.Vb(),M.Vc(9," values.\n"),M.Vb(),M.Wb(10,"component-example"),M.Rb(11,"fd-checkbox-default-example"),M.Vb(),M.Rb(12,"code-example",1),M.Rb(13,"separator"),M.Wb(14,"fd-docs-section-title",2),M.Vc(15," Tristate Checkbox\n"),M.Vb(),M.Wb(16,"description"),M.Vc(17," Tristate mode adds third state to default checkbox behaviour. In this mode checkbox returns: "),M.Wb(18,"code"),M.Vc(19,"true"),M.Vb(),M.Vc(20,", "),M.Wb(21,"code"),M.Vc(22,"false"),M.Vb(),M.Vc(23," and "),M.Wb(24,"code"),M.Vc(25,"null"),M.Vb(),M.Vc(26," values. "),M.Rb(27,"br"),M.Vc(28," To prevent user from manually selecting third state of the checkbox use "),M.Wb(29,"code"),M.Vc(30,"[tristateSelectable]"),M.Vb(),M.Vc(31," property.\n"),M.Vb(),M.Wb(32,"component-example"),M.Rb(33,"fd-checkbox-tristate-example"),M.Vb(),M.Rb(34,"code-example",1),M.Rb(35,"separator"),M.Wb(36,"fd-docs-section-title",3),M.Vc(37," Checkbox custom values\n"),M.Vb(),M.Wb(38,"description"),M.Vc(39," Values returned by checkbox can be customized using "),M.Wb(40,"code"),M.Vc(41,"[values]"),M.Vb(),M.Vc(42," property. "),M.Rb(43,"br"),M.Wb(44,"ul"),M.Wb(45,"li",4),M.Vc(46," Type: "),M.Wb(47,"code"),M.Vc(48),M.Vb(),M.Vb(),M.Wb(49,"li"),M.Vc(50," Default value: "),M.Wb(51,"code"),M.Vc(52),M.Vb(),M.Vb(),M.Vb(),M.Vb(),M.Wb(53,"component-example"),M.Rb(54,"fd-checkbox-custom-values-example"),M.Vb(),M.Rb(55,"code-example",1),M.Rb(56,"separator"),M.Wb(57,"fd-docs-section-title",5),M.Vc(58," Checkbox with Reactive Forms\n"),M.Vb(),M.Wb(59,"description"),M.Vc(60," Checkbox can be used with Reactive Forms by binding it as standard form control with "),M.Wb(61,"code"),M.Vc(62,"[formControlName]"),M.Vb(),M.Vc(63,' input. Example below shows usage of checkbox component with Reactive Form. "Accept all" behaves as main control representing overall state of agreements controls.\n'),M.Vb(),M.Wb(64,"component-example"),M.Rb(65,"fd-checkbox-reactive-forms-example"),M.Vb(),M.Rb(66,"code-example",1),M.Rb(67,"separator"),M.Wb(68,"fd-docs-section-title",6),M.Vc(69," Checkbox with custom label\n"),M.Vb(),M.Wb(70,"description"),M.Vc(71," Checkbox label can by passed to component as external content using content projection mechanism. If external content is provided value passed using "),M.Wb(72,"code"),M.Vc(73,"[label]"),M.Vb(),M.Vc(74," property is ignored.\n"),M.Vb(),M.Wb(75,"component-example"),M.Rb(76,"fd-checkbox-custom-label-example"),M.Vb(),M.Rb(77,"code-example",1),M.Rb(78,"separator"),M.Wb(79,"fd-docs-section-title",7),M.Vc(80," Checkbox styling properties\n"),M.Vb(),M.Wb(81,"description"),M.Vc(82," Checkbox can be but in various states by modifying following properties: "),M.Wb(83,"ul"),M.Wb(84,"li",4),M.Vc(85," Modifies visual appearance of checkbox "),M.Rb(86,"br"),M.Wb(87,"code"),M.Vc(88,"[state] = 'success' | 'error' | 'information' | 'warning'"),M.Vb(),M.Vb(),M.Wb(89,"li",4),M.Vc(90," Disables control "),M.Rb(91,"br"),M.Wb(92,"code"),M.Vc(93,"[disable] = true | false"),M.Vb(),M.Vb(),M.Wb(94,"li"),M.Vc(95," Miniaturizes checkbox "),M.Rb(96,"br"),M.Wb(97,"code"),M.Vc(98,"[compact] = true | false"),M.Vb(),M.Vb(),M.Vb(),M.Vb(),M.Wb(99,"component-example"),M.Rb(100,"fd-checkbox-states-example"),M.Vb(),M.Rb(101,"code-example",1)),2&e&&(M.Db(12),M.vc("exampleFiles",n.checkboxDefault),M.Db(22),M.vc("exampleFiles",n.checkboxTristate),M.Db(14),M.Wc("{ trueValue?: any, falseValue?: any, thirdStateValue?: any }"),M.Db(4),M.Wc("{ trueValue: true, falseValue: false, thirdStateValue: null }"),M.Db(3),M.vc("exampleFiles",n.checkboxCustomValues),M.Db(11),M.vc("exampleFiles",n.checkboxReactiveForms),M.Db(11),M.vc("exampleFiles",n.checkboxCustomLabel),M.Db(24),M.vc("exampleFiles",n.checkboxStates))},directives:[I.a,w.a,T.a,X,q.a,Y.a,z,L,Z,H,Q],encapsulation:2}),x),_=o("t9W5"),ee=o("NZOU"),ne=o("Zq6K"),te=[{path:"",component:R,children:[{path:"",component:$},{path:"api",component:v.a,data:{content:C.a.checkbox}}]}],ce=((k=function e(){n(this,e)}).\u0275fac=function(e){return new(e||k)},k.\u0275mod=M.Ob({type:k}),k.\u0275inj=M.Nb({imports:[[ee.h,ne.b,g.g.forChild(te),_.a],g.g]}),k)}}])}();