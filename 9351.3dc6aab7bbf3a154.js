"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9351],{90147:(p,T,a)=>{a.d(T,{h:()=>F}),a(25978);var m=a(83668),v=a(34033),y=a(90101),h=a(86019),_=a(5551),w=a(11937),E=a(48869),C=a(22829),Z=a(69290),G=a(17631);const I=["menu"];function V(x,D){if(1&x&&m._UZ(0,"button",8),2&x){const f=m.oxw(),z=m.MAs(6);m.Q6J("label","Select a file ("+f.files.length+")")("fdMenu",!0)("fdMenuTrigger",z)}}function W(x,D){if(1&x){const f=m.EpF();m.TgZ(0,"li",9),m.NdJ("click",function(){const N=m.CHM(f).$implicit;return m.oxw().getFile(N)}),m.TgZ(1,"div",10),m.TgZ(2,"span",11),m._uU(3),m.qZA(),m.qZA(),m.qZA()}if(2&x){const f=D.$implicit,z=m.oxw();m.ekj("is-selected",f===z.activeFile),m.xp6(3),m.Oqu(f)}}let F=(()=>{class x{constructor(f,z){this.route=f,this.apiService=z}ngOnInit(){this.route.snapshot.data&&(this.files=this.route.snapshot.data.content),this.files&&this.files.length>0?(this.files.sort(),this.getFile(this.files[0]),this.activeFile=this.files[0]):this.result="<h2>No API files found.</h2>"}getFile(f){this.apiService.getComponentHtml(f).subscribe(z=>{this.result=z,this.activeFile=f,this.menu.close()},z=>{console.warn("Did not find file "+f+".\nError: "+z)})}}return x.\u0275fac=function(f){return new(f||x)(m.Y36(v.gz),m.Y36(y.S))},x.\u0275cmp=m.Xpm({type:x,selectors:[["fd-api"]],viewQuery:function(f,z){if(1&f&&m.Gf(I,5),2&f){let S;m.iGM(S=m.CRH())&&(z.menu=S.first)}},decls:9,vars:5,consts:[[1,"api-main-container"],[1,"api-main-header"],[2,"display","flex","flex-grow","1"],["fd-button","",3,"label","fdMenu","fdMenuTrigger",4,"ngIf"],["placement","bottom-start",3,"fillControlMode"],["menu",""],["fd-menu-item","",3,"is-selected","click",4,"ngFor","ngForOf"],[3,"innerHTML"],["fd-button","",3,"label","fdMenu","fdMenuTrigger"],["fd-menu-item","",3,"click"],["fd-menu-interactive",""],["fd-menu-title",""]],template:function(f,z){1&f&&(m.TgZ(0,"div",0),m.TgZ(1,"h2",1),m._uU(2),m.qZA(),m._UZ(3,"span",2),m.YNc(4,V,1,3,"button",3),m.TgZ(5,"fd-menu",4,5),m.YNc(7,W,4,3,"li",6),m.qZA(),m.qZA(),m._UZ(8,"div",7)),2&f&&(m.xp6(2),m.Oqu(z.activeFile),m.xp6(2),m.Q6J("ngIf",z.files.length>1),m.xp6(1),m.Q6J("fillControlMode",null),m.xp6(2),m.Q6J("ngForOf",z.files),m.xp6(1),m.Q6J("innerHTML",z.result,m.oJD))},directives:[h.O5,_.M,h.sg,w.r,E.k,C.qv,Z.K,G.h],styles:[".api-main-header[_ngcontent-%COMP%]{margin:0;font-weight:bold;text-rendering:optimizeLegibility}.api-main-container[_ngcontent-%COMP%]{margin-top:2em;display:flex;align-items:center;justify-content:flex-start;flex-wrap:wrap}fd-popover[_ngcontent-%COMP%]     .fd-button{margin-right:0}"]}),x})()},34506:(p,T,a)=>{a.d(T,{c:()=>C});var s=a(83668),m=a(73685),v=a(63062),y=a(34033),h=a(89095),_=a(82195),w=a(55505);const E=function(){return{exact:!0}};let C=(()=>{class Z{}return Z.\u0275fac=function(I){return new(I||Z)},Z.\u0275cmp=s.Xpm({type:Z,selectors:[["fd-header-tabs"]],decls:12,vars:4,consts:[["fd-tab-nav",""],["fd-tab-item",""],["fd-tab-link","","routerLink","./","routerLinkActive","",3,"active","routerLinkActiveOptions"],["rla1","routerLinkActive"],["fd-tab-tag",""],["fd-tab-link","","routerLink","./api","routerLinkActive","",3,"active"],["rla2","routerLinkActive"],[2,"margin-top","0"]],template:function(I,V){if(1&I&&(s.TgZ(0,"ul",0),s.TgZ(1,"li",1),s.TgZ(2,"a",2,3),s.TgZ(4,"span",4),s._uU(5,"Examples"),s.qZA(),s.qZA(),s.qZA(),s.TgZ(6,"li",1),s.TgZ(7,"a",5,6),s.TgZ(9,"span",4),s._uU(10,"API"),s.qZA(),s.qZA(),s.qZA(),s.qZA(),s._UZ(11,"separator",7)),2&I){const W=s.MAs(3),F=s.MAs(8);s.xp6(2),s.Q6J("active",W.isActive)("routerLinkActiveOptions",s.DdM(3,E)),s.xp6(5),s.Q6J("active",F.isActive)}},directives:[m.d,v.w,y.yS,h.w,y.Od,_.P6,w.N],styles:["[_nghost-%COMP%]{display:block}.fd-tabs[_ngcontent-%COMP%]{margin-bottom:0;margin-top:24px;box-shadow:none}.fd-tabs__item[_ngcontent-%COMP%]{padding:0;margin-right:24px}.fd-tabs__link[_ngcontent-%COMP%]{min-width:60px;padding-right:12px;padding-left:12px;text-align:center}"]}),Z})()},43870:(p,T,a)=>{a.d(T,{G:()=>v});var s=a(83668);const m=["*"];let v=(()=>{class y{}return y.\u0275fac=function(_){return new(_||y)},y.\u0275cmp=s.Xpm({type:y,selectors:[["header"]],ngContentSelectors:m,decls:2,vars:0,consts:[[1,"header"]],template:function(_,w){1&_&&(s.F$t(),s.TgZ(0,"h1",0),s.Hsn(1),s.qZA())},styles:[".header[_ngcontent-%COMP%]{margin-top:2rem;font-size:2.2rem}"]}),y})()},87444:(p,T,a)=>{a.d(T,{k:()=>m});var s=a(83668);let m=(()=>{class v{constructor(h){this.currentLib=h}ngOnInit(){const h=["@fundamental-ngx",this.currentLib];this.subPackage&&h.push(this.subPackage),this.library=h.join("/")}}return v.\u0275fac=function(h){return new(h||v)(s.Y36("CURRENT_LIB"))},v.\u0275cmp=s.Xpm({type:v,selectors:[["import"]],inputs:{module:"module",subPackage:"subPackage"},decls:9,vars:2,consts:[[2,"color","rgb(0, 0, 136)"],[2,"color","rgb(0, 136, 0)"]],template:function(h,_){1&h&&(s.TgZ(0,"code"),s.TgZ(1,"span",0),s._uU(2,"import"),s.qZA(),s._uU(3),s.TgZ(4,"span",0),s._uU(5,"from "),s.qZA(),s.TgZ(6,"span",1),s._uU(7),s.qZA(),s._uU(8,"; "),s.qZA()),2&h&&(s.xp6(3),s.hij(" { ",_.module," } "),s.xp6(4),s.hij("'",_.library,"'"))},encapsulation:2}),v})()},90101:(p,T,a)=>{a.d(T,{S:()=>v});var s=a(83668),m=a(44522);let v=(()=>{class y{constructor(_,w){this.httpClient=_,this.currentLib=w,this.BASE_URL="assets/typedoc/"}getComponentHtml(_){_=_.toLocaleLowerCase()+".html";const w=this.buildUrl(this.BASE_URL,this.currentLib||"core","classes",_);return this.httpClient.get(w,{responseType:"text"})}buildUrl(..._){return _.join("/").replace(/\/+/g,"/")}}return y.\u0275fac=function(_){return new(_||y)(s.LFG(m.eN),s.LFG("CURRENT_LIB"))},y.\u0275prov=s.Yz7({token:y,factory:y.\u0275fac}),y})()},16543:(p,T,a)=>{a.d(T,{g:()=>z});var s=a(86019),m=a(34033),v=a(39010),y=a(71029),h=a(52427),_=a(90101),w=a(58817),E=a(13131),C=a(90667),Z=a(7754),G=a(23932),I=a(25978),V=a(73272),W=a(38203),F=a(74349),x=a(37152);const D=[F.P4,I.$9,Z.Q,W.o,E.hJ,V.H,C.nY,G.L,x.s];var f=a(83668);let z=(()=>{class S{}return S.\u0275fac=function(P){return new(P||S)},S.\u0275mod=f.oAB({type:S}),S.\u0275inj=f.cJS({providers:[h.t,_.S],imports:[[v.u5,s.ez,m.Bz,w.f,D,y.JP.forChild()],v.u5,v.UX,w.f,s.ez,F.P4,I.$9,Z.Q,W.o,E.hJ,V.H,C.nY,G.L,x.s]}),S})()},89351:(p,T,a)=>{a.r(T),a.d(T,{PlatformWizardGeneratorDocsModule:()=>Un});var s=a(34033),m=a(80270),v=a(90147),y=a(16543),h=a(16781),_=a(54479),w=a(88831),E=a(57901),C=a(365),Z=a(26148),G=a(56788),I=a(44218),V=a(93593),W=a(15154),F=a(41745),x=a(5377),D=a(88179),f=a(3642),z=a(72528),S=a(77726),N=a(72509),P=a(31179),Y=a(51179),H=a(31250),X=a(71920),K=a(45429),ee=a(94663),ne=a(36738),te=a(69457),ae=a(85774),re=a(28306),oe=a(85265),ie=a(8457),de=a(58128),se=a(95971),me=a(37885),e=a(83668),pe=a(83382),L=a(9156),le=a(16966),l=a(39010),M=a(84848),g=a(86019);function ce(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let ue=(()=>{class t{constructor(){this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"},{name:"password",message:"Password",type:"password",controlType:"password"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-default-example"]],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,ce,3,3,"p",1)),2&n&&(e.Q6J("items",r.stepItems),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5],pipes:[g.Ts],encapsulation:2}),t})();var ge=a(33512),fe=a(55505),k=a(23405),U=a(28805),A=a(16457);function ye(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let _e=(()=>{class t{constructor(n){this._wizardDialogService=n,this.wizardTitle={size:2,text:"Checkout"},this.allowSubscribe=!0,this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,ye,3,3,"p",1)),2&n&&(e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5],pipes:[g.Ts],encapsulation:2}),t})();var he=a(11464),ze=a(82010),ve=a(75746),be=a(11412),B=a(75966),j=a(81441),J=a(1056),R=a(94593),Q=a(40961);function xe(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",6),e.NdJ("click",function(){return e.CHM(n).goNext()}),e.qZA()}}function Ce(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",7),e.NdJ("click",function(){return e.CHM(n).goNext()}),e.qZA()}}function Te(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",8),e.NdJ("click",function(){return e.CHM(n).finish()}),e.qZA()}}function we(t,o){if(1&t&&(e.TgZ(0,"div"),e.TgZ(1,"label",15),e._uU(2),e.qZA(),e.qZA()),2&t){const n=o.$implicit;e.xp6(2),e.hij(" ",n.label,": ")}}function Ze(t,o){if(1&t&&(e.TgZ(0,"div"),e.TgZ(1,"label",15),e._uU(2),e.qZA(),e.qZA()),2&t){const n=o.$implicit;e.xp6(2),e.hij(" ",n.value||"-"," ")}}function Se(t,o){if(1&t){const n=e.EpF();e.ynx(0),e.TgZ(1,"h4",10),e._uU(2),e.qZA(),e.TgZ(3,"fd-layout-grid",12),e.TgZ(4,"div",13),e.YNc(5,we,3,1,"div",11),e.qZA(),e.TgZ(6,"div",13),e.YNc(7,Ze,3,1,"div",11),e.qZA(),e.TgZ(8,"div",13),e.TgZ(9,"fdp-link",14),e.NdJ("click",function(i){e.CHM(n);const d=e.oxw().$implicit,c=e.oxw().editStep;return e.oxw()._editStep(i,d.id,c)}),e._uU(10," Edit "),e.qZA(),e.qZA(),e.qZA(),e.BQk()}if(2&t){const n=o.$implicit;e.xp6(1),e.Q6J("headerSize",6),e.xp6(1),e.hij("",n.title," form"),e.xp6(2),e.Q6J("fdLayoutGridCol",4)("colMd",4)("colLg",4)("colXl",4),e.xp6(1),e.Q6J("ngForOf",n.items),e.xp6(1),e.Q6J("fdLayoutGridCol",4)("colMd",5)("colLg",5)("colXl",5),e.xp6(1),e.Q6J("ngForOf",n.items),e.xp6(1),e.Q6J("fdLayoutGridCol",1)("colMd",2)("colLg",2)("colXl",2)}}function Ie(t,o){if(1&t&&(e.ynx(0),e.TgZ(1,"h4",10),e._uU(2),e.qZA(),e.YNc(3,Se,11,16,"ng-container",11),e.BQk()),2&t){const n=o.$implicit;e.xp6(1),e.Q6J("headerSize",4),e.xp6(1),e.hij("",n.name," step"),e.xp6(1),e.Q6J("ngForOf",n.forms)}}function De(t,o){if(1&t&&e.YNc(0,Ie,4,3,"ng-container",9),2&t){const n=o.steps,r=e.oxw();e.Q6J("ngForOf",n)("ngForTrackBy",r.trackFn)}}function Ge(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let Ee=(()=>{class t{constructor(){this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{id:"summary",summary:!0,name:"Review"}]}wizardFinished(n){this.wizardValue=n}trackFn(n,r){return r.id}_editStep(n,r,i){n.preventDefault(),i(r)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-customizable-embeded-example"]],decls:6,vars:4,consts:[[3,"appendToWizard","items","title","wizardFinished"],["fdp-wizard-generator-go-next-button",""],["fdp-wizard-generator-review-button",""],["fdp-wizard-generator-finish-button",""],["fdp-wizard-generator-summary-step",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom review button",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",3,"click"],[4,"ngFor","ngForOf","ngForTrackBy"],["fd-title","",3,"headerSize"],[4,"ngFor","ngForOf"],[2,"margin-bottom","2rem"],[3,"fdLayoutGridCol","colMd","colLg","colXl"],["href","#",3,"click"],["fd-form-label",""]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.YNc(1,xe,1,0,"ng-template",1),e.YNc(2,Ce,1,0,"ng-template",2),e.YNc(3,Te,1,0,"ng-template",3),e.YNc(4,De,1,2,"ng-template",4),e.qZA(),e.YNc(5,Ge,3,3,"p",5)),2&n&&(e.Q6J("appendToWizard",!1)("items",r.stepItems)("title",r.wizardTitle),e.xp6(5),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,he.z,ze.c,ve.j,be.B,g.O5,A.r,g.sg,B.r,j.q,J.q,R.N,Q.h],pipes:[g.Ts],encapsulation:2}),t})();var We=a(83333),Fe=a(71614),Ae=a(78501),Ve=a(93555),Me=a(1180),ke=a(26630),Ue=a(82100);const Ne=["goNextTemplate"],Pe=["goBackTemplate"],qe=["finishTemplate"],Oe=["cancelTemplate"],Le=["confirmationDialogTemplate"],Be=["summaryStepTemplate"],je=["reviewButtonTemplate"];function Je(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",9),e.NdJ("click",function(){return e.CHM(n).goNext()}),e.qZA()}}function Re(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",10),e.NdJ("click",function(){return e.CHM(n).goBack()}),e.qZA()}}function Qe(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",11),e.NdJ("click",function(){return e.CHM(n).finish()}),e.qZA()}}function $e(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",12),e.NdJ("click",function(){return e.CHM(n).cancel()}),e.qZA()}}function Ye(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",13),e.NdJ("click",function(){return e.CHM(n).goNext()}),e.qZA()}}function He(t,o){if(1&t&&(e.TgZ(0,"div"),e.TgZ(1,"label",20),e._uU(2),e.qZA(),e.qZA()),2&t){const n=o.$implicit;e.xp6(2),e.hij(" ",n.label,": ")}}function Xe(t,o){if(1&t&&(e.TgZ(0,"div"),e.TgZ(1,"label",20),e._uU(2),e.qZA(),e.qZA()),2&t){const n=o.$implicit;e.xp6(2),e.hij(" ",n.value||"-"," ")}}function Ke(t,o){if(1&t){const n=e.EpF();e.ynx(0),e.TgZ(1,"h4",15),e._uU(2),e.qZA(),e.TgZ(3,"fd-layout-grid",17),e.TgZ(4,"div",18),e.YNc(5,He,3,1,"div",16),e.qZA(),e.TgZ(6,"div",18),e.YNc(7,Xe,3,1,"div",16),e.qZA(),e.TgZ(8,"div",18),e.TgZ(9,"fdp-link",19),e.NdJ("click",function(i){e.CHM(n);const d=e.oxw().$implicit,c=e.oxw().editStep;return e.oxw()._editStep(i,d.id,c)}),e._uU(10," Edit "),e.qZA(),e.qZA(),e.qZA(),e.BQk()}if(2&t){const n=o.$implicit;e.xp6(1),e.Q6J("headerSize",6),e.xp6(1),e.hij("",n.title," form"),e.xp6(2),e.Q6J("fdLayoutGridCol",4)("colMd",4)("colLg",4)("colXl",4),e.xp6(1),e.Q6J("ngForOf",n.items),e.xp6(1),e.Q6J("fdLayoutGridCol",4)("colMd",5)("colLg",5)("colXl",5),e.xp6(1),e.Q6J("ngForOf",n.items),e.xp6(1),e.Q6J("fdLayoutGridCol",1)("colMd",2)("colLg",2)("colXl",2)}}function en(t,o){if(1&t&&(e.ynx(0),e.TgZ(1,"h4",15),e._uU(2),e.qZA(),e.YNc(3,Ke,11,16,"ng-container",16),e.BQk()),2&t){const n=o.$implicit;e.xp6(1),e.Q6J("headerSize",4),e.xp6(1),e.hij("",n.name," step"),e.xp6(1),e.Q6J("ngForOf",n.forms)}}function nn(t,o){if(1&t&&e.YNc(0,en,4,3,"ng-container",14),2&t){const n=o.steps,r=e.oxw();e.Q6J("ngForOf",n)("ngForTrackBy",r.trackFn)}}function tn(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fd-dialog",21),e.TgZ(1,"fd-dialog-header"),e.TgZ(2,"button",22),e.NdJ("click",function(){return e.CHM(n).$implicit.dismiss()}),e.qZA(),e.qZA(),e.TgZ(3,"fd-dialog-body"),e._uU(4," This is custom confirmation dialog. "),e.qZA(),e.TgZ(5,"fd-dialog-footer"),e.TgZ(6,"fd-button-bar",23),e.NdJ("click",function(){return e.CHM(n).$implicit.close(!0)}),e.qZA(),e.TgZ(7,"fd-button-bar",24),e.NdJ("click",function(){return e.CHM(n).$implicit.dismiss()}),e.qZA(),e.qZA(),e.qZA()}if(2&t){const n=o.$implicit;e.Q6J("dialogConfig",o.dialogConfig)("dialogRef",n)}}function an(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let rn=(()=>{class t{constructor(n){this._wizardDialogService=n,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",icon:"product",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",icon:"account",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",icon:"credit-card",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",icon:"pie-chart",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle,goNextButtonTemplate:this.goNextTemplate,goBackButtonTemplate:this.goBackTemplate,finishButtonTemplate:this.finishTemplate,cancelButtonTemplate:this.cancelTemplate,confirmationDialogTemplate:this.confirmationDialogTemplate,summaryStepTemplate:this.summaryStepTemplate,reviewButtonTemplate:this.reviewButtonTemplate}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}_editStep(n,r,i){n.preventDefault(),i(r)}trackFn(n,r){return r.id}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-customizable-example"]],viewQuery:function(n,r){if(1&n&&(e.Gf(Ne,5),e.Gf(Pe,5),e.Gf(qe,5),e.Gf(Oe,5),e.Gf(Le,5),e.Gf(Be,5),e.Gf(je,5)),2&n){let i;e.iGM(i=e.CRH())&&(r.goNextTemplate=i.first),e.iGM(i=e.CRH())&&(r.goBackTemplate=i.first),e.iGM(i=e.CRH())&&(r.finishTemplate=i.first),e.iGM(i=e.CRH())&&(r.cancelTemplate=i.first),e.iGM(i=e.CRH())&&(r.confirmationDialogTemplate=i.first),e.iGM(i=e.CRH())&&(r.summaryStepTemplate=i.first),e.iGM(i=e.CRH())&&(r.reviewButtonTemplate=i.first)}},decls:16,vars:1,consts:[["label","Open customized wizard in dialog",3,"click"],["goNextTemplate",""],["goBackTemplate",""],["finishTemplate",""],["cancelTemplate",""],["reviewButtonTemplate",""],["summaryStepTemplate",""],["confirmationDialogTemplate",""],[4,"ngIf"],["contentDensity","condensed","buttonType","emphasized","label","Custom next button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom back button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom finish button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","ghost","label","Custom cancel button",1,"fd-bar__element",3,"click"],["contentDensity","condensed","buttonType","emphasized","label","Custom review button",1,"fd-bar__element",3,"click"],[4,"ngFor","ngForOf","ngForTrackBy"],["fd-title","",3,"headerSize"],[4,"ngFor","ngForOf"],[2,"margin-bottom","2rem"],[3,"fdLayoutGridCol","colMd","colLg","colXl"],["href","#",3,"click"],["fd-form-label",""],[3,"dialogConfig","dialogRef"],["fd-dialog-close-button","",3,"click"],["fdType","emphasized","label","Yes","type","submit",3,"click"],["fd-initial-focus","","label","No",3,"click"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,Je,1,0,"ng-template",null,1,e.W1O),e.YNc(3,Re,1,0,"ng-template",null,2,e.W1O),e.YNc(5,Qe,1,0,"ng-template",null,3,e.W1O),e.YNc(7,$e,1,0,"ng-template",null,4,e.W1O),e.YNc(9,Ye,1,0,"ng-template",null,5,e.W1O),e.YNc(11,nn,1,2,"ng-template",null,6,e.W1O),e.YNc(13,tn,8,2,"ng-template",null,7,e.W1O),e.YNc(15,an,3,3,"p",8)),2&n&&(e.xp6(15),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5,g.sg,B.r,j.q,J.q,R.N,Q.h,We.a,Fe.A,Ae.D,Ve.H,Me.g,ke.N,Ue.N],pipes:[g.Ts],encapsulation:2}),t})();function on(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let dn=(()=>{class t{constructor(n){this._wizardDialogService=n,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[l.kI.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:(r,i)=>{var d,c;return"Credit Card"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:(r,i)=>{var d,c;return"Bank Transfer"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",when:(r,i)=>{var d,c,u,b;return"Bank Transfer"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)||"Credit Card"===(null===(b=null===(u=i.paymentMethodStep)||void 0===u?void 0:u.paymentMethodForm)||void 0===b?void 0:b.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-condition-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,on,3,3,"p",1)),2&n&&(e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function sn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let mn=(()=>{class t{constructor(){this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-responsive-paddings-example"]],decls:2,vars:3,consts:[[3,"items","responsivePaddings","wizardFinished"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,sn,3,3,"p",1)),2&n&&(e.Q6J("items",r.stepItems)("responsivePaddings",!1),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function pn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let ln=(()=>{class t{constructor(){this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-visible-summary-example"]],decls:2,vars:4,consts:[[3,"items","responsivePaddings","displaySummaryStep","wizardFinished"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,pn,3,3,"p",1)),2&n&&(e.Q6J("items",r.stepItems)("responsivePaddings",!0)("displaySummaryStep",!0),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function cn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let un=(()=>{class t{constructor(n){this._wizardDialogService=n,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[l.kI.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:(r,i)=>{var d,c;return"Credit Card"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:(r,i)=>{var d,c;return"Bank Transfer"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",when:(r,i)=>{var d,c,u,b;return"Bank Transfer"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)||"Credit Card"===(null===(b=null===(u=i.paymentMethodStep)||void 0===u?void 0:u.paymentMethodForm)||void 0===b?void 0:b.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0,when:(r,i)=>{var d,c,u,b;return"Bank Transfer"===(null===(c=null===(d=i.paymentMethodStep)||void 0===d?void 0:d.paymentMethodForm)||void 0===c?void 0:c.paymentMethod)||"Credit Card"===(null===(b=null===(u=i.paymentMethodStep)||void 0===u?void 0:u.paymentMethodForm)||void 0===b?void 0:b.paymentMethod)}}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-visible-summary-branching-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,cn,3,3,"p",1)),2&n&&(e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function gn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let fn=(()=>{class t{constructor(n){this._wizardDialogService=n,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!1,title:this.wizardTitle}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-responsive-dialog-example"]],decls:2,vars:1,consts:[["label","Open wizard in dialog",3,"click"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,gn,3,3,"p",1)),2&n&&(e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function yn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let _n=(()=>{class t{constructor(){this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{type:"checkbox",name:"products",message:"Select appropriate products",guiOptions:{inline:!0,column:2},choices:()=>["TV","Console","Laptop"],validators:[l.kI.required],validate:n=>(null==n?void 0:n.length)>0?null:"You need to select at least one product",valueRenderer:n=>n.join(", ")}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-summary-objects-example"]],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,yn,3,3,"p",1)),2&n&&(e.Q6J("items",r.stepItems),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5],pipes:[g.Ts],encapsulation:2}),t})();var hn=a(64762),zn=a(61099),vn=a(40364);function bn(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",8),e.NdJ("click",function(){return e.CHM(n),e.oxw(2).goBack()}),e.qZA()}}function xn(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",9),e.NdJ("click",function(){return e.CHM(n),e.oxw(2).goNext()}),e.qZA()}}function Cn(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"fdp-button",10),e.NdJ("click",function(){return e.CHM(n),e.oxw(2).finish()}),e.qZA()}}function Tn(t,o){if(1&t&&(e.TgZ(0,"div",3),e.TgZ(1,"div",4),e.YNc(2,bn,1,0,"fdp-button",5),e.YNc(3,xn,1,0,"fdp-button",6),e.YNc(4,Cn,1,0,"fdp-button",7),e.qZA(),e.qZA()),2&t){const n=e.oxw();e.xp6(2),e.Q6J("ngIf",!n.isFirstStep),e.xp6(1),e.Q6J("ngIf",!n.isLastStep),e.xp6(1),e.Q6J("ngIf",n.isLastStep)}}function wn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let Zn=(()=>{class t{constructor(){this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Credit Card Details",id:"creditCardStep",formGroups:[{title:"3. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",formGroups:[{title:"4. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}]}get isFirstStep(){var n;return(null===(n=this.wizardGenerator)||void 0===n?void 0:n.isFirstStep)||!1}get isLastStep(){var n;return(null===(n=this.wizardGenerator)||void 0===n?void 0:n.isLastStep)||!1}wizardFinished(n){this.wizardValue=n}goNext(){var n;null===(n=this.wizardGenerator)||void 0===n||n.goNext()}goBack(){var n;null===(n=this.wizardGenerator)||void 0===n||n.goBack()}finish(){var n;return(0,hn.mG)(this,void 0,void 0,function*(){yield null===(n=this.wizardGenerator)||void 0===n?void 0:n.finish()})}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-external-navigation-example"]],viewQuery:function(n,r){if(1&n&&e.Gf(C.tR,5),2&n){let i;e.iGM(i=e.CRH())&&(r.wizardGenerator=i.first)}},decls:3,vars:5,consts:[[3,"appendToWizard","navigationButtons","items","wizardFinished"],["fd-bar","",4,"ngIf"],[4,"ngIf"],["fd-bar",""],["fd-bar-right",""],["class","fd-bar__element","buttonType","ghost","contentDensity","condensed","label","Previous step",3,"click",4,"ngIf"],["class","fd-bar__element","buttonType","emphasized","contentDensity","condensed","label","Next step",3,"click",4,"ngIf"],["class","fd-bar__element","buttonType","emphasized","contentDensity","condensed","label","Finish",3,"click",4,"ngIf"],["buttonType","ghost","contentDensity","condensed","label","Previous step",1,"fd-bar__element",3,"click"],["buttonType","emphasized","contentDensity","condensed","label","Next step",1,"fd-bar__element",3,"click"],["buttonType","emphasized","contentDensity","condensed","label","Finish",1,"fd-bar__element",3,"click"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,Tn,5,3,"div",1),e.YNc(2,wn,3,3,"p",2)),2&n&&(e.Q6J("appendToWizard",!1)("navigationButtons",!1)("items",r.stepItems),e.xp6(1),e.Q6J("ngIf",r.stepItems.length>0&&(null==r.wizardGenerator?null:r.wizardGenerator.wizardCreated)),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5,zn.R,vn.M,A.r],pipes:[g.Ts],encapsulation:2,changeDetection:0}),t})();var q=a(85533);function Sn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let In=(()=>{class t{constructor(n){this._formGeneratorService=n,this.stepItems=[{name:"Account information",id:"accountInformationStep",formGroups:[{title:"1. Account information",id:"accountInformation",formItems:[{name:"name",message:"Account name",type:"input",validators:[l.kI.required],onchange:(r,i)=>{const d=i.get("repositoryInformation");this._formGeneratorService.getFormControl(d,"repositoryName").setValue(`${r}-repo`)}}]}]},{name:"Repository information",id:"repositoryInformationStep",formGroups:[{title:"2. Repository information",id:"repositoryInformation",formItems:[{name:"repositoryName",message:"Repository name",type:"input",validators:[l.kI.required]}]}]},{name:"Summary",id:"summary",summary:!0}]}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(q.bN))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-onchange-example"]],features:[e._Bn([q.bN])],decls:2,vars:2,consts:[[3,"items","wizardFinished"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-wizard-generator",0),e.NdJ("wizardFinished",function(d){return r.wizardFinished(d)}),e.qZA(),e.YNc(1,Sn,3,3,"p",1)),2&n&&(e.Q6J("items",r.stepItems),e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[M.t,g.O5],pipes:[g.Ts],encapsulation:2}),t})();function Dn(t,o){if(1&t&&(e.TgZ(0,"p"),e._uU(1),e.ALo(2,"json"),e.qZA()),2&t){const n=e.oxw();e.xp6(1),e.hij("Wizard value: ",e.lcZ(2,1,n.wizardValue),"")}}let Gn=(()=>{class t{constructor(n,r){this._wizardDialogService=n,this._formGeneratorService=r,this.wizardTitle={size:2,text:"Checkout"},this.stepItems=[{name:"Product type",id:"productTypeStep",formGroups:[{title:"1. Product Type",id:"productType",formItems:[{name:"product",message:"Select appropriate product type",type:"select",choices:["Mobile","Tablet","Desktop"],validators:[l.kI.required]},{name:"cpuManufacturer",message:"Select appropriate CPU Manufacturer",type:"select",choices:["Intel","AMD","Apple"],validators:[l.kI.required],when:i=>"Desktop"===i.product}]},{title:"1.1. Protective case",id:"protectiveCase",dependencyFields:{productTypeStep:{productType:["product"]}},when:(i,d)=>{var c,u;const b=null===(u=null===(c=d.productTypeStep)||void 0===c?void 0:c.productType)||void 0===u?void 0:u.product;return void 0!==b&&"Desktop"!==b},formItems:[{name:"protectiveCaseNeeded",message:"Would you like to include a protective case?",type:"switch",default:!1},{name:"protectiveCaseMaterial",message:"Select protective case material",type:"select",choices:["Leather","Silicone"],validators:[l.kI.required],when:i=>i.protectiveCaseNeeded}]}]},{name:"Warranty",id:"warrantyStep",formGroups:[{title:"2. Warranty",id:"warranty",formItems:[{name:"handheldWarranty",message:"Include handheld devices warranty",type:"switch",default:!0,dependencyFields:{productTypeStep:{productType:["product"]}},when:(i,d)=>{const c=d.get("productType"),u=this._formGeneratorService.getFormControl(c,"product");return"Desktop"!==(null==u?void 0:u.value)}},{name:"desktopWarranty",message:"Include Desktop devices warranty",type:"switch",default:!0,dependencyFields:{productTypeStep:{productType:["product"]}},when:(i,d)=>{const c=d.get("productType"),u=this._formGeneratorService.getFormControl(c,"product");return"Desktop"===(null==u?void 0:u.value)}}]}]},{name:"Customer information",id:"customerInformationStep",formGroups:[{title:"2. Customer Information",id:"customerInformation",formItems:[{name:"name",message:"Name",type:"input",validators:[l.kI.required]},{name:"address",message:"Address Line 1",type:"input",validators:[l.kI.required]},{name:"address2",message:"Address Line 2",type:"input"}]}]},{name:"Payment method",id:"paymentMethodStep",formGroups:[{title:"3. Payment method",id:"paymentMethodForm",formItems:[{name:"paymentMethod",message:"Select appropriate payment method",type:"select",choices:["Credit Card","Bank Transfer"],validators:[l.kI.required]}]}]},{name:"Credit Card Details",id:"creditCardStep",when:(i,d)=>{var c,u;return"Credit Card"===(null===(u=null===(c=d.paymentMethodStep)||void 0===c?void 0:c.paymentMethodForm)||void 0===u?void 0:u.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Credit Card Details",id:"cardPayment",formItems:[{name:"creditCardNumber",message:"Enter your credit card details",type:"input",validators:[l.kI.required]}]}]},{name:"Bank Details",id:"bankDetailsStep",when:(i,d)=>{var c,u;return"Bank Transfer"===(null===(u=null===(c=d.paymentMethodStep)||void 0===c?void 0:c.paymentMethodForm)||void 0===u?void 0:u.paymentMethod)},dependencyFields:{paymentMethodStep:{paymentMethodForm:["paymentMethod"]}},formGroups:[{title:"4. Bank Details",id:"bankDetailsForm",formItems:[{name:"bankDetails",message:"Enter your bank details",type:"input",validators:[l.kI.required]}]}]},{name:"Discount",id:"discountStep",when:(i,d)=>{var c,u,b,O;return"Bank Transfer"===(null===(u=null===(c=d.paymentMethodStep)||void 0===c?void 0:c.paymentMethodForm)||void 0===u?void 0:u.paymentMethod)||"Credit Card"===(null===(O=null===(b=d.paymentMethodStep)||void 0===b?void 0:b.paymentMethodForm)||void 0===O?void 0:O.paymentMethod)},formGroups:[{title:"5. Discount details",id:"discountForm",formItems:[{name:"discount",message:"Enter your discount coupon code",type:"input"}]}]},{name:"Summary",id:"summary",summary:!0}],this._onDestroy$=new k.xQ}ngOnDestroy(){this._onDestroy$.next(),this._onDestroy$.complete()}openDialog(){this._wizardDialogService.open({width:"100%",height:"100%",verticalPadding:!1,data:{items:this.stepItems,appendToWizard:!1,displaySummaryStep:!0,responsivePaddings:!0,title:this.wizardTitle}}).afterClosed.pipe((0,U.R)(this._onDestroy$)).subscribe(n=>{this.wizardValue=n})}wizardFinished(n){this.wizardValue=n}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(C.AV),e.Y36(q.bN))},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-wizard-generator-visibility-between-steps-example"]],decls:2,vars:1,consts:[["label","Open branching wizard in dialog",3,"click"],[4,"ngIf"]],template:function(n,r){1&n&&(e.TgZ(0,"fdp-button",0),e.NdJ("click",function(){return r.openDialog()}),e.qZA(),e.YNc(1,Dn,3,3,"p",1)),2&n&&(e.xp6(1),e.Q6J("ngIf",r.wizardValue))},directives:[A.r,g.O5],pipes:[g.Ts],encapsulation:2}),t})();const $=function(){return["/platform/form-generator"]};let En=(()=>{class t{constructor(){this.defaultExample=[{language:"html",code:G,fileName:"wizard-generator-default-example"},{language:"typescript",code:I,fileName:"wizard-generator-default-example",component:"WizardGeneratorDefaultExampleComponent"}],this.dialogExample=[{language:"html",code:V,fileName:"wizard-generator-dialog-example"},{language:"typescript",code:W,fileName:"wizard-generator-dialog-example",component:"WizardGeneratorDialogExampleComponent"}],this.customizableExample=[{language:"html",code:F,fileName:"wizard-generator-customizable-example"},{language:"typescript",code:x,fileName:"wizard-generator-customizable-example",component:"WizardGeneratorCustomizableExampleComponent"}],this.customizableEmbededExample=[{language:"html",code:D,fileName:"wizard-generator-customizable-embeded-example"},{language:"typescript",code:f,fileName:"wizard-generator-customizable-embeded-example",component:"WizardGeneratorCustomizableEmbededExampleComponent"}],this.branchingExample=[{language:"html",code:N,fileName:"wizard-generator-condition-example"},{language:"typescript",code:S,fileName:"wizard-generator-condition-example",component:"WizardGeneratorConditionExampleComponent"}],this.responsivePaddingsExample=[{language:"html",code:z,fileName:"wizard-generator-responsive-paddings-example"},{language:"typescript",code:P,fileName:"wizard-generator-responsive-paddings-example",component:"WizardGeneratorResponsivePaddingsExampleComponent"}],this.visibleSummaryExample=[{language:"html",code:X,fileName:"wizard-generator-visible-summary-example"},{language:"typescript",code:K,fileName:"wizard-generator-visible-summary-example",component:"WizardGeneratorVisibleSummaryExampleComponent"}],this.visibleBranchingSummaryExample=[{language:"html",code:ee,fileName:"wizard-generator-visible-summary-branching-example"},{language:"typescript",code:ne,fileName:"wizard-generator-visible-summary-branching-example",component:"WizardGeneratorVisibleSummaryBranchingExampleComponent"}],this.responsiveDialogPaddingsExample=[{language:"html",code:Y,fileName:"wizard-generator-responsive-dialog-example"},{language:"typescript",code:H,fileName:"wizard-generator-responsive-dialog-example",component:"WizardGeneratorResponsiveDialogExampleComponent"}],this.summaryObjectsExample=[{language:"html",code:re,fileName:"wizard-generator-summary-objects-example"},{language:"typescript",code:oe,fileName:"wizard-generator-summary-objects-example",component:"WizardGeneratorSummaryObjectsExampleComponent"}],this.externalNavigationObjectsExample=[{language:"html",code:te,fileName:"wizard-generator-external-navigation-example"},{language:"typescript",code:ae,fileName:"wizard-generator-external-navigation-example",component:"WizardGeneratorExternalNavigationExampleComponent"}],this.fieldsInteractionExample=[{language:"html",code:ie,fileName:"wizard-generator-onchange-example"},{language:"typescript",code:de,fileName:"wizard-generator-onchange-example",component:"WizardGeneratorOnchangeExampleComponent"}],this.fieldsVisibilityExample=[{language:"html",code:se,fileName:"wizard-generator-onchange-example"},{language:"typescript",code:me,fileName:"wizard-generator-visibility-between-steps-example",component:"WizardGeneratorVisibilityBetweenStepsExampleComponent"}]}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-wizard-generator-docs"]],decls:268,vars:17,consts:[["id","wizard-default-example","componentName","wizard"],[3,"exampleFiles"],["id","in-dialog","componentName","wizard-generator"],["id","customization","componentName","wizard-generator"],["id","dialog-customization","componentName","wizard-generator"],["id","branching","componentName","wizard-generator"],[3,"routerLink"],["id","responsive-paddings","componentName","wizard-generator"],[2,"text-align","left"],[2,"margin-left","2rem"],["id","visible-summary","componentName","wizard-generator"],["id","visible-summary-with-branching","componentName","wizard-generator"],["id","responsive-paddings-in-dialog","componentName","wizard-generator"],["id","objects-on-summary-page","componentName","wizard-generator"],["id","external-navigation-buttons","componentName","wizard-generator"],["id","onchange-interaction","componentName","wizard-generator"],["id","inter-steps-conditions","componentName","wizard-generator"]],template:function(n,r){1&n&&(e.TgZ(0,"fd-docs-section-title",0),e._uU(1," Default Wizard generator\n"),e.qZA(),e.TgZ(2,"description"),e._uU(3,' The default wizard displays a walkthrough screen with forms split into sections. Once the user fills all of the necessary input fields, and presses the "Next step" button, new step will appear. A summary step can be added by providing additional step with '),e.TgZ(4,"code"),e._uU(5,"summary: true"),e.qZA(),e._uU(6," property to the wizard generator metadata.\n"),e.qZA(),e.TgZ(7,"component-example"),e._UZ(8,"fdp-wizard-generator-default-example"),e.qZA(),e._UZ(9,"code-example",1),e._UZ(10,"separator"),e.TgZ(11,"fd-docs-section-title",2),e._uU(12," Wizard generator in dialog\n"),e.qZA(),e.TgZ(13,"description"),e._uU(14," The wizard generator can also be used within a dialog by calling "),e.TgZ(15,"code"),e._uU(16,"open"),e.qZA(),e._uU(17," method from "),e.TgZ(18,"code"),e._uU(19,"WizardDialogGeneratorService"),e.qZA(),e._uU(20," A Cancel button is displayed in the footer, so the user can exit the wizard at any point during the process. However, if a user exits the wizard after adding their input, they will receive a warning that their information will be lost.\n"),e.qZA(),e.TgZ(21,"component-example"),e._UZ(22,"fdp-wizard-generator-dialog-example"),e.qZA(),e._UZ(23,"code-example",1),e._UZ(24,"separator"),e.TgZ(25,"fd-docs-section-title",3),e._uU(26," Customizable Wizard generator\n"),e.qZA(),e.TgZ(27,"description"),e._uU(28," The wizard component can be customized with modifier inputs. Steps can be placed on separate pages, rather than appended to the wizard, by setting the "),e.TgZ(29,"code"),e._uU(30,"[appendToWizard]"),e.qZA(),e._uU(31," input to "),e.TgZ(32,"code"),e._uU(33,"false"),e.qZA(),e._uU(34,". "),e._UZ(35,"br"),e._UZ(36,"br"),e._uU(37," You can also use icons for the step indicators by adding "),e.TgZ(38,"code"),e._uU(39,"icon"),e.qZA(),e._uU(40," property to the wizard steps object. "),e._UZ(41,"br"),e._UZ(42,"br"),e._uU(43," Buttons appearance can be changed with "),e.TgZ(44,"code"),e._uU(45,"[navigationButtonLabels]"),e.qZA(),e._uU(46," property. "),e._UZ(47,"br"),e._UZ(48,"br"),e._uU(49," If you want to use completely different style for navigational buttons, you can use special directives: "),e.TgZ(50,"code"),e._uU(51,"fdp-wizard-generator-go-next-button, fdp-wizard-generator-review-button, fdp-wizard-generator-finish-button"),e.qZA(),e._uU(52,". "),e._UZ(53,"br"),e._UZ(54,"br"),e._uU(55," To change Summary step view, you can use "),e.TgZ(56,"code"),e._uU(57,"fdp-wizard-generator-summary-step"),e.qZA(),e._uU(58," directive to flag your template as a summary section template. Your template will receive such variables: "),e.TgZ(59,"ul"),e.TgZ(60,"li"),e._uU(61,"steps: Array of object that implements "),e.TgZ(62,"code"),e._uU(63,"WizardGeneratorSummaryItem"),e.qZA(),e._uU(64," interface"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"editStep: Method to edit defined section step"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(67,"component-example"),e._UZ(68,"fdp-wizard-generator-customizable-embeded-example"),e.qZA(),e._UZ(69,"code-example",1),e._UZ(70,"separator"),e.TgZ(71,"fd-docs-section-title",4),e._uU(72," Customizable Wizard generator in dialog\n"),e.qZA(),e.TgZ(73,"description"),e._uU(74," Dialog close confirmation text can be changed with "),e.TgZ(75,"code"),e._uU(76,"confirmationDialogText, confirmationDialogCloseText, confirmationDialogCancelText"),e.qZA(),e._uU(77," properties. "),e._UZ(78,"br"),e._UZ(79,"br"),e._uU(80," If you want to use completely different style for navigational buttons, you can use "),e.TgZ(81,"code"),e._uU(82,"goNextButtonTemplate, goBackButtonTemplate, reviewButtonTemplate, finishButtonTemplate, cancelButtonTemplate"),e.qZA(),e._uU(83," properties for the dialog wizard. "),e._UZ(84,"br"),e._UZ(85,"br"),e._uU(86," If you want to use your custom confirmation dialog, you can pass it "),e.TgZ(87,"code"),e._uU(88,"confirmationDialogTemplate"),e.qZA(),e._uU(89," property to wizard dialog service.\n"),e.qZA(),e.TgZ(90,"component-example"),e._UZ(91,"fdp-wizard-generator-customizable-example"),e.qZA(),e._UZ(92,"code-example",1),e._UZ(93,"separator"),e.TgZ(94,"fd-docs-section-title",5),e._uU(95," Branching Wizard "),e.qZA(),e.TgZ(96,"description"),e.TgZ(97,"p"),e._uU(98," Developers can configure branching behaviour of the wizard by providing "),e.TgZ(99,"code"),e._uU(100,"when"),e.qZA(),e._uU(101," property function to the wizard generator step and by specifying "),e.TgZ(102,"code"),e._uU(103,"dependencyFields"),e.qZA(),e._uU(104," property of the wizard generator step to reflect which steps are creating branches. "),e.qZA(),e.TgZ(105,"p"),e._uU(106,"Additionally, Developers can configure each field to be dependent on the other fields value across all steps."),e.qZA(),e.TgZ(107,"p"),e._uU(108,"More information could be found in "),e.TgZ(109,"a",6),e._uU(110,"Form Generator"),e.qZA(),e._uU(111," docs."),e.qZA(),e.qZA(),e.TgZ(112,"component-example"),e._UZ(113,"fdp-wizard-generator-condition-example"),e.qZA(),e._UZ(114,"code-example",1),e._UZ(115,"separator"),e.TgZ(116,"fd-docs-section-title",7),e._uU(117," Responsive paddings for Wizard generator\n"),e.qZA(),e.TgZ(118,"description"),e.TgZ(119,"p"),e._uU(120," The default wizard have responsive paddings applied for progress bar and content. To disable responsive paddings, you can use "),e.TgZ(121,"code"),e._uU(122,'[responsivePaddings]="false"'),e.qZA(),e._uU(123," input to the wizard generator component. "),e.qZA(),e.TgZ(124,"p"),e._uU(125,"Responsive paddings values:"),e.qZA(),e.TgZ(126,"table"),e.TgZ(127,"thead"),e.TgZ(128,"tr"),e.TgZ(129,"th",8),e.TgZ(130,"strong"),e._uU(131,"rem"),e.qZA(),e.qZA(),e.TgZ(132,"th",8),e.TgZ(133,"div",9),e.TgZ(134,"p"),e.TgZ(135,"strong"),e._uU(136,"Min-width"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(137,"th",8),e.TgZ(138,"div",9),e.TgZ(139,"strong"),e._uU(140,"Max-width"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(141,"tbody"),e.TgZ(142,"tr"),e.TgZ(143,"td",8),e._uU(144,"1rem"),e.qZA(),e.TgZ(145,"td",8),e.TgZ(146,"span",9),e.TgZ(147,"em"),e._uU(148,"n/a"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(149,"td",8),e.TgZ(150,"span",9),e._uU(151,"599px"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(152,"tr"),e.TgZ(153,"td",8),e._uU(154,"2rem"),e.qZA(),e.TgZ(155,"td",8),e.TgZ(156,"span",9),e._uU(157,"600px"),e.qZA(),e.qZA(),e.TgZ(158,"td",8),e.TgZ(159,"span",9),e._uU(160,"1023px"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(161,"tr"),e.TgZ(162,"td",8),e._uU(163,"2rem"),e.qZA(),e.TgZ(164,"td",8),e.TgZ(165,"span",9),e._uU(166,"1024px"),e.qZA(),e.qZA(),e.TgZ(167,"td",8),e.TgZ(168,"span",9),e._uU(169,"1439px"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(170,"tr"),e.TgZ(171,"td",8),e._uU(172,"3rem"),e.qZA(),e.TgZ(173,"td",8),e.TgZ(174,"span",9),e._uU(175,"1440px"),e.qZA(),e.qZA(),e.TgZ(176,"td",8),e.TgZ(177,"span",9),e.TgZ(178,"em"),e._uU(179,"n/a"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(180,"component-example"),e._UZ(181,"fdp-wizard-generator-responsive-paddings-example"),e.qZA(),e._UZ(182,"code-example",1),e._UZ(183,"separator"),e.TgZ(184,"fd-docs-section-title",10),e._uU(185," Visible summary step in progress bar\n"),e.qZA(),e.TgZ(186,"description"),e._uU(187," By default, Wizard generator doesn't show Summary step in the wizard progress bar section. Developers can configure visibility of the summary step by providing "),e.TgZ(188,"code"),e._uU(189,'[displaySummaryStep]="true"'),e.qZA(),e._uU(190," property of "),e.TgZ(191,"code"),e._uU(192,"<fdp-wizard-generator />"),e.qZA(),e._uU(193,".\n"),e.qZA(),e.TgZ(194,"component-example"),e._UZ(195,"fdp-wizard-generator-visible-summary-example"),e.qZA(),e._UZ(196,"code-example",1),e._UZ(197,"separator"),e.TgZ(198,"fd-docs-section-title",11),e._uU(199," Visible summary step with branching\n"),e.qZA(),e.TgZ(200,"description"),e._uU(201," As per design specification, no steps should be visible after branching step, until it's completed. This means that developers should configure appropriate condidions for steps visibility. Same applies to the summary step, if it should be visible in wizard progress bar.\n"),e.qZA(),e.TgZ(202,"component-example"),e._UZ(203,"fdp-wizard-generator-visible-summary-branching-example"),e.qZA(),e._UZ(204,"code-example",1),e._UZ(205,"separator"),e.TgZ(206,"fd-docs-section-title",12),e._uU(207," Responsive paddings for Wizard generator in dialog\n"),e.qZA(),e.TgZ(208,"description"),e._uU(209," Use "),e.TgZ(210,"code"),e._uU(211,"responsivePaddings: false"),e.qZA(),e._uU(212," property for dialog config to dosable wizard responsive paddings inside dialog.\n"),e.qZA(),e.TgZ(213,"component-example"),e._UZ(214,"fdp-wizard-generator-responsive-dialog-example"),e.qZA(),e._UZ(215,"code-example",1),e._UZ(216,"separator"),e.TgZ(217,"fd-docs-section-title",13),e._uU(218," Handling complex objects rendering on Summary page\n"),e.qZA(),e.TgZ(219,"description"),e._uU(220," If your form field contains some complex object and should be rendered with custom function, you can provide "),e.TgZ(221,"code"),e._uU(222,"valueRenderer"),e.qZA(),e._uU(223," function for particular form item.\n"),e.qZA(),e.TgZ(224,"component-example"),e._UZ(225,"fdp-wizard-generator-summary-objects-example"),e.qZA(),e._UZ(226,"code-example",1),e._UZ(227,"separator"),e.TgZ(228,"fd-docs-section-title",14),e._uU(229," External navigation buttons\n"),e.qZA(),e.TgZ(230,"description"),e._uU(231," If you want navigation buttons of the Wizard generator to be outside the component, you can use public methods and properties of the Wizard generator itself to implement desired behaviour.\n"),e.qZA(),e.TgZ(232,"component-example"),e._UZ(233,"fdp-wizard-generator-external-navigation-example"),e.qZA(),e._UZ(234,"code-example",1),e.TgZ(235,"fd-docs-section-title",15),e._uU(236," Field on-change interaction\n"),e.qZA(),e.TgZ(237,"description"),e._uU(238,' If you want to add additional connection between form fields (e.g. set default value of field "B" to be equal to field "A"), you can use '),e.TgZ(239,"code"),e._uU(240,"onchange"),e.qZA(),e._uU(241," property of the formItem object.\n"),e.qZA(),e.TgZ(242,"component-example"),e._UZ(243,"fdp-wizard-generator-onchange-example"),e.qZA(),e._UZ(244,"code-example",1),e._UZ(245,"separator"),e.TgZ(246,"fd-docs-section-title",16),e._uU(247,"Handling form items visibility across the steps"),e.qZA(),e.TgZ(248,"description"),e.TgZ(249,"p"),e._uU(250," Additionally to branching functionality, developers can configure wizard items visibility across all the steps. "),e.qZA(),e.TgZ(251,"p"),e._uU(252,"Conditional visibility can be applied to the following items:"),e.qZA(),e.TgZ(253,"ul"),e.TgZ(254,"li"),e._uU(255,"Wizard steps"),e.qZA(),e.TgZ(256,"li"),e._uU(257,"Wizard step forms"),e.qZA(),e.TgZ(258,"li"),e._uU(259,"Form group items"),e.qZA(),e.qZA(),e.TgZ(260,"p"),e._uU(261,"More information could be found in "),e.TgZ(262,"a",6),e._uU(263,"Form Generator"),e.qZA(),e._uU(264," docs."),e.qZA(),e.qZA(),e.TgZ(265,"component-example"),e._UZ(266,"fdp-wizard-generator-visibility-between-steps-example"),e.qZA(),e._UZ(267,"code-example",1)),2&n&&(e.xp6(9),e.Q6J("exampleFiles",r.defaultExample),e.xp6(14),e.Q6J("exampleFiles",r.dialogExample),e.xp6(46),e.Q6J("exampleFiles",r.customizableEmbededExample),e.xp6(23),e.Q6J("exampleFiles",r.customizableExample),e.xp6(17),e.Q6J("routerLink",e.DdM(15,$)),e.xp6(5),e.Q6J("exampleFiles",r.branchingExample),e.xp6(68),e.Q6J("exampleFiles",r.responsivePaddingsExample),e.xp6(14),e.Q6J("exampleFiles",r.visibleSummaryExample),e.xp6(8),e.Q6J("exampleFiles",r.visibleBranchingSummaryExample),e.xp6(11),e.Q6J("exampleFiles",r.responsiveDialogPaddingsExample),e.xp6(11),e.Q6J("exampleFiles",r.summaryObjectsExample),e.xp6(8),e.Q6J("exampleFiles",r.externalNavigationObjectsExample),e.xp6(10),e.Q6J("exampleFiles",r.fieldsInteractionExample),e.xp6(18),e.Q6J("routerLink",e.DdM(16,$)),e.xp6(5),e.Q6J("exampleFiles",r.fieldsVisibilityExample))},directives:[pe.k,L.w,le.O,ue,ge.E,fe.N,_e,Ee,rn,s.yS,dn,mn,ln,un,fn,_n,Zn,In,Gn],encapsulation:2}),t})();var Wn=a(43870),Fn=a(87444),An=a(34506);let Vn=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["fdp-platform-wizard-generator-header"]],decls:22,vars:0,consts:[["routerLink","/core/wizard"],["module","PlatformWizardGeneratorModule","subPackage","wizard-generator"]],template:function(n,r){1&n&&(e.TgZ(0,"header"),e._uU(1,"Wizard generator"),e.qZA(),e.TgZ(2,"description"),e._uU(3," This is a wrapper of the Platform component present in "),e.TgZ(4,"a",0),e._uU(5,"@fundamental-ngx/core"),e.qZA(),e._uU(6,". "),e._UZ(7,"br"),e._uU(8," It provides ability to dynamically generate Wizard without any user-provided templates. "),e._UZ(9,"br"),e._UZ(10,"br"),e.TgZ(11,"h3"),e._uU(12,"Platform specific enhancements:"),e.qZA(),e.TgZ(13,"ul"),e.TgZ(14,"li"),e._uU(15,"Steps are dynamically rendered based on steps object input."),e.qZA(),e.TgZ(16,"li"),e._uU(17,"Branching logic is based on the steps object input."),e.qZA(),e.qZA(),e.qZA(),e._UZ(18,"br"),e._UZ(19,"import",1),e._UZ(20,"fd-header-tabs"),e._UZ(21,"router-outlet"))},directives:[Wn.G,L.w,s.yS,Fn.k,An.c,s.lC],encapsulation:2}),t})();var Mn=a(7754);const kn=[{path:"",component:Vn,children:[{path:"",component:En},{path:"api",component:v.h,data:{content:m.X.wizardGenerator}}]}];let Un=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[s.Bz.forChild(kn),y.g,C.h0,E.R,_.Su,h.Fh,w.hd,Z.F,Mn.Q]]}),t})()},72528:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},77726:p=>{p.exports="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem,\n    WizardTitle\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-condition-example',\n    templateUrl: './wizard-generator-condition-example.component.html'\n})\nexport class WizardGeneratorConditionExampleComponent implements OnDestroy {\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: true,\n                    title: this.wizardTitle\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},88179:p=>{p.exports='<fdp-wizard-generator\n    [appendToWizard]="false"\n    [items]="stepItems"\n    [title]="wizardTitle"\n    (wizardFinished)="wizardFinished($event)"\n>\n    <ng-template fdp-wizard-generator-go-next-button let-goNext="goNext">\n        <fdp-button\n            contentDensity="condensed"\n            buttonType="emphasized"\n            label="Custom next button"\n            (click)="goNext()"\n        ></fdp-button>\n    </ng-template>\n    <ng-template fdp-wizard-generator-review-button let-goNext="goNext">\n        <fdp-button\n            contentDensity="condensed"\n            buttonType="emphasized"\n            label="Custom review button"\n            (click)="goNext()"\n        ></fdp-button>\n    </ng-template>\n    <ng-template fdp-wizard-generator-finish-button let-finish="finish">\n        <fdp-button\n            contentDensity="condensed"\n            buttonType="emphasized"\n            label="Custom finish button"\n            (click)="finish()"\n        ></fdp-button>\n    </ng-template>\n    <ng-template fdp-wizard-generator-summary-step let-steps="steps" let-editStep="editStep">\n        <ng-container *ngFor="let step of steps; trackBy: trackFn">\n            <h4 fd-title [headerSize]="4">{{ step.name }} step</h4>\n            <ng-container *ngFor="let group of step.forms">\n                <h4 fd-title [headerSize]="6">{{ group.title }} form</h4>\n                <fd-layout-grid style="margin-bottom: 2rem">\n                    <div [fdLayoutGridCol]="4" [colMd]="4" [colLg]="4" [colXl]="4">\n                        <div *ngFor="let item of group.items">\n                            <label fd-form-label> {{ item.label }}: </label>\n                        </div>\n                    </div>\n                    <div [fdLayoutGridCol]="4" [colMd]="5" [colLg]="5" [colXl]="5">\n                        <div *ngFor="let item of group.items">\n                            <label fd-form-label>\n                                {{ item.value || \'-\' }}\n                            </label>\n                        </div>\n                    </div>\n                    <div [fdLayoutGridCol]="1" [colMd]="2" [colLg]="2" [colXl]="2">\n                        <fdp-link href="#" (click)="_editStep($event, step.id, editStep)"> Edit </fdp-link>\n                    </div>\n                </fd-layout-grid>\n            </ng-container>\n        </ng-container>\n    </ng-template>\n</fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},3642:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport {\n    FormattedFormStep,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem,\n    WizardTitle\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-customizable-embeded-example',\n    templateUrl: './wizard-generator-customizable-embeded-example.component.html'\n})\nexport class WizardGeneratorCustomizableEmbededExampleComponent {\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'summary',\n            summary: true,\n            name: 'Review'\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n    trackFn(_: number, formattedStep: FormattedFormStep): string {\n        return formattedStep.id;\n    }\n\n    _editStep(event: MouseEvent, stepId: string, callback: (stepId: string) => void): void {\n        event.preventDefault();\n        callback(stepId);\n    }\n}\n"},41745:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open customized wizard in dialog"></fdp-button>\n\n<ng-template let-goNext="goNext" #goNextTemplate>\n    <fdp-button\n        class="fd-bar__element"\n        contentDensity="condensed"\n        buttonType="emphasized"\n        label="Custom next button"\n        (click)="goNext()"\n    ></fdp-button>\n</ng-template>\n\n<ng-template let-goBack="goBack" #goBackTemplate>\n    <fdp-button\n        class="fd-bar__element"\n        contentDensity="condensed"\n        buttonType="ghost"\n        label="Custom back button"\n        (click)="goBack()"\n    ></fdp-button>\n</ng-template>\n\n<ng-template let-finish="finish" #finishTemplate>\n    <fdp-button\n        class="fd-bar__element"\n        contentDensity="condensed"\n        buttonType="emphasized"\n        label="Custom finish button"\n        (click)="finish()"\n    ></fdp-button>\n</ng-template>\n\n<ng-template let-cancel="cancel" #cancelTemplate>\n    <fdp-button\n        class="fd-bar__element"\n        contentDensity="condensed"\n        buttonType="ghost"\n        label="Custom cancel button"\n        (click)="cancel()"\n    ></fdp-button>\n</ng-template>\n\n<ng-template let-goNext="goNext" #reviewButtonTemplate>\n    <fdp-button\n        class="fd-bar__element"\n        contentDensity="condensed"\n        buttonType="emphasized"\n        label="Custom review button"\n        (click)="goNext()"\n    ></fdp-button>\n</ng-template>\n\n<ng-template #summaryStepTemplate let-steps="steps" let-editStep="editStep">\n    <ng-container *ngFor="let step of steps; trackBy: trackFn">\n        <h4 fd-title [headerSize]="4">{{ step.name }} step</h4>\n        <ng-container *ngFor="let group of step.forms">\n            <h4 fd-title [headerSize]="6">{{ group.title }} form</h4>\n            <fd-layout-grid style="margin-bottom: 2rem">\n                <div [fdLayoutGridCol]="4" [colMd]="4" [colLg]="4" [colXl]="4">\n                    <div *ngFor="let item of group.items">\n                        <label fd-form-label> {{ item.label }}: </label>\n                    </div>\n                </div>\n                <div [fdLayoutGridCol]="4" [colMd]="5" [colLg]="5" [colXl]="5">\n                    <div *ngFor="let item of group.items">\n                        <label fd-form-label>\n                            {{ item.value || \'-\' }}\n                        </label>\n                    </div>\n                </div>\n                <div [fdLayoutGridCol]="1" [colMd]="2" [colLg]="2" [colXl]="2">\n                    <fdp-link href="#" (click)="_editStep($event, step.id, editStep)"> Edit </fdp-link>\n                </div>\n            </fd-layout-grid>\n        </ng-container>\n    </ng-container>\n</ng-template>\n\n<ng-template let-dialog let-dialogConfig="dialogConfig" #confirmationDialogTemplate>\n    <fd-dialog [dialogConfig]="dialogConfig" [dialogRef]="dialog">\n        <fd-dialog-header>\n            <button fd-dialog-close-button (click)="dialog.dismiss()"></button>\n        </fd-dialog-header>\n\n        <fd-dialog-body> This is custom confirmation dialog. </fd-dialog-body>\n\n        <fd-dialog-footer>\n            <fd-button-bar fdType="emphasized" label="Yes" type="submit" (click)="dialog.close(true)"> </fd-button-bar>\n            <fd-button-bar fd-initial-focus label="No" (click)="dialog.dismiss()"> </fd-button-bar>\n        </fd-dialog-footer>\n    </fd-dialog>\n</ng-template>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},5377:p=>{p.exports="import { Component, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem,\n    WizardTitle,\n    FormattedFormStep\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-customizable-example',\n    templateUrl: './wizard-generator-customizable-example.component.html'\n})\nexport class WizardGeneratorCustomizableExampleComponent implements OnDestroy {\n    @ViewChild('goNextTemplate') goNextTemplate: TemplateRef<any>;\n    @ViewChild('goBackTemplate') goBackTemplate: TemplateRef<any>;\n    @ViewChild('finishTemplate') finishTemplate: TemplateRef<any>;\n    @ViewChild('cancelTemplate') cancelTemplate: TemplateRef<any>;\n    @ViewChild('confirmationDialogTemplate') confirmationDialogTemplate: TemplateRef<any>;\n    @ViewChild('summaryStepTemplate') summaryStepTemplate: TemplateRef<any>;\n    @ViewChild('reviewButtonTemplate') reviewButtonTemplate: TemplateRef<any>;\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            icon: 'product',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            icon: 'account',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            icon: 'credit-card',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            icon: 'pie-chart',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: true,\n                    title: this.wizardTitle,\n                    goNextButtonTemplate: this.goNextTemplate,\n                    goBackButtonTemplate: this.goBackTemplate,\n                    finishButtonTemplate: this.finishTemplate,\n                    cancelButtonTemplate: this.cancelTemplate,\n                    confirmationDialogTemplate: this.confirmationDialogTemplate,\n                    summaryStepTemplate: this.summaryStepTemplate,\n                    reviewButtonTemplate: this.reviewButtonTemplate\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    _editStep(event: MouseEvent, stepId: string, callback: (stepId: string) => void): void {\n        event.preventDefault();\n        callback(stepId);\n    }\n\n    trackFn(_: number, formattedStep: FormattedFormStep): string {\n        return formattedStep.id;\n    }\n}\n"},56788:p=>{p.exports='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},44218:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-default-example',\n    templateUrl: './wizard-generator-default-example.component.html'\n})\nexport class WizardGeneratorDefaultExampleComponent {\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        },\n                        {\n                            name: 'password',\n                            message: 'Password',\n                            type: 'password',\n                            controlType: 'password'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},93593:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},15154:p=>{p.exports="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n    WizardGeneratorItem,\n    WizardTitle,\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-dialog-example',\n    templateUrl: './wizard-generator-dialog-example.component.html'\n})\nexport class WizardGeneratorDialogExampleComponent implements OnDestroy {\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    allowSubscribe = true;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: true,\n                    title: this.wizardTitle\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},69457:p=>{p.exports='<fdp-wizard-generator\n    [appendToWizard]="false"\n    [navigationButtons]="false"\n    [items]="stepItems"\n    (wizardFinished)="wizardFinished($event)"\n></fdp-wizard-generator>\n\n<div fd-bar *ngIf="stepItems.length > 0 && wizardGenerator?.wizardCreated">\n    <div fd-bar-right>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="ghost"\n            *ngIf="!isFirstStep"\n            contentDensity="condensed"\n            label="Previous step"\n            (click)="goBack()"\n        ></fdp-button>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="emphasized"\n            contentDensity="condensed"\n            *ngIf="!isLastStep"\n            label="Next step"\n            (click)="goNext()"\n        ></fdp-button>\n        <fdp-button\n            class="fd-bar__element"\n            buttonType="emphasized"\n            contentDensity="condensed"\n            *ngIf="isLastStep"\n            label="Finish"\n            (click)="finish()"\n        ></fdp-button>\n    </div>\n</div>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},85774:p=>{p.exports="import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport {\n    WizardGeneratorComponent,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-external-navigation-example',\n    templateUrl: './wizard-generator-external-navigation-example.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardGeneratorExternalNavigationExampleComponent {\n    @ViewChild(WizardGeneratorComponent)\n    wizardGenerator: WizardGeneratorComponent;\n\n    get isFirstStep(): boolean {\n        return this.wizardGenerator?.isFirstStep || false;\n    }\n\n    get isLastStep(): boolean {\n        return this.wizardGenerator?.isLastStep || false;\n    }\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n\n    goNext(): void {\n        this.wizardGenerator?.goNext();\n    }\n\n    goBack(): void {\n        this.wizardGenerator?.goBack();\n    }\n\n    async finish(): Promise<void> {\n        await this.wizardGenerator?.finish();\n    }\n}\n"},8457:p=>{p.exports='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},58128:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormGeneratorService } from '@fundamental-ngx/platform/form';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-onchange-example',\n    templateUrl: './wizard-generator-onchange-example.component.html',\n    // Provide local form generator service here to ignore other example forms on the page.\n    providers: [FormGeneratorService]\n})\nexport class WizardGeneratorOnchangeExampleComponent {\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Account information',\n            id: 'accountInformationStep',\n            formGroups: [\n                {\n                    title: '1. Account information',\n                    id: 'accountInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Account name',\n                            type: 'input',\n                            validators: [Validators.required],\n                            onchange: (value, forms) => {\n                                const repositoryForm = forms.get('repositoryInformation');\n\n                                const control = this._formGeneratorService.getFormControl(\n                                    repositoryForm,\n                                    'repositoryName'\n                                );\n\n                                control.setValue(`${value}-repo`);\n                            }\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Repository information',\n            id: 'repositoryInformationStep',\n            formGroups: [\n                {\n                    title: '2. Repository information',\n                    id: 'repositoryInformation',\n                    formItems: [\n                        {\n                            name: 'repositoryName',\n                            message: 'Repository name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor(private _formGeneratorService: FormGeneratorService) {}\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},51179:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},31250:p=>{p.exports="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n    WizardGeneratorItem,\n    WizardTitle,\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-responsive-dialog-example',\n    templateUrl: './wizard-generator-responsive-dialog-example.component.html'\n})\nexport class WizardGeneratorResponsiveDialogExampleComponent implements OnDestroy {\n    wizardValue: any;\n\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: false,\n                    title: this.wizardTitle\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},72509:p=>{p.exports='<fdp-wizard-generator\n    [items]="stepItems"\n    [responsivePaddings]="false"\n    (wizardFinished)="wizardFinished($event)"\n></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},31179:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-responsive-paddings-example',\n    templateUrl: './wizard-generator-responsive-paddings-example.component.html'\n})\nexport class WizardGeneratorResponsivePaddingsExampleComponent {\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},28306:p=>{p.exports='<fdp-wizard-generator [items]="stepItems" (wizardFinished)="wizardFinished($event)"></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},85265:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\n\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-summary-objects-example',\n    templateUrl: './wizard-generator-summary-objects-example.component.html'\n})\nexport class WizardGeneratorSummaryObjectsExampleComponent {\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            type: 'checkbox',\n                            name: 'products',\n                            message: 'Select appropriate products',\n                            guiOptions: {\n                                inline: true,\n                                column: 2\n                            },\n                            choices: () => ['TV', 'Console', 'Laptop'],\n                            validators: [Validators.required],\n                            validate: (input) => (input?.length > 0 ? null : 'You need to select at least one product'),\n                            valueRenderer: (value: string[]) => value.join(', ')\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},95971:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},37885:p=>{p.exports="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DynamicFormGroup, DynamicFormValue, FormGeneratorService } from '@fundamental-ngx/platform/form';\nimport {\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem,\n    WizardTitle\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-visibility-between-steps-example',\n    templateUrl: './wizard-generator-visibility-between-steps-example.component.html'\n})\nexport class WizardGeneratorVisibilityBetweenStepsExampleComponent implements OnDestroy {\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'cpuManufacturer',\n                            message: 'Select appropriate CPU Manufacturer',\n                            type: 'select',\n                            choices: ['Intel', 'AMD', 'Apple'],\n                            validators: [Validators.required],\n                            when: (formValue: DynamicFormValue): boolean => formValue.product === 'Desktop'\n                        }\n                    ]\n                },\n                {\n                    title: '1.1. Protective case',\n                    id: 'protectiveCase',\n                    dependencyFields: {\n                        productTypeStep: {\n                            productType: ['product']\n                        }\n                    },\n                    when: (completedSteps: string[], answers: WizardGeneratorFormsValue) => {\n                        const value = answers.productTypeStep?.productType?.product;\n                        return value !== undefined && value !== 'Desktop';\n                    },\n                    formItems: [\n                        {\n                            name: 'protectiveCaseNeeded',\n                            message: 'Would you like to include a protective case?',\n                            type: 'switch',\n                            default: false\n                        },\n                        {\n                            name: 'protectiveCaseMaterial',\n                            message: 'Select protective case material',\n                            type: 'select',\n                            choices: ['Leather', 'Silicone'],\n                            validators: [Validators.required],\n                            when: (formValue: DynamicFormValue): boolean => formValue.protectiveCaseNeeded\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Warranty',\n            id: 'warrantyStep',\n            formGroups: [\n                {\n                    title: '2. Warranty',\n                    id: 'warranty',\n                    formItems: [\n                        {\n                            name: 'handheldWarranty',\n                            message: 'Include handheld devices warranty',\n                            type: 'switch',\n                            default: true,\n                            dependencyFields: {\n                                productTypeStep: {\n                                    productType: ['product']\n                                }\n                            },\n                            when: (formValue: DynamicFormValue, forms: Map<string, DynamicFormGroup>): boolean => {\n                                const productTypeForm = forms.get('productType');\n\n                                const productControl = this._formGeneratorService.getFormControl(\n                                    productTypeForm,\n                                    'product'\n                                );\n\n                                return productControl?.value !== 'Desktop';\n                            }\n                        },\n                        {\n                            name: 'desktopWarranty',\n                            message: 'Include Desktop devices warranty',\n                            type: 'switch',\n                            default: true,\n                            dependencyFields: {\n                                productTypeStep: {\n                                    productType: ['product']\n                                }\n                            },\n                            when: (formValue: DynamicFormValue, forms: Map<string, DynamicFormGroup>): boolean => {\n                                const productTypeForm = forms.get('productType');\n\n                                const productControl = this._formGeneratorService.getFormControl(\n                                    productTypeForm,\n                                    'product'\n                                );\n\n                                return productControl?.value === 'Desktop';\n                            }\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _wizardDialogService: WizardDialogGeneratorService,\n        private _formGeneratorService: FormGeneratorService\n    ) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: true,\n                    title: this.wizardTitle\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},94663:p=>{p.exports='<fdp-button (click)="openDialog()" label="Open branching wizard in dialog"></fdp-button>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},36738:p=>{p.exports="import { Component, OnDestroy } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n    WizardDialogGeneratorService,\n    WizardGeneratorFormsValue,\n    WizardGeneratorItem,\n    WizardTitle\n} from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-visible-summary-branching-example',\n    templateUrl: './wizard-generator-visible-summary-branching-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryBranchingExampleComponent implements OnDestroy {\n    wizardTitle: WizardTitle = {\n        size: 2,\n        text: 'Checkout'\n    };\n\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Payment method',\n            id: 'paymentMethodStep',\n            formGroups: [\n                {\n                    title: '3. Payment method',\n                    id: 'paymentMethodForm',\n                    formItems: [\n                        {\n                            name: 'paymentMethod',\n                            message: 'Select appropriate payment method',\n                            type: 'select',\n                            choices: ['Credit Card', 'Bank Transfer'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Bank Details',\n            id: 'bankDetailsStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer',\n            dependencyFields: {\n                paymentMethodStep: {\n                    paymentMethodForm: ['paymentMethod']\n                }\n            },\n            formGroups: [\n                {\n                    title: '4. Bank Details',\n                    id: 'bankDetailsForm',\n                    formItems: [\n                        {\n                            name: 'bankDetails',\n                            message: 'Enter your bank details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card',\n            formGroups: [\n                {\n                    title: '5. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true,\n            when: (_completedSteps, answers) =>\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Bank Transfer' ||\n                answers.paymentMethodStep?.paymentMethodForm?.paymentMethod === 'Credit Card'\n        }\n    ];\n\n    /** An RxJS Subject that will kill the data stream upon component\u2019s destruction (for unsubscribing)  */\n    private readonly _onDestroy$: Subject<void> = new Subject<void>();\n\n    constructor(private _wizardDialogService: WizardDialogGeneratorService) {}\n\n    ngOnDestroy(): void {\n        this._onDestroy$.next();\n        this._onDestroy$.complete();\n    }\n\n    openDialog(): void {\n        this._wizardDialogService\n            .open({\n                width: '100%',\n                height: '100%',\n                verticalPadding: false,\n                data: {\n                    items: this.stepItems,\n                    appendToWizard: false,\n                    displaySummaryStep: true,\n                    responsivePaddings: true,\n                    title: this.wizardTitle\n                }\n            })\n            .afterClosed.pipe(takeUntil(this._onDestroy$))\n            .subscribe((wizardValue: WizardGeneratorFormsValue) => {\n                this.wizardValue = wizardValue;\n            });\n    }\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"},71920:p=>{p.exports='<fdp-wizard-generator\n    [items]="stepItems"\n    [responsivePaddings]="true"\n    [displaySummaryStep]="true"\n    (wizardFinished)="wizardFinished($event)"\n></fdp-wizard-generator>\n\n<p *ngIf="wizardValue">Wizard value: {{ wizardValue | json }}</p>\n'},45429:p=>{p.exports="import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { WizardGeneratorFormsValue, WizardGeneratorItem } from '@fundamental-ngx/platform/wizard-generator';\n\n@Component({\n    selector: 'fdp-wizard-generator-visible-summary-example',\n    templateUrl: './wizard-generator-visible-summary-example.component.html'\n})\nexport class WizardGeneratorVisibleSummaryExampleComponent {\n    wizardValue: WizardGeneratorFormsValue;\n\n    stepItems: WizardGeneratorItem[] = [\n        {\n            name: 'Product type',\n            id: 'productTypeStep',\n            formGroups: [\n                {\n                    title: '1. Product Type',\n                    id: 'productType',\n                    formItems: [\n                        {\n                            name: 'product',\n                            message: 'Select appropriate product type',\n                            type: 'select',\n                            choices: ['Mobile', 'Tablet', 'Desktop'],\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Customer information',\n            id: 'customerInformationStep',\n            formGroups: [\n                {\n                    title: '2. Customer Information',\n                    id: 'customerInformation',\n                    formItems: [\n                        {\n                            name: 'name',\n                            message: 'Name',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address',\n                            message: 'Address Line 1',\n                            type: 'input',\n                            validators: [Validators.required]\n                        },\n                        {\n                            name: 'address2',\n                            message: 'Address Line 2',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Credit Card Details',\n            id: 'creditCardStep',\n            formGroups: [\n                {\n                    title: '3. Credit Card Details',\n                    id: 'cardPayment',\n                    formItems: [\n                        {\n                            name: 'creditCardNumber',\n                            message: 'Enter your credit card details',\n                            type: 'input',\n                            validators: [Validators.required]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Discount',\n            id: 'discountStep',\n            formGroups: [\n                {\n                    title: '4. Discount details',\n                    id: 'discountForm',\n                    formItems: [\n                        {\n                            name: 'discount',\n                            message: 'Enter your discount coupon code',\n                            type: 'input'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'Summary',\n            id: 'summary',\n            summary: true\n        }\n    ];\n\n    constructor() {}\n\n    wizardFinished(wizardValue: WizardGeneratorFormsValue): void {\n        this.wizardValue = wizardValue;\n    }\n}\n"}}]);