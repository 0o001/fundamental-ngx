!function(){function e(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function n(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function t(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{UsrI:function(n,o,a){"use strict";a.r(o),a.d(o,"CheckboxDocsModule",function(){return Me});var r={};a.r(r),a.d(r,"default",function(){return F});var i={};a.r(i),a.d(i,"default",function(){return w});var c={};a.r(c),a.d(c,"default",function(){return D});var l={};a.r(l),a.d(l,"default",function(){return M});var b={};a.r(b),a.d(b,"default",function(){return j});var d={};a.r(d),a.d(d,"default",function(){return A});var f={};a.r(f),a.d(f,"default",function(){return B});var m={};a.r(m),a.d(m,"default",function(){return R});var u={};a.r(u),a.d(u,"default",function(){return L});var s={};a.r(s),a.d(s,"default",function(){return S});var h={};a.r(h),a.d(h,"default",function(){return T});var p={};a.r(p),a.d(p,"default",function(){return G});var g,k,v,C,x=a("tyNb"),y=a("jzzn"),V=a("IywY"),W=a("t9W5"),F='<h3>Template Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive.</p>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="sirius" label="Sirius" column="1" rank="1">\n        <fdp-checkbox name="sirius-cb" value="sirius" title="Sirius" [(ngModel)]="field1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="vega" label="Vega" column="2" rank="1">\n        <fdp-checkbox name="vega-cb" value="vega" title="Vega" [(ngModel)]="field2"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">field1: {{ field1 }}</div>\n<div style="padding-left: 2rem;">field2: {{ field2 }}</div>\n<br />\n<br />\n\n\x3c!--Reactive form example--\x3e\n<h3>Reactive/Model Driven Form</h3>\n<p>Checkbox can be pre-selected if value of checkbox matches any value in form-control array.</p>\n<fdp-form-group #rmsfg [formGroup]="form1" [object]="form1Data" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #rfield1 id="einstein" label="Einstein" column="1" rank="1">\n        <fdp-checkbox name="einstein-cb" value="einstein" contentDensity="compact" title="Albert Einstein"\n            [formControl]="rfield1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #rfield2 id="newton" label="Newton" column="2" rank="1">\n        <fdp-checkbox name="newton-cb" value="newton" contentDensity="compact" title="Issac Newton"\n            [formControl]="rfield2.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">form value: {{ form1.getRawValue() | json }}</div>\n',w="import { FormGroup } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-multiselect-checkbox',\n    templateUrl: 'platform-multiselect-checkbox.component.html'\n})\nexport class PlatformCozyChekboxExampleComponent {\n    field1: string[] = [];\n    field2: string[] = ['vega'];\n    field3: string[] = [];\n    field4: string[] = ['altair', 'deneb'];\n\n    form1 = new FormGroup({});\n    form1Data = new Form1data([], ['newton']);\n\n    form2 = new FormGroup({});\n\n    form3 = new FormGroup({});\n    form3data = new Form3data(['faraday', 'edison']);\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\nclass Form1data {\n    constructor(public einstein: string[], public newton: string[]) {}\n}\n\nclass Form3data {\n    constructor(public scientists: string[]) {}\n}\n",D='<h3>Binary Checkbox in Template Driven Form</h3>\n<fdp-form-group [noLabelLayout]="false">\n    <fdp-form-field id="yellow" label="Yellow" [noLabelLayout]="true" rank="4" [editable]="true">\n        <fdp-checkbox [name]="\'yellow-cb\'" [isBinary]="true" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [(ngModel)]="yellow"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="white" rank="4" label="White">\n        <fdp-checkbox name="white-cb" [isBinary]="true" title="White" [(ngModel)]="white"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="violet" label="Violet" rank="4">\n        <fdp-checkbox name="violet-cb" [isBinary]="true" title="Violet" [(ngModel)]="violet"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div style="padding-left: 2rem;">\n    <div>Yellow: {{ yellow }}</div>\n    <div>White: {{ white }}</div>\n    <div>Violet: {{ violet }}</div>\n</div>\n<br />\n<br />\n\n<h3>Binary Checkbox in Reactive/Model Driven Form</h3>\n<fdp-form-group [formGroup]="customForm" [object]="data">\n    <fdp-form-field #red id="red" label="Red" rank="4">\n        <fdp-checkbox name="red-cb" [isBinary]="true" title="Red" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            contentDensity="compact" [formControl]="red.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #blue id="blue" label="Blue" rank="4">\n        <fdp-checkbox name="blue-cb" [isBinary]="true" title="Blue" contentDensity="compact"\n            [formControl]="blue.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #green id="green" label="Green" rank="4">\n        <fdp-checkbox name="green-cb" [isBinary]="true" title="Green" contentDensity="compact"\n            [formControl]="green.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n\n<div style="padding-left: 2rem;">form value: {{ customForm.getRawValue() | json }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-form-group>\n    <fdp-form-field #disabled id="disabled" label="Red" rank="1">\n        <fdp-checkbox name="disabled-cb" [isBinary]="true" title="Red"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" contentDensity="compact" disabled="true"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',M="import { FormGroup } from '@angular/forms';\nimport { Component, Optional } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox',\n    templateUrl: 'platform-binary-checkbox.component.html'\n})\nexport class PlatformCompactChekboxExampleComponent {\n    customForm = new FormGroup({});\n    data: DataObject = new DataObject(false, true);\n\n    yellow = false;\n    white = true;\n    violet: boolean;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n\nclass DataObject {\n    constructor(public red: boolean, public blue: boolean, @Optional() public green?: boolean) {}\n}\n",j='<h3>Checkbox Error Handling</h3>\n<fdp-form-group #fg hintPlacement="left" [formGroup]="customForm" [object]="data" columnLayout="XL2-L1-M1-S1">\n    <fdp-form-field #ffr1 id="presence" [validators]="validators" label="Your presence is necessary"\n        hint="hint text" hintPlacement="left" rank="10" column="1" required="true">\n        <fdp-checkbox name="presence-cb" [isBinary]="true" title="title text" [formControl]="ffr1.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #ffr2 id="aggrement" [validators]="validators" hint="hint text"\n        hintPlacement="left" rank="15" column="2" required="true">\n        <fdp-checkbox name="aggrement-cb" [isBinary]="true" title="Do you Agree with Terms and Conditions" [formControl]="ffr2.formControl">\n            Do you Agree with <a fd-link href="#"> Terms and Conditions</a>?\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="button-1" rank="20" column="2">\n        <fdp-button buttonType="emphasized" (click)="onSubmit()" label="Submit"></fdp-button>\n    </fdp-form-field>\n\n    <ng-template #i18n let-errors>\n        <span *ngIf="errors.required" role="alert" aria-atomic="true">\n            Value is required\n        </span>\n        <span *ngIf="errors.invalid" role="alert" aria-atomic="true">\n            Value is invalid\n        </span>\n    </ng-template>\n</fdp-form-group>\n\n<p>Form value: {{ customForm.getRawValue() | json }}</p>\n<p>Form Status: {{ customForm.status | json }}</p>\n',A="import { FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-error-handling',\n    templateUrl: 'platform-checkbox-error-handling.component.html'\n})\nexport class PlatformChekboxStyleComponent {\n    customForm: FormGroup;\n    data: SomeObject;\n    validators: ValidatorFn[];\n\n    constructor() {\n        this.customForm = new FormGroup({});\n        this.validators = [Validators.requiredTrue];\n\n        this.data = new SomeObject(true, true);\n    }\n\n    onSubmit(): void {\n        alert('Status: ' + this.customForm.status);\n    }\n}\n\nclass SomeObject {\n    constructor(public presence: boolean, public aggrement: boolean) {}\n}\n",B='<h3>Binary Checkbox With Value</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" [value]="\'orion\'" title="Orion" [(checked)]="orion"\n    (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n    (change)="changeFunction($event)">\n</fdp-checkbox>\n<div>value: {{ orion }}</div>\n\n<fdp-checkbox [name]="\'cygnus\'" [isBinary]="true" [label]="\'Cygnus\'" title="Cygnus" [value]="\'cygnus\'"\n    [(checked)]="cygnus">\n</fdp-checkbox>\n<div>value: {{ cygnus }}</div>\n<br />\n<br />\n<h3>Binary Checkbox Without Value</h3>\n<fdp-checkbox [name]="\'lyra\'" [isBinary]="true" [label]="\'Lyra\'" title="Lyra" [(checked)]="lyra"> </fdp-checkbox>\n<div>value: {{ lyra }}</div>\n\n<fdp-checkbox [name]="\'gemini\'" [isBinary]="true" [label]="\'Gemini\'" title="Gemini" [(checked)]="gemini">\n</fdp-checkbox>\n<div>value: {{ gemini }}</div>\n\n<h3>Disabled Checkbox</h3>\n<fdp-checkbox [name]="\'orion\'" [isBinary]="true" [label]="\'Orion\'" title="Orion" [(checked)]="orion" [disabled]="true">\n</fdp-checkbox>\n',R="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-binary-checkbox-no-form',\n    templateUrl: 'platform-binary-checkbox-no-form.component.html'\n})\nexport class PlatformChekboxNoFormComponent {\n    orion = true;\n    cygnus = false;\n    lyra = true;\n    gemini = false;\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n}\n",L='<h3>Reactive Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group [formGroup]="cities" [object]="citiesData" columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field #paris id="paris" label="Paris" column="1" rank="1">\n        <fdp-checkbox name="paris-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [formControl]="paris.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #doha id="doha" label="Doha" column="1" rank="3">\n        <fdp-checkbox name="doha-cb" value="Yes" [tristate]="true" [formControl]="doha.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #amsterdam id="amsterdam" label="Amsterdam" column="1" rank="5">\n        <fdp-checkbox name="amsterdam-cb" value="Yes" [tristate]="true" [formControl]="amsterdam.formControl">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #venice id="venice" label="Venice" column="2" rank="2">\n        <fdp-checkbox name="venice-cb" (checkedChange)="checkedChangeFunction($event)"\n            (indeterminateChange)="indeterminateChangeFunction($event)" (change)="changeFunction($event)"\n            [tristate]="true" [formControl]="venice.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #kyoto id="kyoto" label="Kyoto" column="2" rank="4">\n        <fdp-checkbox name="kyoto-cb" [tristate]="true" [formControl]="kyoto.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #barcelona id="barcelona" label="Barcelona" column="2" rank="6">\n        <fdp-checkbox name="barcelona-cb" [tristate]="true" [formControl]="barcelona.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #athens id="athens" label="athens: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="athens-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="athens.formControl"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field #sydney id="sydney" label="Sydney: tristateSelectable false" column="2" rank="8">\n        <fdp-checkbox name="sydney-cb" [tristate]="true" [tristateSelectable]="false"\n            [formControl]="sydney.formControl"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n<div>form value: {{ cities.getRawValue() | json }}</div>\n<br />\n<br />\n<h3>Template Driven Form: TriState Checkbox With Value and Without Value</h3>\n<fdp-form-group columnLayout="XL2-L2-M1-S1">\n    <fdp-form-field id="havana" label="Havana" column="1" rank="1">\n        <fdp-checkbox name="havana-cb" value="Yes" [tristate]="true"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)" [(ngModel)]="havana"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="beirut" label="Beirut" column="1" rank="3">\n        <fdp-checkbox name="beirut-cb" value="Yes" [tristate]="true" [(ngModel)]="beirut"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="budapest" label="Budapest" column="1" rank="5">\n        <fdp-checkbox name="budapest-cb" value="Yes" [tristate]="true" [(ngModel)]="budapest"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="lisbon" label="Lisbon" column="2" rank="2">\n        <fdp-checkbox name="lisbon-cb" [tristate]="true" [(ngModel)]="lisbon"\n            (checkedChange)="checkedChangeFunction($event)" (indeterminateChange)="indeterminateChangeFunction($event)"\n            (change)="changeFunction($event)">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="istanbul" label="Istanbul" column="2" rank="4">\n        <fdp-checkbox name="istanbul-cb" [tristate]="true" [(ngModel)]="istanbul"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="busan" label="Busan" column="2" rank="6">\n        <fdp-checkbox name="busan-cb" [tristate]="true" [(ngModel)]="busan"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="dubrovnik" label="Dubrovnik: tristateSelectable false" column="1" rank="7">\n        <fdp-checkbox name="dubrovnik-cb" value="Yes" [tristate]="true" [tristateSelectable]="false"\n            [(ngModel)]="dubrovnik"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="jaipur" label="Jaipur: tristateSelectable false" column="2" rank="7">\n        <fdp-checkbox name="jaipur-cb" [tristate]="true" [tristateSelectable]="false" [(ngModel)]="jaipur">\n        </fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field column="1">\n        <div>Havana: {{ havana }}</div>\n        <div>Beirut: {{ beirut }}</div>\n        <div>Budapest: {{ budapest }}</div>\n        <div>Dubrovnik: {{ dubrovnik }}</div>\n    </fdp-form-field>\n\n    <fdp-form-field column="2">\n        <div>Lisbon: {{ lisbon }}</div>\n        <div>Istanbul: {{ istanbul }}</div>\n        <div>Busan: {{ busan }}</div>\n        <div>Jaipur: {{ jaipur }}</div>\n    </fdp-form-field>\n</fdp-form-group>\n\n<h3>TriState Checkbox Used with Multiple checkboxes</h3>\n<form #form="ngForm" [formGroup]="registrationForm">\n    <fdp-form-group #fgtristate [formGroup]="registrationForm">\n        <fdp-form-field #ffr1 id="acceptAll" label="Accept All" column="1" rank="1">\n            <fdp-checkbox name="all" [tristate]="true" [tristateSelectable]="false" [value]="false"\n                [formControl]="ffr1.formControl"></fdp-checkbox>\n        </fdp-form-field>\n    </fdp-form-group>\n    <div style="padding-left: 2rem; border: black solid;">\n        <fdp-form-group class="padding-top:0%;" #checkboxes [formGroup]="registrationForm.get(\'agreements\')"\n            [object]="choices">\n            <fdp-form-field #ffr2 id="termsAndConditions" label="I accept Terms and Conditions"\n                rank="3">\n                <fdp-checkbox name="termsAndConditions-cb" [isBinary]="true" [formControl]="ffr2.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr3 id="marketing" label="I want to receive Marketing Materials"\n                rank="3">\n                <fdp-checkbox name="marketing-cb" [isBinary]="true" [formControl]="ffr3.formControl"></fdp-checkbox>\n            </fdp-form-field>\n\n            <fdp-form-field #ffr4 id="newsletter" label="I want to sign for a Newsletter"\n                rank="4">\n                <fdp-checkbox name="newsletter-cb" [isBinary]="true" [formControl]="ffr4.formControl">\n                </fdp-checkbox>\n            </fdp-form-field>\n\n            <ng-template #i18n let-errors>\n                <ng-container *ngIf="errors.required">\n                    value is required\n                </ng-container>\n            </ng-template>\n        </fdp-form-group>\n    </div>\n</form>\n',S="import { Component, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'fdp-platform-tristate-checkbox',\n    templateUrl: 'platform-tristate-checkbox.component.html'\n})\nexport class PlatformChekboxTristateComponent implements AfterViewInit {\n    public havana = false;\n    public beirut: boolean = null;\n    public budapest = 'Yes';\n    public lisbon = false;\n    public istanbul: boolean = null;\n    public busan = true;\n    public dubrovnik: boolean = null;\n    public jaipur: boolean = null;\n\n    public cities = new FormGroup({});\n    public citiesData = new SomeObject(false, 'Yes', null, false, true, null, null, false);\n\n    public registrationForm = new FormGroup({\n        agreements: new FormGroup({})\n    });\n\n    public choices: Object = { termsAndConditions: true, marketing: true, newsletter: false };\n\n    // code for nested form group with tristate checkbox.\n    ngAfterViewInit(): void {\n        this.setAgreementsOnAcceptAllChange();\n        this.setControlOnAgreementsChange();\n    }\n\n    public checkedChangeFunction(event: any): void {}\n\n    public indeterminateChangeFunction(event: any): void {}\n\n    public changeFunction(event: any): void {}\n\n    private setAgreementsOnAcceptAllChange(): void {\n        this.registrationForm.get('acceptAll').valueChanges.subscribe((value) => this.acceptAll(value));\n    }\n\n    private setControlOnAgreementsChange(): void {\n        this.registrationForm\n            .get('agreements')\n            .valueChanges.pipe(\n                map((agreements) => this.getValuesFromObject(agreements)),\n                map((agreementsValues: boolean[]) => {\n                    const agreeAll = agreementsValues.reduce((overall, value) => value && overall, true);\n                    const declineAll = agreementsValues.reduce((overall, value) => !value && overall, true);\n                    if (agreeAll) {\n                        return true;\n                    } else if (declineAll) {\n                        return false;\n                    } else {\n                        return null;\n                    }\n                })\n            )\n            .subscribe((acceptAllValue) => this.setAcceptAll(acceptAllValue));\n    }\n\n    private acceptAll(accept: boolean): void {\n        if (accept !== null) {\n            this.registrationForm.get('agreements').patchValue(\n                {\n                    marketing: accept,\n                    newsletter: accept,\n                    termsAndConditions: accept\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    private setAcceptAll(value: boolean): void {\n        if (this.registrationForm.get('acceptAll')?.value !== value) {\n            this.registrationForm.patchValue(\n                {\n                    acceptAll: value\n                },\n                { emitEvent: false }\n            );\n        }\n    }\n\n    // This is equivalent for `Object.values` not supported by IE11\n    private getValuesFromObject(obj: Object): any[] {\n        return Object.keys(obj).map((e) => obj[e]);\n    }\n}\n\nclass SomeObject {\n    constructor(\n        public paris: string | boolean,\n        public doha: string | boolean,\n        public amsterdam: string | boolean,\n        public venice: string | boolean,\n        public kyoto: string | boolean,\n        public barcelona: string | boolean,\n        public athens: string | boolean,\n        public sydney: string | boolean\n    ) {}\n}\n",T='<h3>Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title</h3>\n<p id="checkboxLable">checkbox using aria-labelledby</p>\n<fdp-form-group>\n    <fdp-form-field id="a11y1" [noLabelLayout]="true" rank="1">\n        <fdp-checkbox name="checkboxA11y1" [isBinary]="true" ariaLabel="checkbox using aria-label"\n            [(ngModel)]="checkboxA11y1"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y2" rank="2">\n        <fdp-checkbox name="checkboxA11y2" [isBinary]="true" ariaLabelledBy="checkboxLable"\n            [(ngModel)]="checkboxA11y2"></fdp-checkbox>\n    </fdp-form-field>\n\n    <fdp-form-field id="a11y3" label="Disabled checkbox using aria-disabled" rank="3">\n        <fdp-checkbox name="checkboxA11y3" [isBinary]="true" title="It is a disabled checkbox" disabled="true"\n            [(ngModel)]="checkboxA11y3"></fdp-checkbox>\n    </fdp-form-field>\n</fdp-form-group>\n',G="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'fdp-platform-checkbox-a11y',\n    templateUrl: 'platform-checkbox-a11y.component.html'\n})\nexport class PlatformChekboxA11yExampleComponent {\n    checkboxA11y1 = '';\n    checkboxA11y2 = '';\n    checkboxA11y3 = '';\n}\n",O=a("fXoL"),X=a("ddaM"),P=a("kt86"),I=a("X1JU"),N=a("mrSG"),H=a("3Pt+"),Y=a("vnx5"),$=a("ha2x"),E=a("AbwX"),q=a("ofXK"),U=((k=function(){function n(){e(this,n),this.customForm=new H.i({}),this.data=new K(!1,!0),this.yellow=!1,this.white=!0}return t(n,[{key:"checkedChangeFunction",value:function(e){}},{key:"indeterminateChangeFunction",value:function(e){}},{key:"changeFunction",value:function(e){}}]),n}()).\u0275fac=function(e){return new(e||k)},k.\u0275cmp=O.Kb({type:k,selectors:[["fdp-platform-binary-checkbox"]],decls:39,vars:25,consts:[[3,"noLabelLayout"],["id","yellow","label","Yellow","rank","4",3,"noLabelLayout","editable"],[3,"name","isBinary","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","white","rank","4","label","White"],["name","white-cb","title","White",3,"isBinary","ngModel","ngModelChange"],["id","violet","label","Violet","rank","4"],["name","violet-cb","title","Violet",3,"isBinary","ngModel","ngModelChange"],[2,"padding-left","2rem"],[3,"formGroup","object"],["id","red","label","Red","rank","4"],["red",""],["name","red-cb","title","Red","contentDensity","compact",3,"isBinary","formControl","checkedChange","indeterminateChange","change"],["id","blue","label","Blue","rank","4"],["blue",""],["name","blue-cb","title","Blue","contentDensity","compact",3,"isBinary","formControl"],["id","green","label","Green","rank","4"],["green",""],["name","green-cb","title","Green","contentDensity","compact",3,"isBinary","formControl"],["id","disabled","label","Red","rank","1"],["disabled",""],["name","disabled-cb","title","Red","contentDensity","compact","disabled","true",3,"isBinary","checkedChange","indeterminateChange","change"]],template:function(e,n){if(1&e&&(O.Wb(0,"h3"),O.Vc(1,"Binary Checkbox in Template Driven Form"),O.Vb(),O.Wb(2,"fdp-form-group",0),O.Wb(3,"fdp-form-field",1),O.Wb(4,"fdp-checkbox",2),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.yellow=e}),O.Vb(),O.Vb(),O.Wb(5,"fdp-form-field",3),O.Wb(6,"fdp-checkbox",4),O.jc("ngModelChange",function(e){return n.white=e}),O.Vb(),O.Vb(),O.Wb(7,"fdp-form-field",5),O.Wb(8,"fdp-checkbox",6),O.jc("ngModelChange",function(e){return n.violet=e}),O.Vb(),O.Vb(),O.Vb(),O.Wb(9,"div",7),O.Wb(10,"div"),O.Vc(11),O.Vb(),O.Wb(12,"div"),O.Vc(13),O.Vb(),O.Wb(14,"div"),O.Vc(15),O.Vb(),O.Vb(),O.Rb(16,"br"),O.Rb(17,"br"),O.Wb(18,"h3"),O.Vc(19,"Binary Checkbox in Reactive/Model Driven Form"),O.Vb(),O.Wb(20,"fdp-form-group",8),O.Wb(21,"fdp-form-field",9,10),O.Wb(23,"fdp-checkbox",11),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Vb(),O.Wb(24,"fdp-form-field",12,13),O.Rb(26,"fdp-checkbox",14),O.Vb(),O.Wb(27,"fdp-form-field",15,16),O.Rb(29,"fdp-checkbox",17),O.Vb(),O.Vb(),O.Wb(30,"div",7),O.Vc(31),O.oc(32,"json"),O.Vb(),O.Wb(33,"h3"),O.Vc(34,"Disabled Checkbox"),O.Vb(),O.Wb(35,"fdp-form-group"),O.Wb(36,"fdp-form-field",18,19),O.Wb(38,"fdp-checkbox",20),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Vb(),O.Vb()),2&e){var t=O.Hc(22),o=O.Hc(25),a=O.Hc(28);O.Db(2),O.vc("noLabelLayout",!1),O.Db(1),O.vc("noLabelLayout",!0)("editable",!0),O.Db(1),O.vc("name","yellow-cb")("isBinary",!0)("ngModel",n.yellow),O.Db(2),O.vc("isBinary",!0)("ngModel",n.white),O.Db(2),O.vc("isBinary",!0)("ngModel",n.violet),O.Db(3),O.Xc("Yellow: ",n.yellow,""),O.Db(2),O.Xc("White: ",n.white,""),O.Db(2),O.Xc("Violet: ",n.violet,""),O.Db(5),O.vc("formGroup",n.customForm)("object",n.data),O.Db(3),O.vc("isBinary",!0)("formControl",t.formControl),O.Db(3),O.vc("isBinary",!0)("formControl",o.formControl),O.Db(3),O.vc("isBinary",!0)("formControl",a.formControl),O.Db(2),O.Xc("form value: ",O.pc(32,23,n.customForm.getRawValue()),""),O.Db(7),O.vc("isBinary",!0)}},directives:[Y.a,$.a,E.a,H.q,H.t,H.r,H.j,H.g],pipes:[q.h],encapsulation:2}),k),K=(g=function n(t,o,a){e(this,n),this.red=t,this.blue=o,this.green=a},g=Object(N.b)([Object(N.d)(2,Object(O.C)()),Object(N.c)("design:paramtypes",[Boolean,Boolean,Boolean])],g)),J=a("5HkS"),z=a("Hxo2"),Z=((C=function(){function n(){e(this,n),this.orion=!0,this.cygnus=!1,this.lyra=!0,this.gemini=!1}return t(n,[{key:"checkedChangeFunction",value:function(e){}},{key:"indeterminateChangeFunction",value:function(e){}},{key:"changeFunction",value:function(e){}}]),n}()).\u0275fac=function(e){return new(e||C)},C.\u0275cmp=O.Kb({type:C,selectors:[["fdp-platform-binary-checkbox-no-form"]],decls:21,vars:27,consts:[["title","Orion",3,"name","isBinary","label","value","checked","checkedChange","indeterminateChange","change"],["title","Cygnus",3,"name","isBinary","label","value","checked","checkedChange"],["title","Lyra",3,"name","isBinary","label","checked","checkedChange"],["title","Gemini",3,"name","isBinary","label","checked","checkedChange"],["title","Orion",3,"name","isBinary","label","checked","disabled","checkedChange"]],template:function(e,n){1&e&&(O.Wb(0,"h3"),O.Vc(1,"Binary Checkbox With Value"),O.Vb(),O.Wb(2,"fdp-checkbox",0),O.jc("checkedChange",function(e){return n.orion=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Wb(3,"div"),O.Vc(4),O.Vb(),O.Wb(5,"fdp-checkbox",1),O.jc("checkedChange",function(e){return n.cygnus=e}),O.Vb(),O.Wb(6,"div"),O.Vc(7),O.Vb(),O.Rb(8,"br"),O.Rb(9,"br"),O.Wb(10,"h3"),O.Vc(11,"Binary Checkbox Without Value"),O.Vb(),O.Wb(12,"fdp-checkbox",2),O.jc("checkedChange",function(e){return n.lyra=e}),O.Vb(),O.Wb(13,"div"),O.Vc(14),O.Vb(),O.Wb(15,"fdp-checkbox",3),O.jc("checkedChange",function(e){return n.gemini=e}),O.Vb(),O.Wb(16,"div"),O.Vc(17),O.Vb(),O.Wb(18,"h3"),O.Vc(19,"Disabled Checkbox"),O.Vb(),O.Wb(20,"fdp-checkbox",4),O.jc("checkedChange",function(e){return n.orion=e}),O.Vb()),2&e&&(O.Db(2),O.vc("name","orion")("isBinary",!0)("label","Orion")("value","orion")("checked",n.orion),O.Db(2),O.Xc("value: ",n.orion,""),O.Db(1),O.vc("name","cygnus")("isBinary",!0)("label","Cygnus")("value","cygnus")("checked",n.cygnus),O.Db(2),O.Xc("value: ",n.cygnus,""),O.Db(5),O.vc("name","lyra")("isBinary",!0)("label","Lyra")("checked",n.lyra),O.Db(2),O.Xc("value: ",n.lyra,""),O.Db(1),O.vc("name","gemini")("isBinary",!0)("label","Gemini")("checked",n.gemini),O.Db(2),O.Xc("value: ",n.gemini,""),O.Db(3),O.vc("name","orion")("isBinary",!0)("label","Orion")("checked",n.orion)("disabled",!0))},directives:[E.a],encapsulation:2}),C),Q=((v=function(){function n(){e(this,n),this.field1=[],this.field2=["vega"],this.field3=[],this.field4=["altair","deneb"],this.form1=new H.i({}),this.form1Data=new _([],["newton"]),this.form2=new H.i({}),this.form3=new H.i({}),this.form3data=new ee(["faraday","edison"])}return t(n,[{key:"checkedChangeFunction",value:function(e){}},{key:"indeterminateChangeFunction",value:function(e){}},{key:"changeFunction",value:function(e){}}]),n}()).\u0275fac=function(e){return new(e||v)},v.\u0275cmp=O.Kb({type:v,selectors:[["fdp-platform-multiselect-checkbox"]],decls:30,vars:11,consts:[["columnLayout","XL2-L2-M1-S1"],["id","sirius","label","Sirius","column","1","rank","1"],["name","sirius-cb","value","sirius","title","Sirius",3,"ngModel","ngModelChange"],["id","vega","label","Vega","column","2","rank","1"],["name","vega-cb","value","vega","title","Vega",3,"ngModel","ngModelChange"],[2,"padding-left","2rem"],["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["rmsfg",""],["id","einstein","label","Einstein","column","1","rank","1"],["rfield1",""],["name","einstein-cb","value","einstein","contentDensity","compact","title","Albert Einstein",3,"formControl"],["id","newton","label","Newton","column","2","rank","1"],["rfield2",""],["name","newton-cb","value","newton","contentDensity","compact","title","Issac Newton",3,"formControl"]],template:function(e,n){if(1&e&&(O.Wb(0,"h3"),O.Vc(1,"Template Driven Form"),O.Vb(),O.Wb(2,"p"),O.Vc(3,"Checkbox can be pre-selected if value of checkbox matches any value in ngModel directive."),O.Vb(),O.Wb(4,"fdp-form-group",0),O.Wb(5,"fdp-form-field",1),O.Wb(6,"fdp-checkbox",2),O.jc("ngModelChange",function(e){return n.field1=e}),O.Vb(),O.Vb(),O.Wb(7,"fdp-form-field",3),O.Wb(8,"fdp-checkbox",4),O.jc("ngModelChange",function(e){return n.field2=e}),O.Vb(),O.Vb(),O.Vb(),O.Wb(9,"div",5),O.Vc(10),O.Vb(),O.Wb(11,"div",5),O.Vc(12),O.Vb(),O.Rb(13,"br"),O.Rb(14,"br"),O.Wb(15,"h3"),O.Vc(16,"Reactive/Model Driven Form"),O.Vb(),O.Wb(17,"p"),O.Vc(18,"Checkbox can be pre-selected if value of checkbox matches any value in form-control array."),O.Vb(),O.Wb(19,"fdp-form-group",6,7),O.Wb(21,"fdp-form-field",8,9),O.Rb(23,"fdp-checkbox",10),O.Vb(),O.Wb(24,"fdp-form-field",11,12),O.Rb(26,"fdp-checkbox",13),O.Vb(),O.Vb(),O.Wb(27,"div",5),O.Vc(28),O.oc(29,"json"),O.Vb()),2&e){var t=O.Hc(22),o=O.Hc(25);O.Db(6),O.vc("ngModel",n.field1),O.Db(2),O.vc("ngModel",n.field2),O.Db(2),O.Xc("field1: ",n.field1,""),O.Db(2),O.Xc("field2: ",n.field2,""),O.Db(7),O.vc("formGroup",n.form1)("object",n.form1Data),O.Db(4),O.vc("formControl",t.formControl),O.Db(3),O.vc("formControl",o.formControl),O.Db(2),O.Xc("form value: ",O.pc(29,9,n.form1.getRawValue()),"")}},directives:[Y.a,$.a,E.a,H.q,H.t,H.r,H.j,H.g],pipes:[q.h],encapsulation:2}),v),_=function n(t,o){e(this,n),this.einstein=t,this.newton=o},ee=function n(t){e(this,n),this.scientists=t},ne=a("lJxs");function te(e,n){1&e&&(O.Ub(0),O.Vc(1," value is required "),O.Tb())}function oe(e,n){1&e&&O.Tc(0,te,2,0,"ng-container",63),2&e&&O.vc("ngIf",n.$implicit.required)}var ae,re=((ae=function(){function n(){e(this,n),this.havana=!1,this.beirut=null,this.budapest="Yes",this.lisbon=!1,this.istanbul=null,this.busan=!0,this.dubrovnik=null,this.jaipur=null,this.cities=new H.i({}),this.citiesData=new ie(!1,"Yes",null,!1,!0,null,null,!1),this.registrationForm=new H.i({agreements:new H.i({})}),this.choices={termsAndConditions:!0,marketing:!0,newsletter:!1}}return t(n,[{key:"ngAfterViewInit",value:function(){this.setAgreementsOnAcceptAllChange(),this.setControlOnAgreementsChange()}},{key:"checkedChangeFunction",value:function(e){}},{key:"indeterminateChangeFunction",value:function(e){}},{key:"changeFunction",value:function(e){}},{key:"setAgreementsOnAcceptAllChange",value:function(){var e=this;this.registrationForm.get("acceptAll").valueChanges.subscribe(function(n){return e.acceptAll(n)})}},{key:"setControlOnAgreementsChange",value:function(){var e=this;this.registrationForm.get("agreements").valueChanges.pipe(Object(ne.a)(function(n){return e.getValuesFromObject(n)}),Object(ne.a)(function(e){var n=e.reduce(function(e,n){return n&&e},!0),t=e.reduce(function(e,n){return!n&&e},!0);return!!n||!t&&null})).subscribe(function(n){return e.setAcceptAll(n)})}},{key:"acceptAll",value:function(e){null!==e&&this.registrationForm.get("agreements").patchValue({marketing:e,newsletter:e,termsAndConditions:e},{emitEvent:!1})}},{key:"setAcceptAll",value:function(e){var n;(null===(n=this.registrationForm.get("acceptAll"))||void 0===n?void 0:n.value)!==e&&this.registrationForm.patchValue({acceptAll:e},{emitEvent:!1})}},{key:"getValuesFromObject",value:function(e){return Object.keys(e).map(function(n){return e[n]})}}]),n}()).\u0275fac=function(e){return new(e||ae)},ae.\u0275cmp=O.Kb({type:ae,selectors:[["fdp-platform-tristate-checkbox"]],decls:92,vars:63,consts:[["columnLayout","XL2-L2-M1-S1",3,"formGroup","object"],["id","paris","label","Paris","column","1","rank","1"],["paris",""],["name","paris-cb","value","Yes",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","doha","label","Doha","column","1","rank","3"],["doha",""],["name","doha-cb","value","Yes",3,"tristate","formControl"],["id","amsterdam","label","Amsterdam","column","1","rank","5"],["amsterdam",""],["name","amsterdam-cb","value","Yes",3,"tristate","formControl"],["id","venice","label","Venice","column","2","rank","2"],["venice",""],["name","venice-cb",3,"tristate","formControl","checkedChange","indeterminateChange","change"],["id","kyoto","label","Kyoto","column","2","rank","4"],["kyoto",""],["name","kyoto-cb",3,"tristate","formControl"],["id","barcelona","label","Barcelona","column","2","rank","6"],["barcelona",""],["name","barcelona-cb",3,"tristate","formControl"],["id","athens","label","athens: tristateSelectable false","column","1","rank","7"],["athens",""],["name","athens-cb","value","Yes",3,"tristate","tristateSelectable","formControl"],["id","sydney","label","Sydney: tristateSelectable false","column","2","rank","8"],["sydney",""],["name","sydney-cb",3,"tristate","tristateSelectable","formControl"],["columnLayout","XL2-L2-M1-S1"],["id","havana","label","Havana","column","1","rank","1"],["name","havana-cb","value","Yes",3,"tristate","ngModel","checkedChange","indeterminateChange","change","ngModelChange"],["id","beirut","label","Beirut","column","1","rank","3"],["name","beirut-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","budapest","label","Budapest","column","1","rank","5"],["name","budapest-cb","value","Yes",3,"tristate","ngModel","ngModelChange"],["id","lisbon","label","Lisbon","column","2","rank","2"],["name","lisbon-cb",3,"tristate","ngModel","ngModelChange","checkedChange","indeterminateChange","change"],["id","istanbul","label","Istanbul","column","2","rank","4"],["name","istanbul-cb",3,"tristate","ngModel","ngModelChange"],["id","busan","label","Busan","column","2","rank","6"],["name","busan-cb",3,"tristate","ngModel","ngModelChange"],["id","dubrovnik","label","Dubrovnik: tristateSelectable false","column","1","rank","7"],["name","dubrovnik-cb","value","Yes",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["id","jaipur","label","Jaipur: tristateSelectable false","column","2","rank","7"],["name","jaipur-cb",3,"tristate","tristateSelectable","ngModel","ngModelChange"],["column","1"],["column","2"],[3,"formGroup"],["form","ngForm"],["fgtristate",""],["id","acceptAll","label","Accept All","column","1","rank","1"],["ffr1",""],["name","all",3,"tristate","tristateSelectable","value","formControl"],[2,"padding-left","2rem","border","black solid"],[1,"padding-top:0%;",3,"formGroup","object"],["checkboxes",""],["id","termsAndConditions","label","I accept Terms and Conditions","rank","3"],["ffr2",""],["name","termsAndConditions-cb",3,"isBinary","formControl"],["id","marketing","label","I want to receive Marketing Materials","rank","3"],["ffr3",""],["name","marketing-cb",3,"isBinary","formControl"],["id","newsletter","label","I want to sign for a Newsletter","rank","4"],["ffr4",""],["name","newsletter-cb",3,"isBinary","formControl"],["i18n",""],[4,"ngIf"]],template:function(e,n){if(1&e&&(O.Wb(0,"h3"),O.Vc(1,"Reactive Form: TriState Checkbox With Value and Without Value"),O.Vb(),O.Wb(2,"fdp-form-group",0),O.Wb(3,"fdp-form-field",1,2),O.Wb(5,"fdp-checkbox",3),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Vb(),O.Wb(6,"fdp-form-field",4,5),O.Rb(8,"fdp-checkbox",6),O.Vb(),O.Wb(9,"fdp-form-field",7,8),O.Rb(11,"fdp-checkbox",9),O.Vb(),O.Wb(12,"fdp-form-field",10,11),O.Wb(14,"fdp-checkbox",12),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Vb(),O.Wb(15,"fdp-form-field",13,14),O.Rb(17,"fdp-checkbox",15),O.Vb(),O.Wb(18,"fdp-form-field",16,17),O.Rb(20,"fdp-checkbox",18),O.Vb(),O.Wb(21,"fdp-form-field",19,20),O.Rb(23,"fdp-checkbox",21),O.Vb(),O.Wb(24,"fdp-form-field",22,23),O.Rb(26,"fdp-checkbox",24),O.Vb(),O.Vb(),O.Wb(27,"div"),O.Vc(28),O.oc(29,"json"),O.Vb(),O.Rb(30,"br"),O.Rb(31,"br"),O.Wb(32,"h3"),O.Vc(33,"Template Driven Form: TriState Checkbox With Value and Without Value"),O.Vb(),O.Wb(34,"fdp-form-group",25),O.Wb(35,"fdp-form-field",26),O.Wb(36,"fdp-checkbox",27),O.jc("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)})("ngModelChange",function(e){return n.havana=e}),O.Vb(),O.Vb(),O.Wb(37,"fdp-form-field",28),O.Wb(38,"fdp-checkbox",29),O.jc("ngModelChange",function(e){return n.beirut=e}),O.Vb(),O.Vb(),O.Wb(39,"fdp-form-field",30),O.Wb(40,"fdp-checkbox",31),O.jc("ngModelChange",function(e){return n.budapest=e}),O.Vb(),O.Vb(),O.Wb(41,"fdp-form-field",32),O.Wb(42,"fdp-checkbox",33),O.jc("ngModelChange",function(e){return n.lisbon=e})("checkedChange",function(e){return n.checkedChangeFunction(e)})("indeterminateChange",function(e){return n.indeterminateChangeFunction(e)})("change",function(e){return n.changeFunction(e)}),O.Vb(),O.Vb(),O.Wb(43,"fdp-form-field",34),O.Wb(44,"fdp-checkbox",35),O.jc("ngModelChange",function(e){return n.istanbul=e}),O.Vb(),O.Vb(),O.Wb(45,"fdp-form-field",36),O.Wb(46,"fdp-checkbox",37),O.jc("ngModelChange",function(e){return n.busan=e}),O.Vb(),O.Vb(),O.Wb(47,"fdp-form-field",38),O.Wb(48,"fdp-checkbox",39),O.jc("ngModelChange",function(e){return n.dubrovnik=e}),O.Vb(),O.Vb(),O.Wb(49,"fdp-form-field",40),O.Wb(50,"fdp-checkbox",41),O.jc("ngModelChange",function(e){return n.jaipur=e}),O.Vb(),O.Vb(),O.Wb(51,"fdp-form-field",42),O.Wb(52,"div"),O.Vc(53),O.Vb(),O.Wb(54,"div"),O.Vc(55),O.Vb(),O.Wb(56,"div"),O.Vc(57),O.Vb(),O.Wb(58,"div"),O.Vc(59),O.Vb(),O.Vb(),O.Wb(60,"fdp-form-field",43),O.Wb(61,"div"),O.Vc(62),O.Vb(),O.Wb(63,"div"),O.Vc(64),O.Vb(),O.Wb(65,"div"),O.Vc(66),O.Vb(),O.Wb(67,"div"),O.Vc(68),O.Vb(),O.Vb(),O.Vb(),O.Wb(69,"h3"),O.Vc(70,"TriState Checkbox Used with Multiple checkboxes"),O.Vb(),O.Wb(71,"form",44,45),O.Wb(73,"fdp-form-group",44,46),O.Wb(75,"fdp-form-field",47,48),O.Rb(77,"fdp-checkbox",49),O.Vb(),O.Vb(),O.Wb(78,"div",50),O.Wb(79,"fdp-form-group",51,52),O.Wb(81,"fdp-form-field",53,54),O.Rb(83,"fdp-checkbox",55),O.Vb(),O.Wb(84,"fdp-form-field",56,57),O.Rb(86,"fdp-checkbox",58),O.Vb(),O.Wb(87,"fdp-form-field",59,60),O.Rb(89,"fdp-checkbox",61),O.Vb(),O.Tc(90,oe,1,1,"ng-template",null,62,O.Uc),O.Vb(),O.Vb(),O.Vb()),2&e){var t=O.Hc(4),o=O.Hc(7),a=O.Hc(10),r=O.Hc(13),i=O.Hc(16),c=O.Hc(19),l=O.Hc(22),b=O.Hc(25),d=O.Hc(76),f=O.Hc(82),m=O.Hc(85),u=O.Hc(88);O.Db(2),O.vc("formGroup",n.cities)("object",n.citiesData),O.Db(3),O.vc("tristate",!0)("formControl",t.formControl),O.Db(3),O.vc("tristate",!0)("formControl",o.formControl),O.Db(3),O.vc("tristate",!0)("formControl",a.formControl),O.Db(3),O.vc("tristate",!0)("formControl",r.formControl),O.Db(3),O.vc("tristate",!0)("formControl",i.formControl),O.Db(3),O.vc("tristate",!0)("formControl",c.formControl),O.Db(3),O.vc("tristate",!0)("tristateSelectable",!1)("formControl",l.formControl),O.Db(3),O.vc("tristate",!0)("tristateSelectable",!1)("formControl",b.formControl),O.Db(2),O.Xc("form value: ",O.pc(29,61,n.cities.getRawValue()),""),O.Db(8),O.vc("tristate",!0)("ngModel",n.havana),O.Db(2),O.vc("tristate",!0)("ngModel",n.beirut),O.Db(2),O.vc("tristate",!0)("ngModel",n.budapest),O.Db(2),O.vc("tristate",!0)("ngModel",n.lisbon),O.Db(2),O.vc("tristate",!0)("ngModel",n.istanbul),O.Db(2),O.vc("tristate",!0)("ngModel",n.busan),O.Db(2),O.vc("tristate",!0)("tristateSelectable",!1)("ngModel",n.dubrovnik),O.Db(2),O.vc("tristate",!0)("tristateSelectable",!1)("ngModel",n.jaipur),O.Db(3),O.Xc("Havana: ",n.havana,""),O.Db(2),O.Xc("Beirut: ",n.beirut,""),O.Db(2),O.Xc("Budapest: ",n.budapest,""),O.Db(2),O.Xc("Dubrovnik: ",n.dubrovnik,""),O.Db(3),O.Xc("Lisbon: ",n.lisbon,""),O.Db(2),O.Xc("Istanbul: ",n.istanbul,""),O.Db(2),O.Xc("Busan: ",n.busan,""),O.Db(2),O.Xc("Jaipur: ",n.jaipur,""),O.Db(3),O.vc("formGroup",n.registrationForm),O.Db(2),O.vc("formGroup",n.registrationForm),O.Db(4),O.vc("tristate",!0)("tristateSelectable",!1)("value",!1)("formControl",d.formControl),O.Db(2),O.vc("formGroup",n.registrationForm.get("agreements"))("object",n.choices),O.Db(4),O.vc("isBinary",!0)("formControl",f.formControl),O.Db(3),O.vc("isBinary",!0)("formControl",m.formControl),O.Db(3),O.vc("isBinary",!0)("formControl",u.formControl)}},directives:[Y.a,H.r,H.j,$.a,E.a,H.q,H.g,H.t,H.B,q.o],pipes:[q.h],encapsulation:2}),ae),ie=function n(t,o,a,r,i,c,l,b){e(this,n),this.paris=t,this.doha=o,this.amsterdam=a,this.venice=r,this.kyoto=i,this.barcelona=c,this.athens=l,this.sydney=b},ce=a("muRr"),le=a("D676");function be(e,n){1&e&&(O.Wb(0,"span",13),O.Vc(1," Value is required "),O.Vb())}function de(e,n){1&e&&(O.Wb(0,"span",13),O.Vc(1," Value is invalid "),O.Vb())}function fe(e,n){if(1&e&&(O.Tc(0,be,2,0,"span",12),O.Tc(1,de,2,0,"span",12)),2&e){var t=n.$implicit;O.vc("ngIf",t.required),O.Db(1),O.vc("ngIf",t.invalid)}}var me,ue,se,he,pe,ge=((me=function(){function n(){e(this,n),this.customForm=new H.i({}),this.validators=[H.A.requiredTrue],this.data=new ke(!0,!0)}return t(n,[{key:"onSubmit",value:function(){alert("Status: "+this.customForm.status)}}]),n}()).\u0275fac=function(e){return new(e||me)},me.\u0275cmp=O.Kb({type:me,selectors:[["fdp-platform-checkbox-error-handling"]],decls:24,vars:14,consts:[["hintPlacement","left","columnLayout","XL2-L1-M1-S1",3,"formGroup","object"],["fg",""],["id","presence","label","Your presence is necessary","hint","hint text","hintPlacement","left","rank","10","column","1","required","true",3,"validators"],["ffr1",""],["name","presence-cb","title","title text",3,"isBinary","formControl"],["id","aggrement","hint","hint text","hintPlacement","left","rank","15","column","2","required","true",3,"validators"],["ffr2",""],["name","aggrement-cb","title","Do you Agree with Terms and Conditions",3,"isBinary","formControl"],["fd-link","","href","#"],["id","button-1","rank","20","column","2"],["buttonType","emphasized","label","Submit",3,"click"],["i18n",""],["role","alert","aria-atomic","true",4,"ngIf"],["role","alert","aria-atomic","true"]],template:function(e,n){if(1&e&&(O.Wb(0,"h3"),O.Vc(1,"Checkbox Error Handling"),O.Vb(),O.Wb(2,"fdp-form-group",0,1),O.Wb(4,"fdp-form-field",2,3),O.Rb(6,"fdp-checkbox",4),O.Vb(),O.Wb(7,"fdp-form-field",5,6),O.Wb(9,"fdp-checkbox",7),O.Vc(10," Do you Agree with "),O.Wb(11,"a",8),O.Vc(12," Terms and Conditions"),O.Vb(),O.Vc(13,"? "),O.Vb(),O.Vb(),O.Wb(14,"fdp-form-field",9),O.Wb(15,"fdp-button",10),O.jc("click",function(){return n.onSubmit()}),O.Vb(),O.Vb(),O.Tc(16,fe,2,2,"ng-template",null,11,O.Uc),O.Vb(),O.Wb(18,"p"),O.Vc(19),O.oc(20,"json"),O.Vb(),O.Wb(21,"p"),O.Vc(22),O.oc(23,"json"),O.Vb()),2&e){var t=O.Hc(5),o=O.Hc(8);O.Db(2),O.vc("formGroup",n.customForm)("object",n.data),O.Db(2),O.vc("validators",n.validators),O.Db(2),O.vc("isBinary",!0)("formControl",t.formControl),O.Db(1),O.vc("validators",n.validators),O.Db(2),O.vc("isBinary",!0)("formControl",o.formControl),O.Db(10),O.Xc("Form value: ",O.pc(20,10,n.customForm.getRawValue()),""),O.Db(3),O.Xc("Form Status: ",O.pc(23,12,n.customForm.status),"")}},directives:[Y.a,H.r,H.j,$.a,E.a,H.q,H.g,ce.a,le.a,q.o],pipes:[q.h],encapsulation:2}),me),ke=function n(t,o){e(this,n),this.presence=t,this.aggrement=o},ve=((se=function n(){e(this,n),this.checkboxA11y1="",this.checkboxA11y2="",this.checkboxA11y3=""}).\u0275fac=function(e){return new(e||se)},se.\u0275cmp=O.Kb({type:se,selectors:[["fdp-platform-checkbox-a11y"]],decls:11,vars:7,consts:[["id","checkboxLable"],["id","a11y1","rank","1",3,"noLabelLayout"],["name","checkboxA11y1","ariaLabel","checkbox using aria-label",3,"isBinary","ngModel","ngModelChange"],["id","a11y2","rank","2"],["name","checkboxA11y2","ariaLabelledBy","checkboxLable",3,"isBinary","ngModel","ngModelChange"],["id","a11y3","label","Disabled checkbox using aria-disabled","rank","3"],["name","checkboxA11y3","title","It is a disabled checkbox","disabled","true",3,"isBinary","ngModel","ngModelChange"]],template:function(e,n){1&e&&(O.Wb(0,"h3"),O.Vc(1,"Checkbox A11y Examples using aria-label, aria-labelledby, aria-disabled and title"),O.Vb(),O.Wb(2,"p",0),O.Vc(3,"checkbox using aria-labelledby"),O.Vb(),O.Wb(4,"fdp-form-group"),O.Wb(5,"fdp-form-field",1),O.Wb(6,"fdp-checkbox",2),O.jc("ngModelChange",function(e){return n.checkboxA11y1=e}),O.Vb(),O.Vb(),O.Wb(7,"fdp-form-field",3),O.Wb(8,"fdp-checkbox",4),O.jc("ngModelChange",function(e){return n.checkboxA11y2=e}),O.Vb(),O.Vb(),O.Wb(9,"fdp-form-field",5),O.Wb(10,"fdp-checkbox",6),O.jc("ngModelChange",function(e){return n.checkboxA11y3=e}),O.Vb(),O.Vb(),O.Vb()),2&e&&(O.Db(5),O.vc("noLabelLayout",!0),O.Db(1),O.vc("isBinary",!0)("ngModel",n.checkboxA11y1),O.Db(2),O.vc("isBinary",!0)("ngModel",n.checkboxA11y2),O.Db(2),O.vc("isBinary",!0)("ngModel",n.checkboxA11y3))},directives:[Y.a,$.a,E.a,H.q,H.t],encapsulation:2}),se),Ce=((ue=function n(){e(this,n),this.multiselectCheckbox=[{language:"html",code:r,fileName:"platform-multiselect-checkbox"},{language:"typescript",code:i,fileName:"platform-multiselect-checkbox",component:"PlatformCozyChekboxExampleComponent"}],this.binaryCheckbox=[{language:"html",code:c,fileName:"platform-binary-checkbox"},{language:"typescript",code:l,fileName:"platform-binary-checkbox",component:"PlatformCompactChekboxExampleComponent"}],this.errorCheckbox=[{language:"html",code:b,fileName:"platform-checkbox-error-handling"},{language:"typescript",code:d,fileName:"platform-checkbox-error-handling",component:"PlatformChekboxStyleComponent"}],this.noFormCheckbox=[{language:"html",code:f,fileName:"platform-binary-checkbox-no-form"},{language:"typescript",code:m,fileName:"platform-binary-checkbox-no-form",component:"PlatformChekboxNoFormComponent"}],this.triCheckbox=[{language:"html",code:u,fileName:"platform-tristate-checkbox"},{language:"typescript",code:s,fileName:"platform-tristate-checkbox",component:"PlatformChekboxTristateComponent"}],this.a11yCheckbox=[{language:"html",code:h,fileName:"platform-checkbox-a11y"},{language:"typescript",code:p,fileName:"platform-checkbox-a11y",component:"PlatformChekboxA11yExampleComponent"}]}).\u0275fac=function(e){return new(e||ue)},ue.\u0275cmp=O.Kb({type:ue,selectors:[["app-checkbox"]],decls:57,vars:6,consts:[["id","with-form","componentName","checkbox"],[3,"exampleFiles"],["id","without-form","componentName","checkbox"],[2,"list-style-type","circle"],["id","with-value","componentName","checkbox"],["id","tristate","componentName","checkbox"],["id","state","componentName","checkbox"],["id","a11y","componentName","checkbox"]],template:function(e,n){1&e&&(O.Wb(0,"fd-docs-section-title",0),O.Vc(1," Binary Checkbox Used With Form\n"),O.Vb(),O.Wb(2,"description"),O.Vc(3," This example shows Binary Checkbox use with Template Driven form and with Reactive/Model Driven form\n"),O.Vb(),O.Wb(4,"component-example"),O.Rb(5,"fdp-platform-binary-checkbox"),O.Vb(),O.Rb(6,"code-example",1),O.Rb(7,"separator"),O.Wb(8,"fd-docs-section-title",2),O.Vc(9," Checkbox Used Without Form\n"),O.Vb(),O.Wb(10,"description"),O.Vc(11," This example shows Binary Checkbox without form "),O.Wb(12,"ul",3),O.Wb(13,"li"),O.Vc(14,"checkbox with value property"),O.Vb(),O.Wb(15,"li"),O.Vc(16,"checkbox without value property"),O.Vb(),O.Vb(),O.Vb(),O.Wb(17,"component-example"),O.Rb(18,"fdp-platform-binary-checkbox-no-form"),O.Vb(),O.Rb(19,"code-example",1),O.Rb(20,"separator"),O.Wb(21,"fd-docs-section-title",4),O.Vc(22," Checkboxes With Value Property\n"),O.Vb(),O.Wb(23,"description"),O.Vc(24," This example shows multiple Checkbox selection with Template Driven form and with Reactive/Model Driven form\n"),O.Vb(),O.Wb(25,"component-example"),O.Rb(26,"fdp-platform-multiselect-checkbox"),O.Vb(),O.Rb(27,"code-example",1),O.Rb(28,"separator"),O.Wb(29,"fd-docs-section-title",5),O.Vc(30," Tristate Checkbox With Value Property and Without Value Property\n"),O.Vb(),O.Wb(31,"description"),O.Vc(32," This example shows tristate checkbox in Reactive form and Template driven form "),O.Wb(33,"ul",3),O.Wb(34,"li"),O.Vc(35,"Tristate checkbox with value property"),O.Vb(),O.Wb(36,"li"),O.Vc(37,"Tristate checkbox without value property"),O.Vb(),O.Vb(),O.Vb(),O.Wb(38,"component-example"),O.Rb(39,"fdp-platform-tristate-checkbox"),O.Vb(),O.Rb(40,"code-example",1),O.Rb(41,"separator"),O.Wb(42,"fd-docs-section-title",6),O.Vc(43," Checkbox With Form and State Change on Error\n"),O.Vb(),O.Wb(44,"description"),O.Vc(45,"This example shows Checkbox Error state, when form has error "),O.Vb(),O.Wb(46,"component-example"),O.Rb(47,"fdp-platform-checkbox-error-handling"),O.Vb(),O.Rb(48,"code-example",1),O.Rb(49,"separator"),O.Wb(50,"fd-docs-section-title",7),O.Vc(51," Accessibility on checkbox\n"),O.Vb(),O.Wb(52,"description"),O.Vc(53,"This example shows Checkbox accessibility"),O.Vb(),O.Wb(54,"component-example"),O.Rb(55,"fdp-platform-checkbox-a11y"),O.Vb(),O.Rb(56,"code-example",1)),2&e&&(O.Db(6),O.vc("exampleFiles",n.binaryCheckbox),O.Db(13),O.vc("exampleFiles",n.noFormCheckbox),O.Db(8),O.vc("exampleFiles",n.multiselectCheckbox),O.Db(13),O.vc("exampleFiles",n.triCheckbox),O.Db(8),O.vc("exampleFiles",n.errorCheckbox),O.Db(8),O.vc("exampleFiles",n.a11yCheckbox))},directives:[X.a,P.a,I.a,U,J.a,z.a,Z,Q,re,ge,ve],encapsulation:2}),ue),xe=a("dor/"),ye=a("RJTZ"),Ve=a("Kpas"),We=((he=function n(){e(this,n)}).\u0275fac=function(e){return new(e||he)},he.\u0275cmp=O.Kb({type:he,selectors:[["app-checkbox-header"]],decls:22,vars:0,consts:[["routerLink","/core/checkbox"],["routerLink","/platform/checkbox-group"],["module","PlatformCheckboxModule","subPackage","form"]],template:function(e,n){1&e&&(O.Wb(0,"header"),O.Vc(1,"Checkbox"),O.Vb(),O.Wb(2,"description"),O.Vc(3," This is an extension of the Checkbox component present in "),O.Wb(4,"a",0),O.Vc(5,"ngx-core"),O.Vb(),O.Vc(6,". "),O.Rb(7,"br"),O.Vc(8," For usecase of Multiple checkboxes selection, please see "),O.Wb(9,"a",1),O.Vc(10,"Checkbox Group"),O.Vb(),O.Vc(11,". "),O.Wb(12,"h3"),O.Vc(13,"Platform specific enhancements:"),O.Vb(),O.Wb(14,"ul"),O.Wb(15,"li"),O.Vc(16," Platform checkbox takes checked state value as a property. so when checkbox is in checked state, control value will be set to value of checkbox. "),O.Vb(),O.Wb(17,"li"),O.Vc(18,'Platform checkbox can be used outside form using "checked" property two way binding.'),O.Vb(),O.Vb(),O.Vb(),O.Rb(19,"import",2),O.Rb(20,"fd-header-tabs"),O.Rb(21,"router-outlet"))},directives:[xe.a,P.a,x.f,ye.a,Ve.a,x.h],encapsulation:2}),he),Fe=a("Ccq/"),we=a("G6Ao"),De=[{path:"",component:We,children:[{path:"",component:Ce},{path:"api",component:y.a,data:{content:V.a.checkbox}}]}],Me=((pe=function n(){e(this,n)}).\u0275fac=function(e){return new(e||pe)},pe.\u0275mod=O.Ob({type:pe}),pe.\u0275inj=O.Nb({imports:[[x.g.forChild(De),W.a,we.g,we.b,Fe.b],x.g]}),pe)}}])}();